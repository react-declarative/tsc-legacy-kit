declare module "@mui/types/index" {
    import * as React from 'react';
    export {};
    /**
     * `T extends ConsistentWith<T, U>` means that where `T` has overlapping properties with
     * `U`, their value types do not conflict.
     *
     * @internal
     */
    export type ConsistentWith<DecorationTargetProps, InjectedProps> = {
        [P in keyof DecorationTargetProps]: P extends keyof InjectedProps ? InjectedProps[P] extends DecorationTargetProps[P] ? DecorationTargetProps[P] : InjectedProps[P] : DecorationTargetProps[P];
    };
    /**
     * a function that takes {component} and returns a component that passes along
     * all the props to {component} except the {InjectedProps} and will accept
     * additional {AdditionalProps}
     */
    export type PropInjector<InjectedProps, AdditionalProps = {}> = <C extends React.JSXElementConstructor<ConsistentWith<React.ComponentProps<C>, InjectedProps>>>(component: C) => React.JSXElementConstructor<DistributiveOmit<JSX.LibraryManagedAttributes<C, React.ComponentProps<C>>, keyof InjectedProps> & AdditionalProps>;
    /**
     * Remove properties `K` from `T`.
     * Distributive for union types.
     *
     * @internal
     */
    export type DistributiveOmit<T, K extends keyof any> = T extends any ? Omit<T, K> : never;
    /**
     * Generate a set of string literal types with the given default record `T` and
     * override record `U`.
     *
     * If the property value was `true`, the property key will be added to the
     * string union.
     *
     * @internal
     */
    export type OverridableStringUnion<T extends string | number, U = {}> = GenerateStringUnion<Overwrite<Record<T, true>, U>>;
    /**
     * Like `T & U`, but using the value types from `U` where their properties overlap.
     *
     * @internal
     */
    export type Overwrite<T, U> = DistributiveOmit<T, keyof U> & U;
    type GenerateStringUnion<T> = Extract<{
        [Key in keyof T]: true extends T[Key] ? Key : never;
    }[keyof T], string>;
    type IfEquals<T, U, Y = unknown, N = never> = (<G>() => G extends T ? 1 : 2) extends <G>() => G extends U ? 1 : 2 ? Y : N;
    /**
     * Issues a type error if `Expected` is not identical to `Actual`.
     *
     * `Expected` should be declared when invoking `expectType`.
     * `Actual` should almost always we be a `typeof value` statement.
     *
     * @example `expectType<number | string, typeof value>(value)`
     * TypeScript issues a type error since `value is not assignable to never`.
     * This means `typeof value` is not identical to `number | string`
     * @param actual
     */
    export function expectType<Expected, Actual>(actual: IfEquals<Actual, Expected, Actual>): void;
    /**
     * A component whose root component can be controlled via a `component` prop.
     *
     * Adjusts valid props based on the type of `component`.
     */
    export interface OverridableComponent<M extends OverridableTypeMap> {
        <C extends React.ElementType>(props: {
            /**
             * The component used for the root node.
             * Either a string to use a HTML element or a component.
             */
            component: C;
        } & OverrideProps<M, C>): JSX.Element;
        (props: DefaultComponentProps<M>): JSX.Element;
        propTypes?: any;
    }
    /**
     * Props of the component if `component={Component}` is used.
     */
    export type OverrideProps<M extends OverridableTypeMap, C extends React.ElementType> = (BaseProps<M> & DistributiveOmit<React.ComponentPropsWithRef<C>, keyof BaseProps<M>>);
    /**
     * Props if `component={Component}` is NOT used.
     */
    export type DefaultComponentProps<M extends OverridableTypeMap> = BaseProps<M> & DistributiveOmit<React.ComponentPropsWithRef<M['defaultComponent']>, keyof BaseProps<M>>;
    /**
     * Props defined on the component.
     */
    export type BaseProps<M extends OverridableTypeMap> = M['props'];
    export interface OverridableTypeMap {
        props: {};
        defaultComponent: React.ElementType;
    }
}
declare module "@mui/system/createTheme/createBreakpoints" {
    import { OverridableStringUnion } from "@mui/types/index";
    export interface BreakpointOverrides {
    }
    export type Breakpoint = OverridableStringUnion<'xs' | 'sm' | 'md' | 'lg' | 'xl', BreakpointOverrides>;
    export const keys: Breakpoint[];
    export interface Breakpoints {
        keys: Breakpoint[];
        /**
         * Each breakpoint (a key) matches with a fixed screen width (a value).
         * @default {
         *    // extra-small
         *    xs: 0,
         *    // small
         *    sm: 600,
         *    // medium
         *    md: 900,
         *    // large
         *    lg: 1200,
         *    // extra-large
         *    xl: 1536,
         * }
         */
        values: {
            [key in Breakpoint]: number;
        };
        /**
         * @param key - A breakpoint key (`xs`, `sm`, etc.) or a screen width number in px.
         * @returns A media query string ready to be used with most styling solutions, which matches screen widths greater than the screen size given by the breakpoint key (inclusive).
         * @see [API documentation](https://mui.com/customization/breakpoints/#theme-breakpoints-up-key-media-query)
         */
        up: (key: Breakpoint | number) => string;
        /**
         * @param key - A breakpoint key (`xs`, `sm`, etc.) or a screen width number in px.
         * @returns A media query string ready to be used with most styling solutions, which matches screen widths less than the screen size given by the breakpoint key (exclusive).
         * @see [API documentation](https://mui.com/customization/breakpoints/#theme-breakpoints-down-key-media-query)
         */
        down: (key: Breakpoint | number) => string;
        /**
         * @param start - A breakpoint key (`xs`, `sm`, etc.) or a screen width number in px.
         * @param end - A breakpoint key (`xs`, `sm`, etc.) or a screen width number in px.
         * @returns A media query string ready to be used with most styling solutions, which matches screen widths greater than
         *          the screen size given by the breakpoint key in the first argument (inclusive) and less than the screen size given by the breakpoint key in the second argument (exclusive).
         * @see [API documentation](https://mui.com/customization/breakpoints/#theme-breakpoints-between-start-end-media-query)
         */
        between: (start: Breakpoint | number, end: Breakpoint | number) => string;
        /**
         * @param key - A breakpoint key (`xs`, `sm`, etc.) or a screen width number in px.
         * @returns A media query string ready to be used with most styling solutions, which matches screen widths starting from
         *          the screen size given by the breakpoint key (inclusive) and stopping at the screen size given by the next breakpoint key (exclusive).
         * @see [API documentation](https://mui.com/customization/breakpoints/#theme-breakpoints-only-key-media-query)
         */
        only: (key: Breakpoint) => string;
        /**
         * @param key - A breakpoint key (`xs`, `sm`, etc.).
         * @returns A media query string ready to be used with most styling solutions, which matches screen widths stopping at
         *          the screen size given by the breakpoint key (exclusive) and starting at the screen size given by the next breakpoint key (inclusive).
         */
        not: (key: Breakpoint) => string;
    }
    export interface BreakpointsOptions extends Partial<Breakpoints> {
        /**
         * The increment divided by 100 used to implement exclusive breakpoints.
         * For example, `step: 5` means that `down(500)` will result in `'(max-width: 499.95px)'`.
         * @default 5
         */
        step?: number | undefined;
        /**
         * The unit used for the breakpoint's values.
         * @default 'px'
         */
        unit?: string | undefined;
    }
    export type createBreakpoints = (options: BreakpointsOptions) => Breakpoints;
    export default createBreakpoints;
}
declare module "@mui/system/createTheme/shape" {
    export interface Shape {
        borderRadius: number | string;
    }
    export type ShapeOptions = Partial<Shape>;
    const shape: Shape;
    export default shape;
}
declare module "@mui/system/createTheme/createSpacing" {
    export type SpacingOptions = number | Spacing | ((abs: number) => number | string) | ((abs: number | string) => number | string) | ReadonlyArray<string | number>;
    export type SpacingArgument = number | string;
    export interface Spacing {
        (): string;
        (value: number): string;
        (topBottom: SpacingArgument, rightLeft: SpacingArgument): string;
        (top: SpacingArgument, rightLeft: SpacingArgument, bottom: SpacingArgument): string;
        (top: SpacingArgument, right: SpacingArgument, bottom: SpacingArgument, left: SpacingArgument): string;
    }
    export type createSpacing = (spacingInput?: SpacingOptions) => Spacing;
    export default createSpacing;
}
declare module "@mui/system/createTheme/createTheme" {
    import { Breakpoints, BreakpointsOptions } from "@mui/system/createTheme/createBreakpoints";
    import { Shape, ShapeOptions } from "@mui/system/createTheme/shape";
    import { Spacing, SpacingOptions } from "@mui/system/createTheme/createSpacing";
    export { Breakpoint, BreakpointOverrides } from "@mui/system/createTheme/createBreakpoints";
    export type Direction = 'ltr' | 'rtl';
    export interface ThemeOptions {
        shape?: ShapeOptions;
        breakpoints?: BreakpointsOptions;
        direction?: Direction;
        mixins?: unknown;
        palette?: Record<string, any>;
        shadows?: unknown;
        spacing?: SpacingOptions;
        transitions?: unknown;
        components?: Record<string, any>;
        typography?: unknown;
        zIndex?: Record<string, number>;
    }
    export interface Theme {
        shape: Shape;
        breakpoints: Breakpoints;
        direction: Direction;
        palette: Record<string, any> & {
            mode: 'light' | 'dark';
        };
        shadows?: unknown;
        spacing: Spacing;
        transitions?: unknown;
        components?: Record<string, any>;
        mixins?: unknown;
        typography?: unknown;
        zIndex?: unknown;
    }
    /**
     * Generate a theme base on the options received.
     * @param options Takes an incomplete theme object and adds the missing parts.
     * @param args Deep merge the arguments with the about to be returned theme.
     * @returns A complete, ready-to-use theme object.
     */
    export type createTheme = (options?: ThemeOptions, ...args: object[]) => Theme;
    export default createTheme;
}
declare module "@mui/system/createTheme/index" {
    export { default } from "@mui/system/createTheme/createTheme";
    export * from "@mui/system/createTheme/createTheme";
}
declare module "@mui/system/styleFunctionSx/StandardCssProperties" {
    import * as CSS from 'csstype';
    export type StandardCSSProperties = CSS.PropertiesFallback<number | string>;
}
declare module "@mui/system/styleFunctionSx/AliasesCSSProperties" {
    import { StandardCSSProperties } from "@mui/system/styleFunctionSx/StandardCssProperties";
    export interface AliasesCSSProperties {
        /**
         * The **`background-color`** CSS property sets the background color of an element.
         *
         * **Initial value**: `transparent`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/background-color
         */
        bgcolor?: StandardCSSProperties['backgroundColor'];
        /**
         * The **`margin`** CSS property sets the margin on all four sides of an element. It is a shorthand for `margin-top`, `margin-right`, `margin-bottom`, and `margin-left`.
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin
         */
        m?: StandardCSSProperties['margin'];
        /**
         * The **`margin-top`** CSS property sets the margin on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-top
         */
        mt?: StandardCSSProperties['marginTop'];
        /**
         * The **`margin-right`** CSS property sets the margin on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-right
         */
        mr?: StandardCSSProperties['marginRight'];
        /**
         * The **`margin-bottom`** CSS property sets the margin on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom
         */
        mb?: StandardCSSProperties['marginBottom'];
        /**
         * The **`margin-left`** CSS property sets the margin on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-left
         */
        ml?: StandardCSSProperties['marginLeft'];
        /**
         * The **`mx`** property is shorthand for using both **`margin-left`** and **`margin-right`** CSS properties. They set the margin on the left and right side of an element. A positive value places it
         * farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-left
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-right
         */
        mx?: StandardCSSProperties['marginLeft'];
        /**
         * The **`marginX`** property is shorthand for using both **`margin-left`** and **`margin-right`** CSS properties. They set the margin on the left and right side of an element. A positive value
         * places it farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-left
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-right
         */
        marginX?: StandardCSSProperties['marginLeft'];
        /**
         * The **`my`** property is shorthand for using both **`margin-top`** and **`margin-bottom`** CSS properties. They set the margin on the top and bottom of an element. A positive value places it
         * farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-top
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom
         */
        my?: StandardCSSProperties['marginTop'];
        /**
         * The **`marginY`** property is shorthand for using both **`margin-top`** and **`margin-bottom`** CSS properties. They set the margin on the top and bottom of an element. A positive value places
         * it farther from its neighbors, while a negative value places it closer.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-top
         * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom
         */
        marginY?: StandardCSSProperties['marginTop'];
        /**
         * The **`padding`** CSS property sets the padding on all four sides of an element. It is a shorthand for `padding-top`, `padding-right`, `padding-bottom`, and `padding-left`.
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding
         */
        p?: StandardCSSProperties['padding'];
        /**
         * The **`padding-top`** CSS property sets the height of the padding at the top of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-top
         */
        pt?: StandardCSSProperties['paddingTop'];
        /**
         * The **`padding-right`** CSS property sets the width of the padding at the right side of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-right
         */
        pr?: StandardCSSProperties['paddingRight'];
        /**
         * The **`padding-bottom`** CSS property sets the height of the padding on the bottom of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom
         */
        pb?: StandardCSSProperties['paddingBottom'];
        /**
         * The **`padding-left`** CSS property sets the width of the padding at the left side of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-left
         */
        pl?: StandardCSSProperties['paddingLeft'];
        /**
         * The **`px`** property is shorthand for the CSS properties **`padding-left`** and **`padding-right`**. They set the width of the padding at the left and right side of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-left
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-right
         */
        px?: StandardCSSProperties['paddingLeft'];
        /**
         * The **`paddingX`** property is shorthand for the CSS properties **`padding-left`** and **`padding-right`**. They set the width of the padding at the left and right sides of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-left
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-right
         */
        paddingX?: StandardCSSProperties['paddingLeft'];
        /**
         * The **`py`** property is shorthand for the CSS properties **`padding-top`** and **`padding-bottom`**. They set the width of the padding at the top and bottom of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-top
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom
         */
        py?: StandardCSSProperties['paddingTop'];
        /**
         * The **`paddingY`** property is shorthand for the CSS properties **`padding-top`** and **`padding-bottom`**. They set the width of the padding at the top and bottom of an element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-top
         * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom
         */
        paddingY?: StandardCSSProperties['paddingTop'];
        /**
         * The **`typography`** property  is shorthand for the CSS properties **`font-family`**, **`font-weight`**, **`font-size`**, **`line-height`**, **`letter-spacing`** and **`text-transform``**.
         * It takes the values defined under `theme.typography` and spreads them on the element.
         *
         * **Initial value**: `0`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **2**  |  **1**  | **1**  | **12** | **5.5** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/font-family
         * @see https://developer.mozilla.org/docs/Web/CSS/font-weight
         * @see https://developer.mozilla.org/docs/Web/CSS/font-size
         * @see https://developer.mozilla.org/docs/Web/CSS/line-height
         * @see https://developer.mozilla.org/docs/Web/CSS/letter-spacing
         * @see https://developer.mozilla.org/docs/Web/CSS/text-transform
         */
        typography?: string;
        /**
         * The **`displayPrint`** property sets the display value for the element when the page is printed.
         *
         * **Initial value**: `inline`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/display
         */
        displayPrint?: StandardCSSProperties['display'];
    }
}
declare module "@mui/system/styleFunctionSx/OverwriteCSSProperties" {
    import * as CSS from 'csstype';
    export interface OverwriteCSSProperties {
        /**
         * The **`border`** CSS property is shorthand for the CSS properties **`border-width`**, **`border-style`**, and **`border-color`**. It sets an element's border.
         *
         * **Initial value**: `none`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/border
         */
        border?: CSS.Property.Border | number;
        /**
         * The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the
         * element for blur and spread radii, and by its color.
         *
         * **Initial value**: `none`
         *
         * | Chrome  | Firefox | Safari  |  Edge  |  IE   |
         * | :-----: | :-----: | :-----: | :----: | :---: |
         * | **10**  |  **4**  | **5.1** | **12** | **9** |
         * | 1 _-x-_ |         | 3 _-x-_ |        |       |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/box-shadow
         */
        boxShadow?: CSS.Property.BoxShadow | number;
        /**
         * The **`font-weight`** CSS property specifies the weight (or boldness) of the font. The font weights available to you will depend on the `font-family` you are using. Some fonts are only
         * available in `normal` and `bold`.
         *
         * **Initial value**: `normal`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **2**  |  **1**  | **1**  | **12** | **3** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/font-weight
         */
        fontWeight?: CSS.Property.FontWeight | string;
        /**
         * The **`z-index`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a higher z-index cover those with a lower one.
         *
         * **Initial value**: `auto`
         *
         * | Chrome | Firefox | Safari |  Edge  |  IE   |
         * | :----: | :-----: | :----: | :----: | :---: |
         * | **1**  |  **1**  | **1**  | **12** | **4** |
         *
         * @see https://developer.mozilla.org/docs/Web/CSS/z-index
         */
        zIndex?: CSS.Property.ZIndex | string;
    }
}
declare module "@mui/system/styleFunctionSx/styleFunctionSx" {
    import * as CSS from 'csstype';
    import { StandardCSSProperties } from "@mui/system/styleFunctionSx/StandardCssProperties";
    import { AliasesCSSProperties } from "@mui/system/styleFunctionSx/AliasesCSSProperties";
    import { OverwriteCSSProperties } from "@mui/system/styleFunctionSx/OverwriteCSSProperties";
    /**
     * The `css` function accepts arrays as values for mobile-first responsive styles.
     * Note that this extends to non-theme values also. For example `display=['none', 'block']`
     * will also works.
     */
    export type ResponsiveStyleValue<T> = T | Array<T | null> | {
        [key: string]: T | null;
    };
    /**
     * Map of all CSS pseudo selectors (`:hover`, `:focus`, ...).
     */
    export type CSSPseudoSelectorProps<Theme extends object = {}> = {
        [K in CSS.Pseudos]?: ((theme: Theme) => SystemStyleObject<Theme>) | SystemStyleObject<Theme>;
    };
    /**
     * Map all nested selectors.
     */
    export interface CSSSelectorObject<Theme extends object = {}> {
        [cssSelector: string]: ((theme: Theme) => SystemStyleObject<Theme>) | SystemStyleObject<Theme>;
    }
    type CssVariableType = string | number;
    /**
     * Map all nested selectors and CSS variables.
     */
    export interface CSSSelectorObjectOrCssVariables<Theme extends object = {}> {
        [cssSelectorOrVariable: string]: ((theme: Theme) => SystemStyleObject<Theme> | string | number) | SystemStyleObject<Theme> | CssVariableType;
    }
    /**
     * Map of all available CSS properties (including aliases) and their raw value.
     * Only used internally to map CSS properties to input types (responsive value,
     * theme function or nested) in `SystemCssProperties`.
     */
    export interface AllSystemCSSProperties extends Omit<StandardCSSProperties, keyof OverwriteCSSProperties>, OverwriteCSSProperties, AliasesCSSProperties {
    }
    export type SystemCssProperties<Theme extends object = {}> = {
        [K in keyof AllSystemCSSProperties]: ResponsiveStyleValue<AllSystemCSSProperties[K]> | ((theme: Theme) => ResponsiveStyleValue<AllSystemCSSProperties[K]>) | SystemStyleObject<Theme>;
    };
    /**
     * The `SystemStyleObject` defines custom properties that will be transformed to
     * their corresponding values from the `Theme`. Other valid CSS properties are also allowed.
     */
    export type SystemStyleObject<Theme extends object = {}> = SystemCssProperties<Theme> | CSSPseudoSelectorProps<Theme> | CSSSelectorObjectOrCssVariables<Theme> | null;
    /**
     * The `SxProps` can be either object or function
     */
    export type SxProps<Theme extends object = {}> = SystemStyleObject<Theme> | ((theme: Theme) => SystemStyleObject<Theme>) | Array<boolean | SystemStyleObject<Theme> | ((theme: Theme) => SystemStyleObject<Theme>)>;
    export interface StyleFunctionSx {
        (props: object): object;
        filterProps?: string[];
    }
    export function unstable_createStyleFunctionSx(styleFunctionMapping: Record<string, StyleFunctionSx>): StyleFunctionSx;
    const styleFunctionSx: StyleFunctionSx;
    export default styleFunctionSx;
}
declare module "@mui/system/styleFunctionSx/extendSxProp" {
    import { SxProps } from "@mui/system/styleFunctionSx/styleFunctionSx";
    export type extendSxProp = <Props extends {
        sx?: SxProps<any>;
    } = {}>(props: Props) => Props;
    export default extendSxProp;
}
declare module "@mui/system/styleFunctionSx/index" {
    export { default } from "@mui/system/styleFunctionSx/styleFunctionSx";
    export * from "@mui/system/styleFunctionSx/styleFunctionSx";
    export * from "@mui/system/styleFunctionSx/AliasesCSSProperties";
    export * from "@mui/system/styleFunctionSx/OverwriteCSSProperties";
    export * from "@mui/system/styleFunctionSx/StandardCssProperties";
    export { default as extendSxProp } from "@mui/system/styleFunctionSx/extendSxProp";
    export * from "@mui/system/styleFunctionSx/extendSxProp";
}
declare module "@mui/system/Box/Box" {
    import * as React from 'react';
    import { OverridableComponent, OverrideProps } from "@mui/types/index";
    import { Theme } from "@mui/system/createTheme/index";
    import { SxProps, AllSystemCSSProperties, ResponsiveStyleValue, OverwriteCSSProperties, AliasesCSSProperties } from "@mui/system/styleFunctionSx/index";
    export type PropsFor<SomeStyleFunction> = SomeStyleFunction extends StyleFunction<infer Props> ? Props : never;
    export type StyleFunction<Props> = (props: Props) => any;
    export type SimpleStyleFunction<PropKey extends keyof any> = StyleFunction<Partial<Record<PropKey, any>>> & {
        filterProps: string[];
    };
    export const borders: SimpleStyleFunction<'border' | 'borderTop' | 'borderRight' | 'borderBottom' | 'borderLeft' | 'borderColor' | 'borderRadius'>;
    export const display: SimpleStyleFunction<'display' | 'displayPrint' | 'overflow' | 'textOverflow' | 'visibility' | 'whiteSpace'>;
    export const flexbox: SimpleStyleFunction<'flexBasis' | 'flexDirection' | 'flexWrap' | 'justifyContent' | 'alignItems' | 'alignContent' | 'order' | 'flex' | 'flexGrow' | 'flexShrink' | 'alignSelf' | 'justifyItems' | 'justifySelf'>;
    export const grid: SimpleStyleFunction<'gap' | 'columnGap' | 'rowGap' | 'gridColumn' | 'gridRow' | 'gridAutoFlow' | 'gridAutoColumns' | 'gridAutoRows' | 'gridTemplateColumns' | 'gridTemplateRows' | 'gridTemplateAreas' | 'gridArea'>;
    export const palette: SimpleStyleFunction<'bgcolor' | 'color'>;
    export const positions: SimpleStyleFunction<'zIndex' | 'position' | 'top' | 'right' | 'bottom' | 'left'>;
    export const shadows: SimpleStyleFunction<'boxShadow'>;
    export const sizing: SimpleStyleFunction<'width' | 'maxWidth' | 'minWidth' | 'height' | 'maxHeight' | 'minHeight' | 'sizeWidth' | 'sizeHeight' | 'boxSizing'>;
    export const spacing: SimpleStyleFunction<'m' | 'mt' | 'mr' | 'mb' | 'ml' | 'mx' | 'my' | 'p' | 'pt' | 'pr' | 'pb' | 'pl' | 'px' | 'py' | 'margin' | 'marginTop' | 'marginRight' | 'marginBottom' | 'marginLeft' | 'marginX' | 'marginY' | 'padding' | 'paddingTop' | 'paddingRight' | 'paddingBottom' | 'paddingLeft' | 'paddingX' | 'paddingY'>;
    export const typography: SimpleStyleFunction<'typography' | 'fontFamily' | 'fontSize' | 'fontStyle' | 'fontWeight' | 'letterSpacing' | 'lineHeight' | 'textAlign' | 'textTransform'>;
    /**
     * given a list of StyleFunction return the intersection of the props each individual
     * StyleFunction requires.
     *
     * If `firstFn` requires { color: string } and `secondFn` requires { spacing: number }
     * their composed function requires { color: string, spacing: number }
     */
    type ComposedArg<T> = T extends Array<(arg: infer P) => any> ? P : never;
    type ComposedOwnerState<T> = ComposedArg<T>;
    export type ComposedStyleFunction<T extends Array<StyleFunction<any>>> = StyleFunction<ComposedOwnerState<T>> & {
        filterProps: string[];
    };
    export interface CustomSystemProps extends AliasesCSSProperties, OverwriteCSSProperties {
    }
    export type SimpleSystemKeys = keyof PropsFor<ComposedStyleFunction<[
        typeof borders,
        typeof display,
        typeof flexbox,
        typeof grid,
        typeof palette,
        typeof positions,
        typeof shadows,
        typeof sizing,
        typeof spacing,
        typeof typography
    ]>>;
    type StandardSystemKeys = Extract<SimpleSystemKeys, keyof AllSystemCSSProperties>;
    export type SystemProps<Theme extends object = {}> = {
        [K in StandardSystemKeys]?: ResponsiveStyleValue<AllSystemCSSProperties[K]> | ((theme: Theme) => ResponsiveStyleValue<AllSystemCSSProperties[K]>);
    };
    export interface BoxTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & SystemProps<Theme> & {
            children?: React.ReactNode;
            component?: React.ElementType;
            ref?: React.Ref<unknown>;
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    const Box: OverridableComponent<BoxTypeMap>;
    export type BoxProps<D extends React.ElementType = BoxTypeMap['defaultComponent'], P = {}> = OverrideProps<BoxTypeMap<P, D>, D>;
    export default Box;
}
declare module "@mui/system/Box/index" {
    export { default } from "@mui/system/Box/Box";
    export * from "@mui/system/Box/Box";
}
declare module "@mui/private-theming/defaultTheme/index" {
    /**
     * The default theme interface, augment this to avoid having to set the theme type everywhere.
     * Our [TypeScript guide on theme customization](https://mui.com/guides/typescript/#customization-of-theme) explains in detail how you would add custom properties.
     */
    export interface DefaultTheme {
    }
}
declare module "@mui/private-theming/ThemeProvider/ThemeProvider" {
    import { DefaultTheme } from "@mui/private-theming/defaultTheme/index";
    export interface ThemeProviderProps<Theme = DefaultTheme> {
        children?: React.ReactNode;
        theme: Partial<Theme> | ((outerTheme: Theme) => Theme);
    }
    export type ThemeProvider = <T = DefaultTheme>(props: ThemeProviderProps<T>) => React.ReactElement<ThemeProviderProps<T>>;
    export default ThemeProvider;
}
declare module "@mui/private-theming/ThemeProvider/index" {
    export { default } from "@mui/private-theming/ThemeProvider/ThemeProvider";
    export * from "@mui/private-theming/ThemeProvider/ThemeProvider";
}
declare module "@mui/private-theming/useTheme/useTheme" {
    import { DefaultTheme } from "@mui/private-theming/defaultTheme/index";
    export type useTheme = <T = DefaultTheme>() => T;
    export default useTheme;
}
declare module "@mui/private-theming/useTheme/index" {
    export { default } from "@mui/private-theming/useTheme/useTheme";
    export * from "@mui/private-theming/useTheme/useTheme";
}
declare module "@mui/private-theming/index" {
    export { default as ThemeProvider } from "@mui/private-theming/ThemeProvider/index";
    export * from "@mui/private-theming/ThemeProvider/index";
    export { default as useTheme } from "@mui/private-theming/useTheme/index";
    export * from "@mui/private-theming/useTheme/index";
    export * from "@mui/private-theming/defaultTheme/index";
}
declare module "@emotion/utils/index" {
    export interface RegisteredCache {
        [key: string]: string;
    }
    export interface StyleSheet {
        container: HTMLElement;
        nonce?: string;
        key: string;
        insert(rule: string): void;
        flush(): void;
        tags: Array<HTMLStyleElement>;
    }
    export interface EmotionCache {
        inserted: {
            [key: string]: string | true;
        };
        registered: RegisteredCache;
        sheet: StyleSheet;
        key: string;
        compat?: true;
        nonce?: string;
        insert(selector: string, serialized: SerializedStyles, sheet: StyleSheet, shouldCache: boolean): string | void;
    }
    export interface SerializedStyles {
        name: string;
        styles: string;
        map?: string;
        next?: SerializedStyles;
    }
    export const isBrowser: boolean;
    export function getRegisteredStyles(registered: RegisteredCache, registeredStyles: Array<string>, classNames: string): string;
    export function registerStyles(cache: EmotionCache, serialized: SerializedStyles, isStringTag: boolean): void;
    export function insertStyles(cache: EmotionCache, serialized: SerializedStyles, isStringTag: boolean): string | void;
}
declare module "@emotion/cache/index" {
    import { EmotionCache } from "@emotion/utils/index";
    export { EmotionCache };
    export interface StylisElement {
        type: string;
        value: string;
        props: Array<string> | string;
        root: StylisElement | null;
        parent: StylisElement | null;
        children: Array<StylisElement> | string;
        line: number;
        column: number;
        length: number;
        return: string;
    }
    export type StylisPluginCallback = (element: StylisElement, index: number, children: Array<StylisElement>, callback: StylisPluginCallback) => string | void;
    export type StylisPlugin = (element: StylisElement, index: number, children: Array<StylisElement>, callback: StylisPluginCallback) => string | void;
    export interface Options {
        nonce?: string;
        stylisPlugins?: Array<StylisPlugin>;
        key: string;
        container?: HTMLElement;
        speedy?: boolean;
        /** @deprecate use `insertionPoint` instead */
        prepend?: boolean;
        insertionPoint?: HTMLElement;
    }
    export type createCache = (options: Options) => EmotionCache;
    export default createCache;
}
declare module "@emotion/serialize/index" {
    import { RegisteredCache, SerializedStyles } from "@emotion/utils/index";
    import * as CSS from 'csstype';
    export { RegisteredCache, SerializedStyles };
    export type CSSProperties = CSS.PropertiesFallback<number | string>;
    export type CSSPropertiesWithMultiValues = {
        [K in keyof CSSProperties]: CSSProperties[K] | Array<Extract<CSSProperties[K], string>>;
    };
    export type CSSPseudos = {
        [K in CSS.Pseudos]?: CSSObject;
    };
    export interface ArrayCSSInterpolation extends Array<CSSInterpolation> {
    }
    export type InterpolationPrimitive = null | undefined | boolean | number | string | ComponentSelector | Keyframes | SerializedStyles | CSSObject;
    export type CSSInterpolation = InterpolationPrimitive | ArrayCSSInterpolation;
    export interface CSSOthersObject {
        [propertiesName: string]: CSSInterpolation;
    }
    export interface CSSObject extends CSSPropertiesWithMultiValues, CSSPseudos, CSSOthersObject {
    }
    export interface ComponentSelector {
        __emotion_styles: any;
    }
    export type Keyframes = {
        name: string;
        styles: string;
        anim: number;
        toString: () => string;
    } & string;
    export interface ArrayInterpolation<Props> extends Array<Interpolation<Props>> {
    }
    export interface FunctionInterpolation<Props> {
        (props: Props): Interpolation<Props>;
    }
    export type Interpolation<Props> = InterpolationPrimitive | ArrayInterpolation<Props> | FunctionInterpolation<Props>;
    export function serializeStyles<Props>(args: Array<TemplateStringsArray | Interpolation<Props>>, registered: RegisteredCache, props?: Props): SerializedStyles;
}
declare module "@emotion/react/jsx-namespace" {
    import 'react';
    import { Interpolation } from "@emotion/serialize/index";
    import { Theme } from "@emotion/react/index";
    type WithConditionalCSSProp<P> = 'className' extends keyof P ? string extends P['className' & keyof P] ? {
        css?: Interpolation<Theme>;
    } : {} : {};
    type ReactJSXElement = JSX.Element;
    type ReactJSXElementClass = JSX.ElementClass;
    type ReactJSXElementAttributesProperty = JSX.ElementAttributesProperty;
    type ReactJSXElementChildrenAttribute = JSX.ElementChildrenAttribute;
    type ReactJSXLibraryManagedAttributes<C, P> = JSX.LibraryManagedAttributes<C, P>;
    type ReactJSXIntrinsicAttributes = JSX.IntrinsicAttributes;
    type ReactJSXIntrinsicClassAttributes<T> = JSX.IntrinsicClassAttributes<T>;
    type ReactJSXIntrinsicElements = JSX.IntrinsicElements;
    export namespace EmotionJSX {
        interface Element extends ReactJSXElement {
        }
        interface ElementClass extends ReactJSXElementClass {
        }
        interface ElementAttributesProperty extends ReactJSXElementAttributesProperty {
        }
        interface ElementChildrenAttribute extends ReactJSXElementChildrenAttribute {
        }
        type LibraryManagedAttributes<C, P> = WithConditionalCSSProp<P> & ReactJSXLibraryManagedAttributes<C, P>;
        interface IntrinsicAttributes extends ReactJSXIntrinsicAttributes {
        }
        interface IntrinsicClassAttributes<T> extends ReactJSXIntrinsicClassAttributes<T> {
        }
        type IntrinsicElements = {
            [K in keyof ReactJSXIntrinsicElements]: ReactJSXIntrinsicElements[K] & {
                css?: Interpolation<Theme>;
            };
        };
    }
}
declare module "@emotion/react/helper" {
    import * as React from 'react';
    /**
     * @desc Utility type for getting props type of React component.
     * It takes `defaultProps` into an account - making props with defaults optional.
     */
    export type PropsOf<C extends keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>> = JSX.LibraryManagedAttributes<C, React.ComponentProps<C>>;
    export type DistributiveOmit<T, U> = T extends any ? Pick<T, Exclude<keyof T, U>> : never;
}
declare module "@emotion/react/theming" {
    import * as React from 'react';
    import { Theme } from "@emotion/react/index";
    import { DistributiveOmit, PropsOf } from "@emotion/react/helper";
    export interface ThemeProviderProps {
        theme: Partial<Theme> | ((outerTheme: Theme) => Theme);
        children?: React.ReactNode;
    }
    export interface ThemeProvider {
        (props: ThemeProviderProps): React.ReactElement;
    }
    export type withTheme = <C extends React.ComponentType<React.ComponentProps<C>>>(component: C) => React.FC<DistributiveOmit<PropsOf<C>, 'theme'> & {
        theme?: Theme;
    }>;
    export function useTheme(): Theme;
    export const ThemeProvider: ThemeProvider;
    export const withTheme: withTheme;
    export type WithTheme<P, T> = P extends {
        theme: infer Theme;
    } ? P & {
        theme: Exclude<Theme, undefined>;
    } : P & {
        theme: T;
    };
}
declare module "@emotion/react/index" {
    import { EmotionCache } from "@emotion/cache/index";
    import { ArrayInterpolation, ComponentSelector, CSSInterpolation, CSSObject, FunctionInterpolation, Interpolation, Keyframes, SerializedStyles } from "@emotion/serialize/index";
    import { ClassAttributes, Context, Provider, FC, ReactElement, ReactNode, Ref, createElement } from 'react';
    import { EmotionJSX } from "@emotion/react/jsx-namespace";
    export { ArrayInterpolation, ComponentSelector, CSSObject, EmotionCache, FunctionInterpolation, Interpolation, Keyframes, SerializedStyles };
    export * from "@emotion/react/theming";
    export * from "@emotion/react/helper";
    export interface Theme {
    }
    export const ThemeContext: Context<object>;
    export const CacheProvider: Provider<EmotionCache>;
    export function withEmotionCache<Props, RefType = any>(func: (props: Props, context: EmotionCache, ref: Ref<RefType>) => ReactNode): FC<Props & ClassAttributes<RefType>>;
    export function css(template: TemplateStringsArray, ...args: Array<CSSInterpolation>): SerializedStyles;
    export function css(...args: Array<CSSInterpolation>): SerializedStyles;
    export interface GlobalProps {
        styles: Interpolation<Theme>;
    }
    /**
     * @desc
     * JSX generic are supported only after TS@2.9
     */
    export function Global(props: GlobalProps): ReactElement;
    export function keyframes(template: TemplateStringsArray, ...args: Array<CSSInterpolation>): Keyframes;
    export function keyframes(...args: Array<CSSInterpolation>): Keyframes;
    export interface ArrayClassNamesArg extends Array<ClassNamesArg> {
    }
    export type ClassNamesArg = undefined | null | string | boolean | {
        [className: string]: boolean | null | undefined;
    } | ArrayClassNamesArg;
    export interface ClassNamesContent {
        css(template: TemplateStringsArray, ...args: Array<CSSInterpolation>): string;
        css(...args: Array<CSSInterpolation>): string;
        cx(...args: Array<ClassNamesArg>): string;
        theme: Theme;
    }
    export interface ClassNamesProps {
        children(content: ClassNamesContent): ReactNode;
    }
    /**
     * @desc
     * JSX generic are supported only after TS@2.9
     */
    export function ClassNames(props: ClassNamesProps): ReactElement;
    export const jsx: typeof createElement;
    export namespace jsx {
        namespace JSX {
            interface Element extends EmotionJSX.Element {
            }
            interface ElementClass extends EmotionJSX.ElementClass {
            }
            interface ElementAttributesProperty extends EmotionJSX.ElementAttributesProperty {
            }
            interface ElementChildrenAttribute extends EmotionJSX.ElementChildrenAttribute {
            }
            type LibraryManagedAttributes<C, P> = EmotionJSX.LibraryManagedAttributes<C, P>;
            interface IntrinsicAttributes extends EmotionJSX.IntrinsicAttributes {
            }
            interface IntrinsicClassAttributes<T> extends EmotionJSX.IntrinsicClassAttributes<T> {
            }
            type IntrinsicElements = EmotionJSX.IntrinsicElements;
        }
    }
}
declare module "@emotion/styled/base" {
    import * as React from 'react';
    import { ComponentSelector, Interpolation } from "@emotion/serialize/index";
    import { PropsOf, Theme } from "@emotion/react/index";
    export { ArrayInterpolation, CSSObject, FunctionInterpolation } from "@emotion/serialize/index";
    export { ComponentSelector, Interpolation };
    /** Same as StyledOptions but shouldForwardProp must be a type guard */
    export interface FilteringStyledOptions<Props, ForwardedProps extends keyof Props = keyof Props> {
        label?: string;
        shouldForwardProp?(propName: PropertyKey): propName is ForwardedProps;
        target?: string;
    }
    export interface StyledOptions<Props> {
        label?: string;
        shouldForwardProp?(propName: PropertyKey): boolean;
        target?: string;
    }
    /**
     * @typeparam ComponentProps  Props which will be included when withComponent is called
     * @typeparam SpecificComponentProps  Props which will *not* be included when withComponent is called
     */
    export interface StyledComponent<ComponentProps extends {}, SpecificComponentProps extends {} = {}, JSXProps extends {} = {}> extends React.FC<ComponentProps & SpecificComponentProps & JSXProps>, ComponentSelector {
        withComponent<C extends React.ComponentClass<React.ComponentProps<C>>>(component: C): StyledComponent<ComponentProps & PropsOf<C>, {}, {
            ref?: React.Ref<InstanceType<C>>;
        }>;
        withComponent<C extends React.ComponentType<React.ComponentProps<C>>>(component: C): StyledComponent<ComponentProps & PropsOf<C>>;
        withComponent<Tag extends keyof JSX.IntrinsicElements>(tag: Tag): StyledComponent<ComponentProps, JSX.IntrinsicElements[Tag]>;
    }
    /**
     * @typeparam ComponentProps  Props which will be included when withComponent is called
     * @typeparam SpecificComponentProps  Props which will *not* be included when withComponent is called
     */
    export interface CreateStyledComponent<ComponentProps extends {}, SpecificComponentProps extends {} = {}, JSXProps extends {} = {}> {
        /**
         * @typeparam AdditionalProps  Additional props to add to your styled component
         */
        <AdditionalProps extends {} = {}>(...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & AdditionalProps & {
            theme: Theme;
        }>>): StyledComponent<ComponentProps & AdditionalProps, SpecificComponentProps, JSXProps>;
        (template: TemplateStringsArray, ...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & {
            theme: Theme;
        }>>): StyledComponent<ComponentProps, SpecificComponentProps, JSXProps>;
        /**
         * @typeparam AdditionalProps  Additional props to add to your styled component
         */
        <AdditionalProps extends {}>(template: TemplateStringsArray, ...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & AdditionalProps & {
            theme: Theme;
        }>>): StyledComponent<ComponentProps & AdditionalProps, SpecificComponentProps, JSXProps>;
    }
    /**
     * @desc
     * This function accepts a React component or tag ('div', 'a' etc).
     *
     * @example styled(MyComponent)({ width: 100 })
     * @example styled(MyComponent)(myComponentProps => ({ width: myComponentProps.width })
     * @example styled('div')({ width: 100 })
     * @example styled('div')<Props>(props => ({ width: props.width })
     */
    export interface CreateStyled {
        <C extends React.ComponentClass<React.ComponentProps<C>>, ForwardedProps extends keyof React.ComponentProps<C> = keyof React.ComponentProps<C>>(component: C, options: FilteringStyledOptions<React.ComponentProps<C>, ForwardedProps>): CreateStyledComponent<Pick<PropsOf<C>, ForwardedProps> & {
            theme?: Theme;
        }, {}, {
            ref?: React.Ref<InstanceType<C>>;
        }>;
        <C extends React.ComponentClass<React.ComponentProps<C>>>(component: C, options?: StyledOptions<React.ComponentProps<C>>): CreateStyledComponent<PropsOf<C> & {
            theme?: Theme;
        }, {}, {
            ref?: React.Ref<InstanceType<C>>;
        }>;
        <C extends React.ComponentType<React.ComponentProps<C>>, ForwardedProps extends keyof React.ComponentProps<C> = keyof React.ComponentProps<C>>(component: C, options: FilteringStyledOptions<React.ComponentProps<C>, ForwardedProps>): CreateStyledComponent<Pick<PropsOf<C>, ForwardedProps> & {
            theme?: Theme;
        }>;
        <C extends React.ComponentType<React.ComponentProps<C>>>(component: C, options?: StyledOptions<React.ComponentProps<C>>): CreateStyledComponent<PropsOf<C> & {
            theme?: Theme;
        }>;
        <Tag extends keyof JSX.IntrinsicElements, ForwardedProps extends keyof JSX.IntrinsicElements[Tag] = keyof JSX.IntrinsicElements[Tag]>(tag: Tag, options: FilteringStyledOptions<JSX.IntrinsicElements[Tag], ForwardedProps>): CreateStyledComponent<{
            theme?: Theme;
            as?: React.ElementType;
        }, Pick<JSX.IntrinsicElements[Tag], ForwardedProps>>;
        <Tag extends keyof JSX.IntrinsicElements>(tag: Tag, options?: StyledOptions<JSX.IntrinsicElements[Tag]>): CreateStyledComponent<{
            theme?: Theme;
            as?: React.ElementType;
        }, JSX.IntrinsicElements[Tag]>;
    }
    const styled: CreateStyled;
    export default styled;
}
declare module "@emotion/styled/index" {
    import { Theme } from "@emotion/react/index";
    import { CreateStyled as BaseCreateStyled, CreateStyledComponent } from "@emotion/styled/base";
    export { ArrayInterpolation, ComponentSelector, CSSObject, FunctionInterpolation, Interpolation, StyledComponent, StyledOptions, CreateStyledComponent } from "@emotion/styled/base";
    export type StyledTags = {
        [Tag in keyof JSX.IntrinsicElements]: CreateStyledComponent<{
            theme?: Theme;
            as?: React.ElementType;
        }, JSX.IntrinsicElements[Tag]>;
    };
    export interface CreateStyled extends BaseCreateStyled, StyledTags {
    }
    const styled: CreateStyled;
    export default styled;
}
declare module "@mui/styled-engine/StyledEngineProvider/StyledEngineProvider" {
    import * as React from 'react';
    export interface StyledEngineProviderProps {
        children?: React.ReactNode;
        injectFirst?: boolean;
    }
    export type StyledEngineProvider = (props: StyledEngineProviderProps) => JSX.Element;
    export default StyledEngineProvider;
}
declare module "@mui/styled-engine/StyledEngineProvider/index" {
    export { default } from "@mui/styled-engine/StyledEngineProvider/StyledEngineProvider";
    export * from "@mui/styled-engine/StyledEngineProvider/StyledEngineProvider";
}
declare module "@mui/styled-engine/GlobalStyles/GlobalStyles" {
    import * as React from 'react';
    import { Interpolation } from "@emotion/react/index";
    export interface GlobalStylesProps<Theme = {}> {
        defaultTheme?: object;
        styles: Interpolation<Theme>;
    }
    export type GlobalStyles = (props: GlobalStylesProps) => React.ReactElement;
    export default GlobalStyles;
}
declare module "@mui/styled-engine/GlobalStyles/index" {
    export { default } from "@mui/styled-engine/GlobalStyles/GlobalStyles";
    export * from "@mui/styled-engine/GlobalStyles/GlobalStyles";
}
declare module "@mui/styled-engine/index" {
    import * as CSS from 'csstype';
    import { StyledComponent, StyledOptions } from "@emotion/styled/index";
    import { PropsOf } from "@emotion/react/index";
    export * from "@emotion/styled/index";
    export { default } from "@emotion/styled/index";
    export { ThemeContext, keyframes, css } from "@emotion/react/index";
    export { default as StyledEngineProvider } from "@mui/styled-engine/StyledEngineProvider/index";
    export { default as GlobalStyles } from "@mui/styled-engine/GlobalStyles/index";
    export * from "@mui/styled-engine/GlobalStyles/index";
    export interface SerializedStyles {
        name: string;
        styles: string;
        map?: string;
        next?: SerializedStyles;
    }
    export type CSSProperties = CSS.PropertiesFallback<number | string>;
    export type CSSPropertiesWithMultiValues = {
        [K in keyof CSSProperties]: CSSProperties[K] | Array<Extract<CSSProperties[K], string>>;
    };
    export type CSSPseudos = {
        [K in CSS.Pseudos]?: unknown | CSSObject;
    };
    export interface CSSOthersObject {
        [propertiesName: string]: unknown | CSSInterpolation;
    }
    export type CSSPseudosForCSSObject = {
        [K in CSS.Pseudos]?: CSSObject;
    };
    export interface ArrayCSSInterpolation extends Array<CSSInterpolation> {
    }
    export interface CSSOthersObjectForCSSObject {
        [propertiesName: string]: CSSInterpolation;
    }
    export interface CSSObject extends CSSPropertiesWithMultiValues, CSSPseudos, CSSOthersObject {
    }
    export interface ComponentSelector {
        __emotion_styles: any;
    }
    export type Keyframes = {
        name: string;
        styles: string;
        anim: number;
        toString: () => string;
    } & string;
    export type Equal<A, B, T, F> = A extends B ? (B extends A ? T : F) : F;
    export type InterpolationPrimitive = null | undefined | boolean | number | string | ComponentSelector | Keyframes | SerializedStyles | CSSObject;
    export type CSSInterpolation = InterpolationPrimitive | ArrayCSSInterpolation;
    export interface FunctionInterpolation<Props> {
        (props: Props): Interpolation<Props>;
    }
    export interface ArrayInterpolation<Props> extends Array<Interpolation<Props>> {
    }
    export type Interpolation<Props> = InterpolationPrimitive | ArrayInterpolation<Props> | FunctionInterpolation<Props>;
    export function shouldForwardProp(propName: PropertyKey): boolean;
    /** Same as StyledOptions but shouldForwardProp must be a type guard */
    export interface FilteringStyledOptions<Props, ForwardedProps extends keyof Props = keyof Props> {
        label?: string;
        shouldForwardProp?(propName: PropertyKey): propName is ForwardedProps;
        target?: string;
    }
    /**
     * @typeparam ComponentProps  Props which will be included when withComponent is called
     * @typeparam SpecificComponentProps  Props which will *not* be included when withComponent is called
     */
    export interface CreateStyledComponent<ComponentProps extends {}, SpecificComponentProps extends {} = {}, JSXProps extends {} = {}, T extends object = {}> {
        (...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & {
            theme: T;
        }>>): StyledComponent<ComponentProps, SpecificComponentProps, JSXProps>;
        /**
         * @typeparam AdditionalProps  Additional props to add to your styled component
         */
        <AdditionalProps extends {}>(...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & AdditionalProps & {
            theme: T;
        }>>): StyledComponent<ComponentProps & AdditionalProps, SpecificComponentProps, JSXProps>;
        (template: TemplateStringsArray, ...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & {
            theme: T;
        }>>): StyledComponent<ComponentProps, SpecificComponentProps, JSXProps>;
        /**
         * @typeparam AdditionalProps  Additional props to add to your styled component
         */
        <AdditionalProps extends {}>(template: TemplateStringsArray, ...styles: Array<Interpolation<ComponentProps & SpecificComponentProps & AdditionalProps & {
            theme: T;
        }>>): StyledComponent<ComponentProps & AdditionalProps, SpecificComponentProps, JSXProps>;
    }
    export interface CreateMUIStyled<MUIStyledCommonProps, MuiStyledOptions, Theme extends object> {
        <C extends React.ComponentClass<React.ComponentProps<C>>, ForwardedProps extends keyof React.ComponentProps<C> = keyof React.ComponentProps<C>>(component: C, options: FilteringStyledOptions<React.ComponentProps<C>, ForwardedProps> & MuiStyledOptions): CreateStyledComponent<Pick<PropsOf<C>, ForwardedProps> & MUIStyledCommonProps, {}, {
            ref?: React.Ref<InstanceType<C>>;
        }, Theme>;
        <C extends React.ComponentClass<React.ComponentProps<C>>>(component: C, options?: StyledOptions<PropsOf<C> & MUIStyledCommonProps> & MuiStyledOptions): CreateStyledComponent<PropsOf<C> & MUIStyledCommonProps, {}, {
            ref?: React.Ref<InstanceType<C>>;
        }, Theme>;
        <C extends React.JSXElementConstructor<React.ComponentProps<C>>, ForwardedProps extends keyof React.ComponentProps<C> = keyof React.ComponentProps<C>>(component: C, options: FilteringStyledOptions<React.ComponentProps<C>, ForwardedProps> & MuiStyledOptions): CreateStyledComponent<Pick<PropsOf<C>, ForwardedProps> & MUIStyledCommonProps, {}, {}, Theme>;
        <C extends React.JSXElementConstructor<React.ComponentProps<C>>>(component: C, options?: StyledOptions<PropsOf<C> & MUIStyledCommonProps> & MuiStyledOptions): CreateStyledComponent<PropsOf<C> & MUIStyledCommonProps, {}, {}, Theme>;
        <Tag extends keyof JSX.IntrinsicElements, ForwardedProps extends keyof JSX.IntrinsicElements[Tag] = keyof JSX.IntrinsicElements[Tag]>(tag: Tag, options: FilteringStyledOptions<JSX.IntrinsicElements[Tag], ForwardedProps> & MuiStyledOptions): CreateStyledComponent<MUIStyledCommonProps, Pick<JSX.IntrinsicElements[Tag], ForwardedProps>, {}, Theme>;
        <Tag extends keyof JSX.IntrinsicElements>(tag: Tag, options?: StyledOptions<MUIStyledCommonProps> & MuiStyledOptions): CreateStyledComponent<MUIStyledCommonProps, JSX.IntrinsicElements[Tag], {}, Theme>;
    }
}
declare module "@mui/system/style" {
    import React from 'react';
    import { CSSObject } from "@mui/styled-engine/index";
    import { StyleFunction } from "@mui/system/Box/index";
    export interface StyleOptions<PropKey> {
        cssProperty?: PropKey | keyof React.CSSProperties | false;
        prop: PropKey;
        /**
         * dot access in `Theme`
         */
        themeKey?: string;
        transform?: (cssValue: unknown) => number | string | React.CSSProperties | CSSObject;
    }
    export function style<PropKey extends string, Theme extends object>(options: StyleOptions<PropKey>): StyleFunction<{
        [K in PropKey]?: unknown;
    } & {
        theme?: Theme;
    }> & {
        filterProps: string[];
    };
}
declare module "@mui/system/spacing" {
    import { SimpleStyleFunction, spacing, PropsFor } from "@mui/system/Box/index";
    export type SpacingProps = PropsFor<typeof spacing>;
    export function createUnarySpacing<Spacing>(theme: {
        spacing: Spacing;
    }): Spacing extends number ? (abs: number | string) => number | number : Spacing extends any[] ? <Index extends number>(abs: Index | string) => Spacing[Index] | string : Spacing extends (...args: unknown[]) => unknown ? Spacing : () => undefined;
    export const margin: SimpleStyleFunction<'m' | 'mt' | 'mr' | 'mb' | 'ml' | 'mx' | 'my' | 'margin' | 'marginTop' | 'marginRight' | 'marginBottom' | 'marginLeft' | 'marginX' | 'marginY' | 'marginInline' | 'marginInlineStart' | 'marginInlineEnd' | 'marginBlock' | 'marginBlockStart' | 'marginBlockEnd'>;
    export type MarginProps = PropsFor<typeof margin>;
    export const padding: SimpleStyleFunction<'p' | 'pt' | 'pr' | 'pb' | 'pl' | 'px' | 'py' | 'padding' | 'paddingTop' | 'paddingRight' | 'paddingBottom' | 'paddingLeft' | 'paddingX' | 'paddingY' | 'paddingInline' | 'paddingInlineStart' | 'paddingInlineEnd' | 'paddingBlock' | 'paddingBlockStart' | 'paddingBlockEnd'>;
    export type PaddingProps = PropsFor<typeof padding>;
}
declare module "@mui/system/sx/sx" {
    import { CSSObject } from "@mui/styled-engine/index";
    import { SxProps } from "@mui/system/styleFunctionSx/index";
    export type sx = <T extends object = {}>(styles: SxProps<T>) => CSSObject;
    export default sx;
}
declare module "@mui/system/sx/index" {
    export { default } from "@mui/system/sx/sx";
}
declare module "@mui/system/createBox" {
    import Box from "@mui/system/Box/index";
    import styleFunctionSx from "@mui/system/styleFunctionSx/index";
    export type createBox = (options?: {
        defaultTheme: object;
        defaultClassName?: string;
        generateClassName?: (componentName: string) => string;
        styleFunctionSx?: typeof styleFunctionSx;
    }) => typeof Box;
    export default createBox;
}
declare module "@mui/system/createStyled" {
    import * as React from 'react';
    import { CreateMUIStyled as CreateMUIStyledStyledEngine, CSSInterpolation } from "@mui/styled-engine/index";
    import styleFunctionSx, { SxProps } from "@mui/system/styleFunctionSx/index";
    import { Theme as DefaultTheme } from "@mui/system/createTheme/index";
    export function shouldForwardProp(propName: PropertyKey): boolean;
    export interface MUIStyledCommonProps<Theme extends object = DefaultTheme> {
        theme?: Theme;
        as?: React.ElementType;
        sx?: SxProps<Theme>;
    }
    export interface MuiStyledOptions {
        name?: string;
        slot?: string;
        overridesResolver?: (props: any, styles: Record<string, CSSInterpolation>) => CSSInterpolation;
        skipVariantsResolver?: boolean;
        skipSx?: boolean;
    }
    export type CreateMUIStyled<T extends object = DefaultTheme> = CreateMUIStyledStyledEngine<MUIStyledCommonProps<T>, MuiStyledOptions, T>;
    export type createStyled = <T extends object = DefaultTheme>(options?: {
        defaultTheme?: T;
        rootShouldForwardProp?: (prop: PropertyKey) => boolean;
        slotShouldForwardProp?: (prop: PropertyKey) => boolean;
        styleFunctionSx?: typeof styleFunctionSx;
    }) => CreateMUIStyled<T>;
    export default createStyled;
}
declare module "@mui/system/styled" {
    import { CreateMUIStyled } from "@mui/system/createStyled";
    const styled: CreateMUIStyled;
    export default styled;
}
declare module "@mui/system/useThemeProps/useThemeProps" {
    export interface ThemeWithProps {
        components?: any;
    }
    export type ThemedProps<Theme, Name extends keyof any> = Theme extends {
        components: Record<Name, {
            defaultProps: infer Props;
        }>;
    } ? Props : {};
    export type useThemeProps = <Theme extends ThemeWithProps, Props, Name extends keyof any>(params: {
        props: Props;
        name: Name;
        defaultTheme?: Theme;
    }) => Props & ThemedProps<Theme, Name>;
    export default useThemeProps;
}
declare module "@mui/system/useThemeProps/getThemeProps" {
    export {};
    interface ThemeWithProps<Components> {
        components?: {
            [K in keyof Components]: {
                defaultProps?: Partial<Components[K]>;
            };
        };
    }
    type ThemedProps<Theme, Name extends keyof any> = Theme extends {
        components: Record<Name, {
            defaultProps: infer Props;
        }>;
    } ? Props : {};
    export type getThemeProps = <Theme extends ThemeWithProps<any>, Props, Name extends keyof any>(params: {
        props: Props;
        name: Name;
        theme?: Theme;
    }) => Props & ThemedProps<Theme, Name>;
    export default getThemeProps;
}
declare module "@mui/system/useThemeProps/index" {
    export { default } from "@mui/system/useThemeProps/useThemeProps";
    export * from "@mui/system/useThemeProps/useThemeProps";
    export { default as getThemeProps } from "@mui/system/useThemeProps/getThemeProps";
}
declare module "@mui/system/useTheme" {
    import { Theme } from "@mui/system/createTheme/index";
    export type useTheme = <T = Theme>(defaultTheme?: T) => T;
    export default useTheme;
}
declare module "@mui/system/useThemeWithoutDefault" {
    export type useThemeWithoutDefault = <T = null>(defaultTheme?: T) => T;
    export default useThemeWithoutDefault;
}
declare module "@mui/system/colorManipulator" {
    export type ColorFormat = 'rgb' | 'rgba' | 'hsl' | 'hsla';
    export interface ColorObject {
        type: ColorFormat;
        values: [number, number, number] | [number, number, number, number];
        colorSpace?: 'srgb' | 'display-p3' | 'a98-rgb' | 'prophoto-rgb' | 'rec-2020';
    }
    export function hexToRgb(hex: string): string;
    export function rgbToHex(color: string): string;
    export function hslToRgb(color: string): string;
    export function decomposeColor(color: string): ColorObject;
    export function recomposeColor(color: ColorObject): string;
    export function getContrastRatio(foreground: string, background: string): number;
    export function getLuminance(color: string): number;
    export function emphasize(color: string, coefficient?: number): string;
    export function alpha(color: string, value: number): string;
    export function darken(color: string, coefficient: number): string;
    export function lighten(color: string, coefficient: number): string;
}
declare module "@mui/system/ThemeProvider/ThemeProvider" {
    import { DefaultTheme } from "@mui/private-theming/index";
    export interface ThemeProviderProps<Theme = DefaultTheme> {
        children?: React.ReactNode;
        theme: Partial<Theme> | ((outerTheme: Theme) => Theme);
    }
    /**
     * This component makes the `theme` available down the React tree.
     * It should preferably be used at **the root of your component tree**.
     * API:
     *
     * - [ThemeProvider API](/customization/theming/#themeprovider)
     */
    export type ThemeProvider = <T = DefaultTheme>(props: ThemeProviderProps<T>) => React.ReactElement<ThemeProviderProps<T>>;
    export default ThemeProvider;
}
declare module "@mui/system/ThemeProvider/index" {
    export { default } from "@mui/system/ThemeProvider/ThemeProvider";
    export * from "@mui/system/ThemeProvider/ThemeProvider";
}
declare module "@mui/system/cssVars/useCurrentColorScheme" {
    export type Mode = 'light' | 'dark' | 'system';
    export type SystemMode = Exclude<Mode, 'system'>;
    export interface State<SupportedColorScheme extends string> {
        /**
         * User selected mode.
         * Note: on the server, mode is always undefined
         */
        mode: Mode | undefined;
        /**
         * Only valid if `mode: 'system'`, either 'light' | 'dark'.
         */
        systemMode: SystemMode | undefined;
        /**
         * The color scheme for the light mode.
         */
        lightColorScheme: SupportedColorScheme;
        /**
         * The color scheme for the dark mode.
         */
        darkColorScheme: SupportedColorScheme;
    }
    export type Result<SupportedColorScheme extends string> = State<SupportedColorScheme> & {
        /**
         * The current application color scheme. It is always `undefined` on the server.
         */
        colorScheme: SupportedColorScheme | undefined;
        /**
         * `mode` is saved to internal state and localStorage
         * If `mode` is null, it will be reset to the defaultMode
         */
        setMode: (mode: Mode | null) => void;
        /**
         * `colorScheme` is saved to internal state and localStorage
         * If `colorScheme` is null, it will be reset to the defaultColorScheme (light | dark)
         */
        setColorScheme: (colorScheme: SupportedColorScheme | Partial<{
            light: SupportedColorScheme | null;
            dark: SupportedColorScheme | null;
        }> | null) => void;
    };
    export function getSystemMode(mode: undefined | string): SystemMode | undefined;
    export function getColorScheme<SupportedColorScheme extends string>(state: State<SupportedColorScheme>): SupportedColorScheme | undefined;
    export type useCurrentColorScheme = <SupportedColorScheme extends string>(options: {
        defaultLightColorScheme: SupportedColorScheme;
        defaultDarkColorScheme: SupportedColorScheme;
        supportedColorSchemes: Array<SupportedColorScheme>;
        defaultMode?: Mode;
        modeStorageKey?: string;
        colorSchemeStorageKey?: string;
    }) => Result<SupportedColorScheme>;
    export default useCurrentColorScheme;
}
declare module "@mui/system/cssVars/createCssVarsProvider" {
    import * as React from 'react';
    import { Mode, Result } from "@mui/system/cssVars/useCurrentColorScheme";
    export interface ColorSchemeContextValue<SupportedColorScheme extends string> extends Result<SupportedColorScheme> {
        allColorSchemes: SupportedColorScheme[];
    }
    export interface CssVarsProviderConfig<ColorScheme extends string> {
        /**
         * Design system default color scheme.
         * - provides string if the design system has one default color scheme (either light or dark)
         * - provides object if the design system has default light & dark color schemes
         */
        defaultColorScheme: ColorScheme | {
            light: ColorScheme;
            dark: ColorScheme;
        };
        /**
         * Design system default mode
         * @default 'light'
         */
        defaultMode?: Mode;
        /**
         * Disable CSS transitions when switching between modes or color schemes
         * @default false
         */
        disableTransitionOnChange?: boolean;
        /**
         * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI
         * @default true
         */
        enableColorScheme?: boolean;
        /**
         * CSS variable prefix
         * @default ''
         */
        prefix?: string;
    }
    export type createCssVarsProvider = <ColorScheme extends string, ThemeInput extends {
        colorSchemes?: Partial<Record<ColorScheme, any>>;
    }>(options: CssVarsProviderConfig<ColorScheme> & {
        /**
         * Design system default theme
         *
         * The structure inside `theme.colorSchemes[colorScheme]` should be exactly the same in all color schemes because
         * those object of the color scheme will be used when the color scheme is active.
         *
         *  {
         *    colorSchemes: {
         *      light: { ...lightColorSchemeValues },
         *      dark: { ...darkColorSchemeValues }
         *    }
         *  }
         *
         *  If colorScheme is 'light', the `lightColorSchemeValues` will be merged to theme as `{ ...theme, ...lightColorSchemeValues }`
         *  likewise, if colorScheme is 'dark', the `darkColorSchemeValues` will be merged to theme as `{ ...theme, ...darkColorSchemeValues }`
         *
         *  !!! Don't provided the same keys as in colorSchemes to theme because they will be replaced internally when the selected colorScheme is calculated.
         *  Ex. {
         *    colorSchemes: {
         *      light: { palette: { ... } },
         *      dark: { palette: { ... } }
         *    },
         *    palette: { ... }, // This values will be replaced by the `palette` from the light | dark color scheme at runtime.
         *  }
         */
        theme: any;
        /**
         * A function to determine if the key, value should be attached as CSS Variable
         * `keys` is an array that represents the object path keys.
         *  Ex, if the theme is { foo: { bar: 'var(--test)' } }
         *  then, keys = ['foo', 'bar']
         *        value = 'var(--test)'
         */
        shouldSkipGeneratingVar?: (keys: string[], value: string | number) => boolean;
        /**
         * A function to be called after the CSS variables are attached. The result of this function will be the final theme pass to ThemeProvider.
         *
         * The example usage is the variant generation in Joy. We need to combine the token from user-input and the default theme first, then generate
         * variants from those tokens.
         */
        resolveTheme?: (theme: any) => any;
    }) => {
        CssVarsProvider: (props: React.PropsWithChildren<Partial<CssVarsProviderConfig<ColorScheme>> & {
            theme?: ThemeInput;
            /**
             * localStorage key used to store application `mode`
             * @default 'mui-mode'
             */
            modeStorageKey?: string;
            /**
             * DOM attribute for applying color scheme
             * @default 'data-mui-color-scheme'
             */
            attribute?: string;
        }>) => React.ReactElement;
        useColorScheme: () => ColorSchemeContextValue<ColorScheme>;
        getInitColorSchemeScript: any;
    };
    export default createCssVarsProvider;
    export {};
}
declare module "@mui/system/cssVars/index" {
    export { default } from "@mui/system/cssVars/createCssVarsProvider";
}
declare module "@mui/system/cssVars/createGetCssVar" {
    /**
     * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable
     * and they does not need to remember the prefix (defined once).
     */
    export type createGetCssVar = <T extends string = string>(prefix?: string) => <AdditionalVars extends string = never>(field: T | AdditionalVars, ...vars: (T | AdditionalVars)[]) => string;
    export default createGetCssVar;
}
declare module "@mui/system/index" {
    import { ComposedStyleFunction, StyleFunction, PropsFor, SimpleStyleFunction, borders, display, flexbox, grid, palette, positions, shadows, sizing, typography } from "@mui/system/Box/index";
    export {};
    export const border: SimpleStyleFunction<'border'>;
    export const borderTop: SimpleStyleFunction<'borderTop'>;
    export const borderRight: SimpleStyleFunction<'borderRight'>;
    export const borderBottom: SimpleStyleFunction<'borderBottom'>;
    export const borderLeft: SimpleStyleFunction<'borderLeft'>;
    export const borderColor: SimpleStyleFunction<'borderColor'>;
    export const borderRadius: SimpleStyleFunction<'borderRadius'>;
    export type BordersProps = PropsFor<typeof borders>;
    type DefaultBreakPoints = 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    export function handleBreakpoints<Props>(props: Props, propValue: any, styleFromPropValue: (value: any) => any): any;
    /**
     * @returns An enhanced stylefunction that considers breakpoints
     */
    export function breakpoints<Props, Breakpoints extends string = DefaultBreakPoints>(styleFunction: StyleFunction<Props>): StyleFunction<Partial<Record<Breakpoints, Props>> & Props>;
    export function mergeBreakpointsInOrder(breakpointsInput: {
        keys: string[];
        up: (key: string) => string;
    }, ...styles: object[]): object;
    export function compose<T extends Array<StyleFunction<any>>>(...args: T): ComposedStyleFunction<T>;
    export type DisplayProps = PropsFor<typeof display>;
    export type FlexboxProps = PropsFor<typeof flexbox>;
    export type GridProps = PropsFor<typeof grid>;
    export const color: SimpleStyleFunction<'color'>;
    export const bgcolor: SimpleStyleFunction<'bgcolor'>;
    export type PaletteProps = PropsFor<typeof palette>;
    export type PositionsProps = PropsFor<typeof positions>;
    export type ShadowsProps = PropsFor<typeof shadows>;
    export const width: SimpleStyleFunction<'width'>;
    export const maxWidth: SimpleStyleFunction<'maxWidth'>;
    export const minWidth: SimpleStyleFunction<'minWidth'>;
    export const height: SimpleStyleFunction<'height'>;
    export const maxHeight: SimpleStyleFunction<'maxHeight'>;
    export const minHeight: SimpleStyleFunction<'minHeight'>;
    export const sizeWidth: SimpleStyleFunction<'sizeWidth'>;
    export const sizeHeight: SimpleStyleFunction<'sizeHeight'>;
    export const boxSizing: SimpleStyleFunction<'boxSizing'>;
    export type SizingProps = PropsFor<typeof sizing>;
    export const typographyVariant: SimpleStyleFunction<'typography'>;
    export const fontFamily: SimpleStyleFunction<'fontFamily'>;
    export const fontSize: SimpleStyleFunction<'fontSize'>;
    export const fontStyle: SimpleStyleFunction<'fontStyle'>;
    export const fontWeight: SimpleStyleFunction<'fontWeight'>;
    export const letterSpacing: SimpleStyleFunction<'letterSpacing'>;
    export const lineHeight: SimpleStyleFunction<'lineHeight'>;
    export const textAlign: SimpleStyleFunction<'textAlign'>;
    export const textTransform: SimpleStyleFunction<'textTransform'>;
    export type TypographyProps = PropsFor<typeof typography>;
    export function unstable_getThemeValue(prop: string, value: any, theme: object): any;
    /**
     * The `css` function accepts arrays as values for mobile-first responsive styles.
     * Note that this extends to non-theme values also. For example `display=['none', 'block']`
     * will also works.
     */
    export type ResponsiveStyleValue<T> = T | Array<T | null> | {
        [key: string]: T | null;
    };
    export { DefaultTheme } from "@mui/private-theming/index";
    export { css, keyframes, GlobalStyles, GlobalStylesProps, StyledEngineProvider, Interpolation, CSSInterpolation, CSSObject, } from "@mui/styled-engine/index";
    export * from "@mui/system/style";
    export * from "@mui/system/spacing";
    export { default as unstable_styleFunctionSx, unstable_createStyleFunctionSx, extendSxProp as unstable_extendSxProp, } from "@mui/system/styleFunctionSx/index";
    export * from "@mui/system/styleFunctionSx/index";
    export { default as experimental_sx } from "@mui/system/sx/index";
    export { default as Box } from "@mui/system/Box/index";
    export * from "@mui/system/Box/index";
    export { default as createBox } from "@mui/system/createBox";
    export * from "@mui/system/createBox";
    export { default as createStyled } from "@mui/system/createStyled";
    export * from "@mui/system/createStyled";
    export { default as styled } from "@mui/system/styled";
    export * from "@mui/system/styled";
    export { default as createTheme } from "@mui/system/createTheme/index";
    export * from "@mui/system/createTheme/index";
    export { default as createBreakpoints } from "@mui/system/createTheme/createBreakpoints";
    export * from "@mui/system/createTheme/createBreakpoints";
    export { default as createSpacing } from "@mui/system/createTheme/createSpacing";
    export { SpacingOptions, Spacing } from "@mui/system/createTheme/createSpacing";
    export { default as shape } from "@mui/system/createTheme/shape";
    export * from "@mui/system/createTheme/shape";
    export { default as useThemeProps, getThemeProps } from "@mui/system/useThemeProps/index";
    export { default as useTheme } from "@mui/system/useTheme";
    export * from "@mui/system/useTheme";
    export { default as useThemeWithoutDefault } from "@mui/system/useThemeWithoutDefault";
    export * from "@mui/system/useThemeWithoutDefault";
    export * from "@mui/system/colorManipulator";
    export { default as ThemeProvider } from "@mui/system/ThemeProvider/index";
    export * from "@mui/system/ThemeProvider/index";
    export { default as unstable_createCssVarsProvider } from "@mui/system/cssVars/index";
    export { default as unstable_createGetCssVar } from "@mui/system/cssVars/createGetCssVar";
    export * from "@mui/system/cssVars/index";
}
declare module "@mui/material/styles/createMixins" {
    import * as CSS from 'csstype';
    import { Breakpoints, Spacing } from "@mui/system/index";
    export type NormalCssProperties = CSS.Properties<number | string>;
    export type Fontface = CSS.AtRule.FontFace & {
        fallbacks?: CSS.AtRule.FontFace[];
    };
    /**
     * Allows the user to augment the properties available
     */
    export interface BaseCSSProperties extends NormalCssProperties {
        '@font-face'?: Fontface | Fontface[];
    }
    export interface CSSProperties extends BaseCSSProperties {
        [k: string]: unknown | CSSProperties;
    }
    export interface Mixins {
        toolbar: CSSProperties;
    }
    export interface MixinsOptions extends Partial<Mixins> {
    }
    export type createMixins = (breakpoints: Breakpoints, spacing: Spacing, mixins: MixinsOptions) => Mixins;
    export default createMixins;
}
declare module "@mui/material/styles/createPalette" {
    import { Color, PaletteMode } from "@mui/material/index";
    export {};
    export interface CommonColors {
        black: string;
        white: string;
    }
    export type ColorPartial = Partial<Color>;
    export interface TypeText {
        primary: string;
        secondary: string;
        disabled: string;
    }
    export interface TypeAction {
        active: string;
        hover: string;
        hoverOpacity: number;
        selected: string;
        selectedOpacity: number;
        disabled: string;
        disabledOpacity: number;
        disabledBackground: string;
        focus: string;
        focusOpacity: number;
        activatedOpacity: number;
    }
    export interface TypeBackground {
        default: string;
        paper: string;
    }
    export type TypeDivider = string;
    export type PaletteColorOptions = SimplePaletteColorOptions | ColorPartial;
    export interface SimplePaletteColorOptions {
        light?: string;
        main: string;
        dark?: string;
        contrastText?: string;
    }
    export interface PaletteColor {
        light: string;
        main: string;
        dark: string;
        contrastText: string;
    }
    export interface TypeObject {
        text: TypeText;
        action: TypeAction;
        divider: TypeDivider;
        background: TypeBackground;
    }
    export type PaletteTonalOffset = number | {
        light: number;
        dark: number;
    };
    export const light: TypeObject;
    export const dark: TypeObject;
    export interface PaletteAugmentColorOptions {
        color: PaletteColorOptions;
        mainShade?: number | string;
        lightShade?: number | string;
        darkShade?: number | string;
        name?: number | string;
    }
    export interface Palette {
        common: CommonColors;
        mode: PaletteMode;
        contrastThreshold: number;
        tonalOffset: PaletteTonalOffset;
        primary: PaletteColor;
        secondary: PaletteColor;
        error: PaletteColor;
        warning: PaletteColor;
        info: PaletteColor;
        success: PaletteColor;
        grey: Color;
        text: TypeText;
        divider: TypeDivider;
        action: TypeAction;
        background: TypeBackground;
        getContrastText: (background: string) => string;
        augmentColor: (options: PaletteAugmentColorOptions) => PaletteColor;
    }
    export type PartialTypeObject = {
        [P in keyof TypeObject]?: Partial<TypeObject[P]>;
    };
    export interface PaletteOptions {
        primary?: PaletteColorOptions;
        secondary?: PaletteColorOptions;
        error?: PaletteColorOptions;
        warning?: PaletteColorOptions;
        info?: PaletteColorOptions;
        success?: PaletteColorOptions;
        mode?: PaletteMode;
        tonalOffset?: PaletteTonalOffset;
        contrastThreshold?: number;
        common?: Partial<CommonColors>;
        grey?: ColorPartial;
        text?: Partial<TypeText>;
        divider?: string;
        action?: Partial<TypeAction>;
        background?: Partial<TypeBackground>;
        getContrastText?: (background: string) => string;
    }
    export type createPalette = (palette: PaletteOptions) => Palette;
    export default createPalette;
}
declare module "@mui/material/styles/createTypography" {
    import * as React from 'react';
    import * as CSS from 'csstype';
    import { Palette } from "@mui/material/styles/createPalette";
    export type Variant = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'subtitle1' | 'subtitle2' | 'body1' | 'body2' | 'caption' | 'button' | 'overline';
    export interface FontStyle extends Required<{
        fontFamily: React.CSSProperties['fontFamily'];
        fontSize: number;
        fontWeightLight: React.CSSProperties['fontWeight'];
        fontWeightRegular: React.CSSProperties['fontWeight'];
        fontWeightMedium: React.CSSProperties['fontWeight'];
        fontWeightBold: React.CSSProperties['fontWeight'];
        htmlFontSize: number;
    }> {
    }
    export type NormalCssProperties = CSS.Properties<number | string>;
    export type Fontface = CSS.AtRule.FontFace & {
        fallbacks?: CSS.AtRule.FontFace[];
    };
    /**
     * Allows the user to augment the properties available
     */
    export interface BaseCSSProperties extends NormalCssProperties {
        '@font-face'?: Fontface | Fontface[];
    }
    export interface CSSProperties extends BaseCSSProperties {
        [k: string]: unknown | CSSProperties;
    }
    export interface FontStyleOptions extends Partial<FontStyle> {
        allVariants?: React.CSSProperties;
    }
    export type TypographyStyle = CSSProperties;
    export interface TypographyStyleOptions extends TypographyStyle {
    }
    export interface TypographyUtils {
        pxToRem: (px: number) => string;
    }
    export interface Typography extends Record<Variant, TypographyStyle>, FontStyle, TypographyUtils {
    }
    export interface TypographyOptions extends Partial<Record<Variant, TypographyStyleOptions> & FontStyleOptions> {
    }
    export type createTypography = (palette: Palette, typography: TypographyOptions | ((palette: Palette) => TypographyOptions)) => Typography;
    export default createTypography;
}
declare module "@mui/material/styles/shadows" {
    export type Shadows = [
        'none',
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
    ];
    const shadows: Shadows;
    export default shadows;
}
declare module "@mui/material/styles/createTransitions" {
    export interface Easing {
        easeInOut: string;
        easeOut: string;
        easeIn: string;
        sharp: string;
    }
    export const easing: Easing;
    export interface Duration {
        shortest: number;
        shorter: number;
        short: number;
        standard: number;
        complex: number;
        enteringScreen: number;
        leavingScreen: number;
    }
    export const duration: Duration;
    export interface TransitionsOptions {
        easing?: Partial<Easing>;
        duration?: Partial<Duration>;
        create?: (props: string | string[], options?: Partial<{
            duration: number | string;
            easing: string;
            delay: number | string;
        }>) => string;
        getAutoHeightDuration?: (height: number) => number;
    }
    /**
     * @internal
     * @param props
     * @param options
     */
    export function create(props: string | string[], options?: Partial<{
        duration: number | string;
        easing: string;
        delay: number | string;
    }>): string;
    /**
     * @internal
     * @param height
     */
    export function getAutoHeightDuration(height: number): number;
    export interface Transitions {
        easing: Easing;
        duration: Duration;
        create: typeof create;
        getAutoHeightDuration: typeof getAutoHeightDuration;
    }
}
declare module "@mui/material/styles/zIndex" {
    export interface ZIndex {
        mobileStepper: number;
        speedDial: number;
        appBar: number;
        drawer: number;
        modal: number;
        snackbar: number;
        tooltip: number;
    }
    export type ZIndexOptions = Partial<ZIndex>;
    const zIndex: ZIndex;
    export default zIndex;
}
declare module "@mui/material/OverridableComponent" {
    import * as React from 'react';
    import { DistributiveOmit } from "@mui/types/index";
    import { StyledComponentProps } from "@mui/material/styles/index";
    /**
     * A component whose root component can be controlled via a `component` prop.
     *
     * Adjusts valid props based on the type of `component`.
     */
    export interface OverridableComponent<M extends OverridableTypeMap> {
        <C extends React.ElementType>(props: {
            /**
             * The component used for the root node.
             * Either a string to use a HTML element or a component.
             */
            component: C;
        } & OverrideProps<M, C>): JSX.Element;
        (props: DefaultComponentProps<M>): JSX.Element;
    }
    /**
     * Props of the component if `component={Component}` is used.
     */
    export type OverrideProps<M extends OverridableTypeMap, C extends React.ElementType> = (BaseProps<M> & DistributiveOmit<React.ComponentPropsWithRef<C>, keyof BaseProps<M>>);
    /**
     * Props if `component={Component}` is NOT used.
     */
    export type DefaultComponentProps<M extends OverridableTypeMap> = BaseProps<M> & DistributiveOmit<React.ComponentPropsWithRef<M['defaultComponent']>, keyof BaseProps<M>>;
    /**
     * Props defined on the component (+ common material-ui props).
     */
    export type BaseProps<M extends OverridableTypeMap> = M['props'] & CommonProps;
    /**
     * Props that are valid for material-ui components.
     */
    export interface CommonProps extends StyledComponentProps<never> {
        className?: string;
        style?: React.CSSProperties;
    }
    export interface OverridableTypeMap {
        props: {};
        defaultComponent: React.ElementType;
    }
}
declare module "@mui/material/Paper/paperClasses" {
    export interface PaperClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `square={true}`. */
        rounded: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="elevation"`. */
        elevation: string;
        elevation0: string;
        elevation1: string;
        elevation2: string;
        elevation3: string;
        elevation4: string;
        elevation5: string;
        elevation6: string;
        elevation7: string;
        elevation8: string;
        elevation9: string;
        elevation10: string;
        elevation11: string;
        elevation12: string;
        elevation13: string;
        elevation14: string;
        elevation15: string;
        elevation16: string;
        elevation17: string;
        elevation18: string;
        elevation19: string;
        elevation20: string;
        elevation21: string;
        elevation22: string;
        elevation23: string;
        elevation24: string;
    }
    export type PaperClassKey = keyof PaperClasses;
    export function getPaperUtilityClass(slot: string): string;
    const paperClasses: PaperClasses;
    export default paperClasses;
}
declare module "@mui/material/Paper/Paper" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverrideProps, OverridableComponent } from "@mui/material/OverridableComponent";
    import { PaperClasses } from "@mui/material/Paper/paperClasses";
    export interface PaperPropsVariantOverrides {
    }
    export interface PaperTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<PaperClasses>;
            /**
             * Shadow depth, corresponds to `dp` in the spec.
             * It accepts values between 0 and 24 inclusive.
             * @default 1
             */
            elevation?: number;
            /**
             * If `true`, rounded corners are disabled.
             * @default false
             */
            square?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * @default 'elevation'
             */
            variant?: OverridableStringUnion<'elevation' | 'outlined', PaperPropsVariantOverrides>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     * - [Paper](https://mui.com/components/paper/)
     *
     * API:
     *
     * - [Paper API](https://mui.com/api/paper/)
     */
    const Paper: OverridableComponent<PaperTypeMap>;
    export type PaperProps<D extends React.ElementType = PaperTypeMap['defaultComponent'], P = {}> = OverrideProps<PaperTypeMap<P, D>, D>;
    export default Paper;
}
declare module "@mui/material/Paper/index" {
    export { default } from "@mui/material/Paper/Paper";
    export * from "@mui/material/Paper/Paper";
    export { default as paperClasses } from "@mui/material/Paper/paperClasses";
    export * from "@mui/material/Paper/paperClasses";
}
declare module "@mui/material/Alert/alertClasses" {
    export interface AlertClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="filled"`. */
        filled: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="standard"`. */
        standard: string;
        /** Styles applied to the root element if `variant="standard"` and `color="success"`. */
        standardSuccess: string;
        /** Styles applied to the root element if `variant="standard"` and `color="info"`. */
        standardInfo: string;
        /** Styles applied to the root element if `variant="standard"` and `color="warning"`. */
        standardWarning: string;
        /** Styles applied to the root element if `variant="standard"` and `color="error"`. */
        standardError: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="success"`. */
        outlinedSuccess: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="info"`. */
        outlinedInfo: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="warning"`. */
        outlinedWarning: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="error"`. */
        outlinedError: string;
        /** Styles applied to the root element if `variant="filled"` and `color="success"`. */
        filledSuccess: string;
        /** Styles applied to the root element if `variant="filled"` and `color="info"`. */
        filledInfo: string;
        /** Styles applied to the root element if `variant="filled"` and `color="warning"`. */
        filledWarning: string;
        /** Styles applied to the root element if `variant="filled"` and `color="error"`. */
        filledError: string;
        /** Styles applied to the icon wrapper element. */
        icon: string;
        /** Styles applied to the message wrapper element. */
        message: string;
        /** Styles applied to the action wrapper element if `action` is provided. */
        action: string;
    }
    export type AlertClassKey = keyof AlertClasses;
    export function getAlertUtilityClass(slot: string): string;
    const alertClasses: AlertClasses;
    export default alertClasses;
}
declare module "@mui/material/Alert/Alert" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { AlertClasses } from "@mui/material/Alert/alertClasses";
    export type AlertColor = 'success' | 'info' | 'warning' | 'error';
    export interface AlertPropsVariantOverrides {
    }
    export interface AlertPropsColorOverrides {
    }
    export interface AlertProps extends StandardProps<PaperProps, 'variant'> {
        /**
         * The action to display. It renders after the message, at the end of the alert.
         */
        action?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AlertClasses>;
        /**
         * Override the default label for the *close popup* icon button.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @default 'Close'
         */
        closeText?: string;
        /**
         * The main color for the alert. Unless provided, the value is taken from the `severity` prop.
         */
        color?: OverridableStringUnion<AlertColor, AlertPropsColorOverrides>;
        /**
         * The severity of the alert. This defines the color and icon used.
         * @default 'success'
         */
        severity?: AlertColor;
        /**
         * Override the icon displayed before the children.
         * Unless provided, the icon is mapped to the value of the `severity` prop.
         * Set to `false` to remove the `icon`.
         */
        icon?: React.ReactNode;
        /**
         * The ARIA role attribute of the element.
         * @default 'alert'
         */
        role?: string;
        /**
         * The component maps the `severity` prop to a range of different icons,
         * for instance success to `<SuccessOutlined>`.
         * If you wish to change this mapping, you can provide your own.
         * Alternatively, you can use the `icon` prop to override the icon displayed.
         */
        iconMapping?: Partial<Record<AlertColor, React.ReactNode>>;
        /**
         * Callback fired when the component requests to be closed.
         * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
         * @param {React.SyntheticEvent} event The event source of the callback.
         */
        onClose?: (event: React.SyntheticEvent) => void;
        /**
         * The variant to use.
         * @default 'standard'
         */
        variant?: OverridableStringUnion<'standard' | 'filled' | 'outlined', AlertPropsVariantOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Alert](https://mui.com/components/alert/)
     *
     * API:
     *
     * - [Alert API](https://mui.com/api/alert/)
     * - inherits [Paper API](https://mui.com/api/paper/)
     */
    export type Alert = (props: AlertProps) => JSX.Element;
    export default Alert;
}
declare module "@mui/material/Alert/index" {
    export { default } from "@mui/material/Alert/Alert";
    export * from "@mui/material/Alert/Alert";
    export { default as alertClasses } from "@mui/material/Alert/alertClasses";
    export * from "@mui/material/Alert/alertClasses";
}
declare module "@mui/material/AlertTitle/alertTitleClasses" {
    export interface AlertTitleClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type AlertTitleClassKey = keyof AlertTitleClasses;
    export function getAlertTitleUtilityClass(slot: string): string;
    const alertTitleClasses: AlertTitleClasses;
    export default alertTitleClasses;
}
declare module "@mui/material/AlertTitle/AlertTitle" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { AlertTitleClasses } from "@mui/material/AlertTitle/alertTitleClasses";
    export interface AlertTitleProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AlertTitleClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Alert](https://mui.com/components/alert/)
     *
     * API:
     *
     * - [AlertTitle API](https://mui.com/api/alert-title/)
     */
    export type AlertTitle = (props: AlertTitleProps) => JSX.Element;
    export default AlertTitle;
}
declare module "@mui/material/AlertTitle/index" {
    export { default } from "@mui/material/AlertTitle/AlertTitle";
    export * from "@mui/material/AlertTitle/AlertTitle";
    export { default as alertTitleClasses } from "@mui/material/AlertTitle/alertTitleClasses";
    export * from "@mui/material/AlertTitle/alertTitleClasses";
}
declare module "@mui/material/AppBar/appBarClasses" {
    export interface AppBarClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `position="fixed"`. */
        positionFixed: string;
        /** Styles applied to the root element if `position="absolute"`. */
        positionAbsolute: string;
        /** Styles applied to the root element if `position="sticky"`. */
        positionSticky: string;
        /** Styles applied to the root element if `position="static"`. */
        positionStatic: string;
        /** Styles applied to the root element if `position="relative"`. */
        positionRelative: string;
        /** Styles applied to the root element if `color="default"`. */
        colorDefault: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
        /** Styles applied to the root element if `color="inherit"`. */
        colorInherit: string;
        /** Styles applied to the root element if `color="transparent"`. */
        colorTransparent: string;
    }
    export type AppBarClassKey = keyof AppBarClasses;
    export function getAppBarUtilityClass(slot: string): string;
    const appBarClasses: AppBarClasses;
    export default appBarClasses;
}
declare module "@mui/material/AppBar/AppBar" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { DistributiveOmit, OverridableStringUnion } from "@mui/types/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { PropTypes, Theme } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { AppBarClasses } from "@mui/material/AppBar/appBarClasses";
    export interface AppBarPropsColorOverrides {
    }
    export interface AppBarTypeMap<P = {}, D extends React.ElementType = 'header'> {
        props: P & DistributiveOmit<PaperProps, 'position' | 'color' | 'classes'> & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<AppBarClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'primary'
             */
            color?: OverridableStringUnion<PropTypes.Color | 'transparent', AppBarPropsColorOverrides>;
            /**
             * If true, the `color` prop is applied in dark mode.
             * @default false
             */
            enableColorOnDark?: boolean;
            /**
             * The positioning type. The behavior of the different options is described
             * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
             * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
             * @default 'fixed'
             */
            position?: 'fixed' | 'absolute' | 'sticky' | 'static' | 'relative';
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [App Bar](https://mui.com/components/app-bar/)
     *
     * API:
     *
     * - [AppBar API](https://mui.com/api/app-bar/)
     * - inherits [Paper API](https://mui.com/api/paper/)
     */
    const AppBar: OverridableComponent<AppBarTypeMap>;
    export type AppBarProps<D extends React.ElementType = AppBarTypeMap['defaultComponent'], P = {}> = OverrideProps<AppBarTypeMap<P, D>, D>;
    export default AppBar;
}
declare module "@mui/material/AppBar/index" {
    export { default } from "@mui/material/AppBar/AppBar";
    export * from "@mui/material/AppBar/AppBar";
    export { default as appBarClasses } from "@mui/material/AppBar/appBarClasses";
    export * from "@mui/material/AppBar/appBarClasses";
}
declare module "@mui/material/Chip/chipClasses" {
    export interface ChipClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `onClick` is defined or `clickable={true}`. */
        clickable: string;
        /** Styles applied to the root element if `onClick` and `color="primary"` is defined or `clickable={true}`. */
        clickableColorPrimary: string;
        /** Styles applied to the root element if `onClick` and `color="secondary"` is defined or `clickable={true}`. */
        clickableColorSecondary: string;
        /** Styles applied to the root element if `onDelete` is defined. */
        deletable: string;
        /** Styles applied to the root element if `onDelete` and `color="primary"` is defined. */
        deletableColorPrimary: string;
        /** Styles applied to the root element if `onDelete` and `color="secondary"` is defined. */
        deletableColorSecondary: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="filled"`. */
        filled: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="primary"`. */
        outlinedPrimary: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */
        outlinedSecondary: string;
        /** Styles applied to the avatar element. */
        avatar: string;
        /** Styles applied to the avatar element if `size="small"`. */
        avatarSmall: string;
        /** Styles applied to the avatar element if `size="medium"`. */
        avatarMedium: string;
        /** Styles applied to the avatar element if `color="primary"`. */
        avatarColorPrimary: string;
        /** Styles applied to the avatar element if `color="secondary"`. */
        avatarColorSecondary: string;
        /** Styles applied to the icon element. */
        icon: string;
        /** Styles applied to the icon element if `size="small"`. */
        iconSmall: string;
        /** Styles applied to the icon element if `size="medium"`. */
        iconMedium: string;
        /** Styles applied to the icon element if `color="primary"`. */
        iconColorPrimary: string;
        /** Styles applied to the icon element if `color="secondary"`. */
        iconColorSecondary: string;
        /** Styles applied to the label `span` element. */
        label: string;
        /** Styles applied to the label `span` element if `size="small"`. */
        labelSmall: string;
        /** Styles applied to the label `span` element if `size="medium"`. */
        labelMedium: string;
        /** Styles applied to the deleteIcon element. */
        deleteIcon: string;
        /** Styles applied to the deleteIcon element if `size="small"`. */
        deleteIconSmall: string;
        /** Styles applied to the deleteIcon element if `size="medium"`. */
        deleteIconMedium: string;
        /** Styles applied to the deleteIcon element if `color="primary"` and `variant="filled"`. */
        deleteIconColorPrimary: string;
        /** Styles applied to the deleteIcon element if `color="secondary"` and `variant="filled"`. */
        deleteIconColorSecondary: string;
        /** Styles applied to the deleteIcon element if `color="primary"` and `variant="outlined"`. */
        deleteIconOutlinedColorPrimary: string;
        /** Styles applied to the deleteIcon element if `color="secondary"` and `variant="outlined"`. */
        deleteIconOutlinedColorSecondary: string;
        /** State class applied to the root element if keyboard focused. */
        focusVisible: string;
    }
    export type ChipClassKey = keyof ChipClasses;
    export function getChipUtilityClass(slot: string): string;
    const chipClasses: ChipClasses;
    export default chipClasses;
}
declare module "@mui/material/Chip/Chip" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ChipClasses } from "@mui/material/Chip/chipClasses";
    export interface ChipPropsVariantOverrides {
    }
    export interface ChipPropsSizeOverrides {
    }
    export interface ChipPropsColorOverrides {
    }
    export interface ChipTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The Avatar element to display.
             */
            avatar?: React.ReactElement;
            /**
             * This prop isn't supported.
             * Use the `component` prop if you need to change the children structure.
             */
            children?: null;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ChipClasses>;
            /**
             * If `true`, the chip will appear clickable, and will raise when pressed,
             * even if the onClick prop is not defined.
             * If `false`, the chip will not appear clickable, even if onClick prop is defined.
             * This can be used, for example,
             * along with the component prop to indicate an anchor Chip is clickable.
             * Note: this controls the UI and does not affect the onClick event.
             */
            clickable?: boolean;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'default'
             */
            color?: OverridableStringUnion<'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', ChipPropsColorOverrides>;
            /**
             * Override the default delete icon element. Shown only if `onDelete` is set.
             */
            deleteIcon?: React.ReactElement;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * Icon element.
             */
            icon?: React.ReactElement;
            /**
             * The content of the component.
             */
            label?: React.ReactNode;
            /**
             * Callback fired when the delete icon is clicked.
             * If set, the delete icon will be shown.
             */
            onDelete?: React.EventHandler<any>;
            /**
             * The size of the component.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium', ChipPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * @default 'filled'
             */
            variant?: OverridableStringUnion<'filled' | 'outlined', ChipPropsVariantOverrides>;
        };
        defaultComponent: D;
    }
    /**
     * Chips represent complex entities in small blocks, such as a contact.
     *
     * Demos:
     *
     * - [Chips](https://mui.com/components/chips/)
     *
     * API:
     *
     * - [Chip API](https://mui.com/api/chip/)
     */
    const Chip: OverridableComponent<ChipTypeMap>;
    export type ChipProps<D extends React.ElementType = ChipTypeMap['defaultComponent'], P = {}> = OverrideProps<ChipTypeMap<P, D>, D>;
    export default Chip;
}
declare module "@mui/material/Chip/index" {
    export { default } from "@mui/material/Chip/Chip";
    export * from "@mui/material/Chip/Chip";
    export { default as chipClasses } from "@mui/material/Chip/chipClasses";
    export * from "@mui/material/Chip/chipClasses";
}
declare module "@mui/material/Popper/Popper" {
    import * as React from 'react';
    export type PopperProps = Omit<any, 'direction'>;
    /**
     *
     * Demos:
     *
     * - [Autocomplete](https://mui.com/components/autocomplete/)
     * - [Menus](https://mui.com/components/menus/)
     * - [Popper](https://mui.com/components/popper/)
     *
     * API:
     *
     * - [Popper API](https://mui.com/api/popper/)
     */
    const Popper: React.ForwardRefExoticComponent<Pick<PopperProps, "hidden" | "color" | "style" | "open" | "translate" | "transition" | "slot" | "title" | "children" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "container" | "disablePortal" | "keepMounted" | "placement" | "anchorEl" | "modifiers" | "popperOptions" | "popperRef"> & React.RefAttributes<HTMLDivElement>>;
    export default Popper;
}
declare module "@mui/material/Popper/index" {
    export { default } from "@mui/material/Popper/Popper";
    export * from "@mui/material/Popper/Popper";
}
declare module "@mui/core/AutocompleteUnstyled/useAutocomplete" {
    import * as React from 'react';
    export interface CreateFilterOptionsConfig<T> {
        ignoreAccents?: boolean;
        ignoreCase?: boolean;
        limit?: number;
        matchFrom?: 'any' | 'start';
        stringify?: (option: T) => string;
        trim?: boolean;
    }
    export interface FilterOptionsState<T> {
        inputValue: string;
        getOptionLabel: (option: T) => string;
    }
    export interface AutocompleteGroupedOption<T = string> {
        key: number;
        index: number;
        group: string;
        options: T[];
    }
    export function createFilterOptions<T>(config?: CreateFilterOptionsConfig<T>): (options: T[], state: FilterOptionsState<T>) => T[];
    export type AutocompleteFreeSoloValueMapping<FreeSolo> = FreeSolo extends true ? string : never;
    export type AutocompleteValue<T, Multiple, DisableClearable, FreeSolo> = Multiple extends undefined | false ? DisableClearable extends true ? NonNullable<T | AutocompleteFreeSoloValueMapping<FreeSolo>> : T | null | AutocompleteFreeSoloValueMapping<FreeSolo> : Array<T | AutocompleteFreeSoloValueMapping<FreeSolo>>;
    export interface UseAutocompleteProps<T, Multiple extends boolean | undefined, DisableClearable extends boolean | undefined, FreeSolo extends boolean | undefined> {
        /**
         * If `true`, the portion of the selected suggestion that has not been typed by the user,
         * known as the completion string, appears inline after the input cursor in the textbox.
         * The inline completion string is visually highlighted and has a selected state.
         * @default false
         */
        autoComplete?: boolean;
        /**
         * If `true`, the first option is automatically highlighted.
         * @default false
         */
        autoHighlight?: boolean;
        /**
         * If `true`, the selected option becomes the value of the input
         * when the Autocomplete loses focus unless the user chooses
         * a different option or changes the character string in the input.
         * @default false
         */
        autoSelect?: boolean;
        /**
         * Control if the input should be blurred when an option is selected:
         *
         * - `false` the input is not blurred.
         * - `true` the input is always blurred.
         * - `touch` the input is blurred after a touch event.
         * - `mouse` the input is blurred after a mouse event.
         * @default false
         */
        blurOnSelect?: 'touch' | 'mouse' | true | false;
        /**
         * If `true`, the input's text is cleared on blur if no value is selected.
         *
         * Set to `true` if you want to help the user enter a new value.
         * Set to `false` if you want to help the user resume his search.
         * @default !props.freeSolo
         */
        clearOnBlur?: boolean;
        /**
         * If `true`, clear all values when the user presses escape and the popup is closed.
         * @default false
         */
        clearOnEscape?: boolean;
        /**
         * The component name that is using this hook. Used for warnings.
         */
        componentName?: string;
        /**
         * If `true`, the input can't be cleared.
         * @default false
         */
        disableClearable?: DisableClearable;
        /**
         * If `true`, the popup won't close when a value is selected.
         * @default false
         */
        disableCloseOnSelect?: boolean;
        /**
         * If `true`, will allow focus on disabled items.
         * @default false
         */
        disabledItemsFocusable?: boolean;
        /**
         * If `true`, the list box in the popup will not wrap focus.
         * @default false
         */
        disableListWrap?: boolean;
        /**
         * A filter function that determines the options that are eligible.
         *
         * @param {T[]} options The options to render.
         * @param {object} state The state of the component.
         * @returns {T[]}
         */
        filterOptions?: (options: T[], state: FilterOptionsState<T>) => T[];
        /**
         * If `true`, hide the selected options from the list box.
         * @default false
         */
        filterSelectedOptions?: boolean;
        /**
         * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
         * @default false
         */
        freeSolo?: FreeSolo;
        /**
         * Used to determine the disabled state for a given option.
         *
         * @param {T} option The option to test.
         * @returns {boolean}
         */
        getOptionDisabled?: (option: T) => boolean;
        /**
         * Used to determine the string value for a given option.
         * It's used to fill the input (and the list box options if `renderOption` is not provided).
         *
         * @param {T} option
         * @returns {string}
         * @default (option) => option.label ?? option
         */
        getOptionLabel?: (option: T) => string;
        /**
         * Used to determine if the option represents the given value.
         * Uses strict equality by default.
         * ⚠️ Both arguments need to be handled, an option can only match with one value.
         *
         * @param {T} option The option to test.
         * @param {T} value The value to test against.
         * @returns {boolean}
         */
        isOptionEqualToValue?: (option: T, value: T) => boolean;
        /**
         * If provided, the options will be grouped under the returned string.
         * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
         *
         * @param {T} options The options to group.
         * @returns {string}
         */
        groupBy?: (option: T) => string;
        /**
         * If `true`, the component handles the "Home" and "End" keys when the popup is open.
         * It should move focus to the first option and last option, respectively.
         * @default !props.freeSolo
         */
        handleHomeEndKeys?: boolean;
        /**
         * This prop is used to help implement the accessibility logic.
         * If you don't provide an id it will fall back to a randomly generated one.
         */
        id?: string;
        /**
         * If `true`, the highlight can move to the input.
         * @default false
         */
        includeInputInList?: boolean;
        /**
         * The input value.
         */
        inputValue?: string;
        /**
         * Callback fired when the popup requests to be closed.
         * Use in controlled mode (see open).
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
         */
        onClose?: (event: React.SyntheticEvent, reason: AutocompleteCloseReason) => void;
        /**
         * Callback fired when the input value changes.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {string} value The new value of the text input.
         * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.
         */
        onInputChange?: (event: React.SyntheticEvent, value: string, reason: AutocompleteInputChangeReason) => void;
        /**
         * Callback fired when the popup requests to be opened.
         * Use in controlled mode (see open).
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         */
        onOpen?: (event: React.SyntheticEvent) => void;
        /**
         * Callback fired when the highlight option changes.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {T} option The highlighted option.
         * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`.
         */
        onHighlightChange?: (event: React.SyntheticEvent, option: T | null, reason: AutocompleteHighlightChangeReason) => void;
        /**
         * If `true`, the component is shown.
         */
        open?: boolean;
        /**
         * If `true`, the popup will open on input focus.
         * @default false
         */
        openOnFocus?: boolean;
        /**
         * Array of options.
         */
        options: ReadonlyArray<T>;
        /**
         * If `true`, the input's text is selected on focus.
         * It helps the user clear the selected value.
         * @default !props.freeSolo
         */
        selectOnFocus?: boolean;
        /**
         * If `true`, `value` must be an array and the menu will support multiple selections.
         * @default false
         */
        multiple?: Multiple;
        /**
         * The value of the autocomplete.
         *
         * The value must have reference equality with the option in order to be selected.
         * You can customize the equality behavior with the `isOptionEqualToValue` prop.
         */
        value?: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>;
        /**
         * The default value. Use when the component is not controlled.
         * @default props.multiple ? [] : null
         */
        defaultValue?: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>;
        /**
         * Callback fired when the value changes.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {T|T[]} value The new value of the component.
         * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
         * @param {string} [details]
         */
        onChange?: (event: React.SyntheticEvent, value: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<T>) => void;
    }
    export type AutocompleteHighlightChangeReason = 'keyboard' | 'mouse' | 'auto';
    export type AutocompleteChangeReason = 'createOption' | 'selectOption' | 'removeOption' | 'clear' | 'blur';
    export interface AutocompleteChangeDetails<T = string> {
        option: T;
    }
    export type AutocompleteCloseReason = 'createOption' | 'toggleInput' | 'escape' | 'selectOption' | 'removeOption' | 'blur';
    export type AutocompleteInputChangeReason = 'input' | 'reset' | 'clear';
    export type AutocompleteGetTagProps = ({ index }: {
        index: number;
    }) => {
        key: number;
        'data-tag-index': number;
        tabIndex: -1;
        onDelete: (event: any) => void;
    };
    export type useAutocomplete = <T, Multiple extends boolean | undefined = undefined, DisableClearable extends boolean | undefined = undefined, FreeSolo extends boolean | undefined = undefined>(props: UseAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) => {
        getRootProps: () => React.HTMLAttributes<HTMLDivElement>;
        getInputProps: () => React.HTMLAttributes<HTMLInputElement>;
        getInputLabelProps: () => Omit<React.HTMLAttributes<HTMLLabelElement>, 'color'>;
        getClearProps: () => React.HTMLAttributes<HTMLDivElement>;
        getPopupIndicatorProps: () => React.HTMLAttributes<HTMLDivElement>;
        getTagProps: AutocompleteGetTagProps;
        getListboxProps: () => React.HTMLAttributes<HTMLUListElement>;
        getOptionProps: ({ option, index, }: {
            option: T;
            index: number;
        }) => React.HTMLAttributes<HTMLLIElement>;
        id: string;
        inputValue: string;
        value: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>;
        dirty: boolean;
        popupOpen: boolean;
        focused: boolean;
        anchorEl: null | HTMLElement;
        setAnchorEl: () => void;
        focusedTag: number;
        /**
         * The options to render. It's either `T[]` or `AutocompleteGroupedOption<T>[]` if the groupBy prop is provided.
         */
        groupedOptions: T[] | Array<AutocompleteGroupedOption<T>>;
    };
    export default useAutocomplete;
}
declare module "@mui/core/AutocompleteUnstyled/index" {
    export { default as useAutocomplete } from "@mui/core/AutocompleteUnstyled/useAutocomplete";
    export * from "@mui/core/AutocompleteUnstyled/useAutocomplete";
}
declare module "@mui/core/BackdropUnstyled/backdropUnstyledClasses" {
    export interface BackdropUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `invisible={true}`. */
        invisible: string;
    }
    export type BackdropUnstyledClassKey = keyof BackdropUnstyledClasses;
    export function getBackdropUtilityClass(slot: string): string;
    const backdropUnstyledClasses: BackdropUnstyledClasses;
    export default backdropUnstyledClasses;
}
declare module "@mui/core/BackdropUnstyled/BackdropUnstyled" {
    import * as React from 'react';
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { BackdropUnstyledClasses } from "@mui/core/BackdropUnstyled/backdropUnstyledClasses";
    export interface BackdropUnstyledComponentsPropsOverrides {
    }
    export interface BackdropUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * The components used for each slot inside the Backdrop.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Backdrop.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLDivElement> & BackdropUnstyledComponentsPropsOverrides;
            };
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BackdropUnstyledClasses>;
            /**
             * If `true`, the backdrop is invisible.
             * It can be used when rendering a popover or a custom select component.
             * @default false
             */
            invisible?: boolean;
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from BackdropUnstyled.
     */
    export interface ExtendBackdropUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & BackdropUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendBackdropUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendBackdropUnstyledTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Backdrop](https://mui.com/components/backdrop/)
     *
     * API:
     *
     * - [BackdropUnstyled API](https://mui.com/api/backdrop-unstyled/)
     */
    const BackdropUnstyled: OverridableComponent<BackdropUnstyledTypeMap>;
    export type BackdropUnstyledProps<D extends React.ElementType = BackdropUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<BackdropUnstyledTypeMap<P, D>, D>;
    export default BackdropUnstyled;
}
declare module "@mui/core/BackdropUnstyled/index" {
    export { default } from "@mui/core/BackdropUnstyled/BackdropUnstyled";
    export * from "@mui/core/BackdropUnstyled/BackdropUnstyled";
    export { default as backdropUnstyledClasses } from "@mui/core/BackdropUnstyled/backdropUnstyledClasses";
    export * from "@mui/core/BackdropUnstyled/backdropUnstyledClasses";
}
declare module "@mui/core/BadgeUnstyled/badgeUnstyledClasses" {
    export interface BadgeUnstyledClasses {
        /** Class name applied to the root element. */
        root: string;
        /** Class name applied to the badge `span` element. */
        badge: string;
        /** Class name applied to the badge `span` element if `variant="dot"`. */
        dot: string;
        /** Class name applied to the badge `span` element if `variant="standard"`. */
        standard: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'right' }} overlap="rectangular"`. */
        anchorOriginTopRightRectangular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'right' }} overlap="rectangular"`. */
        anchorOriginBottomRightRectangular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'left' }} overlap="rectangular"`. */
        anchorOriginTopLeftRectangular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'left' }} overlap="rectangular"`. */
        anchorOriginBottomLeftRectangular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'right' }} overlap="circular"`. */
        anchorOriginTopRightCircular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'right' }} overlap="circular"`. */
        anchorOriginBottomRightCircular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'left' }} overlap="circular"`. */
        anchorOriginTopLeftCircular: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'left' }} overlap="circular"`. */
        anchorOriginBottomLeftCircular: string;
        /** State class applied to the badge `span` element if `invisible={true}`. */
        invisible: string;
    }
    export type BadgeUnstyledClassKey = keyof BadgeUnstyledClasses;
    export function getBadgeUtilityClass(slot: string): string;
    const badgeUnstyledClasses: BadgeUnstyledClasses;
    export default badgeUnstyledClasses;
}
declare module "@mui/core/BadgeUnstyled/BadgeUnstyled" {
    import * as React from 'react';
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { BadgeUnstyledClasses } from "@mui/core/BadgeUnstyled/badgeUnstyledClasses";
    export interface BadgeOrigin {
        vertical: 'top' | 'bottom';
        horizontal: 'left' | 'right';
    }
    export interface BadgeUnstyledComponentsPropsOverrides {
    }
    export interface BadgeUnstyledTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & {
            /**
             * The anchor of the badge.
             * @default {
             *   vertical: 'top',
             *   horizontal: 'right',
             * }
             */
            anchorOrigin?: BadgeOrigin;
            /**
             * The components used for each slot inside the Badge.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
                Badge?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Badge.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLSpanElement> & BadgeUnstyledComponentsPropsOverrides;
                badge?: React.HTMLAttributes<HTMLSpanElement> & BadgeUnstyledComponentsPropsOverrides;
            };
            /**
             * Wrapped shape the badge should overlap.
             * @default 'rectangular'
             */
            overlap?: 'rectangular' | 'circular';
            /**
             * The content rendered within the badge.
             */
            badgeContent?: React.ReactNode;
            /**
             * The badge will be added relative to this node.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BadgeUnstyledClasses>;
            /**
             * If `true`, the badge is invisible.
             */
            invisible?: boolean;
            /**
             * Max count to show.
             * @default 99
             */
            max?: number;
            /**
             * Controls whether the badge is hidden when `badgeContent` is zero.
             * @default false
             */
            showZero?: boolean;
            /**
             * The variant to use.
             * @default 'standard'
             */
            variant?: string;
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from BadgeUnstyled.
     */
    export interface ExtendBadgeUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & BadgeUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendBadgeUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendBadgeUnstyledTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Badges](https://mui.com/components/badges/)
     *
     * API:
     *
     * - [BadgeUnstyled API](https://mui.com/api/badge-unstyled/)
     */
    const BadgeUnstyled: OverridableComponent<BadgeUnstyledTypeMap>;
    export type BadgeUnstyledProps<D extends React.ElementType = BadgeUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<BadgeUnstyledTypeMap<P, D>, D>;
    export default BadgeUnstyled;
}
declare module "@mui/core/BadgeUnstyled/index" {
    export { default } from "@mui/core/BadgeUnstyled/BadgeUnstyled";
    export * from "@mui/core/BadgeUnstyled/BadgeUnstyled";
    export { default as badgeUnstyledClasses } from "@mui/core/BadgeUnstyled/badgeUnstyledClasses";
    export * from "@mui/core/BadgeUnstyled/badgeUnstyledClasses";
}
declare module "@mui/core/ButtonUnstyled/UseButtonProps" {
    import * as React from 'react';
    export default interface UseButtonProps {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         * @default 'button'
         */
        component?: React.ElementType;
        /**
         * The components used for each slot inside the Button.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        href?: string;
        onClick?: React.MouseEventHandler;
        onFocusVisible?: React.FocusEventHandler;
        ref: React.Ref<any>;
        tabIndex?: NonNullable<React.HTMLAttributes<any>['tabIndex']>;
        to?: string;
        /**
         * Type attribute applied when the `component` is `button`.
         * @default 'button'
         */
        type?: React.ButtonHTMLAttributes<HTMLButtonElement>['type'];
    }
}
declare module "@mui/core/ButtonUnstyled/ButtonUnstyledProps" {
    import { OverrideProps } from "@mui/types/index";
    import React from 'react';
    import UseButtonProps from "@mui/core/ButtonUnstyled/UseButtonProps";
    export interface ButtonUnstyledActions {
        focusVisible(): void;
    }
    export interface ButtonUnstyledComponentsPropsOverrides {
    }
    export interface ButtonUnstyledOwnProps extends Omit<UseButtonProps, 'ref'> {
        /**
         * A ref for imperative actions. It currently only supports `focusVisible()` action.
         */
        action?: React.Ref<ButtonUnstyledActions>;
        children?: React.ReactNode;
        className?: string;
        componentsProps?: {
            root?: React.ButtonHTMLAttributes<HTMLButtonElement> & ButtonUnstyledComponentsPropsOverrides;
        };
    }
    type ButtonUnstyledProps<D extends React.ElementType = ButtonUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<ButtonUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export interface ButtonUnstyledTypeMap<P = {}, D extends React.ElementType = 'button'> {
        props: P & ButtonUnstyledOwnProps;
        defaultComponent: D;
    }
    export default ButtonUnstyledProps;
}
declare module "@mui/core/ButtonUnstyled/ButtonUnstyled" {
    import * as React from 'react';
    import { ButtonUnstyledOwnProps } from "@mui/core/ButtonUnstyled/ButtonUnstyledProps";
    export interface ButtonUnstyledOwnerState extends ButtonUnstyledOwnProps {
        focusVisible: boolean;
        active: boolean;
    }
    /**
     * The foundation for building custom-styled buttons.
     *
     * Demos:
     *
     * - [Buttons](https://mui.com/components/buttons/)
     *
     * API:
     *
     * - [ButtonUnstyled API](https://mui.com/api/button-unstyled/)
     */
    const ButtonUnstyled: React.ForwardRefExoticComponent<Pick<ButtonUnstyledOwnProps & Omit<any, keyof ButtonUnstyledOwnProps> & {
        component?: React.ElementType<any> | undefined;
    }, string | number | symbol> & React.RefAttributes<any>>;
    export default ButtonUnstyled;
}
declare module "@mui/core/ButtonUnstyled/buttonUnstyledClasses" {
    export interface ButtonUnstyledClasses {
        root: string;
        active: string;
        disabled: string;
        focusVisible: string;
    }
    export type ButtonUnstyledClassKey = keyof ButtonUnstyledClasses;
    export function getButtonUnstyledUtilityClass(slot: string): string;
    const buttonUnstyledClasses: ButtonUnstyledClasses;
    export default buttonUnstyledClasses;
}
declare module "@mui/core/ButtonUnstyled/useButton" {
    import * as React from 'react';
    import UseButtonProps from "@mui/core/ButtonUnstyled/UseButtonProps";
    export type useButton = (props: UseButtonProps) => {
        getRootProps: (otherHandlers?: Record<string, (event: any) => void> | undefined) => {
            tabIndex: number;
            type: "button" | "reset" | "submit" | undefined;
            ref: (instance: HTMLElement | null) => void;
        };
        focusVisible: boolean;
        setFocusVisible: React.Dispatch<React.SetStateAction<boolean>>;
        disabled: boolean;
        active: boolean;
    };
    export default useButton;
}
declare module "@mui/core/ButtonUnstyled/index" {
    export { default } from "@mui/core/ButtonUnstyled/ButtonUnstyled";
    export { default as buttonUnstyledClasses, getButtonUnstyledUtilityClass, } from "@mui/core/ButtonUnstyled/buttonUnstyledClasses";
    export type { default as ButtonUnstyledProps } from "@mui/core/ButtonUnstyled/ButtonUnstyledProps";
    export * from "@mui/core/ButtonUnstyled/ButtonUnstyledProps";
    export { default as useButton } from "@mui/core/ButtonUnstyled/useButton";
    export type { default as UseButtonProps } from "@mui/core/ButtonUnstyled/UseButtonProps";
}
declare module "@mui/core/composeClasses/composeClasses" {
    export type composeClasses = <ClassKey extends string>(slots: Record<ClassKey, ReadonlyArray<string | false | undefined | null>>, getUtilityClass: (slot: string) => string, classes: Record<string, string> | undefined) => Record<ClassKey, string>;
    export default composeClasses;
}
declare module "@mui/core/composeClasses/index" {
    export { default } from "@mui/core/composeClasses/composeClasses";
}
declare module "@mui/core/generateUtilityClass/generateUtilityClass" {
    export type generateUtilityClass = (componentName: string, slot: string) => string;
    export default generateUtilityClass;
}
declare module "@mui/core/generateUtilityClass/index" {
    export { default } from "@mui/core/generateUtilityClass/generateUtilityClass";
}
declare module "@mui/core/generateUtilityClass/ClassNameGenerator" {
    export interface ClassNameGenerator {
        configure(generator: (componentName: string) => string): void;
        generate(componentName: string): string;
        reset(): void;
    }
    export default ClassNameGenerator;
}
declare module "@mui/core/generateUtilityClasses/generateUtilityClasses" {
    export type generateUtilityClasses = <T extends string>(componentName: string, slots: T[]) => Record<T, string>;
    export default generateUtilityClasses;
}
declare module "@mui/core/generateUtilityClasses/index" {
    export { default } from "@mui/core/generateUtilityClasses/generateUtilityClasses";
}
declare module "@mui/core/FormControlUnstyled/FormControlUnstyledProps" {
    import { OverrideProps } from "@mui/types/index";
    import * as React from 'react';
    export type NativeFormControlElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;
    export interface FormControlUnstyledComponentsPropsOverrides {
    }
    export interface FormControlUnstyledOwnProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Class name applied to the root element.
         */
        className?: string;
        /**
         * The components used for each slot inside the FormControl.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        componentsProps?: {
            root?: React.HTMLAttributes<HTMLDivElement> & FormControlUnstyledComponentsPropsOverrides;
        };
        defaultValue?: unknown;
        /**
         * If `true`, the label, input and helper text should be displayed in a disabled state.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the label is displayed in an error state.
         * @default false
         */
        error?: boolean;
        /**
         * Extra properties to be placed on the FormControlContext.
         * @default {}
         */
        extraContextProperties?: object;
        /**
         * If `true`, the component is displayed in focused state.
         * @default false
         */
        focused?: boolean;
        onChange?: React.ChangeEventHandler<NativeFormControlElement>;
        /**
         * If `true`, the label will indicate that the `input` is required.
         * @default false
         */
        required?: boolean;
        value?: unknown;
    }
    export interface FormControlUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & FormControlUnstyledOwnProps;
        defaultComponent: D;
    }
    type FormControlUnstyledProps<D extends React.ElementType = FormControlUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<FormControlUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default FormControlUnstyledProps;
}
declare module "@mui/core/FormControlUnstyled/FormControlUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import FormControlUnstyledProps, { FormControlUnstyledOwnProps, FormControlUnstyledTypeMap } from "@mui/core/FormControlUnstyled/FormControlUnstyledProps";
    type NonOptionalOwnerState = 'disabled' | 'error' | 'focused' | 'required';
    export type FormControlUnstyledOwnerState = Omit<FormControlUnstyledOwnProps, NonOptionalOwnerState> & Required<Pick<FormControlUnstyledProps, NonOptionalOwnerState>> & {
        filled: boolean;
    };
    /**
     * Provides context such as filled/focused/error/required for form inputs.
     * Relying on the context provides high flexibility and ensures that the state always stays
     * consistent across the children of the `FormControl`.
     * This context is used by the following components:
     *
     * *   FormLabel
     * *   FormHelperText
     * *   Input
     * *   InputLabel
     *
     * You can find one composition example below and more going to [the demos](https://mui.com/components/text-fields/#components).
     *
     * ```jsx
     * <FormControl>
     *   <InputLabel htmlFor="my-input">Email address</InputLabel>
     *   <Input id="my-input" aria-describedby="my-helper-text" />
     *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
     * </FormControl>
     * ```
     *
     * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.
     * For instance, only one input can be focused at the same time, the state shouldn't be shared.
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [FormControlUnstyled API](https://mui.com/api/form-control-unstyled/)
     */
    const FormControlUnstyled: OverridableComponent<FormControlUnstyledTypeMap<{}, "div">>;
    export default FormControlUnstyled;
}
declare module "@mui/core/FormControlUnstyled/FormControlContext" {
    import * as React from 'react';
    import FormControlUnstyledProps from "@mui/core/FormControlUnstyled/FormControlUnstyledProps";
    type ContextFromPropsKey = 'disabled' | 'error' | 'onChange' | 'required' | 'value';
    export interface FormControlUnstyledState extends Pick<FormControlUnstyledProps, ContextFromPropsKey> {
        filled: boolean;
        focused: boolean;
        onBlur: () => void;
        onFocus: () => void;
        registerEffect: () => void;
    }
    /**
     * @ignore - internal component.
     */
    const FormControlUnstyledContext: React.Context<FormControlUnstyledState | undefined>;
    export default FormControlUnstyledContext;
}
declare module "@mui/core/FormControlUnstyled/formControlUnstyledClasses" {
    export interface FormControlUnstyledClasses {
        /** Class applied to the root element. */
        root: string;
        /** Class applied to the root element if `disabled={true}`. */
        disabled: string;
    }
    export type FormControlUnstyledClassKey = keyof FormControlUnstyledClasses;
    export function getFormControlUnstyledUtilityClasses(slot: string): string;
    const formControlUnstyledClasses: FormControlUnstyledClasses;
    export default formControlUnstyledClasses;
}
declare module "@mui/core/FormControlUnstyled/useFormControl" {
    export type useFormControlUnstyled = () => import("@mui/core/FormControlUnstyled/FormControlContext").FormControlUnstyledState | undefined;
    export default useFormControlUnstyled;
}
declare module "@mui/core/FormControlUnstyled/index" {
    export { default } from "@mui/core/FormControlUnstyled/FormControlUnstyled";
    export { default as FormControlUnstyledContext } from "@mui/core/FormControlUnstyled/FormControlContext";
    export type { default as FormControlUnstyledProps } from "@mui/core/FormControlUnstyled/FormControlUnstyledProps";
    export { default as formControlUnstyledClasses } from "@mui/core/FormControlUnstyled/formControlUnstyledClasses";
    export * from "@mui/core/FormControlUnstyled/formControlUnstyledClasses";
    export { default as useFormControlUnstyled } from "@mui/core/FormControlUnstyled/useFormControl";
}
declare module "@mui/core/InputUnstyled/InputUnstyledProps" {
    import React from 'react';
    import { OverrideProps } from "@mui/types/index";
    import { FormControlUnstyledState } from "@mui/core/FormControlUnstyled/FormControlContext";
    export interface InputOwnerState extends Omit<InputUnstyledProps, 'component' | 'components' | 'componentsProps'> {
        formControl: FormControlUnstyledState;
        focused: boolean;
    }
    export interface UseInputProps {
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: unknown;
        /**
         * If `true`, the component is disabled.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        disabled?: boolean;
        /**
         * If `true`, the `input` will indicate an error.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        error?: boolean;
        onBlur?: React.FocusEventHandler;
        onClick?: React.MouseEventHandler;
        onChange?: React.ChangeEventHandler<HTMLInputElement>;
        onFocus?: React.FocusEventHandler;
        /**
         * If `true`, the `input` element is required.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        required?: boolean;
        value?: unknown;
    }
    export interface InputUnstyledOwnProps extends UseInputProps {
        'aria-describedby'?: string;
        'aria-label'?: string;
        'aria-labelledby'?: string;
        /**
         * This prop helps users to fill forms faster, especially on mobile devices.
         * The name can be confusing, as it's more like an autofill.
         * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
         */
        autoComplete?: string;
        /**
         * If `true`, the `input` element is focused during the first mount.
         */
        autoFocus?: boolean;
        /**
         * Class name applied to the root element.
         */
        className?: string;
        /**
         * The components used for each slot inside the InputBase.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Input?: React.ElementType;
            Textarea?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & {
                ownerState: InputOwnerState;
            };
            input?: React.ComponentPropsWithRef<'input'> & {
                ownerState: InputOwnerState;
            };
        };
        /**
         * Trailing adornment for this input.
         */
        endAdornment?: React.ReactNode;
        /**
         * The id of the `input` element.
         */
        id?: string;
        /**
         * If `true`, a `textarea` element is rendered.
         * @default false
         */
        multiline?: boolean;
        /**
         * Name attribute of the `input` element.
         */
        name?: string;
        onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>;
        onKeyUp?: React.KeyboardEventHandler<HTMLInputElement>;
        /**
         * The short hint displayed in the `input` before the user enters a value.
         */
        placeholder?: string;
        /**
         * It prevents the user from changing the value of the field
         * (not from interacting with the field).
         */
        readOnly?: boolean;
        /**
         * Number of rows to display when multiline option is set to true.
         */
        rows?: number;
        /**
         * Leading adornment for this input.
         */
        startAdornment?: React.ReactNode;
        /**
         * Minimum number of rows to display when multiline option is set to true.
         */
        minRows?: number;
        /**
         * Maximum number of rows to display when multiline option is set to true.
         */
        maxRows?: number;
        /**
         * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
         * @default 'text'
         */
        type?: string;
        /**
         * The value of the `input` element, required for a controlled component.
         */
        value?: unknown;
    }
    export interface InputUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & InputUnstyledOwnProps;
        defaultComponent: D;
    }
    type InputUnstyledProps<D extends React.ElementType = InputUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<InputUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default InputUnstyledProps;
}
declare module "@mui/core/InputUnstyled/InputUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { InputUnstyledTypeMap } from "@mui/core/InputUnstyled/InputUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [InputUnstyled API](https://mui.com/api/input-unstyled/)
     */
    const InputUnstyled: OverridableComponent<InputUnstyledTypeMap<{}, "div">>;
    export default InputUnstyled;
}
declare module "@mui/core/InputUnstyled/useInput" {
    import * as React from 'react';
    import { UseInputProps } from "@mui/core/InputUnstyled/InputUnstyledProps";
    export type useInput = (props: UseInputProps, inputRef?: React.Ref<HTMLInputElement>) => {
        disabled: boolean;
        error: boolean;
        focused: boolean;
        formControlContext: import("@mui/core/FormControlUnstyled/FormControlContext").FormControlUnstyledState | undefined;
        getInputProps: (externalProps?: Record<string, unknown> | undefined) => {
            'aria-invalid': true | undefined;
            defaultValue: string | number | readonly string[] | undefined;
            ref: React.Ref<any>;
            value: string | number | readonly string[] | undefined;
            required: boolean;
            disabled: boolean;
        };
        getRootProps: (externalProps?: Record<string, unknown> | undefined) => {
            onClick: (event: React.MouseEvent<HTMLInputElement>) => void;
        };
        required: boolean;
        value: unknown;
    };
    export default useInput;
}
declare module "@mui/core/InputUnstyled/inputUnstyledClasses" {
    export interface InputUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the component is a descendant of `FormControl`. */
        formControl: string;
        /** Styles applied to the root element if `startAdornment` is provided. */
        adornedStart: string;
        /** Styles applied to the root element if `endAdornment` is provided. */
        adornedEnd: string;
        /** Styles applied to the root element if the component is focused. */
        focused: string;
        /** Styles applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** Styles applied to the root element if `multiline={true}`. */
        multiline: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if `multiline={true}`. */
        inputMultiline: string;
        /** Styles applied to the input element if `type="search"`. */
        inputTypeSearch: string;
    }
    export type InputUnstyledClassKey = keyof InputUnstyledClasses;
    export function getInputUnstyledUtilityClass(slot: string): string;
    const inputBaseClasses: InputUnstyledClasses;
    export default inputBaseClasses;
}
declare module "@mui/core/InputUnstyled/index" {
    export { default } from "@mui/core/InputUnstyled/InputUnstyled";
    export type { default as InputUnstyledProps } from "@mui/core/InputUnstyled/InputUnstyledProps";
    export * from "@mui/core/InputUnstyled/InputUnstyledProps";
    export { default as useInput } from "@mui/core/InputUnstyled/useInput";
    export { default as inputUnstyledClasses } from "@mui/core/InputUnstyled/inputUnstyledClasses";
    export * from "@mui/core/InputUnstyled/inputUnstyledClasses";
}
declare module "@mui/core/Portal/Portal" {
    import * as React from 'react';
    export interface PortalProps {
        /**
         * The children to render into the `container`.
         */
        children?: React.ReactNode;
        /**
         * An HTML element or function that returns one.
         * The `container` will have the portal children appended to it.
         *
         * By default, it uses the body of the top-level document object,
         * so it's simply `document.body` most of the time.
         */
        container?: Element | (() => Element | null) | null;
        /**
         * The `children` will be under the DOM hierarchy of the parent component.
         * @default false
         */
        disablePortal?: boolean;
    }
    /**
     * Portals provide a first-class way to render children into a DOM node
     * that exists outside the DOM hierarchy of the parent component.
     *
     * Demos:
     *
     * - [Portal](https://mui.com/components/portal/)
     *
     * API:
     *
     * - [Portal API](https://mui.com/api/portal/)
     */
    export type Portal = (props: PortalProps) => JSX.Element;
    export default Portal;
}
declare module "@mui/core/Portal/index" {
    export { default } from "@mui/core/Portal/Portal";
    export * from "@mui/core/Portal/Portal";
}
declare module "@mui/core/ModalUnstyled/modalUnstyledClasses" {
    export interface ModalUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the `Modal` has exited. */
        hidden: string;
    }
    export type ModalUnstyledClassKey = keyof ModalUnstyledClasses;
    export function getModalUtilityClass(slot: string): string;
    const modalUnstyledClasses: ModalUnstyledClasses;
    export default modalUnstyledClasses;
}
declare module "@mui/core/ModalUnstyled/ModalUnstyled" {
    import * as React from 'react';
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { BackdropUnstyledProps } from "@mui/core/BackdropUnstyled/index";
    import { PortalProps } from "@mui/core/Portal/index";
    import { ModalUnstyledClasses } from "@mui/core/ModalUnstyled/modalUnstyledClasses";
    export interface ModalUnstyledComponentsPropsOverrides {
    }
    export interface ModalUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * A backdrop component. This prop enables custom backdrop rendering.
             */
            BackdropComponent?: React.ElementType;
            /**
             * Props applied to the [`BackdropUnstyled`](/api/backdrop-unstyled/) element.
             */
            BackdropProps?: Partial<BackdropUnstyledProps>;
            /**
             * A single child content element.
             */
            children: React.ReactElement;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ModalUnstyledClasses>;
            /**
             * When set to true the Modal waits until a nested Transition is completed before closing.
             * @default false
             */
            closeAfterTransition?: boolean;
            /**
             * The components used for each slot inside the Modal.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Modal.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLDivElement> & ModalUnstyledComponentsPropsOverrides;
            };
            /**
             * An HTML element or function that returns one.
             * The `container` will have the portal children appended to it.
             *
             * By default, it uses the body of the top-level document object,
             * so it's simply `document.body` most of the time.
             */
            container?: PortalProps['container'];
            /**
             * If `true`, the modal will not automatically shift focus to itself when it opens, and
             * replace it to the last focused element when it closes.
             * This also works correctly with any modal children that have the `disableAutoFocus` prop.
             *
             * Generally this should never be set to `true` as it makes the modal less
             * accessible to assistive technologies, like screen readers.
             * @default false
             */
            disableAutoFocus?: boolean;
            /**
             * If `true`, the modal will not prevent focus from leaving the modal while open.
             *
             * Generally this should never be set to `true` as it makes the modal less
             * accessible to assistive technologies, like screen readers.
             * @default false
             */
            disableEnforceFocus?: boolean;
            /**
             * If `true`, hitting escape will not fire the `onClose` callback.
             * @default false
             */
            disableEscapeKeyDown?: boolean;
            /**
             * The `children` will be under the DOM hierarchy of the parent component.
             * @default false
             */
            disablePortal?: PortalProps['disablePortal'];
            /**
             * If `true`, the modal will not restore focus to previously focused element once
             * modal is hidden.
             * @default false
             */
            disableRestoreFocus?: boolean;
            /**
             * Disable the scroll lock behavior.
             * @default false
             */
            disableScrollLock?: boolean;
            /**
             * If `true`, the backdrop is not rendered.
             * @default false
             */
            hideBackdrop?: boolean;
            /**
             * Always keep the children in the DOM.
             * This prop can be useful in SEO situation or
             * when you want to maximize the responsiveness of the Modal.
             * @default false
             */
            keepMounted?: boolean;
            /**
             * Callback fired when the backdrop is clicked.
             */
            onBackdropClick?: React.ReactEventHandler<{}>;
            /**
             * Callback fired when the component requests to be closed.
             * The `reason` parameter can optionally be used to control the response to `onClose`.
             *
             * @param {object} event The event source of the callback.
             * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
             */
            onClose?: {
                bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void;
            }['bivarianceHack'];
            /**
             * If `true`, the component is shown.
             */
            open: boolean;
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from ModalUnstyled.
     */
    export interface ExtendModalUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & ModalUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendModalUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendModalUnstyledTypeMap<M>>;
    /**
     * Modal is a lower-level construct that is leveraged by the following components:
     *
     * *   [Dialog](https://mui.com/api/dialog/)
     * *   [Drawer](https://mui.com/api/drawer/)
     * *   [Menu](https://mui.com/api/menu/)
     * *   [Popover](https://mui.com/api/popover/)
     *
     * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/api/dialog/) component
     * rather than directly using Modal.
     *
     * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
     *
     * Demos:
     *
     * - [Modal](https://mui.com/components/modal/)
     *
     * API:
     *
     * - [ModalUnstyled API](https://mui.com/api/modal-unstyled/)
     */
    const ModalUnstyled: OverridableComponent<ModalUnstyledTypeMap>;
    export type ModalUnstyledProps<D extends React.ElementType = ModalUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<ModalUnstyledTypeMap<P, D>, D>;
    export default ModalUnstyled;
}
declare module "@mui/core/ModalUnstyled/ModalManager" {
    export interface ManagedModalProps {
        disableScrollLock?: boolean;
    }
    export function ariaHidden(element: Element, show: boolean): void;
    interface Modal {
        mount: Element;
        modalRef: Element;
    }
    /**
     * @ignore - do not document.
     *
     * Proper state management for containers and the modals in those containers.
     * Simplified, but inspired by react-overlay's ModalManager class.
     * Used by the Modal to ensure proper styling of containers.
     */
    export interface ModalManager {
        constructor(): any;
        add(modal: Modal, container: HTMLElement): number;
        mount(modal: Modal, props: ManagedModalProps): void;
        remove(modal: Modal): number;
        isTopModal(modal: Modal): boolean;
    }
    export default ModalManager;
    export {};
}
declare module "@mui/core/ModalUnstyled/index" {
    export { default } from "@mui/core/ModalUnstyled/ModalUnstyled";
    export * from "@mui/core/ModalUnstyled/ModalUnstyled";
    export { default as ModalManager } from "@mui/core/ModalUnstyled/ModalManager";
    export * from "@mui/core/ModalUnstyled/ModalManager";
    export { default as modalUnstyledClasses } from "@mui/core/ModalUnstyled/modalUnstyledClasses";
    export * from "@mui/core/ModalUnstyled/modalUnstyledClasses";
}
declare module "@mui/core/NoSsr/NoSsr" {
    import * as React from 'react';
    export interface NoSsrProps {
        /**
         * You can wrap a node.
         */
        children?: React.ReactNode;
        /**
         * If `true`, the component will not only prevent server-side rendering.
         * It will also defer the rendering of the children into a different screen frame.
         * @default false
         */
        defer?: boolean;
        /**
         * The fallback content to display.
         * @default null
         */
        fallback?: React.ReactNode;
    }
    /**
     * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
     *
     * This component can be useful in a variety of situations:
     *
     * *   Escape hatch for broken dependencies not supporting SSR.
     * *   Improve the time-to-first paint on the client by only rendering above the fold.
     * *   Reduce the rendering time on the server.
     * *   Under too heavy server load, you can turn on service degradation.
     *
     * Demos:
     *
     * - [No Ssr](https://mui.com/components/no-ssr/)
     *
     * API:
     *
     * - [NoSsr API](https://mui.com/api/no-ssr/)
     */
    export type NoSsr = (props: NoSsrProps) => JSX.Element;
    export default NoSsr;
}
declare module "@mui/core/NoSsr/index" {
    export { default } from "@mui/core/NoSsr/NoSsr";
    export * from "@mui/core/NoSsr/NoSsr";
}
declare module "@mui/core/Popper/Popper" {
    import * as React from 'react';
    import { Instance, VirtualElement, Options, OptionsGeneric } from '@popperjs/core';
    import { PortalProps } from "@mui/core/Portal/index";
    export type PopperPlacementType = Options['placement'];
    export interface PopperProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'> {
        ref?: React.Ref<HTMLDivElement>;
        /**
         * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
         * or a function that returns either.
         * It's used to set the position of the popper.
         * The return value will passed as the reference object of the Popper instance.
         */
        anchorEl?: null | VirtualElement | (() => VirtualElement);
        /**
         * Popper render function or node.
         */
        children?: React.ReactNode | ((props: {
            placement: PopperPlacementType;
            TransitionProps?: {
                in: boolean;
                onEnter: () => {};
                onExited: () => {};
            };
        }) => React.ReactNode);
        /**
         * An HTML element or function that returns one.
         * The `container` will have the portal children appended to it.
         *
         * By default, it uses the body of the top-level document object,
         * so it's simply `document.body` most of the time.
         */
        container?: PortalProps['container'];
        /**
         * The `children` will be under the DOM hierarchy of the parent component.
         * @default false
         */
        disablePortal?: PortalProps['disablePortal'];
        /**
         * Always keep the children in the DOM.
         * This prop can be useful in SEO situation or
         * when you want to maximize the responsiveness of the Popper.
         * @default false
         */
        keepMounted?: boolean;
        /**
         * Popper.js is based on a "plugin-like" architecture,
         * most of its features are fully encapsulated "modifiers".
         *
         * A modifier is a function that is called each time Popper.js needs to
         * compute the position of the popper.
         * For this reason, modifiers should be very performant to avoid bottlenecks.
         * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
         */
        modifiers?: Options['modifiers'];
        /**
         * If `true`, the component is shown.
         */
        open: boolean;
        /**
         * Popper placement.
         * @default 'bottom'
         */
        placement?: PopperPlacementType;
        /**
         * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
         * @default {}
         */
        popperOptions?: Partial<OptionsGeneric<any>>;
        /**
         * A ref that points to the used popper instance.
         */
        popperRef?: React.Ref<Instance>;
        /**
         * Help supporting a react-transition-group/Transition component.
         * @default false
         */
        transition?: boolean;
    }
    /**
     * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v2/) for positioning.
     *
     * Demos:
     *
     * - [Autocomplete](https://mui.com/components/autocomplete/)
     * - [Menus](https://mui.com/components/menus/)
     * - [Popper](https://mui.com/components/popper/)
     *
     * API:
     *
     * - [Popper API](https://mui.com/api/popper/)
     */
    export type Popper = (props: PopperProps) => JSX.Element;
    export default Popper;
}
declare module "@mui/core/Popper/index" {
    export { default } from "@mui/core/Popper/Popper";
    export * from "@mui/core/Popper/Popper";
}
declare module "@mui/core/SliderUnstyled/sliderUnstyledClasses" {
    export interface SliderUnstyledClasses {
        /** Class name applied to the root element. */
        root: string;
        /** Class name applied to the root element if `marks` is provided with at least one label. */
        marked: string;
        /** Class name applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** State class applied to the root and thumb element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root if a thumb is being dragged. */
        dragging: string;
        /** Class name applied to the rail element. */
        rail: string;
        /** Class name applied to the track element. */
        track: string;
        /** Class name applied to the root element if `track={false}`. */
        trackFalse: string;
        /** Class name applied to the root element if `track="inverted"`. */
        trackInverted: string;
        /** Class name applied to the thumb element. */
        thumb: string;
        /** State class applied to the thumb element if it's active. */
        active: string;
        /** State class applied to the thumb element if keyboard focused. */
        focusVisible: string;
        /** Class name applied to the thumb label element. */
        valueLabel: string;
        /** Class name applied to the thumb label element if it's open. */
        valueLabelOpen: string;
        /** Class name applied to the thumb label's circle element. */
        valueLabelCircle: string;
        /** Class name applied to the thumb label's label element. */
        valueLabelLabel: string;
        /** Class name applied to the mark element. */
        mark: string;
        /** Class name applied to the mark element if active (depending on the value). */
        markActive: string;
        /** Class name applied to the mark label element. */
        markLabel: string;
        /** Class name applied to the mark label element if active (depending on the value). */
        markLabelActive: string;
    }
    export type SliderUnstyledClassKey = keyof SliderUnstyledClasses;
    export function getSliderUtilityClass(slot: string): string;
    const sliderUnstyledClasses: SliderUnstyledClasses;
    export default sliderUnstyledClasses;
}
declare module "@mui/core/SliderUnstyled/SliderValueLabelUnstyled" {
    import * as React from 'react';
    export interface ValueLabelUnstyledProps {
        className?: string;
        style?: React.CSSProperties;
        /**
         * The components used for each slot inside the ValueLabel.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The value of the slider.
         * For ranged sliders, provide an array with two values.
         */
        value?: number | number[];
        /**
         * Controls when the value label is displayed:
         *
         * - `auto` the value label will display when the thumb is hovered or focused.
         * - `on` will display persistently.
         * - `off` will never display.
         * @default 'off'
         */
        valueLabelDisplay?: 'on' | 'auto' | 'off';
    }
    export type SliderValueLabelUnstyled = (props: ValueLabelUnstyledProps) => JSX.Element;
    export default SliderValueLabelUnstyled;
}
declare module "@mui/core/SliderUnstyled/SliderUnstyled" {
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { SliderUnstyledClasses } from "@mui/core/SliderUnstyled/sliderUnstyledClasses";
    import SliderValueLabelUnstyled from "@mui/core/SliderUnstyled/SliderValueLabelUnstyled";
    export interface SliderOwnerStateOverrides {
    }
    export interface Mark {
        value: number;
        label?: React.ReactNode;
    }
    export interface ValueLabelProps extends React.HTMLAttributes<HTMLSpanElement> {
        children: React.ReactElement;
        index: number;
        open: boolean;
        value: number;
    }
    export interface SliderUnstyledComponentsPropsOverrides {
    }
    export interface SliderUnstyledTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & {
            /**
             * The label of the slider.
             */
            'aria-label'?: string;
            /**
             * The id of the element containing a label for the slider.
             */
            'aria-labelledby'?: string;
            /**
             * A string value that provides a user-friendly name for the current value of the slider.
             */
            'aria-valuetext'?: string;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<SliderUnstyledClasses>;
            /**
             * The components used for each slot inside the Slider.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
                Track?: React.ElementType;
                Rail?: React.ElementType;
                Thumb?: React.ElementType;
                Mark?: React.ElementType;
                MarkLabel?: React.ElementType;
                ValueLabel?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Slider.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLSpanElement> & SliderUnstyledComponentsPropsOverrides;
                track?: React.HTMLAttributes<HTMLSpanElement> & SliderUnstyledComponentsPropsOverrides;
                rail?: React.HTMLAttributes<HTMLSpanElement> & SliderUnstyledComponentsPropsOverrides;
                thumb?: React.HTMLAttributes<HTMLSpanElement> & SliderUnstyledComponentsPropsOverrides;
                mark?: React.HTMLAttributes<HTMLSpanElement> & SliderUnstyledComponentsPropsOverrides;
                markLabel?: React.HTMLAttributes<HTMLSpanElement> & SliderUnstyledComponentsPropsOverrides;
                valueLabel?: React.ComponentPropsWithRef<SliderValueLabelUnstyled> & SliderUnstyledComponentsPropsOverrides;
            };
            /**
             * The default value. Use when the component is not controlled.
             */
            defaultValue?: number | number[];
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
             * @default false
             */
            disableSwap?: boolean;
            /**
             * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
             * This is important for screen reader users.
             * @param {number} index The thumb label's index to format.
             * @returns {string}
             */
            getAriaLabel?: (index: number) => string;
            /**
             * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
             * This is important for screen reader users.
             * @param {number} value The thumb label's value to format.
             * @param {number} index The thumb label's index to format.
             * @returns {string}
             */
            getAriaValueText?: (value: number, index: number) => string;
            /**
             * Indicates whether the theme context has rtl direction. It is set automatically.
             * @default false
             */
            isRtl?: boolean;
            /**
             * Marks indicate predetermined values to which the user can move the slider.
             * If `true` the marks are spaced according the value of the `step` prop.
             * If an array, it should contain objects with `value` and an optional `label` keys.
             * @default false
             */
            marks?: boolean | Mark[];
            /**
             * The maximum allowed value of the slider.
             * Should not be equal to min.
             * @default 100
             */
            max?: number;
            /**
             * The minimum allowed value of the slider.
             * Should not be equal to max.
             * @default 0
             */
            min?: number;
            /**
             * Name attribute of the hidden `input` element.
             */
            name?: string;
            /**
             * Callback function that is fired when the slider's value changed.
             *
             * @param {Event} event The event source of the callback.
             * You can pull out the new value by accessing `event.target.value` (any).
             * **Warning**: This is a generic event not a change event.
             * @param {number | number[]} value The new value.
             * @param {number} activeThumb Index of the currently moved thumb.
             */
            onChange?: (event: Event, value: number | number[], activeThumb: number) => void;
            /**
             * Callback function that is fired when the `mouseup` is triggered.
             *
             * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
             * @param {number | number[]} value The new value.
             */
            onChangeCommitted?: (event: React.SyntheticEvent | Event, value: number | number[]) => void;
            /**
             * The component orientation.
             * @default 'horizontal'
             */
            orientation?: 'horizontal' | 'vertical';
            /**
             * A transformation function, to change the scale of the slider.
             * @default (x) => x
             */
            scale?: (value: number) => number;
            /**
             * The granularity with which the slider can step through values. (A "discrete" slider.)
             * The `min` prop serves as the origin for the valid values.
             * We recommend (max - min) to be evenly divisible by the step.
             *
             * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
             * @default 1
             */
            step?: number | null;
            /**
             * Tab index attribute of the hidden `input` element.
             */
            tabIndex?: number;
            /**
             * The track presentation:
             *
             * - `normal` the track will render a bar representing the slider value.
             * - `inverted` the track will render a bar representing the remaining slider value.
             * - `false` the track will render without a bar.
             * @default 'normal'
             */
            track?: 'normal' | false | 'inverted';
            /**
             * The value of the slider.
             * For ranged sliders, provide an array with two values.
             */
            value?: number | number[];
            /**
             * Controls when the value label is displayed:
             *
             * - `auto` the value label will display when the thumb is hovered or focused.
             * - `on` will display persistently.
             * - `off` will never display.
             * @default 'off'
             */
            valueLabelDisplay?: 'on' | 'auto' | 'off';
            /**
             * The format function the value label's value.
             *
             * When a function is provided, it should have the following signature:
             *
             * - {number} value The value label's value to format
             * - {number} index The value label's index to format
             * @default (x) => x
             */
            valueLabelFormat?: string | ((value: number, index: number) => React.ReactNode);
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from SliderUnstyled.
     */
    export interface ExtendSliderUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & SliderUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendSliderUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendSliderUnstyledTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Slider](https://mui.com/components/slider/)
     *
     * API:
     *
     * - [SliderUnstyled API](https://mui.com/api/slider-unstyled/)
     */
    const SliderUnstyled: OverridableComponent<SliderUnstyledTypeMap>;
    export type SliderUnstyledProps<D extends React.ElementType = SliderUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<SliderUnstyledTypeMap<P, D>, D>;
    export default SliderUnstyled;
}
declare module "@mui/core/SliderUnstyled/index" {
    export { default } from "@mui/core/SliderUnstyled/SliderUnstyled";
    export * from "@mui/core/SliderUnstyled/SliderUnstyled";
    export { default as SliderValueLabelUnstyled } from "@mui/core/SliderUnstyled/SliderValueLabelUnstyled";
    export * from "@mui/core/SliderUnstyled/SliderValueLabelUnstyled";
    export { default as sliderUnstyledClasses } from "@mui/core/SliderUnstyled/sliderUnstyledClasses";
    export * from "@mui/core/SliderUnstyled/sliderUnstyledClasses";
}
declare module "@mui/core/SwitchUnstyled/useSwitch" {
    import * as React from 'react';
    export interface SwitchState {
        checked: Readonly<boolean>;
        disabled: Readonly<boolean>;
        readOnly: Readonly<boolean>;
        focusVisible: Readonly<boolean>;
    }
    export interface UseSwitchResult extends SwitchState {
        /**
         * Returns props for an HTML `input` element that is a part of a Switch.
         */
        getInputProps: (otherProps?: React.HTMLAttributes<HTMLInputElement>) => SwitchInputProps;
    }
    /**
     * Props used by an HTML `input` element that is a part of a Switch.
     */
    export interface SwitchInputProps {
        checked?: boolean;
        defaultChecked?: boolean;
        disabled?: boolean;
        onBlur: React.FocusEventHandler;
        onChange: React.ChangeEventHandler<HTMLInputElement>;
        onFocus: React.FocusEventHandler;
        readOnly?: boolean;
        ref: React.Ref<any>;
        required?: boolean;
    }
    export interface UseSwitchProps {
        /**
         * If `true`, the component is checked.
         */
        checked?: boolean;
        /**
         * The default checked state. Use when the component is not controlled.
         */
        defaultChecked?: boolean;
        /**
         * If `true`, the component is disabled.
         */
        disabled?: boolean;
        onBlur?: React.FocusEventHandler;
        /**
         * Callback fired when the state is changed.
         *
         * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         * You can pull out the new checked state by accessing `event.target.checked` (boolean).
         */
        onChange?: React.ChangeEventHandler<HTMLInputElement>;
        onFocus?: React.FocusEventHandler;
        onFocusVisible?: React.FocusEventHandler;
        /**
         * If `true`, the component is read only.
         */
        readOnly?: boolean;
        /**
         * If `true`, the `input` element is required.
         */
        required?: boolean;
    }
    /**
     * The basic building block for creating custom switches.
     *
     * Demos:
     *
     * - [Switches](https://mui.com/components/switches/)
     */
    export type useSwitch = (props: UseSwitchProps) => UseSwitchResult;
    export default useSwitch;
}
declare module "@mui/core/SwitchUnstyled/SwitchUnstyled" {
    import * as React from 'react';
    import { UseSwitchProps } from "@mui/core/SwitchUnstyled/useSwitch";
    export interface SwitchUnstyledComponentsPropsOverrides {
    }
    export interface SwitchUnstyledProps extends UseSwitchProps {
        /**
         * Class name applied to the root element.
         */
        className?: string;
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: React.ElementType;
        /**
         * The components used for each slot inside the Switch.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Thumb?: React.ElementType;
            Input?: React.ElementType;
            Track?: React.ElementType | null;
        };
        /**
         * The props used for each slot inside the Switch.
         * @default {}
         */
        componentsProps?: {
            root?: React.HTMLAttributes<HTMLSpanElement> & SwitchUnstyledComponentsPropsOverrides;
            thumb?: React.HTMLAttributes<HTMLSpanElement> & SwitchUnstyledComponentsPropsOverrides;
            input?: React.InputHTMLAttributes<HTMLInputElement> & SwitchUnstyledComponentsPropsOverrides;
            track?: React.HTMLAttributes<HTMLSpanElement> & SwitchUnstyledComponentsPropsOverrides;
        };
    }
    /**
     * The foundation for building custom-styled switches.
     *
     * Demos:
     *
     * - [Switches](https://mui.com/components/switches/)
     *
     * API:
     *
     * - [SwitchUnstyled API](https://mui.com/api/switch-unstyled/)
     */
    const SwitchUnstyled: React.ForwardRefExoticComponent<SwitchUnstyledProps & React.RefAttributes<any>>;
    export default SwitchUnstyled;
}
declare module "@mui/core/SwitchUnstyled/switchUnstyledClasses" {
    export interface SwitchUnstyledClasses {
        /** Class applied to the root element. */
        root: string;
        /** Class applied to the internal input element */
        input: string;
        /** Class applied to the track element */
        track: string;
        /** Class applied to the thumb element */
        thumb: string;
        /** Class applied to the root element if the switch is checked */
        checked: string;
        /** Class applied to the root element if the switch is disabled */
        disabled: string;
        /** Class applied to the root element if the switch has visible focus */
        focusVisible: string;
        /** Class applied to the root element if the switch is read-only */
        readOnly: string;
    }
    export type SwitchUnstyledClassKey = keyof SwitchUnstyledClasses;
    export function getSwitchUnstyledUtilityClass(slot: string): string;
    const switchUnstyledClasses: SwitchUnstyledClasses;
    export default switchUnstyledClasses;
}
declare module "@mui/core/SwitchUnstyled/index" {
    export { default } from "@mui/core/SwitchUnstyled/SwitchUnstyled";
    export * from "@mui/core/SwitchUnstyled/SwitchUnstyled";
    export { default as useSwitch } from "@mui/core/SwitchUnstyled/useSwitch";
    export * from "@mui/core/SwitchUnstyled/useSwitch";
    export { default as switchUnstyledClasses } from "@mui/core/SwitchUnstyled/switchUnstyledClasses";
    export * from "@mui/core/SwitchUnstyled/switchUnstyledClasses";
}
declare module "@mui/core/TextareaAutosize/TextareaAutosize" {
    import * as React from 'react';
    export interface TextareaAutosizeProps extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'children' | 'rows'> {
        ref?: React.Ref<HTMLTextAreaElement>;
        /**
         * Maximum number of rows to display.
         */
        maxRows?: string | number;
        /**
         * Minimum number of rows to display.
         * @default 1
         */
        minRows?: string | number;
    }
    /**
     *
     * Demos:
     *
     * - [Textarea Autosize](https://mui.com/components/textarea-autosize/)
     *
     * API:
     *
     * - [TextareaAutosize API](https://mui.com/api/textarea-autosize/)
     */
    export type TextareaAutosize = (props: TextareaAutosizeProps) => JSX.Element;
    export default TextareaAutosize;
}
declare module "@mui/core/TextareaAutosize/index" {
    export { default } from "@mui/core/TextareaAutosize/TextareaAutosize";
    export * from "@mui/core/TextareaAutosize/TextareaAutosize";
}
declare module "@mui/core/Unstable_TrapFocus/Unstable_TrapFocus" {
    import * as React from 'react';
    export interface TrapFocusProps {
        /**
         * If `true`, focus is locked.
         */
        open: boolean;
        /**
         * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
         * For instance, you can provide the "tabbable" npm dependency.
         * @param {HTMLElement} root
         */
        getTabbable?: (root: HTMLElement) => string[];
        /**
         * This prop extends the `open` prop.
         * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
         * This prop should be memoized.
         * It can be used to support multiple trap focus mounted at the same time.
         * @default function defaultIsEnabled() {
         *   return true;
         * }
         */
        isEnabled?: () => boolean;
        /**
         * A single child content element.
         */
        children: React.ReactElement<any, any>;
        /**
         * If `true`, the trap focus will not automatically shift focus to itself when it opens, and
         * replace it to the last focused element when it closes.
         * This also works correctly with any trap focus children that have the `disableAutoFocus` prop.
         *
         * Generally this should never be set to `true` as it makes the trap focus less
         * accessible to assistive technologies, like screen readers.
         * @default false
         */
        disableAutoFocus?: boolean;
        /**
         * If `true`, the trap focus will not prevent focus from leaving the trap focus while open.
         *
         * Generally this should never be set to `true` as it makes the trap focus less
         * accessible to assistive technologies, like screen readers.
         * @default false
         */
        disableEnforceFocus?: boolean;
        /**
         * If `true`, the trap focus will not restore focus to previously focused element once
         * trap focus is hidden.
         * @default false
         */
        disableRestoreFocus?: boolean;
    }
    /**
     * Utility component that locks focus inside the component.
     *
     * Demos:
     *
     * - [Trap Focus](https://mui.com/components/trap-focus/)
     *
     * API:
     *
     * - [Unstable_TrapFocus API](https://mui.com/api/unstable-trap-focus/)
     */
    export type Unstable_TrapFocus = (props: TrapFocusProps) => JSX.Element;
    export default Unstable_TrapFocus;
}
declare module "@mui/core/Unstable_TrapFocus/index" {
    export { default } from "@mui/core/Unstable_TrapFocus/Unstable_TrapFocus";
    export * from "@mui/core/Unstable_TrapFocus/Unstable_TrapFocus";
}
declare module "@mui/core/utils/appendOwnerState" {
    import React from 'react';
    /**
     * Appends the ownerState object to the props, merging with the existing one if necessary.
     *
     * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.
     * @param existingProps Props of the element.
     * @param ownerState
     */
    export type appendOwnerState = (elementType: React.ElementType, existingProps: Record<string, any>, ownerState: object) => Record<string, any>;
    export default appendOwnerState;
}
declare module "@mui/core/utils/extractEventHandlers" {
    /**
     * Extracts event handlers from a given object.
     * A prop is considered an event handler if it is a function and its name starts with `on`.
     *
     * @param object An object to extract event handlers from.
     */
    export type extractEventHandlers = (object: Record<string, any> | undefined, excludeKeys?: string[]) => Record<string, any>;
    export default extractEventHandlers;
}
declare module "@mui/core/utils/isHostComponent" {
    import React from 'react';
    /**
     * Determines if a given element is a DOM element name (i.e. not a React component).
     */
    function isHostComponent(element: React.ElementType): boolean;
    export default isHostComponent;
}
declare module "@mui/core/utils/index" {
    export { default as appendOwnerState } from "@mui/core/utils/appendOwnerState";
    export { default as extractEventHandlers } from "@mui/core/utils/extractEventHandlers";
    export { default as isHostComponent } from "@mui/core/utils/isHostComponent";
}
declare module "@mui/core/index" {
    export * from "@mui/core/AutocompleteUnstyled/index";
    export { default as BackdropUnstyled } from "@mui/core/BackdropUnstyled/index";
    export * from "@mui/core/BackdropUnstyled/index";
    export { default as BadgeUnstyled } from "@mui/core/BadgeUnstyled/index";
    export * from "@mui/core/BadgeUnstyled/index";
    export { default as ButtonUnstyled } from "@mui/core/ButtonUnstyled/index";
    export * from "@mui/core/ButtonUnstyled/index";
    export { default as unstable_composeClasses } from "@mui/core/composeClasses/index";
    export * from "@mui/core/composeClasses/index";
    export { default as generateUtilityClass } from "@mui/core/generateUtilityClass/index";
    export * from "@mui/core/generateUtilityClass/index";
    export { default as unstable_ClassNameGenerator } from "@mui/core/generateUtilityClass/ClassNameGenerator";
    export { default as generateUtilityClasses } from "@mui/core/generateUtilityClasses/index";
    export * from "@mui/core/generateUtilityClasses/index";
    export { default as FormControlUnstyled } from "@mui/core/FormControlUnstyled/index";
    export * from "@mui/core/FormControlUnstyled/index";
    export { default as InputUnstyled } from "@mui/core/InputUnstyled/index";
    export * from "@mui/core/InputUnstyled/index";
    export { default as ModalUnstyled } from "@mui/core/ModalUnstyled/index";
    export * from "@mui/core/ModalUnstyled/index";
    export { default as NoSsr } from "@mui/core/NoSsr/index";
    export { default as Popper } from "@mui/core/Popper/index";
    export * from "@mui/core/Popper/index";
    export { default as Portal } from "@mui/core/Portal/index";
    export * from "@mui/core/Portal/index";
    export { default as SliderUnstyled } from "@mui/core/SliderUnstyled/index";
    export * from "@mui/core/SliderUnstyled/index";
    export { default as SwitchUnstyled } from "@mui/core/SwitchUnstyled/index";
    export * from "@mui/core/SwitchUnstyled/index";
    export { default as TextareaAutosize } from "@mui/core/TextareaAutosize/index";
    export * from "@mui/core/TextareaAutosize/index";
    export { default as Unstable_TrapFocus } from "@mui/core/Unstable_TrapFocus/index";
    export * from "@mui/core/Unstable_TrapFocus/index";
    export * from "@mui/core/utils/index";
}
declare module "@mui/material/Autocomplete/autocompleteClasses" {
    export interface AutocompleteClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `fullWidth={true}`. */
        fullWidth: string;
        /** State class applied to the root element if focused. */
        focused: string;
        /** Styles applied to the tag elements, e.g. the chips. */
        tag: string;
        /** Styles applied to the tag elements, e.g. the chips if `size="small"`. */
        tagSizeSmall: string;
        /** Styles applied to the tag elements, e.g. the chips if `size="medium"`. */
        tagSizeMedium: string;
        /** Styles applied when the popup icon is rendered. */
        hasPopupIcon: string;
        /** Styles applied when the clear icon is rendered. */
        hasClearIcon: string;
        /** Styles applied to the Input element. */
        inputRoot: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if tag focused. */
        inputFocused: string;
        /** Styles applied to the endAdornment element. */
        endAdornment: string;
        /** Styles applied to the clear indicator. */
        clearIndicator: string;
        /** Styles applied to the popup indicator. */
        popupIndicator: string;
        /** Styles applied to the popup indicator if the popup is open. */
        popupIndicatorOpen: string;
        /** Styles applied to the popper element. */
        popper: string;
        /** Styles applied to the popper element if `disablePortal={true}`. */
        popperDisablePortal: string;
        /** Styles applied to the Paper component. */
        paper: string;
        /** Styles applied to the listbox component. */
        listbox: string;
        /** Styles applied to the loading wrapper. */
        loading: string;
        /** Styles applied to the no option wrapper. */
        noOptions: string;
        /** Styles applied to the option elements. */
        option: string;
        /** Styles applied to the group's label elements. */
        groupLabel: string;
        /** Styles applied to the group's ul elements. */
        groupUl: string;
    }
    export type AutocompleteClassKey = keyof AutocompleteClasses;
    export function getAutocompleteUtilityClass(slot: string): string;
    const autocompleteClasses: AutocompleteClasses;
    export default autocompleteClasses;
}
declare module "@mui/material/Autocomplete/Autocomplete" {
    import * as React from 'react';
    import { IconButtonProps, InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { ChipProps, ChipTypeMap } from "@mui/material/Chip/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { PopperProps } from "@mui/material/Popper/index";
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { useAutocomplete, AutocompleteChangeDetails, AutocompleteChangeReason, AutocompleteCloseReason, AutocompleteInputChangeReason, createFilterOptions, UseAutocompleteProps } from "@mui/core/index";
    import { AutocompleteClasses } from "@mui/material/Autocomplete/autocompleteClasses";
    export { AutocompleteChangeDetails, AutocompleteChangeReason, AutocompleteCloseReason, AutocompleteInputChangeReason, createFilterOptions, };
    export type AutocompleteRenderGetTagProps = ({ index }: {
        index: number;
    }) => {
        key: number;
        className: string;
        disabled: boolean;
        'data-tag-index': number;
        tabIndex: -1;
        onDelete: (event: any) => void;
    };
    export interface AutocompleteRenderOptionState {
        inputValue: string;
        selected: boolean;
    }
    export interface AutocompleteRenderGroupParams {
        key: string;
        group: string;
        children?: React.ReactNode;
    }
    export interface AutocompleteRenderInputParams {
        id: string;
        disabled: boolean;
        fullWidth: boolean;
        size: 'small' | undefined;
        InputLabelProps: ReturnType<ReturnType<useAutocomplete>['getInputLabelProps']>;
        InputProps: {
            ref: React.Ref<any>;
            className: string;
            startAdornment: React.ReactNode;
            endAdornment: React.ReactNode;
        };
        inputProps: ReturnType<ReturnType<useAutocomplete>['getInputProps']>;
    }
    export interface AutocompletePropsSizeOverrides {
    }
    export interface AutocompleteProps<T, Multiple extends boolean | undefined, DisableClearable extends boolean | undefined, FreeSolo extends boolean | undefined, ChipComponent extends React.ElementType = ChipTypeMap['defaultComponent']> extends UseAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>, StandardProps<React.HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'onChange' | 'children'> {
        /**
         * Props applied to the [`Chip`](/api/chip/) element.
         */
        ChipProps?: ChipProps<ChipComponent>;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AutocompleteClasses>;
        /**
         * The icon to display in place of the default clear icon.
         * @default <ClearIcon fontSize="small" />
         */
        clearIcon?: React.ReactNode;
        /**
         * Override the default text for the *clear* icon button.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @default 'Clear'
         */
        clearText?: string;
        /**
         * Override the default text for the *close popup* icon button.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @default 'Close'
         */
        closeText?: string;
        /**
         * The props used for each slot inside.
         * @default {}
         */
        componentsProps?: {
            clearIndicator?: Partial<IconButtonProps>;
            paper?: PaperProps;
        };
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
         * @default false
         */
        disablePortal?: boolean;
        /**
         * Force the visibility display of the popup icon.
         * @default 'auto'
         */
        forcePopupIcon?: true | false | 'auto';
        /**
         * If `true`, the input will take up the full width of its container.
         * @default false
         */
        fullWidth?: boolean;
        /**
         * The label to display when the tags are truncated (`limitTags`).
         *
         * @param {number} more The number of truncated tags.
         * @returns {ReactNode}
         * @default (more) => `+${more}`
         */
        getLimitTagsText?: (more: number) => React.ReactNode;
        /**
         * The component used to render the listbox.
         * @default 'ul'
         */
        ListboxComponent?: React.JSXElementConstructor<React.HTMLAttributes<HTMLElement>>;
        /**
         * Props applied to the Listbox element.
         */
        ListboxProps?: ReturnType<ReturnType<useAutocomplete>['getListboxProps']>;
        /**
         * If `true`, the component is in a loading state.
         * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).
         * @default false
         */
        loading?: boolean;
        /**
         * Text to display when in a loading state.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @default 'Loading…'
         */
        loadingText?: React.ReactNode;
        /**
         * The maximum number of tags that will be visible when not focused.
         * Set `-1` to disable the limit.
         * @default -1
         */
        limitTags?: number;
        /**
         * Text to display when there are no options.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @default 'No options'
         */
        noOptionsText?: React.ReactNode;
        /**
         * Override the default text for the *open popup* icon button.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @default 'Open'
         */
        openText?: string;
        /**
         * The component used to render the body of the popup.
         * @default Paper
         */
        PaperComponent?: React.JSXElementConstructor<React.HTMLAttributes<HTMLElement>>;
        /**
         * The component used to position the popup.
         * @default Popper
         */
        PopperComponent?: React.JSXElementConstructor<PopperProps>;
        /**
         * The icon to display in place of the default popup icon.
         * @default <ArrowDropDownIcon />
         */
        popupIcon?: React.ReactNode;
        /**
         * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
         * @default false
         */
        readOnly?: boolean;
        /**
         * Render the group.
         *
         * @param {AutocompleteRenderGroupParams} params The group to render.
         * @returns {ReactNode}
         */
        renderGroup?: (params: AutocompleteRenderGroupParams) => React.ReactNode;
        /**
         * Render the input.
         *
         * @param {object} params
         * @returns {ReactNode}
         */
        renderInput: (params: AutocompleteRenderInputParams) => React.ReactNode;
        /**
         * Render the option, use `getOptionLabel` by default.
         *
         * @param {object} props The props to apply on the li element.
         * @param {T} option The option to render.
         * @param {object} state The state of the component.
         * @returns {ReactNode}
         */
        renderOption?: (props: React.HTMLAttributes<HTMLLIElement>, option: T, state: AutocompleteRenderOptionState) => React.ReactNode;
        /**
         * Render the selected value.
         *
         * @param {T[]} value The `value` provided to the component.
         * @param {function} getTagProps A tag props getter.
         * @returns {ReactNode}
         */
        renderTags?: (value: T[], getTagProps: AutocompleteRenderGetTagProps) => React.ReactNode;
        /**
         * The size of the component.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium', AutocompletePropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Autocomplete](https://mui.com/components/autocomplete/)
     *
     * API:
     *
     * - [Autocomplete API](https://mui.com/api/autocomplete/)
     */
    export type Autocomplete = <T, Multiple extends boolean | undefined = undefined, DisableClearable extends boolean | undefined = undefined, FreeSolo extends boolean | undefined = undefined>(props: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) => JSX.Element;
    export default Autocomplete;
}
declare module "@mui/material/Autocomplete/index" {
    export { default } from "@mui/material/Autocomplete/Autocomplete";
    export * from "@mui/material/Autocomplete/Autocomplete";
    export { default as autocompleteClasses } from "@mui/material/Autocomplete/autocompleteClasses";
    export * from "@mui/material/Autocomplete/autocompleteClasses";
}
declare module "@mui/material/Avatar/avatarClasses" {
    export interface AvatarClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if not `src` or `srcSet`. */
        colorDefault: string;
        /** Styles applied to the root element if `variant="circular"`. */
        circular: string;
        /** Styles applied to the root element if `variant="rounded"`. */
        rounded: string;
        /** Styles applied to the root element if `variant="square"`. */
        square: string;
        /** Styles applied to the img element if either `src` or `srcSet` is defined. */
        img: string;
        /** Styles applied to the fallback icon */
        fallback: string;
    }
    export type AvatarClassKey = keyof AvatarClasses;
    export function getAvatarUtilityClass(slot: string): string;
    const avatarClasses: AvatarClasses;
    export default avatarClasses;
}
declare module "@mui/material/Avatar/Avatar" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { AvatarClasses } from "@mui/material/Avatar/avatarClasses";
    export interface AvatarPropsVariantOverrides {
    }
    export interface AvatarTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * Used in combination with `src` or `srcSet` to
             * provide an alt attribute for the rendered `img` element.
             */
            alt?: string;
            /**
             * Used to render icon or text elements inside the Avatar if `src` is not set.
             * This can be an element, or just a string.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<AvatarClasses>;
            /**
             * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
             * It can be used to listen for the loading error event.
             */
            imgProps?: React.ImgHTMLAttributes<HTMLImageElement> & {
                sx?: SxProps<Theme>;
            };
            /**
             * The `sizes` attribute for the `img` element.
             */
            sizes?: string;
            /**
             * The `src` attribute for the `img` element.
             */
            src?: string;
            /**
             * The `srcSet` attribute for the `img` element.
             * Use this attribute for responsive image display.
             */
            srcSet?: string;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The shape of the avatar.
             * @default 'circular'
             */
            variant?: OverridableStringUnion<'circular' | 'rounded' | 'square', AvatarPropsVariantOverrides>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Avatars](https://mui.com/components/avatars/)
     *
     * API:
     *
     * - [Avatar API](https://mui.com/api/avatar/)
     */
    const Avatar: OverridableComponent<AvatarTypeMap>;
    export type AvatarProps<D extends React.ElementType = AvatarTypeMap['defaultComponent'], P = {}> = OverrideProps<AvatarTypeMap<P, D>, D>;
    export default Avatar;
}
declare module "@mui/material/Avatar/index" {
    export { default } from "@mui/material/Avatar/Avatar";
    export * from "@mui/material/Avatar/Avatar";
    export { default as avatarClasses } from "@mui/material/Avatar/avatarClasses";
    export * from "@mui/material/Avatar/avatarClasses";
}
declare module "@mui/material/AvatarGroup/avatarGroupClasses" {
    export interface AvatarGroupClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the avatar elements. */
        avatar: string;
    }
    export type AvatarGroupClassKey = keyof AvatarGroupClasses;
    export function getAvatarGroupUtilityClass(slot: string): string;
    const avatarGroupClasses: AvatarGroupClasses;
    export default avatarGroupClasses;
}
declare module "@mui/material/AvatarGroup/AvatarGroup" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { AvatarGroupClasses } from "@mui/material/AvatarGroup/avatarGroupClasses";
    import Avatar from "@mui/material/Avatar/index";
    export interface AvatarGroupPropsVariantOverrides {
    }
    export interface AvatarGroupComponentsPropsOverrides {
    }
    export interface AvatarGroupProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The avatars to stack.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AvatarGroupClasses>;
        /**
         * The props used for each slot inside the AvatarGroup.
         * @default {}
         */
        componentsProps?: {
            additionalAvatar?: React.ComponentPropsWithRef<typeof Avatar> & AvatarGroupComponentsPropsOverrides;
        };
        /**
         * Max avatars to show before +x.
         * @default 5
         */
        max?: number;
        /**
         * Spacing between avatars.
         * @default 'medium'
         */
        spacing?: 'small' | 'medium' | number;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The total number of avatars. Used for calculating the number of extra avatars.
         * @default children.length
         */
        total?: number;
        /**
         * The variant to use.
         * @default 'circular'
         */
        variant?: OverridableStringUnion<'circular' | 'rounded' | 'square', AvatarGroupPropsVariantOverrides>;
    }
    /**
     *
     * Demos:
     *
     * - [Avatars](https://mui.com/components/avatars/)
     *
     * API:
     *
     * - [AvatarGroup API](https://mui.com/api/avatar-group/)
     */
    export type AvatarGroup = (props: AvatarGroupProps) => JSX.Element;
    export default AvatarGroup;
}
declare module "@mui/material/AvatarGroup/index" {
    export { default } from "@mui/material/AvatarGroup/AvatarGroup";
    export * from "@mui/material/AvatarGroup/AvatarGroup";
    export { default as avatarGroupClasses } from "@mui/material/AvatarGroup/avatarGroupClasses";
    export * from "@mui/material/AvatarGroup/avatarGroupClasses";
}
declare module "@mui/material/transitions/transition" {
    import { TransitionProps as _TransitionProps, TransitionActions } from 'react-transition-group/Transition';
    import * as React from 'react';
    export type TransitionHandlerKeys = 'onEnter' | 'onEntering' | 'onEntered' | 'onExit' | 'onExiting' | 'onExited';
    export type TransitionHandlerProps = Pick<_TransitionProps, TransitionHandlerKeys>;
    export interface EasingProps {
        easing: string | {
            enter?: string;
            exit?: string;
        };
    }
    export type TransitionKeys = 'in' | 'mountOnEnter' | 'unmountOnExit' | 'timeout' | 'easing' | 'addEndListener' | TransitionHandlerKeys;
    export interface TransitionProps extends TransitionActions, Partial<Pick<_TransitionProps & EasingProps, TransitionKeys>>, React.HTMLAttributes<HTMLElement> {
    }
}
declare module "@mui/material/Fade/Fade" {
    import * as React from 'react';
    import { TransitionProps } from "@mui/material/transitions/transition";
    export interface FadeProps extends Omit<TransitionProps, 'children'> {
        /**
         * Perform the enter transition when it first mounts if `in` is also `true`.
         * Set this to `false` to disable this behavior.
         * @default true
         */
        appear?: boolean;
        /**
         * A single child content element.
         */
        children: React.ReactElement<any, any>;
        /**
         * The transition timing function.
         * You may specify a single easing or a object containing enter and exit values.
         */
        easing?: TransitionProps['easing'];
        /**
         * If `true`, the component will transition in.
         */
        in?: boolean;
        ref?: React.Ref<unknown>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        timeout?: TransitionProps['timeout'];
    }
    /**
     * The Fade transition is used by the [Modal](https://mui.com/components/modal/) component.
     * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
     *
     * Demos:
     *
     * - [Transitions](https://mui.com/components/transitions/)
     *
     * API:
     *
     * - [Fade API](https://mui.com/api/fade/)
     * - inherits [Transition API](http://reactcommunity.org/react-transition-group/transition/#Transition-props)
     */
    export type Fade = (props: FadeProps) => JSX.Element;
    export default Fade;
}
declare module "@mui/material/Fade/index" {
    export { default } from "@mui/material/Fade/Fade";
    export * from "@mui/material/Fade/Fade";
}
declare module "@mui/material/Backdrop/Backdrop" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { ExtendBackdropUnstyledTypeMap, BackdropUnstyledTypeMap } from "@mui/core/BackdropUnstyled/index";
    import { FadeProps } from "@mui/material/Fade/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    export type BackdropTypeMap<D extends React.ElementType = 'span', P = {}> = ExtendBackdropUnstyledTypeMap<{
        props: P & Partial<Omit<FadeProps, 'children'>> & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: BackdropUnstyledTypeMap['props']['classes'];
            /**
             * If `true`, the component is shown.
             */
            open: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The duration for the transition, in milliseconds.
             * You may specify a single timeout for all transitions, or individually with an object.
             */
            transitionDuration?: TransitionProps['timeout'];
        };
        defaultComponent: D;
    }>;
    type BackdropRootProps = NonNullable<BackdropTypeMap['props']['componentsProps']>['root'];
    export const BackdropRoot: React.FC<BackdropRootProps>;
    export type BackdropClassKey = keyof NonNullable<BackdropTypeMap['props']['classes']>;
    /**
     *
     * Demos:
     *
     * - [Backdrop](https://mui.com/components/backdrop/)
     *
     * API:
     *
     * - [Backdrop API](https://mui.com/api/backdrop/)
     * - inherits [Fade API](https://mui.com/api/fade/)
     */
    const Backdrop: OverridableComponent<BackdropTypeMap>;
    export type BackdropClasses = Record<BackdropClassKey, string>;
    export const backdropClasses: BackdropClasses;
    export type BackdropProps<D extends React.ElementType = BackdropTypeMap['defaultComponent'], P = {}> = OverrideProps<BackdropTypeMap<D, P>, D>;
    export default Backdrop;
}
declare module "@mui/material/Backdrop/index" {
    export { default } from "@mui/material/Backdrop/Backdrop";
    export * from "@mui/material/Backdrop/Backdrop";
}
declare module "@mui/material/Badge/Badge" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { ExtendBadgeUnstyledTypeMap, BadgeUnstyledTypeMap } from "@mui/core/BadgeUnstyled/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    export interface BadgePropsVariantOverrides {
    }
    export interface BadgePropsColorOverrides {
    }
    export type BadgeTypeMap<D extends React.ElementType = 'span', P = {}> = ExtendBadgeUnstyledTypeMap<{
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: BadgeUnstyledTypeMap['props']['classes'] & {
                /** Styles applied to the badge `span` element if `color="primary"`. */
                colorPrimary?: string;
                /** Styles applied to the badge `span` element if `color="secondary"`. */
                colorSecondary?: string;
                /** Styles applied to the badge `span` element if `color="error"`. */
                colorError?: string;
                /** Styles applied to the badge `span` element if `color="info"`. */
                colorInfo?: string;
                /** Styles applied to the badge `span` element if `color="success"`. */
                colorSuccess?: string;
                /** Styles applied to the badge `span` element if `color="warning"`. */
                colorWarning?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'right' }} overlap="rectangular"`. */
                anchorOriginTopRightRectangular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'right' }} overlap="rectangular"`. */
                anchorOriginBottomRightRectangular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'left' }} overlap="rectangular"`. */
                anchorOriginTopLeftRectangular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'left' }} overlap="rectangular"`. */
                anchorOriginBottomLeftRectangular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'right' }} overlap="circular"`. */
                anchorOriginTopRightCircular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'right' }} overlap="circular"`. */
                anchorOriginBottomRightCircular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'left' }} overlap="circular"`. */
                anchorOriginTopLeftCircular?: string;
                /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'left' }} overlap="circular"`. */
                anchorOriginBottomLeftCircular?: string;
                /** Class name applied to the badge `span` element if `overlap="rectangular"`. */
                overlapRectangular?: string;
                /** Class name applied to the badge `span` element if `overlap="circular"`. */
                overlapCircular?: string;
            };
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'default'
             */
            color?: OverridableStringUnion<'primary' | 'secondary' | 'default' | 'error' | 'info' | 'success' | 'warning', BadgePropsColorOverrides>;
            /**
             * Wrapped shape the badge should overlap.
             * @default 'rectangular'
             */
            overlap?: 'rectangular' | 'circular';
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * @default 'standard'
             */
            variant?: OverridableStringUnion<'standard' | 'dot', BadgePropsVariantOverrides>;
        };
        defaultComponent: D;
    }>;
    type BadgeRootProps = NonNullable<BadgeTypeMap['props']['componentsProps']>['root'];
    type BadgeBadgeProps = NonNullable<BadgeTypeMap['props']['componentsProps']>['badge'];
    export const BadgeRoot: React.FC<BadgeRootProps>;
    export const BadgeMark: React.FC<BadgeBadgeProps>;
    export type BadgeClassKey = keyof NonNullable<BadgeTypeMap['props']['classes']>;
    /**
     *
     * Demos:
     *
     * - [Avatars](https://mui.com/components/avatars/)
     * - [Badges](https://mui.com/components/badges/)
     *
     * API:
     *
     * - [Badge API](https://mui.com/api/badge/)
     * - inherits [BadgeUnstyled API](https://mui.com/api/badge-unstyled/)
     */
    const Badge: OverridableComponent<BadgeTypeMap>;
    export type BadgeClasses = Record<BadgeClassKey, string>;
    export const badgeClasses: BadgeClasses;
    export type BadgeProps<D extends React.ElementType = BadgeTypeMap['defaultComponent'], P = {}> = OverrideProps<BadgeTypeMap<D, P>, D>;
    export default Badge;
}
declare module "@mui/material/Badge/index" {
    export { default } from "@mui/material/Badge/Badge";
    export * from "@mui/material/Badge/Badge";
}
declare module "@mui/material/ButtonBase/touchRippleClasses" {
    export interface TouchRippleClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the internal `Ripple` components `ripple` class. */
        ripple: string;
        /** Styles applied to the internal `Ripple` components `rippleVisible` class. */
        rippleVisible: string;
        /** Styles applied to the internal `Ripple` components `ripplePulsate` class. */
        ripplePulsate: string;
        /** Styles applied to the internal `Ripple` components `child` class. */
        child: string;
        /** Styles applied to the internal `Ripple` components `childLeaving` class. */
        childLeaving: string;
        /** Styles applied to the internal `Ripple` components `childPulsate` class. */
        childPulsate: string;
    }
    export type TouchRippleClassKey = keyof TouchRippleClasses;
    export function getTouchRippleUtilityClass(slot: string): string;
    const touchRippleClasses: TouchRippleClasses;
    export default touchRippleClasses;
}
declare module "@mui/material/ButtonBase/TouchRipple" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { TouchRippleClasses, TouchRippleClassKey } from "@mui/material/ButtonBase/touchRippleClasses";
    export { TouchRippleClassKey };
    export interface StartActionOptions {
        pulsate?: boolean;
        center?: boolean;
    }
    export interface TouchRippleActions {
        start: (event?: React.SyntheticEvent, options?: StartActionOptions, callback?: () => void) => void;
        pulsate: (event?: React.SyntheticEvent) => void;
        stop: (event?: React.SyntheticEvent, callback?: () => void) => void;
    }
    export type TouchRippleProps = StandardProps<React.HTMLAttributes<HTMLElement>> & {
        center?: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TouchRippleClasses>;
    };
    const TouchRipple: React.ForwardRefRenderFunction<TouchRippleActions, TouchRippleProps>;
    export default TouchRipple;
}
declare module "@mui/material/ButtonBase/buttonBaseClasses" {
    export interface ButtonBaseClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if keyboard focused. */
        focusVisible: string;
    }
    export type ButtonBaseClassKey = keyof ButtonBaseClasses;
    export function getButtonBaseUtilityClass(slot: string): string;
    const buttonBaseClasses: ButtonBaseClasses;
    export default buttonBaseClasses;
}
declare module "@mui/material/ButtonBase/ButtonBase" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { TouchRippleActions, TouchRippleProps } from "@mui/material/ButtonBase/TouchRipple";
    import { OverrideProps, OverridableComponent, OverridableTypeMap } from "@mui/material/OverridableComponent";
    import { ButtonBaseClasses } from "@mui/material/ButtonBase/buttonBaseClasses";
    export interface ButtonBaseTypeMap<P = {}, D extends React.ElementType = 'button'> {
        props: P & {
            /**
             * A ref for imperative actions.
             * It currently only supports `focusVisible()` action.
             */
            action?: React.Ref<ButtonBaseActions>;
            /**
             * If `true`, the ripples are centered.
             * They won't start at the cursor interaction position.
             * @default false
             */
            centerRipple?: boolean;
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ButtonBaseClasses>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the ripple effect is disabled.
             *
             * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
             * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
             * @default false
             */
            disableRipple?: boolean;
            /**
             * If `true`, the touch ripple effect is disabled.
             * @default false
             */
            disableTouchRipple?: boolean;
            /**
             * If `true`, the base button will have a keyboard focus ripple.
             * @default false
             */
            focusRipple?: boolean;
            /**
             * This prop can help identify which element has keyboard focus.
             * The class name will be applied when the element gains the focus through keyboard interaction.
             * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
             * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
             * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
             * if needed.
             */
            focusVisibleClassName?: string;
            /**
             * The component used to render a link when the `href` prop is provided.
             * @default 'a'
             */
            LinkComponent?: React.ElementType;
            /**
             * Callback fired when the component is focused with a keyboard.
             * We trigger a `onFocus` callback too.
             */
            onFocusVisible?: React.FocusEventHandler<any>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * @default 0
             */
            tabIndex?: NonNullable<React.HTMLAttributes<any>['tabIndex']>;
            /**
             * Props applied to the `TouchRipple` element.
             */
            TouchRippleProps?: Partial<TouchRippleProps>;
            /**
             * A ref that points to the `TouchRipple` element.
             */
            touchRippleRef?: React.Ref<TouchRippleActions>;
        };
        defaultComponent: D;
    }
    /**
     * utility to create component types that inherit props from ButtonBase.
     * This component has an additional overload if the `href` prop is set which
     * can make extension quite tricky
     */
    export interface ExtendButtonBaseTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & Omit<ButtonBaseTypeMap['props'], 'classes'>;
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendButtonBase<M extends OverridableTypeMap> = ((props: {
        href: string;
    } & OverrideProps<ExtendButtonBaseTypeMap<M>, 'a'>) => JSX.Element) & OverridableComponent<ExtendButtonBaseTypeMap<M>>;
    /**
     * `ButtonBase` contains as few styles as possible.
     * It aims to be a simple building block for creating a button.
     * It contains a load of style reset and some focus/ripple logic.
     *
     * Demos:
     *
     * - [Buttons](https://mui.com/components/buttons/)
     *
     * API:
     *
     * - [ButtonBase API](https://mui.com/api/button-base/)
     */
    const ButtonBase: ExtendButtonBase<ButtonBaseTypeMap>;
    export type ButtonBaseProps<D extends React.ElementType = ButtonBaseTypeMap['defaultComponent'], P = {}> = OverrideProps<ButtonBaseTypeMap<P, D>, D>;
    export interface ButtonBaseActions {
        focusVisible(): void;
    }
    export default ButtonBase;
}
declare module "@mui/material/ButtonBase/index" {
    export { default } from "@mui/material/ButtonBase/ButtonBase";
    export * from "@mui/material/ButtonBase/ButtonBase";
    export { default as buttonBaseClasses } from "@mui/material/ButtonBase/buttonBaseClasses";
    export * from "@mui/material/ButtonBase/buttonBaseClasses";
    export { default as touchRippleClasses } from "@mui/material/ButtonBase/touchRippleClasses";
    export * from "@mui/material/ButtonBase/touchRippleClasses";
}
declare module "@mui/material/BottomNavigationAction/bottomNavigationActionClasses" {
    export interface BottomNavigationActionClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if selected. */
        selected: string;
        /** State class applied to the root element if `showLabel={false}` and not selected. */
        iconOnly: string;
        /** Styles applied to the label's span element. */
        label: string;
    }
    export type BottomNavigationActionClassKey = keyof BottomNavigationActionClasses;
    export function getBottomNavigationActionUtilityClass(slot: string): string;
    const bottomNavigationActionClasses: BottomNavigationActionClasses;
    export default bottomNavigationActionClasses;
}
declare module "@mui/material/BottomNavigationAction/BottomNavigationAction" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { ButtonBaseTypeMap, ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { BottomNavigationActionClasses } from "@mui/material/BottomNavigationAction/bottomNavigationActionClasses";
    export type BottomNavigationActionTypeMap<P, D extends React.ElementType> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * This prop isn't supported.
             * Use the `component` prop if you need to change the children structure.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BottomNavigationActionClasses>;
            /**
             * The icon to display.
             */
            icon?: React.ReactNode;
            /**
             * The label element.
             */
            label?: React.ReactNode;
            /**
             * If `true`, the `BottomNavigationAction` will show its label.
             * By default, only the selected `BottomNavigationAction`
             * inside `BottomNavigation` will show its label.
             *
             * The prop defaults to the value (`false`) inherited from the parent BottomNavigation component.
             */
            showLabel?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * You can provide your own value. Otherwise, we fallback to the child position index.
             */
            value?: any;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Bottom Navigation](https://mui.com/components/bottom-navigation/)
     *
     * API:
     *
     * - [BottomNavigationAction API](https://mui.com/api/bottom-navigation-action/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const BottomNavigationAction: ExtendButtonBase<BottomNavigationActionTypeMap<{}, ButtonBaseTypeMap['defaultComponent']>>;
    export type BottomNavigationActionProps<D extends React.ElementType = ButtonBaseTypeMap['defaultComponent'], P = {}> = OverrideProps<BottomNavigationActionTypeMap<P, D>, D>;
    export default BottomNavigationAction;
}
declare module "@mui/material/BottomNavigationAction/index" {
    export { default } from "@mui/material/BottomNavigationAction/BottomNavigationAction";
    export * from "@mui/material/BottomNavigationAction/BottomNavigationAction";
    export { default as bottomNavigationActionClasses } from "@mui/material/BottomNavigationAction/bottomNavigationActionClasses";
    export * from "@mui/material/BottomNavigationAction/bottomNavigationActionClasses";
}
declare module "@mui/material/BottomNavigation/bottomNavigationClasses" {
    export interface BottomNavigationClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type BottomNavigationClassKey = keyof BottomNavigationClasses;
    export function getBottomNavigationUtilityClass(slot: string): string;
    const bottomNavigationClasses: BottomNavigationClasses;
    export default bottomNavigationClasses;
}
declare module "@mui/material/BottomNavigation/BottomNavigation" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { BottomNavigationClasses } from "@mui/material/BottomNavigation/bottomNavigationClasses";
    export interface BottomNavigationTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BottomNavigationClasses>;
            /**
             * Callback fired when the value changes.
             *
             * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
             * @param {any} value We default to the index of the child.
             */
            onChange?: (event: React.SyntheticEvent, value: any) => void;
            /**
             * If `true`, all `BottomNavigationAction`s will show their labels.
             * By default, only the selected `BottomNavigationAction` will show its label.
             * @default false
             */
            showLabels?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The value of the currently selected `BottomNavigationAction`.
             */
            value?: any;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Bottom Navigation](https://mui.com/components/bottom-navigation/)
     *
     * API:
     *
     * - [BottomNavigation API](https://mui.com/api/bottom-navigation/)
     */
    const BottomNavigation: OverridableComponent<BottomNavigationTypeMap>;
    export type BottomNavigationProps<D extends React.ElementType = BottomNavigationTypeMap['defaultComponent'], P = {}> = OverrideProps<BottomNavigationTypeMap<P, D>, D>;
    export default BottomNavigation;
}
declare module "@mui/material/BottomNavigation/index" {
    export { default } from "@mui/material/BottomNavigation/BottomNavigation";
    export * from "@mui/material/BottomNavigation/BottomNavigation";
    export { default as bottomNavigationClasses } from "@mui/material/BottomNavigation/bottomNavigationClasses";
    export * from "@mui/material/BottomNavigation/bottomNavigationClasses";
}
declare module "@mui/material/Breadcrumbs/breadcrumbsClasses" {
    export interface BreadcrumbsClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the ol element. */
        ol: string;
        /** Styles applied to the li element. */
        li: string;
        /** Styles applied to the separator element. */
        separator: string;
    }
    export type BreadcrumbsClassKey = keyof BreadcrumbsClasses;
    export function getBreadcrumbsUtilityClass(slot: string): string;
    const breadcrumbsClasses: BreadcrumbsClasses;
    export default breadcrumbsClasses;
}
declare module "@mui/material/Breadcrumbs/Breadcrumbs" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { BreadcrumbsClasses } from "@mui/material/Breadcrumbs/breadcrumbsClasses";
    export interface BreadcrumbsTypeMap<P = {}, D extends React.ElementType = 'nav'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BreadcrumbsClasses>;
            /**
             * Override the default label for the expand button.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @default 'Show path'
             */
            expandText?: string;
            /**
             * If max items is exceeded, the number of items to show after the ellipsis.
             * @default 1
             */
            itemsAfterCollapse?: number;
            /**
             * If max items is exceeded, the number of items to show before the ellipsis.
             * @default 1
             */
            itemsBeforeCollapse?: number;
            /**
             * Specifies the maximum number of breadcrumbs to display. When there are more
             * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
             * will be shown, with an ellipsis in between.
             * @default 8
             */
            maxItems?: number;
            /**
             * Custom separator node.
             * @default '/'
             */
            separator?: React.ReactNode;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Breadcrumbs](https://mui.com/components/breadcrumbs/)
     *
     * API:
     *
     * - [Breadcrumbs API](https://mui.com/api/breadcrumbs/)
     */
    const Breadcrumbs: OverridableComponent<BreadcrumbsTypeMap>;
    export type BreadcrumbsProps<D extends React.ElementType = BreadcrumbsTypeMap['defaultComponent'], P = {}> = OverrideProps<BreadcrumbsTypeMap<P, D>, D>;
    export default Breadcrumbs;
}
declare module "@mui/material/Breadcrumbs/index" {
    export { default } from "@mui/material/Breadcrumbs/Breadcrumbs";
    export * from "@mui/material/Breadcrumbs/Breadcrumbs";
    export { default as breadcrumbsClasses } from "@mui/material/Breadcrumbs/breadcrumbsClasses";
    export * from "@mui/material/Breadcrumbs/breadcrumbsClasses";
}
declare module "@mui/material/ButtonGroup/buttonGroupClasses" {
    export interface ButtonGroupClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="contained"`. */
        contained: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="text"`. */
        text: string;
        /** Styles applied to the root element if `disableElevation={true}`. */
        disableElevation: string;
        /** State class applied to the child elements if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `fullWidth={true}`. */
        fullWidth: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the children. */
        grouped: string;
        /** Styles applied to the children if `orientation="horizontal"`. */
        groupedHorizontal: string;
        /** Styles applied to the children if `orientation="vertical"`. */
        groupedVertical: string;
        /** Styles applied to the children if `variant="text"`. */
        groupedText: string;
        /** Styles applied to the children if `variant="text"` and `orientation="horizontal"`. */
        groupedTextHorizontal: string;
        /** Styles applied to the children if `variant="text"` and `orientation="vertical"`. */
        groupedTextVertical: string;
        /** Styles applied to the children if `variant="text"` and `color="primary"`. */
        groupedTextPrimary: string;
        /** Styles applied to the children if `variant="text"` and `color="secondary"`. */
        groupedTextSecondary: string;
        /** Styles applied to the children if `variant="outlined"`. */
        groupedOutlined: string;
        /** Styles applied to the children if `variant="outlined"` and `orientation="horizontal"`. */
        groupedOutlinedHorizontal: string;
        /** Styles applied to the children if `variant="outlined"` and `orientation="vertical"`. */
        groupedOutlinedVertical: string;
        /** Styles applied to the children if `variant="outlined"` and `color="primary"`. */
        groupedOutlinedPrimary: string;
        /** Styles applied to the children if `variant="outlined"` and `color="secondary"`. */
        groupedOutlinedSecondary: string;
        /** Styles applied to the children if `variant="contained"`. */
        groupedContained: string;
        /** Styles applied to the children if `variant="contained"` and `orientation="horizontal"`. */
        groupedContainedHorizontal: string;
        /** Styles applied to the children if `variant="contained"` and `orientation="vertical"`. */
        groupedContainedVertical: string;
        /** Styles applied to the children if `variant="contained"` and `color="primary"`. */
        groupedContainedPrimary: string;
        /** Styles applied to the children if `variant="contained"` and `color="secondary"`. */
        groupedContainedSecondary: string;
    }
    export type ButtonGroupClassKey = keyof ButtonGroupClasses;
    export function getButtonGroupUtilityClass(slot: string): string;
    const buttonGroupClasses: ButtonGroupClasses;
    export default buttonGroupClasses;
}
declare module "@mui/material/ButtonGroup/ButtonGroup" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/index";
    import { ButtonGroupClasses } from "@mui/material/ButtonGroup/buttonGroupClasses";
    export interface ButtonGroupPropsColorOverrides {
    }
    export interface ButtonGroupPropsVariantOverrides {
    }
    export interface ButtonGroupPropsSizeOverrides {
    }
    export interface ButtonGroupTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ButtonGroupClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'primary'
             */
            color?: OverridableStringUnion<'inherit' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', ButtonGroupPropsColorOverrides>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, no elevation is used.
             * @default false
             */
            disableElevation?: boolean;
            /**
             * If `true`, the button keyboard focus ripple is disabled.
             * @default false
             */
            disableFocusRipple?: boolean;
            /**
             * If `true`, the button ripple effect is disabled.
             * @default false
             */
            disableRipple?: boolean;
            /**
             * If `true`, the buttons will take up the full width of its container.
             * @default false
             */
            fullWidth?: boolean;
            /**
             * The component orientation (layout flow direction).
             * @default 'horizontal'
             */
            orientation?: 'vertical' | 'horizontal';
            /**
             * The size of the component.
             * `small` is equivalent to the dense button styling.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium' | 'large', ButtonGroupPropsSizeOverrides>;
            /**
             * The variant to use.
             * @default 'outlined'
             */
            variant?: OverridableStringUnion<'text' | 'outlined' | 'contained', ButtonGroupPropsVariantOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Button Group](https://mui.com/components/button-group/)
     *
     * API:
     *
     * - [ButtonGroup API](https://mui.com/api/button-group/)
     */
    const ButtonGroup: OverridableComponent<ButtonGroupTypeMap>;
    export type ButtonGroupProps<D extends React.ElementType = ButtonGroupTypeMap['defaultComponent'], P = {}> = OverrideProps<ButtonGroupTypeMap<P, D>, D>;
    export default ButtonGroup;
}
declare module "@mui/material/ButtonGroup/index" {
    export { default } from "@mui/material/ButtonGroup/ButtonGroup";
    export * from "@mui/material/ButtonGroup/ButtonGroup";
    export { default as buttonGroupClasses } from "@mui/material/ButtonGroup/buttonGroupClasses";
    export * from "@mui/material/ButtonGroup/buttonGroupClasses";
}
declare module "@mui/material/Button/buttonClasses" {
    export interface ButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="text"`. */
        text: string;
        /** Styles applied to the root element if `variant="text"` and `color="inherit"`. */
        textInherit: string;
        /** Styles applied to the root element if `variant="text"` and `color="primary"`. */
        textPrimary: string;
        /** Styles applied to the root element if `variant="text"` and `color="secondary"`. */
        textSecondary: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="inherit"`. */
        outlinedInherit: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="primary"`. */
        outlinedPrimary: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */
        outlinedSecondary: string;
        /** Styles applied to the root element if `variant="contained"`. */
        contained: string;
        /** Styles applied to the root element if `variant="contained"` and `color="inherit"`. */
        containedInherit: string;
        /** Styles applied to the root element if `variant="contained"` and `color="primary"`. */
        containedPrimary: string;
        /** Styles applied to the root element if `variant="contained"` and `color="secondary"`. */
        containedSecondary: string;
        /** Styles applied to the root element if `disableElevation={true}`. */
        disableElevation: string;
        /** State class applied to the ButtonBase root element if the button is keyboard focused. */
        focusVisible: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `color="inherit"`. */
        colorInherit: string;
        /** Styles applied to the root element if `size="small"` and `variant="text"`. */
        textSizeSmall: string;
        /** Styles applied to the root element if `size="medium"` and `variant="text"`. */
        textSizeMedium: string;
        /** Styles applied to the root element if `size="large"` and `variant="text"`. */
        textSizeLarge: string;
        /** Styles applied to the root element if `size="small"` and `variant="outlined"`. */
        outlinedSizeSmall: string;
        /** Styles applied to the root element if `size="medium"` and `variant="outlined"`. */
        outlinedSizeMedium: string;
        /** Styles applied to the root element if `size="large"` and `variant="outlined"`. */
        outlinedSizeLarge: string;
        /** Styles applied to the root element if `size="small"` and `variant="contained"`. */
        containedSizeSmall: string;
        /** Styles applied to the root element if `size="medium"` and `variant="contained"`. */
        containedSizeMedium: string;
        /** Styles applied to the root element if `size="large"` and `variant="contained"`. */
        containedSizeLarge: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** Styles applied to the root element if `size="large"`. */
        sizeLarge: string;
        /** Styles applied to the root element if `fullWidth={true}`. */
        fullWidth: string;
        /** Styles applied to the startIcon element if supplied. */
        startIcon: string;
        /** Styles applied to the endIcon element if supplied. */
        endIcon: string;
        /** Styles applied to the icon element if supplied and `size="small"`. */
        iconSizeSmall: string;
        /** Styles applied to the icon element if supplied and `size="medium"`. */
        iconSizeMedium: string;
        /** Styles applied to the icon element if supplied and `size="large"`. */
        iconSizeLarge: string;
    }
    export type ButtonClassKey = keyof ButtonClasses;
    export function getButtonUtilityClass(slot: string): string;
    const buttonClasses: ButtonClasses;
    export default buttonClasses;
}
declare module "@mui/material/Button/Button" {
    import * as React from 'react';
    import { DistributiveOmit, OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps, OverridableComponent, OverridableTypeMap } from "@mui/material/OverridableComponent";
    import { ButtonClasses } from "@mui/material/Button/buttonClasses";
    export interface ButtonPropsVariantOverrides {
    }
    export interface ButtonPropsColorOverrides {
    }
    export interface ButtonPropsSizeOverrides {
    }
    export type ButtonTypeMap<P = {}, D extends React.ElementType = 'button'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ButtonClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'primary'
             */
            color?: OverridableStringUnion<'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning', ButtonPropsColorOverrides>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, no elevation is used.
             * @default false
             */
            disableElevation?: boolean;
            /**
             * If `true`, the  keyboard focus ripple is disabled.
             * @default false
             */
            disableFocusRipple?: boolean;
            /**
             * Element placed after the children.
             */
            endIcon?: React.ReactNode;
            /**
             * If `true`, the button will take up the full width of its container.
             * @default false
             */
            fullWidth?: boolean;
            /**
             * The URL to link to when the button is clicked.
             * If defined, an `a` element will be used as the root node.
             */
            href?: string;
            /**
             * The size of the component.
             * `small` is equivalent to the dense button styling.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium' | 'large', ButtonPropsSizeOverrides>;
            /**
             * Element placed before the children.
             */
            startIcon?: React.ReactNode;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * @default 'text'
             */
            variant?: OverridableStringUnion<'text' | 'outlined' | 'contained', ButtonPropsVariantOverrides>;
        };
        defaultComponent: D;
    }>;
    /**
     * utility to create component types that inherit props from ButtonBase.
     * This component has an additional overload if the `href` prop is set which
     * can make extension quite tricky
     */
    export interface ExtendButtonTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & (M['props'] extends {
            classes?: Record<string, string>;
        } ? DistributiveOmit<ButtonTypeMap['props'], 'classes'> : ButtonTypeMap['props']);
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendButton<M extends OverridableTypeMap> = ((props: {
        href: string;
    } & OverrideProps<ExtendButtonBaseTypeMap<M>, 'a'>) => JSX.Element) & OverridableComponent<ExtendButtonBaseTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Button Group](https://mui.com/components/button-group/)
     * - [Buttons](https://mui.com/components/buttons/)
     *
     * API:
     *
     * - [Button API](https://mui.com/api/button/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const Button: ExtendButtonBase<ButtonTypeMap>;
    export type ButtonProps<D extends React.ElementType = ButtonTypeMap['defaultComponent'], P = {}> = OverrideProps<ButtonTypeMap<P, D>, D>;
    export default Button;
}
declare module "@mui/material/Button/index" {
    export { default } from "@mui/material/Button/Button";
    export * from "@mui/material/Button/Button";
    export { default as buttonClasses } from "@mui/material/Button/buttonClasses";
    export * from "@mui/material/Button/buttonClasses";
}
declare module "@mui/material/CardActionArea/cardActionAreaClasses" {
    export interface CardActionAreaClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the ButtonBase root element if the action area is keyboard focused. */
        focusVisible: string;
        /** Styles applied to the overlay that covers the action area when it is keyboard focused. */
        focusHighlight: string;
    }
    export type CardActionAreaClassKey = keyof CardActionAreaClasses;
    export function getCardActionAreaUtilityClass(slot: string): string;
    const cardActionAreaClasses: CardActionAreaClasses;
    export default cardActionAreaClasses;
}
declare module "@mui/material/CardActionArea/CardActionArea" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { ButtonBaseTypeMap, ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { CardActionAreaClasses } from "@mui/material/CardActionArea/cardActionAreaClasses";
    export type CardActionAreaTypeMap<P, D extends React.ElementType> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<CardActionAreaClasses>;
            focusVisibleClassName?: string;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     *
     * API:
     *
     * - [CardActionArea API](https://mui.com/api/card-action-area/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const CardActionArea: ExtendButtonBase<CardActionAreaTypeMap<{}, ButtonBaseTypeMap['defaultComponent']>>;
    export type CardActionAreaProps<D extends React.ElementType = ButtonBaseTypeMap['defaultComponent'], P = {}> = OverrideProps<CardActionAreaTypeMap<P, D>, D>;
    export default CardActionArea;
}
declare module "@mui/material/CardActionArea/index" {
    export { default } from "@mui/material/CardActionArea/CardActionArea";
    export * from "@mui/material/CardActionArea/CardActionArea";
    export { default as cardActionAreaClasses } from "@mui/material/CardActionArea/cardActionAreaClasses";
    export * from "@mui/material/CardActionArea/cardActionAreaClasses";
}
declare module "@mui/material/CardActions/cardActionsClasses" {
    export interface CardActionsClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `disableSpacing={true}`. */
        spacing: string;
    }
    export type CardActionsClassKey = keyof CardActionsClasses;
    export function getCardActionsUtilityClass(slot: string): string;
    const cardActionsClasses: CardActionsClasses;
    export default cardActionsClasses;
}
declare module "@mui/material/CardActions/CardActions" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { CardActionsClasses } from "@mui/material/CardActions/cardActionsClasses";
    export interface CardActionsProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<CardActionsClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * If `true`, the actions do not have additional margin.
         * @default false
         */
        disableSpacing?: boolean;
    }
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     *
     * API:
     *
     * - [CardActions API](https://mui.com/api/card-actions/)
     */
    export type CardActions = (props: CardActionsProps) => JSX.Element;
    export default CardActions;
}
declare module "@mui/material/CardActions/index" {
    export { default } from "@mui/material/CardActions/CardActions";
    export * from "@mui/material/CardActions/CardActions";
    export { default as cardActionsClasses } from "@mui/material/CardActions/cardActionsClasses";
    export * from "@mui/material/CardActions/cardActionsClasses";
}
declare module "@mui/material/CardContent/cardContentClasses" {
    export interface CardContentClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type CardContentClassKey = keyof CardContentClasses;
    export function getCardContentUtilityClass(slot: string): string;
    const cardContentClasses: CardContentClasses;
    export default cardContentClasses;
}
declare module "@mui/material/CardContent/CardContent" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/index";
    import { CardContentClasses } from "@mui/material/CardContent/cardContentClasses";
    export interface CardContentTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<CardContentClasses>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     *
     * API:
     *
     * - [CardContent API](https://mui.com/api/card-content/)
     */
    const CardContent: OverridableComponent<CardContentTypeMap>;
    export type CardContentProps<D extends React.ElementType = CardContentTypeMap['defaultComponent'], P = {}> = OverrideProps<CardContentTypeMap<P, D>, D>;
    export default CardContent;
}
declare module "@mui/material/CardContent/index" {
    export { default } from "@mui/material/CardContent/CardContent";
    export * from "@mui/material/CardContent/CardContent";
    export { default as cardContentClasses } from "@mui/material/CardContent/cardContentClasses";
    export * from "@mui/material/CardContent/cardContentClasses";
}
declare module "@mui/material/Typography/typographyClasses" {
    export interface TypographyClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="body2"`. */
        body2: string;
        /** Styles applied to the root element if `variant="body1"`. */
        body1: string;
        /** Styles applied to the root element if `variant="caption"`. */
        caption: string;
        /** Styles applied to the root element if `variant="button"`. */
        button: string;
        /** Styles applied to the root element if `variant="h1"`. */
        h1: string;
        /** Styles applied to the root element if `variant="h2"`. */
        h2: string;
        /** Styles applied to the root element if `variant="h3"`. */
        h3: string;
        /** Styles applied to the root element if `variant="h4"`. */
        h4: string;
        /** Styles applied to the root element if `variant="h5"`. */
        h5: string;
        /** Styles applied to the root element if `variant="h6"`. */
        h6: string;
        /** Styles applied to the root element if `variant="subtitle1"`. */
        subtitle1: string;
        /** Styles applied to the root element if `variant="subtitle2"`. */
        subtitle2: string;
        /** Styles applied to the root element if `variant="overline"`. */
        overline: string;
        /** Styles applied to the root element if `variant="inherit"`. */
        inherit: string;
        /** Styles applied to the root element if `align="left"`. */
        alignLeft: string;
        /** Styles applied to the root element if `align="center"`. */
        alignCenter: string;
        /** Styles applied to the root element if `align="right"`. */
        alignRight: string;
        /** Styles applied to the root element if `align="justify"`. */
        alignJustify: string;
        /** Styles applied to the root element if `nowrap={true}`. */
        noWrap: string;
        /** Styles applied to the root element if `gutterBottom={true}`. */
        gutterBottom: string;
        /** Styles applied to the root element if `paragraph={true}`. */
        paragraph: string;
    }
    export type TypographyClassKey = keyof TypographyClasses;
    export function getTypographyUtilityClass(slot: string): string;
    const typographyClasses: TypographyClasses;
    export default typographyClasses;
}
declare module "@mui/material/Typography/Typography" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps, SystemProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverrideProps, OverridableComponent } from "@mui/material/OverridableComponent";
    import { Variant } from "@mui/material/styles/createTypography";
    import { TypographyClasses } from "@mui/material/Typography/typographyClasses";
    export interface TypographyPropsVariantOverrides {
    }
    export interface TypographyTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & SystemProps<Theme> & {
            /**
             * Set the text-align on the component.
             * @default 'inherit'
             */
            align?: 'inherit' | 'left' | 'center' | 'right' | 'justify';
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TypographyClasses>;
            /**
             * If `true`, the text will have a bottom margin.
             * @default false
             */
            gutterBottom?: boolean;
            /**
             * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
             *
             * Note that text overflow can only happen with block or inline-block level elements
             * (the element needs to have a width in order to overflow).
             * @default false
             */
            noWrap?: boolean;
            /**
             * If `true`, the element will be a paragraph element.
             * @default false
             */
            paragraph?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * Applies the theme typography styles.
             * @default 'body1'
             */
            variant?: OverridableStringUnion<Variant | 'inherit', TypographyPropsVariantOverrides>;
            /**
             * The component maps the variant prop to a range of different HTML element types.
             * For instance, subtitle1 to `<h6>`.
             * If you wish to change that mapping, you can provide your own.
             * Alternatively, you can use the `component` prop.
             * @default {
             *   h1: 'h1',
             *   h2: 'h2',
             *   h3: 'h3',
             *   h4: 'h4',
             *   h5: 'h5',
             *   h6: 'h6',
             *   subtitle1: 'h6',
             *   subtitle2: 'h6',
             *   body1: 'p',
             *   body2: 'p',
             *   inherit: 'p',
             * }
             */
            variantMapping?: Partial<Record<OverridableStringUnion<Variant | 'inherit', TypographyPropsVariantOverrides>, string>>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Breadcrumbs](https://mui.com/components/breadcrumbs/)
     * - [Typography](https://mui.com/components/typography/)
     *
     * API:
     *
     * - [Typography API](https://mui.com/api/typography/)
     */
    const Typography: OverridableComponent<TypographyTypeMap>;
    export type TypographyProps<D extends React.ElementType = TypographyTypeMap['defaultComponent'], P = {}> = OverrideProps<TypographyTypeMap<P, D>, D>;
    export default Typography;
}
declare module "@mui/material/Typography/index" {
    export { default } from "@mui/material/Typography/Typography";
    export * from "@mui/material/Typography/Typography";
    export { default as typographyClasses } from "@mui/material/Typography/typographyClasses";
    export * from "@mui/material/Typography/typographyClasses";
}
declare module "@mui/material/CardHeader/cardHeaderClasses" {
    export interface CardHeaderClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the avatar element. */
        avatar: string;
        /** Styles applied to the action element. */
        action: string;
        /** Styles applied to the content wrapper element. */
        content: string;
        /** Styles applied to the title Typography element. */
        title: string;
        /** Styles applied to the subheader Typography element. */
        subheader: string;
    }
    export type CardHeaderClassKey = keyof CardHeaderClasses;
    export function getCardHeaderUtilityClass(slot: string): string;
    const cardHeaderClasses: CardHeaderClasses;
    export default cardHeaderClasses;
}
declare module "@mui/material/CardHeader/CardHeader" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { TypographyProps } from "@mui/material/Typography/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/index";
    import { CardHeaderClasses } from "@mui/material/CardHeader/cardHeaderClasses";
    export interface CardHeaderTypeMap<Props = {}, DefaultComponent extends React.ElementType = 'div', TitleTypographyComponent extends React.ElementType = 'span', SubheaderTypographyComponent extends React.ElementType = 'span'> {
        props: Props & {
            /**
             * The action to display in the card header.
             */
            action?: React.ReactNode;
            /**
             * The Avatar element to display.
             */
            avatar?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<CardHeaderClasses>;
            /**
             * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
             * This can be useful to render an alternative Typography variant by wrapping
             * the `title` text, and optional `subheader` text
             * with the Typography component.
             * @default false
             */
            disableTypography?: boolean;
            /**
             * The content of the component.
             */
            subheader?: React.ReactNode;
            /**
             * These props will be forwarded to the subheader
             * (as long as disableTypography is not `true`).
             */
            subheaderTypographyProps?: TypographyProps<SubheaderTypographyComponent, {
                component?: SubheaderTypographyComponent;
            }>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The content of the component.
             */
            title?: React.ReactNode;
            /**
             * These props will be forwarded to the title
             * (as long as disableTypography is not `true`).
             */
            titleTypographyProps?: TypographyProps<TitleTypographyComponent, {
                component?: TitleTypographyComponent;
            }>;
        };
        defaultComponent: DefaultComponent;
    }
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     *
     * API:
     *
     * - [CardHeader API](https://mui.com/api/card-header/)
     */
    const CardHeader: OverridableCardHeader;
    export interface OverridableCardHeader extends OverridableComponent<CardHeaderTypeMap> {
        <DefaultComponent extends React.ElementType = CardHeaderTypeMap['defaultComponent'], Props = {}, TitleTypographyComponent extends React.ElementType = 'span', SubheaderTypographyComponent extends React.ElementType = 'span'>(props: CardHeaderPropsWithComponent<DefaultComponent, Props, TitleTypographyComponent, SubheaderTypographyComponent>): JSX.Element;
    }
    export type CardHeaderProps<DefaultComponent extends React.ElementType = CardHeaderTypeMap['defaultComponent'], Props = {}, TitleTypographyComponent extends React.ElementType = 'span', SubheaderTypographyComponent extends React.ElementType = 'span'> = OverrideProps<CardHeaderTypeMap<Props, DefaultComponent, TitleTypographyComponent, SubheaderTypographyComponent>, DefaultComponent>;
    export type CardHeaderPropsWithComponent<DefaultComponent extends React.ElementType = CardHeaderTypeMap['defaultComponent'], Props = {}, TitleTypographyComponent extends React.ElementType = 'span', SubheaderTypographyComponent extends React.ElementType = 'span'> = {
        /**
         * The component used for the root node.
         * Either a string to use a HTML element or a component.
         */
        component?: DefaultComponent;
    } & CardHeaderProps<DefaultComponent, Props, TitleTypographyComponent, SubheaderTypographyComponent>;
    export default CardHeader;
}
declare module "@mui/material/CardHeader/index" {
    export { default } from "@mui/material/CardHeader/CardHeader";
    export * from "@mui/material/CardHeader/CardHeader";
    export { default as cardHeaderClasses } from "@mui/material/CardHeader/cardHeaderClasses";
    export * from "@mui/material/CardHeader/cardHeaderClasses";
}
declare module "@mui/material/CardMedia/cardMediaClasses" {
    export interface CardMediaClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `component="video, audio, picture, iframe, or img"`. */
        media: string;
        /** Styles applied to the root element if `component="picture or img"`. */
        img: string;
    }
    export type CardMediaClassKey = keyof CardMediaClasses;
    export function getCardMediaUtilityClass(slot: string): string;
    const cardMediaClasses: CardMediaClasses;
    export default cardMediaClasses;
}
declare module "@mui/material/CardMedia/CardMedia" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { CardMediaClasses } from "@mui/material/CardMedia/cardMediaClasses";
    export interface CardMediaTypeMap<P, D extends React.ElementType> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<CardMediaClasses>;
            /**
             * Image to be displayed as a background image.
             * Either `image` or `src` prop must be specified.
             * Note that caller must specify height otherwise the image will not be visible.
             */
            image?: string;
            /**
             * An alias for `image` property.
             * Available only with media components.
             * Media components: `video`, `audio`, `picture`, `iframe`, `img`.
             */
            src?: string;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     *
     * API:
     *
     * - [CardMedia API](https://mui.com/api/card-media/)
     */
    const CardMedia: OverridableComponent<CardMediaTypeMap<{}, 'div'>>;
    export type CardMediaProps<D extends React.ElementType = 'div', P = {}> = OverrideProps<CardMediaTypeMap<P, D>, D>;
    export default CardMedia;
}
declare module "@mui/material/CardMedia/index" {
    export { default } from "@mui/material/CardMedia/CardMedia";
    export * from "@mui/material/CardMedia/CardMedia";
    export { default as cardMediaClasses } from "@mui/material/CardMedia/cardMediaClasses";
    export * from "@mui/material/CardMedia/cardMediaClasses";
}
declare module "@mui/material/Card/cardClasses" {
    export interface CardClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type CardClassKey = keyof CardClasses;
    export function getCardUtilityClass(slot: string): string;
    const cardClasses: CardClasses;
    export default cardClasses;
}
declare module "@mui/material/Card/Card" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { DistributiveOmit } from "@mui/types/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { CardClasses } from "@mui/material/Card/cardClasses";
    export interface CardPropsColorOverrides {
    }
    export interface CardTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & DistributiveOmit<PaperProps, 'classes'> & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<CardClasses>;
            /**
             * If `true`, the card will use raised styling.
             * @default false
             */
            raised?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     *
     * API:
     *
     * - [Card API](https://mui.com/api/card/)
     * - inherits [Paper API](https://mui.com/api/paper/)
     */
    const Card: OverridableComponent<CardTypeMap>;
    export type CardProps<D extends React.ElementType = CardTypeMap['defaultComponent'], P = {}> = OverrideProps<CardTypeMap<P, D>, D>;
    export default Card;
}
declare module "@mui/material/Card/index" {
    export { default } from "@mui/material/Card/Card";
    export * from "@mui/material/Card/Card";
    export { default as cardClasses } from "@mui/material/Card/cardClasses";
    export * from "@mui/material/Card/cardClasses";
}
declare module "@mui/material/internal/switchBaseClasses" {
    export interface SwitchBaseClasses {
        root: string;
        checked: string;
        disabled: string;
        input: string;
        edgeStart: string;
        edgeEnd: string;
    }
    export type SwitchBaseClassKey = keyof SwitchBaseClasses;
    export function getSwitchBaseUtilityClass(slot: string): string;
    const switchBaseClasses: SwitchBaseClasses;
    export default switchBaseClasses;
}
declare module "@mui/material/internal/SwitchBase" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { ButtonBaseProps } from "@mui/material/ButtonBase/index";
    import { SwitchBaseClasses } from "@mui/material/internal/switchBaseClasses";
    export interface SwitchBaseProps extends StandardProps<ButtonBaseProps, 'children' | 'onChange' | 'type' | 'value'> {
        autoFocus?: boolean;
        /**
         * If `true`, the component is checked.
         */
        checked?: boolean;
        checkedIcon: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SwitchBaseClasses>;
        /**
         * The default checked state. Use when the component is not controlled.
         */
        defaultChecked?: boolean;
        disabled?: boolean;
        /**
         * If `true`, the ripple effect is disabled.
         */
        disableRipple?: boolean;
        /**
         * If `true`, the  keyboard focus ripple is disabled.
         * @default false
         */
        disableFocusRipple?: boolean;
        /**
         * If given, uses a negative margin to counteract the padding on one
         * side (this is often helpful for aligning the left or right
         * side of the icon with content above or below, without ruining the border
         * size and shape).
         * @default false
         */
        edge?: 'start' | 'end' | false;
        icon: React.ReactNode;
        /**
         * The id of the `input` element.
         */
        id?: string;
        /**
         * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
         */
        inputProps?: React.InputHTMLAttributes<HTMLInputElement>;
        /**
         * Pass a ref to the `input` element.
         */
        inputRef?: React.Ref<any>;
        /**
         * Name attribute of the `input` element.
         */
        name?: string;
        /**
         * Callback fired when the state is changed.
         *
         * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         * You can pull out the new checked state by accessing `event.target.checked` (boolean).
         */
        onChange?: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;
        readOnly?: boolean;
        /**
         * If `true`, the `input` element is required.
         */
        required?: boolean;
        tabIndex?: number;
        type?: React.InputHTMLAttributes<HTMLInputElement>['type'];
        /**
         * The value of the component. The DOM API casts this to a string.
         */
        value?: unknown;
    }
    const SwitchBase: React.JSXElementConstructor<SwitchBaseProps>;
    export default SwitchBase;
}
declare module "@mui/material/Checkbox/checkboxClasses" {
    export interface CheckboxClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `checked={true}`. */
        checked: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `indeterminate={true}`. */
        indeterminate: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
    }
    export type CheckboxClassKey = keyof CheckboxClasses;
    export function getCheckboxUtilityClass(slot: string): string;
    const checkboxClasses: CheckboxClasses;
    export default checkboxClasses;
}
declare module "@mui/material/Checkbox/Checkbox" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { SwitchBaseProps } from "@mui/material/internal/SwitchBase";
    import { CheckboxClasses } from "@mui/material/Checkbox/checkboxClasses";
    export interface CheckboxPropsSizeOverrides {
    }
    export interface CheckboxPropsColorOverrides {
    }
    export interface CheckboxProps extends StandardProps<SwitchBaseProps, 'checkedIcon' | 'color' | 'icon' | 'type'> {
        /**
         * If `true`, the component is checked.
         */
        checked?: SwitchBaseProps['checked'];
        /**
         * The icon to display when the component is checked.
         * @default <CheckBoxIcon />
         */
        checkedIcon?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<CheckboxClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * @default 'primary'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' | 'default', CheckboxPropsColorOverrides>;
        /**
         * If `true`, the component is disabled.
         */
        disabled?: SwitchBaseProps['disabled'];
        /**
         * If `true`, the ripple effect is disabled.
         */
        disableRipple?: SwitchBaseProps['disableRipple'];
        /**
         * The icon to display when the component is unchecked.
         * @default <CheckBoxOutlineBlankIcon />
         */
        icon?: React.ReactNode;
        /**
         * The id of the `input` element.
         */
        id?: SwitchBaseProps['id'];
        /**
         * If `true`, the component appears indeterminate.
         * This does not set the native input element to indeterminate due
         * to inconsistent behavior across browsers.
         * However, we set a `data-indeterminate` attribute on the `input`.
         * @default false
         */
        indeterminate?: boolean;
        /**
         * The icon to display when the component is indeterminate.
         * @default <IndeterminateCheckBoxIcon />
         */
        indeterminateIcon?: React.ReactNode;
        /**
         * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
         */
        inputProps?: SwitchBaseProps['inputProps'];
        /**
         * Pass a ref to the `input` element.
         */
        inputRef?: React.Ref<HTMLInputElement>;
        /**
         * Callback fired when the state is changed.
         *
         * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
         * You can pull out the new checked state by accessing `event.target.checked` (boolean).
         */
        onChange?: SwitchBaseProps['onChange'];
        /**
         * If `true`, the `input` element is required.
         */
        required?: SwitchBaseProps['required'];
        /**
         * The size of the component.
         * `small` is equivalent to the dense checkbox styling.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium', CheckboxPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The value of the component. The DOM API casts this to a string.
         * The browser uses "on" as the default value.
         */
        value?: SwitchBaseProps['value'];
    }
    /**
     *
     * Demos:
     *
     * - [Checkboxes](https://mui.com/components/checkboxes/)
     * - [Transfer List](https://mui.com/components/transfer-list/)
     *
     * API:
     *
     * - [Checkbox API](https://mui.com/api/checkbox/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    export type Checkbox = (props: CheckboxProps) => JSX.Element;
    export default Checkbox;
}
declare module "@mui/material/Checkbox/index" {
    export { default } from "@mui/material/Checkbox/Checkbox";
    export * from "@mui/material/Checkbox/Checkbox";
    export { default as checkboxClasses } from "@mui/material/Checkbox/checkboxClasses";
    export * from "@mui/material/Checkbox/checkboxClasses";
}
declare module "@mui/material/CircularProgress/circularProgressClasses" {
    export interface CircularProgressClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="determinate"`. */
        determinate: string;
        /** Styles applied to the root element if `variant="indeterminate"`. */
        indeterminate: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
        /** Styles applied to the svg element. */
        svg: string;
        /** Styles applied to the `circle` svg path. */
        circle: string;
        /** Styles applied to the `circle` svg path if `variant="determinate"`. */
        circleDeterminate: string;
        /** Styles applied to the `circle` svg path if `variant="indeterminate"`. */
        circleIndeterminate: string;
        /** Styles applied to the `circle` svg path if `disableShrink={true}`. */
        circleDisableShrink: string;
    }
    export type CircularProgressClassKey = keyof CircularProgressClasses;
    export function getCircularProgressUtilityClass(slot: string): string;
    const circularProgressClasses: CircularProgressClasses;
    export default circularProgressClasses;
}
declare module "@mui/material/CircularProgress/CircularProgress" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { CircularProgressClasses } from "@mui/material/CircularProgress/circularProgressClasses";
    export interface CircularProgressPropsColorOverrides {
    }
    export interface CircularProgressProps extends StandardProps<React.HTMLAttributes<HTMLSpanElement>, 'children'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<CircularProgressClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * @default 'primary'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' | 'inherit', CircularProgressPropsColorOverrides>;
        /**
         * If `true`, the shrink animation is disabled.
         * This only works if variant is `indeterminate`.
         * @default false
         */
        disableShrink?: boolean;
        /**
         * The size of the component.
         * If using a number, the pixel unit is assumed.
         * If using a string, you need to provide the CSS unit, e.g '3rem'.
         * @default 40
         */
        size?: number | string;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The thickness of the circle.
         * @default 3.6
         */
        thickness?: number;
        /**
         * The value of the progress indicator for the determinate variant.
         * Value between 0 and 100.
         * @default 0
         */
        value?: number;
        /**
         * The variant to use.
         * Use indeterminate when there is no progress value.
         * @default 'indeterminate'
         */
        variant?: 'determinate' | 'indeterminate';
    }
    /**
     * ## ARIA
     *
     * If the progress bar is describing the loading progress of a particular region of a page,
     * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
     * attribute to `true` on that region until it has finished loading.
     *
     * Demos:
     *
     * - [Progress](https://mui.com/components/progress/)
     *
     * API:
     *
     * - [CircularProgress API](https://mui.com/api/circular-progress/)
     */
    export type CircularProgress = (props: CircularProgressProps) => JSX.Element;
    export default CircularProgress;
}
declare module "@mui/material/CircularProgress/index" {
    export { default } from "@mui/material/CircularProgress/CircularProgress";
    export * from "@mui/material/CircularProgress/CircularProgress";
    export { default as circularProgressClasses } from "@mui/material/CircularProgress/circularProgressClasses";
    export * from "@mui/material/CircularProgress/circularProgressClasses";
}
declare module "@mui/material/Collapse/collapseClasses" {
    export interface CollapseClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `orientation="horizontal"`. */
        horizontal: string;
        /** Styles applied to the root element when the transition has entered. */
        entered: string;
        /** Styles applied to the root element when the transition has exited and `collapsedSize` = 0px. */
        hidden: string;
        /** Styles applied to the outer wrapper element. */
        wrapper: string;
        /** Styles applied to the inner wrapper element. */
        wrapperInner: string;
    }
    export type CollapseClassKey = keyof CollapseClasses;
    export function getCollapseUtilityClass(slot: string): string;
    const collapseClasses: CollapseClasses;
    export default collapseClasses;
}
declare module "@mui/material/Collapse/Collapse" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { CollapseClasses } from "@mui/material/Collapse/collapseClasses";
    export interface CollapseProps extends StandardProps<TransitionProps, 'timeout'> {
        /**
         * The content node to be collapsed.
         */
        children?: React.ReactNode;
        className?: string;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<CollapseClasses>;
        /**
         * The width (horizontal) or height (vertical) of the container when collapsed.
         * @default '0px'
         */
        collapsedSize?: string | number;
        /**
         * The component used for the root node.
         * Either a string to use a HTML element or a component.
         */
        component?: React.ElementType<TransitionProps>;
        /**
         * The transition timing function.
         * You may specify a single easing or a object containing enter and exit values.
         */
        easing?: TransitionProps['easing'];
        /**
         * If `true`, the component will transition in.
         */
        in?: boolean;
        /**
         * The transition orientation.
         * @default 'vertical'
         */
        orientation?: 'horizontal' | 'vertical';
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         *
         * Set to 'auto' to automatically calculate transition time based on height.
         * @default duration.standard
         */
        timeout?: TransitionProps['timeout'] | 'auto';
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     * The Collapse transition is used by the
     * [Vertical Stepper](https://mui.com/components/steppers/#vertical-stepper) StepContent component.
     * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
     *
     * Demos:
     *
     * - [Cards](https://mui.com/components/cards/)
     * - [Lists](https://mui.com/components/lists/)
     * - [Transitions](https://mui.com/components/transitions/)
     *
     * API:
     *
     * - [Collapse API](https://mui.com/api/collapse/)
     * - inherits [Transition API](http://reactcommunity.org/react-transition-group/transition/#Transition-props)
     */
    export type Collapse = (props: CollapseProps) => JSX.Element;
    export default Collapse;
}
declare module "@mui/material/Collapse/index" {
    export { default } from "@mui/material/Collapse/Collapse";
    export * from "@mui/material/Collapse/Collapse";
    export { default as collapseClasses } from "@mui/material/Collapse/collapseClasses";
    export * from "@mui/material/Collapse/collapseClasses";
}
declare module "@mui/material/Container/containerClasses" {
    export interface ContainerClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `disableGutters={true}`. */
        disableGutters: string;
        /** Styles applied to the root element if `fixed={true}`. */
        fixed: string;
        /** Styles applied to the root element if `maxWidth="xs"`. */
        maxWidthXs: string;
        /** Styles applied to the root element if `maxWidth="sm"`. */
        maxWidthSm: string;
        /** Styles applied to the root element if `maxWidth="md"`. */
        maxWidthMd: string;
        /** Styles applied to the root element if `maxWidth="lg"`. */
        maxWidthLg: string;
        /** Styles applied to the root element if `maxWidth="xl"`. */
        maxWidthXl: string;
    }
    export type ContainerClassKey = keyof ContainerClasses;
    export function getContainerUtilityClass(slot: string): string;
    const containerClasses: ContainerClasses;
    export default containerClasses;
}
declare module "@mui/material/Container/Container" {
    import * as React from 'react';
    import { SxProps, Breakpoint } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ContainerClasses } from "@mui/material/Container/containerClasses";
    export interface ContainerTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ContainerClasses>;
            /**
             * If `true`, the left and right padding is removed.
             * @default false
             */
            disableGutters?: boolean;
            /**
             * Set the max-width to match the min-width of the current breakpoint.
             * This is useful if you'd prefer to design for a fixed set of sizes
             * instead of trying to accommodate a fully fluid viewport.
             * It's fluid by default.
             * @default false
             */
            fixed?: boolean;
            /**
             * Determine the max-width of the container.
             * The container width grows with the size of the screen.
             * Set to `false` to disable `maxWidth`.
             * @default 'lg'
             */
            maxWidth?: Breakpoint | false;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Container](https://mui.com/components/container/)
     *
     * API:
     *
     * - [Container API](https://mui.com/api/container/)
     */
    const Container: OverridableComponent<ContainerTypeMap>;
    export type ContainerProps<D extends React.ElementType = ContainerTypeMap['defaultComponent'], P = {}> = OverrideProps<ContainerTypeMap<P, D>, D>;
    export default Container;
}
declare module "@mui/material/Container/index" {
    export { default } from "@mui/material/Container/Container";
    export * from "@mui/material/Container/Container";
    export { default as containerClasses } from "@mui/material/Container/containerClasses";
    export * from "@mui/material/Container/containerClasses";
}
declare module "@mui/material/CssBaseline/CssBaseline" {
    import * as React from 'react';
    import { StyledComponentProps } from "@mui/material/styles/index";
    export interface CssBaselineProps extends StyledComponentProps<never> {
        /**
         * You can wrap a node.
         */
        children?: React.ReactNode;
        /**
         * Enable `color-scheme` CSS property to use `theme.palette.mode`.
         * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
         * For browser support, check out https://caniuse.com/?search=color-scheme
         * @default false
         */
        enableColorScheme?: boolean;
    }
    /**
     * Kickstart an elegant, consistent, and simple baseline to build upon.
     *
     * Demos:
     *
     * - [Css Baseline](https://mui.com/components/css-baseline/)
     *
     * API:
     *
     * - [CssBaseline API](https://mui.com/api/css-baseline/)
     */
    export type CssBaseline = (props: CssBaselineProps) => JSX.Element;
    export default CssBaseline;
}
declare module "@mui/material/CssBaseline/index" {
    export { default } from "@mui/material/CssBaseline/CssBaseline";
    export * from "@mui/material/CssBaseline/CssBaseline";
}
declare module "@mui/material/DialogActions/dialogActionsClasses" {
    export interface DialogActionsClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `disableSpacing={true}`. */
        spacing: string;
    }
    export type DialogActionsClassKey = keyof DialogActionsClasses;
    export function getDialogActionsUtilityClass(slot: string): string;
    const dialogActionsClasses: DialogActionsClasses;
    export default dialogActionsClasses;
}
declare module "@mui/material/DialogActions/DialogActions" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { DialogActionsClasses } from "@mui/material/DialogActions/dialogActionsClasses";
    export interface DialogActionsProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<DialogActionsClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * If `true`, the actions do not have additional margin.
         * @default false
         */
        disableSpacing?: boolean;
    }
    /**
     *
     * Demos:
     *
     * - [Dialogs](https://mui.com/components/dialogs/)
     *
     * API:
     *
     * - [DialogActions API](https://mui.com/api/dialog-actions/)
     */
    export type DialogActions = (props: DialogActionsProps) => JSX.Element;
    export default DialogActions;
}
declare module "@mui/material/DialogActions/index" {
    export { default } from "@mui/material/DialogActions/DialogActions";
    export * from "@mui/material/DialogActions/DialogActions";
    export { default as dialogActionsClasses } from "@mui/material/DialogActions/dialogActionsClasses";
    export * from "@mui/material/DialogActions/dialogActionsClasses";
}
declare module "@mui/material/DialogContent/dialogContentClasses" {
    export interface DialogContentClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `dividers={true}`. */
        dividers: string;
    }
    export type DialogContentClassKey = keyof DialogContentClasses;
    export function getDialogContentUtilityClass(slot: string): string;
    const dialogContentClasses: DialogContentClasses;
    export default dialogContentClasses;
}
declare module "@mui/material/DialogContent/DialogContent" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { DialogContentClasses } from "@mui/material/DialogContent/dialogContentClasses";
    export interface DialogContentProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<DialogContentClasses>;
        /**
         * Display the top and bottom dividers.
         * @default false
         */
        dividers?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Dialogs](https://mui.com/components/dialogs/)
     *
     * API:
     *
     * - [DialogContent API](https://mui.com/api/dialog-content/)
     */
    export type DialogContent = (props: DialogContentProps) => JSX.Element;
    export default DialogContent;
}
declare module "@mui/material/DialogContent/index" {
    export { default } from "@mui/material/DialogContent/DialogContent";
    export * from "@mui/material/DialogContent/DialogContent";
    export { default as dialogContentClasses } from "@mui/material/DialogContent/dialogContentClasses";
    export * from "@mui/material/DialogContent/dialogContentClasses";
}
declare module "@mui/material/DialogContentText/dialogContentTextClasses" {
    export interface DialogContentTextClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type DialogContentTextClassKey = keyof DialogContentTextClasses;
    export function getDialogContentTextUtilityClass(slot: string): string;
    const dialogContentTextClasses: DialogContentTextClasses;
    export default dialogContentTextClasses;
}
declare module "@mui/material/DialogContentText/DialogContentText" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { TypographyTypeMap } from "@mui/material/Typography/index";
    import { OverrideProps, OverridableComponent } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { DialogContentTextClasses } from "@mui/material/DialogContentText/dialogContentTextClasses";
    export interface DialogContentTextTypeMap<P = {}, D extends React.ElementType = TypographyTypeMap['defaultComponent']> {
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<DialogContentTextClasses>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        } & Omit<TypographyTypeMap['props'], 'classes'>;
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Dialogs](https://mui.com/components/dialogs/)
     *
     * API:
     *
     * - [DialogContentText API](https://mui.com/api/dialog-content-text/)
     * - inherits [Typography API](https://mui.com/api/typography/)
     */
    const DialogContentText: OverridableComponent<DialogContentTextTypeMap>;
    export type DialogContentTextProps<D extends React.ElementType = DialogContentTextTypeMap['defaultComponent'], P = {}> = OverrideProps<DialogContentTextTypeMap<P, D>, D>;
    export default DialogContentText;
}
declare module "@mui/material/DialogContentText/index" {
    export { default } from "@mui/material/DialogContentText/DialogContentText";
    export * from "@mui/material/DialogContentText/DialogContentText";
    export { default as dialogContentTextClasses } from "@mui/material/DialogContentText/dialogContentTextClasses";
    export * from "@mui/material/DialogContentText/dialogContentTextClasses";
}
declare module "@mui/material/Modal/Modal" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverrideProps } from "@mui/types/index";
    import { ExtendModalUnstyledTypeMap, ExtendModalUnstyled } from "@mui/core/ModalUnstyled/index";
    import { Theme } from "@mui/material/styles/index";
    import { BackdropProps } from "@mui/material/Backdrop/index";
    export type ModalTypeMap<D extends React.ElementType = 'div', P = {}> = ExtendModalUnstyledTypeMap<{
        props: P & {
            /**
             * A backdrop component. This prop enables custom backdrop rendering.
             * @default styled(Backdrop, {
             *   name: 'MuiModal',
             *   slot: 'Backdrop',
             *   overridesResolver: (props, styles) => {
             *     return styles.backdrop;
             *   },
             * })({
             *   zIndex: -1,
             * })
             */
            BackdropComponent?: React.ElementType<BackdropProps>;
            /**
             * Props applied to the [`Backdrop`](/api/backdrop/) element.
             */
            BackdropProps?: Partial<BackdropProps>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    type ModalRootProps = NonNullable<ModalTypeMap['props']['componentsProps']>['root'];
    export const ModalRoot: React.FC<ModalRootProps>;
    export type ModalClassKey = keyof NonNullable<ModalTypeMap['props']['classes']>;
    /**
     * Modal is a lower-level construct that is leveraged by the following components:
     *
     * *   [Dialog](https://mui.com/api/dialog/)
     * *   [Drawer](https://mui.com/api/drawer/)
     * *   [Menu](https://mui.com/api/menu/)
     * *   [Popover](https://mui.com/api/popover/)
     *
     * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/api/dialog/) component
     * rather than directly using Modal.
     *
     * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
     *
     * Demos:
     *
     * - [Modal](https://mui.com/components/modal/)
     *
     * API:
     *
     * - [Modal API](https://mui.com/api/modal/)
     */
    const Modal: ExtendModalUnstyled<ModalTypeMap>;
    export type ModalClasses = Record<ModalClassKey, string>;
    export const modalClasses: ModalClasses;
    export type ModalProps<D extends React.ElementType = ModalTypeMap['defaultComponent'], P = {}> = OverrideProps<ModalTypeMap<D, P>, D>;
    export default Modal;
}
declare module "@mui/material/Modal/index" {
    export * from "@mui/core/ModalUnstyled/index";
    export { default } from "@mui/material/Modal/Modal";
    export * from "@mui/material/Modal/Modal";
}
declare module "@mui/material/Dialog/dialogClasses" {
    export interface DialogClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the container element if `scroll="paper"`. */
        scrollPaper: string;
        /** Styles applied to the container element if `scroll="body"`. */
        scrollBody: string;
        /** Styles applied to the container element. */
        container: string;
        /** Styles applied to the Paper component. */
        paper: string;
        /** Styles applied to the Paper component if `scroll="paper"`. */
        paperScrollPaper: string;
        /** Styles applied to the Paper component if `scroll="body"`. */
        paperScrollBody: string;
        /** Styles applied to the Paper component if `maxWidth=false`. */
        paperWidthFalse: string;
        /** Styles applied to the Paper component if `maxWidth="xs"`. */
        paperWidthXs: string;
        /** Styles applied to the Paper component if `maxWidth="sm"`. */
        paperWidthSm: string;
        /** Styles applied to the Paper component if `maxWidth="md"`. */
        paperWidthMd: string;
        /** Styles applied to the Paper component if `maxWidth="lg"`. */
        paperWidthLg: string;
        /** Styles applied to the Paper component if `maxWidth="xl"`. */
        paperWidthXl: string;
        /** Styles applied to the Paper component if `fullWidth={true}`. */
        paperFullWidth: string;
        /** Styles applied to the Paper component if `fullScreen={true}`. */
        paperFullScreen: string;
    }
    export type DialogClassKey = keyof DialogClasses;
    export function getDialogUtilityClass(slot: string): string;
    const dialogClasses: DialogClasses;
    export default dialogClasses;
}
declare module "@mui/material/Dialog/Dialog" {
    import * as React from 'react';
    import { SxProps, Breakpoint } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { ModalProps } from "@mui/material/Modal/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { DialogClasses } from "@mui/material/Dialog/dialogClasses";
    export interface DialogProps extends StandardProps<ModalProps, 'children'> {
        /**
         * The id(s) of the element(s) that describe the dialog.
         */
        'aria-describedby'?: string;
        /**
         * The id(s) of the element(s) that label the dialog.
         */
        'aria-labelledby'?: string;
        /**
         * Dialog children, usually the included sub-components.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<DialogClasses>;
        /**
         * If `true`, hitting escape will not fire the `onClose` callback.
         * @default false
         */
        disableEscapeKeyDown?: boolean;
        /**
         * If `true`, the dialog is full-screen.
         * @default false
         */
        fullScreen?: boolean;
        /**
         * If `true`, the dialog stretches to `maxWidth`.
         *
         * Notice that the dialog width grow is limited by the default margin.
         * @default false
         */
        fullWidth?: boolean;
        /**
         * Determine the max-width of the dialog.
         * The dialog width grows with the size of the screen.
         * Set to `false` to disable `maxWidth`.
         * @default 'sm'
         */
        maxWidth?: Breakpoint | false;
        /**
         * Callback fired when the backdrop is clicked.
         */
        onBackdropClick?: ModalProps['onBackdropClick'];
        /**
         * Callback fired when the component requests to be closed.
         *
         * @param {object} event The event source of the callback.
         * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
         */
        onClose?: ModalProps['onClose'];
        /**
         * If `true`, the component is shown.
         */
        open: ModalProps['open'];
        /**
         * The component used to render the body of the dialog.
         * @default Paper
         */
        PaperComponent?: React.JSXElementConstructor<PaperProps>;
        /**
         * Props applied to the [`Paper`](/api/paper/) element.
         * @default {}
         */
        PaperProps?: Partial<PaperProps>;
        /**
         * Determine the container for scrolling the dialog.
         * @default 'paper'
         */
        scroll?: 'body' | 'paper';
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Fade
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps & {
            children: React.ReactElement<any, any>;
        }>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        transitionDuration?: TransitionProps['timeout'];
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         */
        TransitionProps?: TransitionProps;
    }
    /**
     * Dialogs are overlaid modal paper based components with a backdrop.
     *
     * Demos:
     *
     * - [Dialogs](https://mui.com/components/dialogs/)
     *
     * API:
     *
     * - [Dialog API](https://mui.com/api/dialog/)
     * - inherits [Modal API](https://mui.com/api/modal/)
     */
    export type Dialog = (props: DialogProps) => JSX.Element;
    export default Dialog;
}
declare module "@mui/material/Dialog/index" {
    export { default } from "@mui/material/Dialog/Dialog";
    export * from "@mui/material/Dialog/Dialog";
    export { default as dialogClasses } from "@mui/material/Dialog/dialogClasses";
    export * from "@mui/material/Dialog/dialogClasses";
}
declare module "@mui/material/DialogTitle/dialogTitleClasses" {
    export interface DialogTitleClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type DialogTitleClassKey = keyof DialogTitleClasses;
    export function getDialogTitleUtilityClass(slot: string): string;
    const dialogTitleClasses: DialogTitleClasses;
    export default dialogTitleClasses;
}
declare module "@mui/material/DialogTitle/DialogTitle" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { DialogTitleClasses } from "@mui/material/DialogTitle/dialogTitleClasses";
    export interface DialogTitleProps extends StandardProps<React.HTMLAttributes<HTMLHeadingElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<DialogTitleClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Dialogs](https://mui.com/components/dialogs/)
     *
     * API:
     *
     * - [DialogTitle API](https://mui.com/api/dialog-title/)
     */
    export type DialogTitle = (props: DialogTitleProps) => JSX.Element;
    export default DialogTitle;
}
declare module "@mui/material/DialogTitle/index" {
    export { default } from "@mui/material/DialogTitle/DialogTitle";
    export * from "@mui/material/DialogTitle/DialogTitle";
    export { default as dialogTitleClasses } from "@mui/material/DialogTitle/dialogTitleClasses";
    export * from "@mui/material/DialogTitle/dialogTitleClasses";
}
declare module "@mui/material/Divider/dividerClasses" {
    export interface DividerClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `absolute={true}`. */
        absolute: string;
        /** Styles applied to the root element if `variant="inset"`. */
        inset: string;
        /** Styles applied to the root element if `variant="fullWidth"`. */
        fullWidth: string;
        /** Styles applied to the root element if `light={true}`. */
        light: string;
        /** Styles applied to the root element if `variant="middle"`. */
        middle: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the root element if `flexItem={true}`. */
        flexItem: string;
        /** Styles applied to the root element if divider have text. */
        withChildren: string;
        /** Styles applied to the root element if divider have text and `orientation="vertical"`. */
        withChildrenVertical: string;
        /** Styles applied to the root element if `textAlign="right" orientation="horizontal"`. */
        textAlignRight: string;
        /** Styles applied to the root element if `textAlign="left" orientation="horizontal"`. */
        textAlignLeft: string;
        /** Styles applied to the span children element if `orientation="horizontal"`. */
        wrapper: string;
        /** Styles applied to the span children element if `orientation="vertical"`. */
        wrapperVertical: string;
    }
    export type DividerClassKey = keyof DividerClasses;
    export function getDividerUtilityClass(slot: string): string;
    const dividerClasses: DividerClasses;
    export default dividerClasses;
}
declare module "@mui/material/Divider/Divider" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { DividerClasses } from "@mui/material/Divider/dividerClasses";
    export interface DividerPropsVariantOverrides {
    }
    export interface DividerTypeMap<P = {}, D extends React.ElementType = 'hr'> {
        props: P & {
            /**
             * Absolutely position the element.
             * @default false
             */
            absolute?: boolean;
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<DividerClasses>;
            /**
             * If `true`, a vertical divider will have the correct height when used in flex container.
             * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
             * @default false
             */
            flexItem?: boolean;
            /**
             * If `true`, the divider will have a lighter color.
             * @default false
             */
            light?: boolean;
            /**
             * The component orientation.
             * @default 'horizontal'
             */
            orientation?: 'horizontal' | 'vertical';
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The text alignment.
             * @default 'center'
             */
            textAlign?: 'center' | 'right' | 'left';
            /**
             * The variant to use.
             * @default 'fullWidth'
             */
            variant?: OverridableStringUnion<'fullWidth' | 'inset' | 'middle', DividerPropsVariantOverrides>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Dividers](https://mui.com/components/dividers/)
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [Divider API](https://mui.com/api/divider/)
     */
    const Divider: OverridableComponent<DividerTypeMap>;
    export type DividerProps<D extends React.ElementType = DividerTypeMap['defaultComponent'], P = {}> = OverrideProps<DividerTypeMap<P, D>, D>;
    export default Divider;
}
declare module "@mui/material/Divider/index" {
    export { default } from "@mui/material/Divider/Divider";
    export * from "@mui/material/Divider/Divider";
    export { default as dividerClasses } from "@mui/material/Divider/dividerClasses";
    export * from "@mui/material/Divider/dividerClasses";
}
declare module "@mui/material/Slide/Slide" {
    import * as React from 'react';
    import { TransitionProps } from "@mui/material/transitions/transition";
    export interface SlideProps extends TransitionProps {
        /**
         * Perform the enter transition when it first mounts if `in` is also `true`.
         * Set this to `false` to disable this behavior.
         * @default true
         */
        appear?: boolean;
        /**
         * A single child content element.
         */
        children: React.ReactElement<any, any>;
        /**
         * An HTML element, or a function that returns one.
         * It's used to set the container the Slide is transitioning from.
         */
        container?: null | Element | ((element: Element) => Element);
        /**
         * Direction the child node will enter from.
         * @default 'down'
         */
        direction?: 'left' | 'right' | 'up' | 'down';
        /**
         * The transition timing function.
         * You may specify a single easing or a object containing enter and exit values.
         * @default {
         *   enter: theme.transitions.easing.easeOut,
         *   exit: theme.transitions.easing.sharp,
         * }
         */
        easing?: TransitionProps['easing'];
        /**
         * If `true`, the component will transition in.
         */
        in?: TransitionProps['in'];
        ref?: React.Ref<unknown>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        timeout?: TransitionProps['timeout'];
    }
    /**
     * The Slide transition is used by the [Drawer](https://mui.com/components/drawers/) component.
     * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
     *
     * Demos:
     *
     * - [Dialogs](https://mui.com/components/dialogs/)
     * - [Transitions](https://mui.com/components/transitions/)
     *
     * API:
     *
     * - [Slide API](https://mui.com/api/slide/)
     * - inherits [Transition API](http://reactcommunity.org/react-transition-group/transition/#Transition-props)
     */
    export type Slide = (props: SlideProps) => JSX.Element;
    export default Slide;
}
declare module "@mui/material/Slide/index" {
    export { default } from "@mui/material/Slide/Slide";
    export * from "@mui/material/Slide/Slide";
}
declare module "@mui/material/Drawer/drawerClasses" {
    export interface DrawerClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="permanent or persistent"`. */
        docked: string;
        /** Styles applied to the Paper component. */
        paper: string;
        /** Styles applied to the Paper component if `anchor="left"`. */
        paperAnchorLeft: string;
        /** Styles applied to the Paper component if `anchor="right"`. */
        paperAnchorRight: string;
        /** Styles applied to the Paper component if `anchor="top"`. */
        paperAnchorTop: string;
        /** Styles applied to the Paper component if `anchor="bottom"`. */
        paperAnchorBottom: string;
        /** Styles applied to the Paper component if `anchor="left"` and `variant` is not "temporary". */
        paperAnchorDockedLeft: string;
        /** Styles applied to the Paper component if `anchor="top"` and `variant` is not "temporary". */
        paperAnchorDockedTop: string;
        /** Styles applied to the Paper component if `anchor="right"` and `variant` is not "temporary". */
        paperAnchorDockedRight: string;
        /** Styles applied to the Paper component if `anchor="bottom"` and `variant` is not "temporary". */
        paperAnchorDockedBottom: string;
        /** Styles applied to the Modal component. */
        modal: string;
    }
    export type DrawerClassKey = keyof DrawerClasses;
    export function getDrawerUtilityClass(slot: string): string;
    const drawerClasses: DrawerClasses;
    export default drawerClasses;
}
declare module "@mui/material/Drawer/Drawer" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { ModalProps } from "@mui/material/Modal/index";
    import { SlideProps } from "@mui/material/Slide/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { DrawerClasses } from "@mui/material/Drawer/drawerClasses";
    export interface DrawerProps extends StandardProps<ModalProps, 'open' | 'children'> {
        /**
         * Side from which the drawer will appear.
         * @default 'left'
         */
        anchor?: 'left' | 'top' | 'right' | 'bottom';
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<DrawerClasses>;
        /**
         * The elevation of the drawer.
         * @default 16
         */
        elevation?: number;
        /**
         * Props applied to the [`Modal`](/api/modal/) element.
         * @default {}
         */
        ModalProps?: Partial<ModalProps>;
        /**
         * Callback fired when the component requests to be closed.
         *
         * @param {object} event The event source of the callback.
         */
        onClose?: ModalProps['onClose'];
        /**
         * If `true`, the component is shown.
         * @default false
         */
        open?: boolean;
        /**
         * Props applied to the [`Paper`](/api/paper/) element.
         * @default {}
         */
        PaperProps?: Partial<PaperProps>;
        /**
         * Props applied to the [`Slide`](/api/slide/) element.
         */
        SlideProps?: Partial<SlideProps>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        transitionDuration?: TransitionProps['timeout'];
        /**
         * The variant to use.
         * @default 'temporary'
         */
        variant?: 'permanent' | 'persistent' | 'temporary';
    }
    /**
     * The props of the [Modal](https://mui.com/api/modal/) component are available
     * when `variant="temporary"` is set.
     *
     * Demos:
     *
     * - [Drawers](https://mui.com/components/drawers/)
     *
     * API:
     *
     * - [Drawer API](https://mui.com/api/drawer/)
     */
    export type Drawer = (props: DrawerProps) => JSX.Element;
    export default Drawer;
}
declare module "@mui/material/Drawer/index" {
    export { default } from "@mui/material/Drawer/Drawer";
    export * from "@mui/material/Drawer/Drawer";
    export { default as drawerClasses } from "@mui/material/Drawer/drawerClasses";
    export * from "@mui/material/Drawer/drawerClasses";
}
declare module "@mui/material/AccordionActions/accordionActionsClasses" {
    export interface AccordionActionsClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `disableSpacing={true}`. */
        spacing: string;
    }
    export type AccordionActionsClassKey = keyof AccordionActionsClasses;
    export function getAccordionActionsUtilityClass(slot: string): string;
    const accordionActionsClasses: AccordionActionsClasses;
    export default accordionActionsClasses;
}
declare module "@mui/material/AccordionActions/AccordionActions" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { AccordionActionsClasses } from "@mui/material/AccordionActions/accordionActionsClasses";
    export interface AccordionActionsProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AccordionActionsClasses>;
        /**
         * If `true`, the actions do not have additional margin.
         * @default false
         */
        disableSpacing?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Accordion](https://mui.com/components/accordion/)
     *
     * API:
     *
     * - [AccordionActions API](https://mui.com/api/accordion-actions/)
     */
    export type AccordionActions = (props: AccordionActionsProps) => JSX.Element;
    export default AccordionActions;
}
declare module "@mui/material/AccordionActions/index" {
    export { default } from "@mui/material/AccordionActions/AccordionActions";
    export * from "@mui/material/AccordionActions/AccordionActions";
    export { default as accordionActionsClasses } from "@mui/material/AccordionActions/accordionActionsClasses";
    export * from "@mui/material/AccordionActions/accordionActionsClasses";
}
declare module "@mui/material/AccordionDetails/accordionDetailsClasses" {
    export interface AccordionDetailsClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type AccordionDetailsClassKey = keyof AccordionDetailsClasses;
    export function getAccordionDetailsUtilityClass(slot: string): string;
    const accordionDetailsClasses: AccordionDetailsClasses;
    export default accordionDetailsClasses;
}
declare module "@mui/material/AccordionDetails/AccordionDetails" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { AccordionDetailsClasses } from "@mui/material/AccordionDetails/accordionDetailsClasses";
    export interface AccordionDetailsProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AccordionDetailsClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Accordion](https://mui.com/components/accordion/)
     *
     * API:
     *
     * - [AccordionDetails API](https://mui.com/api/accordion-details/)
     */
    export type AccordionDetails = (props: AccordionDetailsProps) => JSX.Element;
    export default AccordionDetails;
}
declare module "@mui/material/AccordionDetails/index" {
    export { default } from "@mui/material/AccordionDetails/AccordionDetails";
    export * from "@mui/material/AccordionDetails/AccordionDetails";
    export { default as accordionDetailsClasses } from "@mui/material/AccordionDetails/accordionDetailsClasses";
    export * from "@mui/material/AccordionDetails/accordionDetailsClasses";
}
declare module "@mui/material/Accordion/accordionClasses" {
    export interface AccordionClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `square={true}`. */
        rounded: string;
        /** State class applied to the root element if `expanded={true}`. */
        expanded: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element unless `disableGutters={true}`. */
        gutters: string;
        /** Styles applied to the region element, the container of the children. */
        region: string;
    }
    export type AccordionClassKey = keyof AccordionClasses;
    export function getAccordionUtilityClass(slot: string): string;
    const accordionClasses: AccordionClasses;
    export default accordionClasses;
}
declare module "@mui/material/Accordion/Accordion" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { PaperProps } from "@mui/material/Paper/index";
    import { AccordionClasses } from "@mui/material/Accordion/accordionClasses";
    export interface AccordionProps extends StandardProps<PaperProps, 'onChange'> {
        /**
         * The content of the component.
         */
        children: NonNullable<React.ReactNode>;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<AccordionClasses>;
        /**
         * If `true`, expands the accordion by default.
         * @default false
         */
        defaultExpanded?: boolean;
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, it removes the margin between two expanded accordion items and the increase of height.
         * @default false
         */
        disableGutters?: boolean;
        /**
         * If `true`, expands the accordion, otherwise collapse it.
         * Setting this prop enables control over the accordion.
         */
        expanded?: boolean;
        /**
         * Callback fired when the expand/collapse state is changed.
         *
         * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
         * @param {boolean} expanded The `expanded` state of the accordion.
         */
        onChange?: (event: React.SyntheticEvent, expanded: boolean) => void;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Collapse
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps & {
            children?: React.ReactElement<any, any>;
        }>;
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         */
        TransitionProps?: TransitionProps;
    }
    /**
     *
     * Demos:
     *
     * - [Accordion](https://mui.com/components/accordion/)
     *
     * API:
     *
     * - [Accordion API](https://mui.com/api/accordion/)
     * - inherits [Paper API](https://mui.com/api/paper/)
     */
    export type Accordion = (props: AccordionProps) => JSX.Element;
    export default Accordion;
}
declare module "@mui/material/Accordion/index" {
    export { default } from "@mui/material/Accordion/Accordion";
    export * from "@mui/material/Accordion/Accordion";
    export { default as accordionClasses } from "@mui/material/Accordion/accordionClasses";
    export * from "@mui/material/Accordion/accordionClasses";
}
declare module "@mui/material/AccordionSummary/accordionSummaryClasses" {
    export interface AccordionSummaryClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */
        expanded: string;
        /** State class applied to the ButtonBase root element if the button is keyboard focused. */
        focusVisible: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element unless `disableGutters={true}`. */
        gutters: string;
        /** Styles applied to the children wrapper element unless `disableGutters={true}`. */
        contentGutters: string;
        /** Styles applied to the children wrapper element. */
        content: string;
        /** Styles applied to the `expandIcon`'s wrapper element. */
        expandIconWrapper: string;
    }
    export type AccordionSummaryClassKey = keyof AccordionSummaryClasses;
    export function getAccordionSummaryUtilityClass(slot: string): string;
    const accordionSummaryClasses: AccordionSummaryClasses;
    export default accordionSummaryClasses;
}
declare module "@mui/material/AccordionSummary/AccordionSummary" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/index";
    import { AccordionSummaryClasses } from "@mui/material/AccordionSummary/accordionSummaryClasses";
    export type AccordionSummaryTypeMap<P = {}, D extends React.ElementType = 'div'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<AccordionSummaryClasses>;
            /**
             * The icon to display as the expand indicator.
             */
            expandIcon?: React.ReactNode;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Accordion](https://mui.com/components/accordion/)
     *
     * API:
     *
     * - [AccordionSummary API](https://mui.com/api/accordion-summary/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const AccordionSummary: ExtendButtonBase<AccordionSummaryTypeMap>;
    export type AccordionSummaryProps<D extends React.ElementType = AccordionSummaryTypeMap['defaultComponent'], P = {}> = OverrideProps<AccordionSummaryTypeMap<P, D>, D>;
    export default AccordionSummary;
}
declare module "@mui/material/AccordionSummary/index" {
    export { default } from "@mui/material/AccordionSummary/AccordionSummary";
    export * from "@mui/material/AccordionSummary/AccordionSummary";
    export { default as accordionSummaryClasses } from "@mui/material/AccordionSummary/accordionSummaryClasses";
    export * from "@mui/material/AccordionSummary/accordionSummaryClasses";
}
declare module "@mui/material/Fab/fabClasses" {
    export interface FabClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `color="primary"`. */
        primary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        secondary: string;
        /** Styles applied to the root element if `variant="extended"`. */
        extended: string;
        /** Styles applied to the root element if `variant="circular"`. */
        circular: string;
        /** State class applied to the ButtonBase root element if the button is keyboard focused. */
        focusVisible: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `color="inherit"`. */
        colorInherit: string;
        /** Styles applied to the root element if `size="small"``. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"``. */
        sizeMedium: string;
    }
    export type FabClassKey = keyof FabClasses;
    export function getFabUtilityClass(slot: string): string;
    const fabClasses: FabClasses;
    export default fabClasses;
}
declare module "@mui/material/Fab/Fab" {
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { PropTypes, Theme } from "@mui/material/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { FabClasses } from "@mui/material/Fab/fabClasses";
    export interface FabPropsVariantOverrides {
    }
    export interface FabPropsSizeOverrides {
    }
    export interface FabPropsColorOverrides {
    }
    export type FabTypeMap<P = {}, D extends React.ElementType = 'button'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<FabClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'default'
             */
            color?: OverridableStringUnion<PropTypes.Color | 'success' | 'error' | 'info' | 'warning', FabPropsColorOverrides>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the  keyboard focus ripple is disabled.
             * @default false
             */
            disableFocusRipple?: boolean;
            /**
             * If `true`, the ripple effect is disabled.
             */
            disableRipple?: boolean;
            /**
             * The URL to link to when the button is clicked.
             * If defined, an `a` element will be used as the root node.
             */
            href?: string;
            /**
             * The size of the component.
             * `small` is equivalent to the dense button styling.
             * @default 'large'
             */
            size?: OverridableStringUnion<'small' | 'medium' | 'large', FabPropsSizeOverrides>;
            /**
             * The variant to use.
             * @default 'circular'
             */
            variant?: OverridableStringUnion<'circular' | 'extended', FabPropsVariantOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Floating Action Button](https://mui.com/components/floating-action-button/)
     *
     * API:
     *
     * - [Fab API](https://mui.com/api/fab/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const Fab: ExtendButtonBase<FabTypeMap>;
    export type FabProps<D extends React.ElementType = FabTypeMap['defaultComponent'], P = {}> = OverrideProps<FabTypeMap<P, D>, D>;
    export default Fab;
}
declare module "@mui/material/Fab/index" {
    export { default } from "@mui/material/Fab/Fab";
    export * from "@mui/material/Fab/Fab";
    export { default as fabClasses } from "@mui/material/Fab/fabClasses";
    export * from "@mui/material/Fab/fabClasses";
}
declare module "@mui/material/InputBase/inputBaseClasses" {
    export interface InputBaseClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the component is a descendant of `FormControl`. */
        formControl: string;
        /** Styles applied to the root element if the component is focused. */
        focused: string;
        /** Styles applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `startAdornment` is provided. */
        adornedStart: string;
        /** Styles applied to the root element if `endAdornment` is provided. */
        adornedEnd: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** Styles applied to the input element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `multiline={true}`. */
        multiline: string;
        /** Styles applied to the root element if the color is secondary. */
        colorSecondary: string;
        /** Styles applied to the root element if `fullWidth={true}`. */
        fullWidth: string;
        /** Styles applied to the root element if `hiddenLabel={true}`. */
        hiddenLabel: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if `size="small"`. */
        inputSizeSmall: string;
        /** Styles applied to the input element if `multiline={true}`. */
        inputMultiline: string;
        /** Styles applied to the input element if `type="search"`. */
        inputTypeSearch: string;
        /** Styles applied to the input element if `startAdornment` is provided. */
        inputAdornedStart: string;
        /** Styles applied to the input element if `endAdornment` is provided. */
        inputAdornedEnd: string;
        /** Styles applied to the input element if `hiddenLabel={true}`. */
        inputHiddenLabel: string;
    }
    export type InputBaseClassKey = keyof InputBaseClasses;
    export function getInputBaseUtilityClass(slot: string): string;
    const inputBaseClasses: InputBaseClasses;
    export default inputBaseClasses;
}
declare module "@mui/material/InputBase/InputBase" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { InputBaseClasses } from "@mui/material/InputBase/inputBaseClasses";
    export interface InputBasePropsSizeOverrides {
    }
    export interface InputBasePropsColorOverrides {
    }
    export interface InputBaseComponentsPropsOverrides {
    }
    export interface InputBaseProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'children' | 'onChange' | 'onKeyUp' | 'onKeyDown' | 'onBlur' | 'onFocus' | 'defaultValue'> {
        'aria-describedby'?: string;
        /**
         * This prop helps users to fill forms faster, especially on mobile devices.
         * The name can be confusing, as it's more like an autofill.
         * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
         */
        autoComplete?: string;
        /**
         * If `true`, the `input` element is focused during the first mount.
         */
        autoFocus?: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<InputBaseClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', InputBasePropsColorOverrides>;
        /**
         * The components used for each slot inside the InputBase.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Input?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.HTMLAttributes<HTMLDivElement> & InputBaseComponentsPropsOverrides;
            input?: React.InputHTMLAttributes<HTMLInputElement> & InputBaseComponentsPropsOverrides;
        };
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: unknown;
        /**
         * If `true`, the component is disabled.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        disabled?: boolean;
        /**
         * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
         * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
         * @default false
         */
        disableInjectingGlobalStyles?: boolean;
        /**
         * End `InputAdornment` for this component.
         */
        endAdornment?: React.ReactNode;
        /**
         * If `true`, the `input` will indicate an error.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        error?: boolean;
        /**
         * If `true`, the `input` will take up the full width of its container.
         * @default false
         */
        fullWidth?: boolean;
        /**
         * The id of the `input` element.
         */
        id?: string;
        /**
         * The component used for the `input` element.
         * Either a string to use a HTML element or a component.
         * @default 'input'
         */
        inputComponent?: React.ElementType<InputBaseComponentProps>;
        /**
         * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
         * @default {}
         */
        inputProps?: InputBaseComponentProps;
        /**
         * Pass a ref to the `input` element.
         */
        inputRef?: React.Ref<any>;
        /**
         * If `dense`, will adjust vertical spacing. This is normally obtained via context from
         * FormControl.
         * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
         */
        margin?: 'dense' | 'none';
        /**
         * If `true`, a `textarea` element is rendered.
         * @default false
         */
        multiline?: boolean;
        /**
         * Name attribute of the `input` element.
         */
        name?: string;
        /**
         * Callback fired when the `input` is blurred.
         *
         * Notice that the first argument (event) might be undefined.
         */
        onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;
        /**
         * Callback fired when the value is changed.
         *
         * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         */
        onChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;
        onFocus?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;
        onKeyDown?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;
        onKeyUp?: React.KeyboardEventHandler<HTMLTextAreaElement | HTMLInputElement>;
        /**
         * The short hint displayed in the `input` before the user enters a value.
         */
        placeholder?: string;
        /**
         * It prevents the user from changing the value of the field
         * (not from interacting with the field).
         */
        readOnly?: boolean;
        /**
         * If `true`, the `input` element is required.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        required?: boolean;
        renderSuffix?: (state: {
            disabled?: boolean;
            error?: boolean;
            filled?: boolean;
            focused?: boolean;
            margin?: 'dense' | 'none' | 'normal';
            required?: boolean;
            startAdornment?: React.ReactNode;
        }) => React.ReactNode;
        /**
         * Number of rows to display when multiline option is set to true.
         */
        rows?: string | number;
        /**
         * Maximum number of rows to display when multiline option is set to true.
         */
        maxRows?: string | number;
        /**
         * Minimum number of rows to display when multiline option is set to true.
         */
        minRows?: string | number;
        /**
         * The size of the component.
         */
        size?: OverridableStringUnion<'small' | 'medium', InputBasePropsSizeOverrides>;
        /**
         * Start `InputAdornment` for this component.
         */
        startAdornment?: React.ReactNode;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
         * @default 'text'
         */
        type?: string;
        /**
         * The value of the `input` element, required for a controlled component.
         */
        value?: unknown;
    }
    export interface InputBaseComponentProps extends React.HTMLAttributes<HTMLInputElement | HTMLTextAreaElement> {
        [arbitrary: string]: any;
    }
    /**
     * `InputBase` contains as few styles as possible.
     * It aims to be a simple building block for creating an input.
     * It contains a load of style reset and some state logic.
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [InputBase API](https://mui.com/api/input-base/)
     */
    export type InputBase = (props: InputBaseProps) => JSX.Element;
    export default InputBase;
}
declare module "@mui/material/InputBase/index" {
    export { default } from "@mui/material/InputBase/InputBase";
    export * from "@mui/material/InputBase/InputBase";
    export { default as inputBaseClasses } from "@mui/material/InputBase/inputBaseClasses";
    export * from "@mui/material/InputBase/inputBaseClasses";
}
declare module "@mui/material/FilledInput/filledInputClasses" {
    export interface FilledInputClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if color secondary. */
        colorSecondary: string;
        /** Styles applied to the root element unless `disableUnderline={true}`. */
        underline: string;
        /** State class applied to the root element if the component is focused. */
        focused: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `startAdornment` is provided. */
        adornedStart: string;
        /** Styles applied to the root element if `endAdornment` is provided. */
        adornedEnd: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** Styles applied to the input element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `multiline={true}`. */
        multiline: string;
        /** Styles applied to the root element if `hiddenLabel={true}`. */
        hiddenLabel: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if `size="small"`. */
        inputSizeSmall: string;
        /** Styles applied to the `input` if in `<FormControl hiddenLabel />`. */
        inputHiddenLabel: string;
        /** Styles applied to the input element if `multiline={true}`. */
        inputMultiline: string;
        /** Styles applied to the input element if `startAdornment` is provided. */
        inputAdornedStart: string;
        /** Styles applied to the input element if `endAdornment` is provided. */
        inputAdornedEnd: string;
    }
    export type FilledInputClassKey = keyof FilledInputClasses;
    export function getFilledInputUtilityClass(slot: string): string;
    const filledInputClasses: FilledInputClasses;
    export default filledInputClasses;
}
declare module "@mui/material/FilledInput/FilledInput" {
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { InputBaseProps } from "@mui/material/InputBase/index";
    import { FilledInputClasses } from "@mui/material/FilledInput/filledInputClasses";
    export interface FilledInputProps extends StandardProps<InputBaseProps> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<FilledInputClasses>;
        /**
         * If `true`, the label is hidden.
         * This is used to increase density for a `FilledInput`.
         * Be sure to add `aria-label` to the `input` element.
         * @default false
         */
        hiddenLabel?: boolean;
        /**
         * If `true`, the input will not have an underline.
         */
        disableUnderline?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [FilledInput API](https://mui.com/api/filled-input/)
     * - inherits [InputBase API](https://mui.com/api/input-base/)
     */
    const FilledInput: ((props: FilledInputProps) => JSX.Element) & {
        muiName: string;
    };
    export default FilledInput;
}
declare module "@mui/material/FilledInput/index" {
    export { default } from "@mui/material/FilledInput/FilledInput";
    export * from "@mui/material/FilledInput/FilledInput";
    export { default as filledInputClasses } from "@mui/material/FilledInput/filledInputClasses";
    export * from "@mui/material/FilledInput/filledInputClasses";
}
declare module "@mui/material/FormControlLabel/formControlLabelClasses" {
    export interface FormControlLabelClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `labelPlacement="start"`. */
        labelPlacementStart: string;
        /** Styles applied to the root element if `labelPlacement="top"`. */
        labelPlacementTop: string;
        /** Styles applied to the root element if `labelPlacement="bottom"`. */
        labelPlacementBottom: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the label's Typography component. */
        label: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
    }
    export type FormControlLabelClassKey = keyof FormControlLabelClasses;
    export function getFormControlLabelUtilityClasses(slot: string): string;
    const formControlLabelClasses: FormControlLabelClasses;
    export default formControlLabelClasses;
}
declare module "@mui/material/FormControlLabel/FormControlLabel" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme, InternalStandardProps as StandardProps } from "@mui/material/index";
    import { TypographyProps } from "@mui/material/Typography/index";
    import { FormControlLabelClasses } from "@mui/material/FormControlLabel/formControlLabelClasses";
    export interface FormControlLabelProps extends StandardProps<React.LabelHTMLAttributes<HTMLLabelElement>, 'children' | 'onChange'> {
        /**
         * If `true`, the component appears selected.
         */
        checked?: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<FormControlLabelClasses>;
        /**
         * The props used for each slot inside.
         * @default {}
         */
        componentsProps?: {
            /**
             * Props applied to the Typography wrapper of the passed label.
             * This is unused if disableTpography is true.
             * @default {}
             */
            typography?: TypographyProps;
        };
        /**
         * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
         */
        control: React.ReactElement<any, any>;
        /**
         * If `true`, the control is disabled.
         */
        disabled?: boolean;
        /**
         * If `true`, the label is rendered as it is passed without an additional typography node.
         */
        disableTypography?: boolean;
        /**
         * Pass a ref to the `input` element.
         */
        inputRef?: React.Ref<any>;
        /**
         * A text or an element to be used in an enclosing label element.
         */
        label: string | number | React.ReactElement;
        /**
         * The position of the label.
         * @default 'end'
         */
        labelPlacement?: 'end' | 'start' | 'top' | 'bottom';
        name?: string;
        /**
         * Callback fired when the state is changed.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * You can pull out the new checked state by accessing `event.target.checked` (boolean).
         */
        onChange?: (event: React.SyntheticEvent, checked: boolean) => void;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The value of the component.
         */
        value?: unknown;
    }
    /**
     * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.
     * Use this component if you want to display an extra label.
     *
     * Demos:
     *
     * - [Checkboxes](https://mui.com/components/checkboxes/)
     * - [Radio Buttons](https://mui.com/components/radio-buttons/)
     * - [Switches](https://mui.com/components/switches/)
     *
     * API:
     *
     * - [FormControlLabel API](https://mui.com/api/form-control-label/)
     */
    export type FormControlLabel = (props: FormControlLabelProps) => JSX.Element;
    export default FormControlLabel;
}
declare module "@mui/material/FormControlLabel/index" {
    export { default } from "@mui/material/FormControlLabel/FormControlLabel";
    export * from "@mui/material/FormControlLabel/FormControlLabel";
    export { default as formControlLabelClasses } from "@mui/material/FormControlLabel/formControlLabelClasses";
    export * from "@mui/material/FormControlLabel/formControlLabelClasses";
}
declare module "@mui/material/FormControl/formControlClasses" {
    export interface FormControlClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `margin="normal"`. */
        marginNormal: string;
        /** Styles applied to the root element if `margin="dense"`. */
        marginDense: string;
        /** Styles applied to the root element if `fullWidth={true}`. */
        fullWidth: string;
    }
    export type FormControlClassKey = keyof FormControlClasses;
    export function getFormControlUtilityClasses(slot: string): string;
    const formControlClasses: FormControlClasses;
    export default formControlClasses;
}
declare module "@mui/material/FormControl/FormControl" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { FormControlClasses } from "@mui/material/FormControl/formControlClasses";
    export interface FormControlPropsSizeOverrides {
    }
    export interface FormControlPropsColorOverrides {
    }
    export interface FormControlTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<FormControlClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'primary'
             */
            color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', FormControlPropsColorOverrides>;
            /**
             * If `true`, the label, input and helper text should be displayed in a disabled state.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the label is displayed in an error state.
             * @default false
             */
            error?: boolean;
            /**
             * If `true`, the component will take up the full width of its container.
             * @default false
             */
            fullWidth?: boolean;
            /**
             * If `true`, the component is displayed in focused state.
             */
            focused?: boolean;
            /**
             * If `true`, the label is hidden.
             * This is used to increase density for a `FilledInput`.
             * Be sure to add `aria-label` to the `input` element.
             * @default false
             */
            hiddenLabel?: boolean;
            /**
             * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
             * @default 'none'
             */
            margin?: 'dense' | 'normal' | 'none';
            /**
             * If `true`, the label will indicate that the `input` is required.
             * @default false
             */
            required?: boolean;
            /**
             * The size of the component.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium', FormControlPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * @default 'outlined'
             */
            variant?: 'standard' | 'outlined' | 'filled';
        };
        defaultComponent: D;
    }
    /**
     * Provides context such as filled/focused/error/required for form inputs.
     * Relying on the context provides high flexibility and ensures that the state always stays
     * consistent across the children of the `FormControl`.
     * This context is used by the following components:
     *
     * *   FormLabel
     * *   FormHelperText
     * *   Input
     * *   InputLabel
     *
     * You can find one composition example below and more going to [the demos](https://mui.com/components/text-fields/#components).
     *
     * ```jsx
     * <FormControl>
     *   <InputLabel htmlFor="my-input">Email address</InputLabel>
     *   <Input id="my-input" aria-describedby="my-helper-text" />
     *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
     * </FormControl>
     * ```
     *
     * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.
     * For instance, only one input can be focused at the same time, the state shouldn't be shared.
     *
     * Demos:
     *
     * - [Checkboxes](https://mui.com/components/checkboxes/)
     * - [Radio Buttons](https://mui.com/components/radio-buttons/)
     * - [Switches](https://mui.com/components/switches/)
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [FormControl API](https://mui.com/api/form-control/)
     */
    const FormControl: OverridableComponent<FormControlTypeMap>;
    export type FormControlProps<D extends React.ElementType = FormControlTypeMap['defaultComponent'], P = {}> = OverrideProps<FormControlTypeMap<P, D>, D>;
    export default FormControl;
}
declare module "@mui/material/FormControl/useFormControl" {
    import { FormControlProps } from "@mui/material/FormControl/FormControl";
    export {};
    type ContextFromPropsKey = 'disabled' | 'error' | 'fullWidth' | 'hiddenLabel' | 'margin' | 'required' | 'variant';
    export interface FormControlState extends Pick<FormControlProps, ContextFromPropsKey> {
        adornedStart: boolean;
        filled: boolean;
        focused: boolean;
        onBlur: () => void;
        onEmpty: () => void;
        onFilled: () => void;
        onFocus: () => void;
    }
    export type useFormControl = () => FormControlState | undefined;
    export default useFormControl;
}
declare module "@mui/material/FormControl/index" {
    export { default } from "@mui/material/FormControl/FormControl";
    export * from "@mui/material/FormControl/FormControl";
    export { default as useFormControl, FormControlState } from "@mui/material/FormControl/useFormControl";
    export { default as formControlClasses } from "@mui/material/FormControl/formControlClasses";
    export * from "@mui/material/FormControl/formControlClasses";
}
declare module "@mui/material/FormGroup/formGroupClasses" {
    export interface FormGroupClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `row={true}`. */
        row: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
    }
    export type FormGroupClassKey = keyof FormGroupClasses;
    export function getFormGroupUtilityClass(slot: string): string;
    const formGroupClasses: FormGroupClasses;
    export default formGroupClasses;
}
declare module "@mui/material/FormGroup/FormGroup" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { FormGroupClasses } from "@mui/material/FormGroup/formGroupClasses";
    export interface FormGroupProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<FormGroupClasses>;
        /**
         * Display group of elements in a compact row.
         * @default false
         */
        row?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     * `FormGroup` wraps controls such as `Checkbox` and `Switch`.
     * It provides compact row layout.
     * For the `Radio`, you should be using the `RadioGroup` component instead of this one.
     *
     * Demos:
     *
     * - [Checkboxes](https://mui.com/components/checkboxes/)
     * - [Switches](https://mui.com/components/switches/)
     *
     * API:
     *
     * - [FormGroup API](https://mui.com/api/form-group/)
     */
    export type FormGroup = (props: FormGroupProps) => JSX.Element;
    export default FormGroup;
}
declare module "@mui/material/FormGroup/index" {
    export { default } from "@mui/material/FormGroup/FormGroup";
    export * from "@mui/material/FormGroup/FormGroup";
    export { default as formGroupClasses } from "@mui/material/FormGroup/formGroupClasses";
    export * from "@mui/material/FormGroup/formGroupClasses";
}
declare module "@mui/material/FormHelperText/formHelperTextClasses" {
    export interface FormHelperTextClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `variant="filled"` or `variant="outlined"`. */
        contained: string;
        /** State class applied to the root element if `focused={true}`. */
        focused: string;
        /** State class applied to the root element if `filled={true}`. */
        filled: string;
        /** State class applied to the root element if `required={true}`. */
        required: string;
    }
    export type FormHelperTextClassKey = keyof FormHelperTextClasses;
    export function getFormHelperTextUtilityClasses(slot: string): string;
    const formHelperTextClasses: FormHelperTextClasses;
    export default formHelperTextClasses;
}
declare module "@mui/material/FormHelperText/FormHelperText" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { FormHelperTextClasses } from "@mui/material/FormHelperText/formHelperTextClasses";
    export interface FormHelperTextTypeMap<P = {}, D extends React.ElementType = 'p'> {
        props: P & {
            /**
             * The content of the component.
             *
             * If `' '` is provided, the component reserves one line height for displaying a future message.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<FormHelperTextClasses>;
            /**
             * If `true`, the helper text should be displayed in a disabled state.
             */
            disabled?: boolean;
            /**
             * If `true`, helper text should be displayed in an error state.
             */
            error?: boolean;
            /**
             * If `true`, the helper text should use filled classes key.
             */
            filled?: boolean;
            /**
             * If `true`, the helper text should use focused classes key.
             */
            focused?: boolean;
            /**
             * If `dense`, will adjust vertical spacing. This is normally obtained via context from
             * FormControl.
             */
            margin?: 'dense';
            /**
             * If `true`, the helper text should use required classes key.
             */
            required?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             */
            variant?: 'standard' | 'outlined' | 'filled';
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [FormHelperText API](https://mui.com/api/form-helper-text/)
     */
    const FormHelperText: OverridableComponent<FormHelperTextTypeMap>;
    export type FormHelperTextProps<D extends React.ElementType = FormHelperTextTypeMap['defaultComponent'], P = {}> = OverrideProps<FormHelperTextTypeMap<P, D>, D>;
    export default FormHelperText;
}
declare module "@mui/material/FormHelperText/index" {
    export { default } from "@mui/material/FormHelperText/FormHelperText";
    export * from "@mui/material/FormHelperText/FormHelperText";
    export { default as formHelperTextClasses } from "@mui/material/FormHelperText/formHelperTextClasses";
    export * from "@mui/material/FormHelperText/formHelperTextClasses";
}
declare module "@mui/material/FormLabel/formLabelClasses" {
    export interface FormLabelClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the color is secondary. */
        colorSecondary: string;
        /** State class applied to the root element if `focused={true}`. */
        focused: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** State class applied to the root element if `filled={true}`. */
        filled: string;
        /** State class applied to the root element if `required={true}`. */
        required: string;
        /** Styles applied to the asterisk element. */
        asterisk: string;
    }
    export type FormLabelClassKey = keyof FormLabelClasses;
    export function getFormLabelUtilityClasses(slot: string): string;
    const formLabelClasses: FormLabelClasses;
    export default formLabelClasses;
}
declare module "@mui/material/FormLabel/FormLabel" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { FormLabelClasses } from "@mui/material/FormLabel/formLabelClasses";
    export interface FormLabelPropsColorOverrides {
    }
    export interface FormLabelTypeMap<P = {}, D extends React.ElementType = 'label'> {
        props: P & FormLabelBaseProps & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<FormLabelClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             */
            color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', FormLabelPropsColorOverrides>;
            /**
             * If `true`, the label should be displayed in a disabled state.
             */
            disabled?: boolean;
            /**
             * If `true`, the label is displayed in an error state.
             */
            error?: boolean;
            /**
             * If `true`, the label should use filled classes key.
             */
            filled?: boolean;
            /**
             * If `true`, the input of this label is focused (used by `FormGroup` components).
             */
            focused?: boolean;
            /**
             * If `true`, the label will indicate that the `input` is required.
             */
            required?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Checkboxes](https://mui.com/components/checkboxes/)
     * - [Radio Buttons](https://mui.com/components/radio-buttons/)
     * - [Switches](https://mui.com/components/switches/)
     *
     * API:
     *
     * - [FormLabel API](https://mui.com/api/form-label/)
     */
    const FormLabel: OverridableComponent<FormLabelTypeMap>;
    export type FormLabelBaseProps = React.LabelHTMLAttributes<HTMLLabelElement>;
    export type FormLabelProps<D extends React.ElementType = FormLabelTypeMap['defaultComponent'], P = {}> = OverrideProps<FormLabelTypeMap<P, D>, D>;
    export default FormLabel;
}
declare module "@mui/material/FormLabel/index" {
    export { default } from "@mui/material/FormLabel/FormLabel";
    export * from "@mui/material/FormLabel/FormLabel";
    export { default as formLabelClasses } from "@mui/material/FormLabel/formLabelClasses";
    export * from "@mui/material/FormLabel/formLabelClasses";
}
declare module "@mui/material/Grid/gridClasses" {
    export interface GridClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `container={true}`. */
        container: string;
        /** Styles applied to the root element if `item={true}`. */
        item: string;
        /** Styles applied to the root element if `zeroMinWidth={true}`. */
        zeroMinWidth: string;
        /** Styles applied to the root element if `direction="column"`. */
        'direction-xs-column': string;
        /** Styles applied to the root element if `direction="column-reverse"`. */
        'direction-xs-column-reverse': string;
        /** Styles applied to the root element if `direction="row-reverse"`. */
        'direction-xs-row-reverse': string;
        /** Styles applied to the root element if `wrap="nowrap"`. */
        'wrap-xs-nowrap': string;
        /** Styles applied to the root element if `wrap="reverse"`. */
        'wrap-xs-wrap-reverse': string;
        'spacing-xs-1': string;
        'spacing-xs-2': string;
        'spacing-xs-3': string;
        'spacing-xs-4': string;
        'spacing-xs-5': string;
        'spacing-xs-6': string;
        'spacing-xs-7': string;
        'spacing-xs-8': string;
        'spacing-xs-9': string;
        'spacing-xs-10': string;
        'grid-xs-auto': string;
        'grid-xs-true': string;
        'grid-xs-1': string;
        'grid-xs-2': string;
        'grid-xs-3': string;
        'grid-xs-4': string;
        'grid-xs-5': string;
        'grid-xs-6': string;
        'grid-xs-7': string;
        'grid-xs-8': string;
        'grid-xs-9': string;
        'grid-xs-10': string;
        'grid-xs-11': string;
        'grid-xs-12': string;
    }
    export type GridClassKey = keyof GridClasses;
    export function getGridUtilityClass(slot: string): string;
    const gridClasses: GridClasses;
    export default gridClasses;
}
declare module "@mui/material/Grid/Grid" {
    import * as React from 'react';
    import { ResponsiveStyleValue, SxProps, SystemProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { GridClasses } from "@mui/material/Grid/gridClasses";
    export type GridDirection = 'row' | 'row-reverse' | 'column' | 'column-reverse';
    export type GridSpacing = number | string;
    export type GridWrap = 'nowrap' | 'wrap' | 'wrap-reverse';
    export type GridSize = 'auto' | number;
    export interface GridTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & SystemProps<Theme> & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<GridClasses>;
            /**
             * The number of columns.
             * @default 12
             */
            columns?: ResponsiveStyleValue<number>;
            /**
             * Defines the horizontal space between the type `item` components.
             * It overrides the value of the `spacing` prop.
             */
            columnSpacing?: ResponsiveStyleValue<GridSpacing>;
            /**
             * If `true`, the component will have the flex *container* behavior.
             * You should be wrapping *items* with a *container*.
             * @default false
             */
            container?: boolean;
            /**
             * Defines the `flex-direction` style property.
             * It is applied for all screen sizes.
             * @default 'row'
             */
            direction?: ResponsiveStyleValue<GridDirection>;
            /**
             * If `true`, the component will have the flex *item* behavior.
             * You should be wrapping *items* with a *container*.
             * @default false
             */
            item?: boolean;
            /**
             * If a number, it sets the number of columns the grid item uses.
             * It can't be greater than the total number of columns of the container (12 by default).
             * If 'auto', the grid item's width matches its content.
             * If false, the prop is ignored.
             * If true, the grid item's width grows to use the space available in the grid container.
             * The value is applied for the `lg` breakpoint and wider screens if not overridden.
             * @default false
             */
            lg?: boolean | GridSize;
            /**
             * If a number, it sets the number of columns the grid item uses.
             * It can't be greater than the total number of columns of the container (12 by default).
             * If 'auto', the grid item's width matches its content.
             * If false, the prop is ignored.
             * If true, the grid item's width grows to use the space available in the grid container.
             * The value is applied for the `md` breakpoint and wider screens if not overridden.
             * @default false
             */
            md?: boolean | GridSize;
            /**
             * Defines the vertical space between the type `item` components.
             * It overrides the value of the `spacing` prop.
             */
            rowSpacing?: ResponsiveStyleValue<GridSpacing>;
            /**
             * If a number, it sets the number of columns the grid item uses.
             * It can't be greater than the total number of columns of the container (12 by default).
             * If 'auto', the grid item's width matches its content.
             * If false, the prop is ignored.
             * If true, the grid item's width grows to use the space available in the grid container.
             * The value is applied for the `sm` breakpoint and wider screens if not overridden.
             * @default false
             */
            sm?: boolean | GridSize;
            /**
             * Defines the space between the type `item` components.
             * It can only be used on a type `container` component.
             * @default 0
             */
            spacing?: ResponsiveStyleValue<GridSpacing>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * Defines the `flex-wrap` style property.
             * It's applied for all screen sizes.
             * @default 'wrap'
             */
            wrap?: GridWrap;
            /**
             * If a number, it sets the number of columns the grid item uses.
             * It can't be greater than the total number of columns of the container (12 by default).
             * If 'auto', the grid item's width matches its content.
             * If false, the prop is ignored.
             * If true, the grid item's width grows to use the space available in the grid container.
             * The value is applied for the `xl` breakpoint and wider screens if not overridden.
             * @default false
             */
            xl?: boolean | GridSize;
            /**
             * If a number, it sets the number of columns the grid item uses.
             * It can't be greater than the total number of columns of the container (12 by default).
             * If 'auto', the grid item's width matches its content.
             * If false, the prop is ignored.
             * If true, the grid item's width grows to use the space available in the grid container.
             * The value is applied for all the screen sizes with the lowest priority.
             * @default false
             */
            xs?: boolean | GridSize;
            /**
             * If `true`, it sets `min-width: 0` on the item.
             * Refer to the limitations section of the documentation to better understand the use case.
             * @default false
             */
            zeroMinWidth?: boolean;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Grid](https://mui.com/components/grid/)
     *
     * API:
     *
     * - [Grid API](https://mui.com/api/grid/)
     */
    const Grid: OverridableComponent<GridTypeMap>;
    export type GridProps<D extends React.ElementType = GridTypeMap['defaultComponent'], P = {}> = OverrideProps<GridTypeMap<P, D>, D>;
    export default Grid;
}
declare module "@mui/material/Grid/index" {
    export { default } from "@mui/material/Grid/Grid";
    export * from "@mui/material/Grid/Grid";
    export { default as gridClasses } from "@mui/material/Grid/gridClasses";
    export * from "@mui/material/Grid/gridClasses";
}
declare module "@mui/material/IconButton/iconButtonClasses" {
    export interface IconButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `edge="start"`. */
        edgeStart: string;
        /** Styles applied to the root element if `edge="end"`. */
        edgeEnd: string;
        /** Styles applied to the root element if `color="inherit"`. */
        colorInherit: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** Styles applied to the root element if `size="large"`. */
        sizeLarge: string;
    }
    export type IconButtonClassKey = keyof IconButtonClasses;
    export function getIconButtonUtilityClass(slot: string): string;
    const iconButtonClasses: IconButtonClasses;
    export default iconButtonClasses;
}
declare module "@mui/material/IconButton/IconButton" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { IconButtonClasses } from "@mui/material/IconButton/iconButtonClasses";
    export interface IconButtonPropsColorOverrides {
    }
    export interface IconButtonPropsSizeOverrides {
    }
    export type IconButtonTypeMap<P = {}, D extends React.ElementType = 'button'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * The icon to display.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<IconButtonClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'default'
             */
            color?: OverridableStringUnion<'inherit' | 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', IconButtonPropsColorOverrides>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the  keyboard focus ripple is disabled.
             * @default false
             */
            disableFocusRipple?: boolean;
            /**
             * If given, uses a negative margin to counteract the padding on one
             * side (this is often helpful for aligning the left or right
             * side of the icon with content above or below, without ruining the border
             * size and shape).
             * @default false
             */
            edge?: 'start' | 'end' | false;
            /**
             * The size of the component.
             * `small` is equivalent to the dense button styling.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium' | 'large', IconButtonPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     * Refer to the [Icons](https://mui.com/components/icons/) section of the documentation
     * regarding the available icon options.
     *
     * Demos:
     *
     * - [Buttons](https://mui.com/components/buttons/)
     *
     * API:
     *
     * - [IconButton API](https://mui.com/api/icon-button/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const IconButton: ExtendButtonBase<IconButtonTypeMap>;
    export type IconButtonProps<D extends React.ElementType = IconButtonTypeMap['defaultComponent'], P = {}> = OverrideProps<IconButtonTypeMap<P, D>, D>;
    export default IconButton;
}
declare module "@mui/material/IconButton/index" {
    export { default } from "@mui/material/IconButton/IconButton";
    export * from "@mui/material/IconButton/IconButton";
    export { default as iconButtonClasses } from "@mui/material/IconButton/iconButtonClasses";
    export * from "@mui/material/IconButton/iconButtonClasses";
}
declare module "@mui/material/Icon/iconClasses" {
    export interface IconClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
        /** Styles applied to the root element if `color="action"`. */
        colorAction: string;
        /** Styles applied to the root element if `color="error"`. */
        colorError: string;
        /** Styles applied to the root element if `color="disabled"`. */
        colorDisabled: string;
        /** Styles applied to the root element if `fontSize="inherit"`. */
        fontSizeInherit: string;
        /** Styles applied to the root element if `fontSize="small"`. */
        fontSizeSmall: string;
        /** Styles applied to the root element if `fontSize="large"`. */
        fontSizeLarge: string;
    }
    export type IconClassKey = keyof IconClasses;
    export function getIconUtilityClass(slot: string): string;
    const iconClasses: IconClasses;
    export default iconClasses;
}
declare module "@mui/material/Icon/Icon" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { IconClasses } from "@mui/material/Icon/iconClasses";
    export interface IconPropsSizeOverrides {
    }
    export interface IconPropsColorOverrides {
    }
    export interface IconTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & {
            /**
             * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any
             * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).
             * @default 'material-icons'
             */
            baseClassName?: string;
            /**
             * The name of the icon font ligature.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<IconClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'inherit'
             */
            color?: OverridableStringUnion<'inherit' | 'action' | 'disabled' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', IconPropsColorOverrides>;
            /**
             * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
             * @default 'medium'
             */
            fontSize?: OverridableStringUnion<'inherit' | 'large' | 'medium' | 'small', IconPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Icons](https://mui.com/components/icons/)
     * - [Material Icons](https://mui.com/components/material-icons/)
     *
     * API:
     *
     * - [Icon API](https://mui.com/api/icon/)
     */
    const Icon: OverridableComponent<IconTypeMap> & {
        muiName: string;
    };
    export type IconProps<D extends React.ElementType = IconTypeMap['defaultComponent'], P = {}> = OverrideProps<IconTypeMap<P, D>, D>;
    export default Icon;
}
declare module "@mui/material/Icon/index" {
    export { default } from "@mui/material/Icon/Icon";
    export * from "@mui/material/Icon/Icon";
    export { default as iconClasses } from "@mui/material/Icon/iconClasses";
    export * from "@mui/material/Icon/iconClasses";
}
declare module "@mui/material/ImageList/imageListClasses" {
    export interface ImageListClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="masonry"`. */
        masonry: string;
        /** Styles applied to the root element if `variant="quilted"`. */
        quilted: string;
        /** Styles applied to the root element if `variant="standard"`. */
        standard: string;
        /** Styles applied to the root element if `variant="woven"`. */
        woven: string;
    }
    export type ImageListClassKey = keyof ImageListClasses;
    export function getImageListUtilityClass(slot: string): string;
    const imageListClasses: ImageListClasses;
    export default imageListClasses;
}
declare module "@mui/material/ImageList/ImageList" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ImageListClasses } from "@mui/material/ImageList/imageListClasses";
    export interface ImageListPropsVariantOverrides {
    }
    export interface ImageListTypeMap<P = {}, D extends React.ElementType = 'ul'> {
        props: P & {
            /**
             * The content of the component, normally `ImageListItem`s.
             */
            children: NonNullable<React.ReactNode>;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ImageListClasses>;
            /**
             * Number of columns.
             * @default 2
             */
            cols?: number;
            /**
             * The gap between items in px.
             * @default 4
             */
            gap?: number;
            /**
             * The height of one row in px.
             * @default 'auto'
             */
            rowHeight?: number | 'auto';
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * @default 'standard'
             */
            variant?: OverridableStringUnion<'masonry' | 'quilted' | 'standard' | 'woven', ImageListPropsVariantOverrides>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Image List](https://mui.com/components/image-list/)
     *
     * API:
     *
     * - [ImageList API](https://mui.com/api/image-list/)
     */
    const ImageList: OverridableComponent<ImageListTypeMap>;
    export type ImageListProps<D extends React.ElementType = ImageListTypeMap['defaultComponent'], P = {}> = OverrideProps<ImageListTypeMap<P, D>, D>;
    export default ImageList;
}
declare module "@mui/material/ImageList/index" {
    export * from "@mui/material/ImageList/ImageList";
    export { default } from "@mui/material/ImageList/ImageList";
    export * from "@mui/material/ImageList/imageListClasses";
    export { default as imageListClasses } from "@mui/material/ImageList/imageListClasses";
}
declare module "@mui/material/ImageListItemBar/imageListItemBarClasses" {
    export interface ImageListItemBarClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `position="bottom"`. */
        positionBottom: string;
        /** Styles applied to the root element if `position="top"`. */
        positionTop: string;
        /** Styles applied to the root element if `position="below"`. */
        positionBelow: string;
        /** Styles applied to the title and subtitle container element. */
        titleWrap: string;
        /** Styles applied to the title and subtitle container element if `position="below"`. */
        titleWrapBelow: string;
        /** Styles applied to the container element if `actionPosition="left"`. */
        titleWrapActionPosLeft: string;
        /** Styles applied to the container element if `actionPosition="right"`. */
        titleWrapActionPosRight: string;
        /** Styles applied to the title container element. */
        title: string;
        /** Styles applied to the subtitle container element. */
        subtitle: string;
        /** Styles applied to the actionIcon if supplied. */
        actionIcon: string;
        /** Styles applied to the actionIcon if `actionPosition="left"`. */
        actionIconActionPosLeft: string;
    }
    export type ImageListItemBarClassKey = keyof ImageListItemBarClasses;
    export function getImageListItemBarUtilityClass(slot: string): string;
    const imageListItemBarClasses: ImageListItemBarClasses;
    export default imageListItemBarClasses;
}
declare module "@mui/material/ImageListItemBar/ImageListItemBar" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { ImageListItemBarClasses } from "@mui/material/ImageListItemBar/imageListItemBarClasses";
    export interface ImageListItemBarProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'title'> {
        /**
         * An IconButton element to be used as secondary action target
         * (primary action target is the item itself).
         */
        actionIcon?: React.ReactNode;
        /**
         * Position of secondary action IconButton.
         * @default 'right'
         */
        actionPosition?: 'left' | 'right';
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ImageListItemBarClasses>;
        /**
         * Position of the title bar.
         * @default 'bottom'
         */
        position?: 'below' | 'top' | 'bottom';
        /**
         * String or element serving as subtitle (support text).
         */
        subtitle?: React.ReactNode;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * Title to be displayed.
         */
        title?: React.ReactNode;
    }
    /**
     *
     * Demos:
     *
     * - [Image List](https://mui.com/components/image-list/)
     *
     * API:
     *
     * - [ImageListItemBar API](https://mui.com/api/image-list-item-bar/)
     */
    export type ImageListItemBar = (props: ImageListItemBarProps) => JSX.Element;
    export default ImageListItemBar;
}
declare module "@mui/material/ImageListItemBar/index" {
    export { default } from "@mui/material/ImageListItemBar/ImageListItemBar";
    export * from "@mui/material/ImageListItemBar/ImageListItemBar";
    export * from "@mui/material/ImageListItemBar/imageListItemBarClasses";
    export { default as imageListItemBarClasses } from "@mui/material/ImageListItemBar/imageListItemBarClasses";
}
declare module "@mui/material/ImageListItem/imageListItemClasses" {
    export interface ImageListItemClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to an `img` element to ensure it covers the item. */
        img: string;
        /** Styles applied to the root element if `variant="standard"`. */
        standard: string;
        /** Styles applied to the root element if `variant="woven"`. */
        woven: string;
        /** Styles applied to the root element if `variant="masonry"`. */
        masonry: string;
        /** Styles applied to the root element if `variant="quilted"`. */
        quilted: string;
    }
    export type ImageListItemClassKey = keyof ImageListItemClasses;
    export function getImageListItemUtilityClass(slot: string): string;
    const imageListItemClasses: ImageListItemClasses;
    export default imageListItemClasses;
}
declare module "@mui/material/ImageListItem/ImageListItem" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ImageListItemClasses } from "@mui/material/ImageListItem/imageListItemClasses";
    export interface ImageListItemTypeMap<P = {}, D extends React.ElementType = 'li'> {
        props: P & {
            /**
             * The content of the component, normally an `<img>`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ImageListItemClasses>;
            /**
             * Width of the item in number of grid columns.
             * @default 1
             */
            cols?: number;
            /**
             * Height of the item in number of grid rows.
             * @default 1
             */
            rows?: number;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Image List](https://mui.com/components/image-list/)
     *
     * API:
     *
     * - [ImageListItem API](https://mui.com/api/image-list-item/)
     */
    const ImageListItem: OverridableComponent<ImageListItemTypeMap>;
    export type ImageListItemProps<D extends React.ElementType = ImageListItemTypeMap['defaultComponent'], P = {}> = OverrideProps<ImageListItemTypeMap<P, D>, D>;
    export default ImageListItem;
}
declare module "@mui/material/ImageListItem/index" {
    export * from "@mui/material/ImageListItem/ImageListItem";
    export { default } from "@mui/material/ImageListItem/ImageListItem";
    export * from "@mui/material/ImageListItem/imageListItemClasses";
    export { default as imageListItemClasses } from "@mui/material/ImageListItem/imageListItemClasses";
}
declare module "@mui/material/InputAdornment/inputAdornmentClasses" {
    export interface InputAdornmentClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="filled"`. */
        filled: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="standard"`. */
        standard: string;
        /** Styles applied to the root element if `position="start"`. */
        positionStart: string;
        /** Styles applied to the root element if `position="end"`. */
        positionEnd: string;
        /** Styles applied to the root element if `disablePointerEvents={true}`. */
        disablePointerEvents: string;
        /** Styles applied if the adornment is used inside <FormControl hiddenLabel />. */
        hiddenLabel: string;
        /** Styles applied if the adornment is used inside <FormControl size="small" />. */
        sizeSmall: string;
    }
    export type InputAdornmentClassKey = keyof InputAdornmentClasses;
    export function getInputAdornmentUtilityClass(slot: string): string;
    const inputAdornmentClasses: InputAdornmentClasses;
    export default inputAdornmentClasses;
}
declare module "@mui/material/InputAdornment/InputAdornment" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/index";
    import { InputAdornmentClasses } from "@mui/material/InputAdornment/inputAdornmentClasses";
    export interface InputAdornmentTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<InputAdornmentClasses>;
            /**
             * The content of the component, normally an `IconButton` or string.
             */
            children?: React.ReactNode;
            /**
             * Disable pointer events on the root.
             * This allows for the content of the adornment to focus the `input` on click.
             * @default false
             */
            disablePointerEvents?: boolean;
            /**
             * If children is a string then disable wrapping in a Typography component.
             * @default false
             */
            disableTypography?: boolean;
            /**
             * The position this adornment should appear relative to the `Input`.
             */
            position: 'start' | 'end';
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The variant to use.
             * Note: If you are using the `TextField` component or the `FormControl` component
             * you do not have to set this manually.
             */
            variant?: 'standard' | 'outlined' | 'filled';
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [InputAdornment API](https://mui.com/api/input-adornment/)
     */
    const InputAdornment: OverridableComponent<InputAdornmentTypeMap>;
    export type InputAdornmentProps<D extends React.ElementType = InputAdornmentTypeMap['defaultComponent'], P = {}> = OverrideProps<InputAdornmentTypeMap<P, D>, D>;
    export default InputAdornment;
}
declare module "@mui/material/InputAdornment/index" {
    export * from "@mui/material/InputAdornment/InputAdornment";
    export { default } from "@mui/material/InputAdornment/InputAdornment";
    export { default as inputAdornmentClasses } from "@mui/material/InputAdornment/inputAdornmentClasses";
    export * from "@mui/material/InputAdornment/inputAdornmentClasses";
}
declare module "@mui/material/InputLabel/inputLabelClasses" {
    export interface InputLabelClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `focused={true}`. */
        focused: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** State class applied to the root element if `required={true}`. */
        required: string;
        /** State class applied to the asterisk element. */
        asterisk: string;
        /** Styles applied to the root element if the component is a descendant of `FormControl`. */
        formControl: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the input element if `shrink={true}`. */
        shrink: string;
        /** Styles applied to the input element unless `disableAnimation={true}`. */
        animated: string;
        /** Styles applied to the root element if `variant="filled"`. */
        filled: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="standard"`. */
        standard: string;
    }
    export type InputLabelClassKey = keyof InputLabelClasses;
    export function getInputLabelUtilityClasses(slot: string): string;
    const inputLabelClasses: InputLabelClasses;
    export default inputLabelClasses;
}
declare module "@mui/material/InputLabel/InputLabel" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { FormLabelProps } from "@mui/material/FormLabel/index";
    import { Theme } from "@mui/material/styles/index";
    import { InputLabelClasses } from "@mui/material/InputLabel/inputLabelClasses";
    export interface InputLabelProps extends StandardProps<FormLabelProps> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<InputLabelClasses>;
        color?: FormLabelProps['color'];
        /**
         * If `true`, the transition animation is disabled.
         * @default false
         */
        disableAnimation?: boolean;
        /**
         * If `true`, the component is disabled.
         */
        disabled?: boolean;
        /**
         * If `true`, the label is displayed in an error state.
         */
        error?: boolean;
        /**
         * If `true`, the `input` of this label is focused.
         */
        focused?: boolean;
        /**
         * If `dense`, will adjust vertical spacing. This is normally obtained via context from
         * FormControl.
         */
        margin?: 'dense';
        /**
         * if `true`, the label will indicate that the `input` is required.
         */
        required?: boolean;
        /**
         * If `true`, the label is shrunk.
         */
        shrink?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The variant to use.
         */
        variant?: 'standard' | 'outlined' | 'filled';
    }
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [InputLabel API](https://mui.com/api/input-label/)
     * - inherits [FormLabel API](https://mui.com/api/form-label/)
     */
    export type InputLabel = (props: InputLabelProps) => JSX.Element;
    export default InputLabel;
}
declare module "@mui/material/InputLabel/index" {
    export { default } from "@mui/material/InputLabel/InputLabel";
    export * from "@mui/material/InputLabel/InputLabel";
    export { default as inputLabelClasses } from "@mui/material/InputLabel/inputLabelClasses";
    export * from "@mui/material/InputLabel/inputLabelClasses";
}
declare module "@mui/material/Input/inputClasses" {
    export interface InputClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the component is a descendant of `FormControl`. */
        formControl: string;
        /** Styles applied to the root element if the component is focused. */
        focused: string;
        /** Styles applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if color secondary. */
        colorSecondary: string;
        /** Styles applied to the root element unless `disableUnderline={true}`. */
        underline: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** Styles applied to the input element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `multiline={true}`. */
        multiline: string;
        /** Styles applied to the root element if `fullWidth={true}`. */
        fullWidth: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if `size="small"`. */
        inputSizeSmall: string;
        /** Styles applied to the input element if `multiline={true}`. */
        inputMultiline: string;
        /** Styles applied to the input element if `type="search"`. */
        inputTypeSearch: string;
    }
    export type InputClassKey = keyof InputClasses;
    export function getInputUtilityClass(slot: string): string;
    const inputClasses: InputClasses;
    export default inputClasses;
}
declare module "@mui/material/Input/Input" {
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { InputBaseProps } from "@mui/material/InputBase/index";
    import { InputClasses } from "@mui/material/Input/inputClasses";
    export interface InputProps extends StandardProps<InputBaseProps> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<InputClasses>;
        /**
         * If `true`, the `input` will not have an underline.
         */
        disableUnderline?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [Input API](https://mui.com/api/input/)
     * - inherits [InputBase API](https://mui.com/api/input-base/)
     */
    const Input: ((props: InputProps) => JSX.Element) & {
        muiName: string;
    };
    export default Input;
}
declare module "@mui/material/Input/index" {
    export { default } from "@mui/material/Input/Input";
    export * from "@mui/material/Input/Input";
    export { default as inputClasses } from "@mui/material/Input/inputClasses";
    export * from "@mui/material/Input/inputClasses";
}
declare module "@mui/material/LinearProgress/linearProgressClasses" {
    export interface LinearProgressClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root and bar2 element if `color="primary"`; bar2 if `variant="buffer"`. */
        colorPrimary: string;
        /** Styles applied to the root and bar2 elements if `color="secondary"`; bar2 if `variant="buffer"`. */
        colorSecondary: string;
        /** Styles applied to the root element if `variant="determinate"`. */
        determinate: string;
        /** Styles applied to the root element if `variant="indeterminate"`. */
        indeterminate: string;
        /** Styles applied to the root element if `variant="buffer"`. */
        buffer: string;
        /** Styles applied to the root element if `variant="query"`. */
        query: string;
        /** Styles applied to the additional bar element if `variant="buffer"`. */
        dashed: string;
        /** Styles applied to the additional bar element if `variant="buffer"` and `color="primary"`. */
        dashedColorPrimary: string;
        /** Styles applied to the additional bar element if `variant="buffer"` and `color="secondary"`. */
        dashedColorSecondary: string;
        /** Styles applied to the layered bar1 and bar2 elements. */
        bar: string;
        /** Styles applied to the bar elements if `color="primary"`; bar2 if `variant` not "buffer". */
        barColorPrimary: string;
        /** Styles applied to the bar elements if `color="secondary"`; bar2 if `variant` not "buffer". */
        barColorSecondary: string;
        /** Styles applied to the bar1 element if `variant="indeterminate or query"`. */
        bar1Indeterminate: string;
        /** Styles applied to the bar1 element if `variant="determinate"`. */
        bar1Determinate: string;
        /** Styles applied to the bar1 element if `variant="buffer"`. */
        bar1Buffer: string;
        /** Styles applied to the bar2 element if `variant="indeterminate or query"`. */
        bar2Indeterminate: string;
        /** Styles applied to the bar2 element if `variant="buffer"`. */
        bar2Buffer: string;
    }
    export type LinearProgressClassKey = keyof LinearProgressClasses;
    export function getLinearProgressUtilityClass(slot: string): string;
    const linearProgressClasses: LinearProgressClasses;
    export default linearProgressClasses;
}
declare module "@mui/material/LinearProgress/LinearProgress" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { LinearProgressClasses } from "@mui/material/LinearProgress/linearProgressClasses";
    export interface LinearProgressPropsColorOverrides {
    }
    export interface LinearProgressProps extends StandardProps<React.HTMLAttributes<HTMLSpanElement>, 'children'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<LinearProgressClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * @default 'primary'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' | 'inherit', LinearProgressPropsColorOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The value of the progress indicator for the determinate and buffer variants.
         * Value between 0 and 100.
         */
        value?: number;
        /**
         * The value for the buffer variant.
         * Value between 0 and 100.
         */
        valueBuffer?: number;
        /**
         * The variant to use.
         * Use indeterminate or query when there is no progress value.
         * @default 'indeterminate'
         */
        variant?: 'determinate' | 'indeterminate' | 'buffer' | 'query';
    }
    /**
     * ## ARIA
     *
     * If the progress bar is describing the loading progress of a particular region of a page,
     * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
     * attribute to `true` on that region until it has finished loading.
     *
     * Demos:
     *
     * - [Progress](https://mui.com/components/progress/)
     *
     * API:
     *
     * - [LinearProgress API](https://mui.com/api/linear-progress/)
     */
    export type LinearProgress = (props: LinearProgressProps) => JSX.Element;
    export default LinearProgress;
}
declare module "@mui/material/LinearProgress/index" {
    export { default } from "@mui/material/LinearProgress/LinearProgress";
    export * from "@mui/material/LinearProgress/LinearProgress";
    export { default as linearProgressClasses } from "@mui/material/LinearProgress/linearProgressClasses";
    export * from "@mui/material/LinearProgress/linearProgressClasses";
}
declare module "@mui/material/Link/linkClasses" {
    export interface LinkClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `underline="none"`. */
        underlineNone: string;
        /** Styles applied to the root element if `underline="hover"`. */
        underlineHover: string;
        /** Styles applied to the root element if `underline="always"`. */
        underlineAlways: string;
        /** Styles applied to the root element if `component="button"`. */
        button: string;
        /** State class applied to the root element if the link is keyboard focused. */
        focusVisible: string;
    }
    export type LinkClassKey = keyof LinkClasses;
    export function getLinkUtilityClass(slot: string): string;
    const linkClasses: LinkClasses;
    export default linkClasses;
}
declare module "@mui/material/Link/Link" {
    import * as React from 'react';
    import { DistributiveOmit } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { TypographyProps } from "@mui/material/Typography/index";
    import { LinkClasses } from "@mui/material/Link/linkClasses";
    export interface LinkTypeMap<P = {}, D extends React.ElementType = 'a'> {
        props: P & DistributiveOmit<LinkBaseProps, 'classes'> & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<LinkClasses>;
            /**
             * The color of the link.
             * @default 'primary'
             */
            color?: TypographyProps['color'];
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * `classes` prop applied to the [`Typography`](/api/typography/) element.
             */
            TypographyClasses?: TypographyProps['classes'];
            /**
             * Controls when the link should have an underline.
             * @default 'always'
             */
            underline?: 'none' | 'hover' | 'always';
            /**
             * Applies the theme typography styles.
             * @default 'inherit'
             */
            variant?: TypographyProps['variant'];
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Breadcrumbs](https://mui.com/components/breadcrumbs/)
     * - [Links](https://mui.com/components/links/)
     *
     * API:
     *
     * - [Link API](https://mui.com/api/link/)
     * - inherits [Typography API](https://mui.com/api/typography/)
     */
    const Link: OverridableComponent<LinkTypeMap>;
    export type LinkBaseProps = Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'color'> & DistributiveOmit<TypographyProps, 'children' | 'component' | 'color' | 'ref' | 'variant'>;
    export type LinkProps<D extends React.ElementType = LinkTypeMap['defaultComponent'], P = {}> = OverrideProps<LinkTypeMap<P, D>, D>;
    export default Link;
}
declare module "@mui/material/Link/index" {
    export { default } from "@mui/material/Link/Link";
    export * from "@mui/material/Link/Link";
    export { default as linkClasses } from "@mui/material/Link/linkClasses";
    export * from "@mui/material/Link/linkClasses";
}
declare module "@mui/material/ListItemAvatar/listItemAvatarClasses" {
    export interface ListItemAvatarClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */
        alignItemsFlexStart: string;
    }
    export type ListItemAvatarClassKey = keyof ListItemAvatarClasses;
    export function getListItemAvatarUtilityClass(slot: string): string;
    const listItemAvatarClasses: ListItemAvatarClasses;
    export default listItemAvatarClasses;
}
declare module "@mui/material/ListItemAvatar/ListItemAvatar" {
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { ListItemAvatarClasses } from "@mui/material/ListItemAvatar/listItemAvatarClasses";
    export interface ListItemAvatarProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component, normally an `Avatar`.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ListItemAvatarClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     * A simple wrapper to apply `List` styles to an `Avatar`.
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [ListItemAvatar API](https://mui.com/api/list-item-avatar/)
     */
    export type ListItemAvatar = (props: ListItemAvatarProps) => JSX.Element;
    export default ListItemAvatar;
}
declare module "@mui/material/ListItemAvatar/index" {
    export { default } from "@mui/material/ListItemAvatar/ListItemAvatar";
    export * from "@mui/material/ListItemAvatar/ListItemAvatar";
    export { default as listItemAvatarClasses } from "@mui/material/ListItemAvatar/listItemAvatarClasses";
    export * from "@mui/material/ListItemAvatar/listItemAvatarClasses";
}
declare module "@mui/material/ListItemIcon/listItemIconClasses" {
    export interface ListItemIconClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */
        alignItemsFlexStart: string;
    }
    export type ListItemIconClassKey = keyof ListItemIconClasses;
    export function getListItemIconUtilityClass(slot: string): string;
    const listItemIconClasses: ListItemIconClasses;
    export default listItemIconClasses;
}
declare module "@mui/material/ListItemIcon/ListItemIcon" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { ListItemIconClasses } from "@mui/material/ListItemIcon/listItemIconClasses";
    export interface ListItemIconProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component, normally `Icon`, `SvgIcon`,
         * or a `@mui/icons-material` SVG icon element.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ListItemIconClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [ListItemIcon API](https://mui.com/api/list-item-icon/)
     */
    export type ListItemIcon = (props: ListItemIconProps) => JSX.Element;
    export default ListItemIcon;
}
declare module "@mui/material/ListItemIcon/index" {
    export { default } from "@mui/material/ListItemIcon/ListItemIcon";
    export * from "@mui/material/ListItemIcon/ListItemIcon";
    export { default as listItemIconClasses } from "@mui/material/ListItemIcon/listItemIconClasses";
    export * from "@mui/material/ListItemIcon/listItemIconClasses";
}
declare module "@mui/material/ListItem/listItemClasses" {
    export interface ListItemClasses {
        /** Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */
        root: string;
        /** Styles applied to the container element if `children` includes `ListItemSecondaryAction`. */
        container: string;
        /** State class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */
        focusVisible: string;
        /** Styles applied to the component element if dense. */
        dense: string;
        /** Styles applied to the component element if `alignItems="flex-start"`. */
        alignItemsFlexStart: string;
        /** State class applied to the inner `component` element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the inner `component` element if `divider={true}`. */
        divider: string;
        /** Styles applied to the inner `component` element unless `disableGutters={true}`. */
        gutters: string;
        /** Styles applied to the root element unless `disablePadding={true}`. */
        padding: string;
        /** Styles applied to the inner `component` element if `button={true}`. */
        button: string;
        /** Styles applied to the component element if `children` includes `ListItemSecondaryAction`. */
        secondaryAction: string;
        /** State class applied to the root element if `selected={true}`. */
        selected: string;
    }
    export type ListItemClassKey = keyof ListItemClasses;
    export function getListItemUtilityClass(slot: string): string;
    const listItemClasses: ListItemClasses;
    export default listItemClasses;
}
declare module "@mui/material/ListItem/ListItem" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { ExtendButtonBase } from "@mui/material/ButtonBase/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ListItemClasses } from "@mui/material/ListItem/listItemClasses";
    export interface ListItemComponentsPropsOverrides {
    }
    export interface ListItemBaseProps {
        /**
         * Defines the `align-items` style property.
         * @default 'center'
         */
        alignItems?: 'flex-start' | 'center';
        /**
         * If `true`, the list item is focused during the first mount.
         * Focus will also be triggered if the value changes from false to true.
         * @default false
         * @deprecated checkout [ListItemButton](/api/list-item-button/) instead
         */
        autoFocus?: boolean;
        /**
         * The content of the component if a `ListItemSecondaryAction` is used it must
         * be the last child.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ListItemClasses>;
        /**
         * The container component used when a `ListItemSecondaryAction` is the last child.
         * @default 'li'
         * @deprecated
         */
        ContainerComponent?: React.ElementType<React.HTMLAttributes<HTMLDivElement>>;
        /**
         * Props applied to the container component if used.
         * @default {}
         * @deprecated
         */
        ContainerProps?: React.HTMLAttributes<HTMLDivElement>;
        /**
         * If `true`, compact vertical padding designed for keyboard and mouse input is used.
         * The prop defaults to the value inherited from the parent List component.
         * @default false
         */
        dense?: boolean;
        /**
         * If `true`, the component is disabled.
         * @default false
         * @deprecated checkout [ListItemButton](/api/list-item-button/) instead
         */
        disabled?: boolean;
        /**
         * If `true`, the left and right padding is removed.
         * @default false
         */
        disableGutters?: boolean;
        /**
         * If `true`, all padding is removed.
         * @default false
         */
        disablePadding?: boolean;
        /**
         * If `true`, a 1px light border is added to the bottom of the list item.
         * @default false
         */
        divider?: boolean;
        /**
         * The element to display at the end of ListItem.
         */
        secondaryAction?: React.ReactNode;
        /**
         * Use to apply selected styling.
         * @default false
         * @deprecated checkout [ListItemButton](/api/list-item-button/) instead
         */
        selected?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export interface ListItemTypeMap<P, D extends React.ElementType> {
        props: P & ListItemBaseProps & {
            /**
             * The components used for each slot inside the InputBase.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Input.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLDivElement> & ListItemComponentsPropsOverrides;
            };
        };
        defaultComponent: D;
    }
    /**
     * Uses an additional container component if `ListItemSecondaryAction` is the last child.
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     * - [Transfer List](https://mui.com/components/transfer-list/)
     *
     * API:
     *
     * - [ListItem API](https://mui.com/api/list-item/)
     */
    const ListItem: ExtendButtonBase<ListItemTypeMap<{
        /**
         * If `true`, the list item is a button (using `ButtonBase`). Props intended
         * for `ButtonBase` can then be applied to `ListItem`.
         * @default false
         * @deprecated checkout [ListItemButton](/api/list-item-button/) instead
         *
         */
        button: true;
    }, 'div'>> & OverridableComponent<ListItemTypeMap<{
        /**
         * If `true`, the list item is a button (using `ButtonBase`). Props intended
         * for `ButtonBase` can then be applied to `ListItem`.
         * @default false
         * @deprecated checkout [ListItemButton](/api/list-item-button/) instead
         */
        button?: false;
    }, 'li'>>;
    export type ListItemProps<D extends React.ElementType = 'li', P = {}> = OverrideProps<ListItemTypeMap<P, D>, D>;
    export default ListItem;
}
declare module "@mui/material/ListItem/index" {
    export { default } from "@mui/material/ListItem/ListItem";
    export * from "@mui/material/ListItem/ListItem";
    export { default as listItemClasses } from "@mui/material/ListItem/listItemClasses";
    export * from "@mui/material/ListItem/listItemClasses";
}
declare module "@mui/material/ListItemButton/listItemButtonClasses" {
    export interface ListItemButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the `component`'s `focusVisibleClassName` prop. */
        focusVisible: string;
        /** Styles applied to the component element if dense. */
        dense: string;
        /** Styles applied to the component element if `alignItems="flex-start"`. */
        alignItemsFlexStart: string;
        /** State class applied to the inner `component` element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the inner `component` element if `divider={true}`. */
        divider: string;
        /** Styles applied to the inner `component` element unless `disableGutters={true}`. */
        gutters: string;
        /** State class applied to the root element if `selected={true}`. */
        selected: string;
    }
    export type ListItemButtonClassKey = keyof ListItemButtonClasses;
    export function getListItemButtonUtilityClass(slot: string): string;
    const listItemButtonClasses: ListItemButtonClasses;
    export default listItemButtonClasses;
}
declare module "@mui/material/ListItemButton/ListItemButton" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { ListItemButtonClasses } from "@mui/material/ListItemButton/listItemButtonClasses";
    export interface ListItemButtonBaseProps {
        /**
         * Defines the `align-items` style property.
         * @default 'center'
         */
        alignItems?: 'flex-start' | 'center';
        /**
         * If `true`, the list item is focused during the first mount.
         * Focus will also be triggered if the value changes from false to true.
         * @default false
         */
        autoFocus?: boolean;
        /**
         * The content of the component if a `ListItemSecondaryAction` is used it must
         * be the last child.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ListItemButtonClasses>;
        /**
         * If `true`, compact vertical padding designed for keyboard and mouse input is used.
         * The prop defaults to the value inherited from the parent List component.
         * @default false
         */
        dense?: boolean;
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the left and right padding is removed.
         * @default false
         */
        disableGutters?: boolean;
        /**
         * If `true`, a 1px light border is added to the bottom of the list item.
         * @default false
         */
        divider?: boolean;
        /**
         * Use to apply selected styling.
         * @default false
         */
        selected?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type ListItemButtonTypeMap<P = {}, D extends React.ElementType = 'div'> = ExtendButtonBaseTypeMap<{
        props: P & ListItemButtonBaseProps;
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [ListItemButton API](https://mui.com/api/list-item-button/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const ListItemButton: ExtendButtonBase<ListItemButtonTypeMap>;
    export type ListItemButtonProps<D extends React.ElementType = ListItemButtonTypeMap['defaultComponent'], P = {}> = OverrideProps<ListItemButtonTypeMap<P, D>, D>;
    export default ListItemButton;
}
declare module "@mui/material/ListItemButton/index" {
    export { default } from "@mui/material/ListItemButton/ListItemButton";
    export * from "@mui/material/ListItemButton/ListItemButton";
    export { default as listItemButtonClasses } from "@mui/material/ListItemButton/listItemButtonClasses";
    export * from "@mui/material/ListItemButton/listItemButtonClasses";
}
declare module "@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses" {
    export interface ListItemSecondaryActionClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element when the parent `ListItem` has `disableGutters={true}`. */
        disableGutters: string;
    }
    export type ListItemSecondaryActionClassKey = keyof ListItemSecondaryActionClasses;
    export function getListItemSecondaryActionClassesUtilityClass(slot: string): string;
    const listItemSecondaryActionClasses: ListItemSecondaryActionClasses;
    export default listItemSecondaryActionClasses;
}
declare module "@mui/material/ListItemSecondaryAction/ListItemSecondaryAction" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { ListItemSecondaryActionClasses } from "@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses";
    export interface ListItemSecondaryActionProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component, normally an `IconButton` or selection control.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ListItemSecondaryActionClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     * Must be used as the last child of ListItem to function properly.
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [ListItemSecondaryAction API](https://mui.com/api/list-item-secondary-action/)
     */
    const ListItemSecondaryAction: ((props: ListItemSecondaryActionProps) => JSX.Element) & {
        muiName: string;
    };
    export default ListItemSecondaryAction;
}
declare module "@mui/material/ListItemSecondaryAction/index" {
    export { default } from "@mui/material/ListItemSecondaryAction/ListItemSecondaryAction";
    export * from "@mui/material/ListItemSecondaryAction/ListItemSecondaryAction";
    export { default as listItemSecondaryActionClasses } from "@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses";
    export * from "@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses";
}
declare module "@mui/material/ListItemText/listItemTextClasses" {
    export interface ListItemTextClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the Typography component if primary and secondary are set. */
        multiline: string;
        /** Styles applied to the Typography component if dense. */
        dense: string;
        /** Styles applied to the root element if `inset={true}`. */
        inset: string;
        /** Styles applied to the primary `Typography` component. */
        primary: string;
        /** Styles applied to the secondary `Typography` component. */
        secondary: string;
    }
    export type ListItemTextClassKey = keyof ListItemTextClasses;
    export function getListItemTextUtilityClass(slot: string): string;
    const listItemTextClasses: ListItemTextClasses;
    export default listItemTextClasses;
}
declare module "@mui/material/ListItemText/ListItemText" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TypographyProps } from "@mui/material/Typography/index";
    import { ListItemTextClasses } from "@mui/material/ListItemText/listItemTextClasses";
    export interface ListItemTextProps<PrimaryTypographyComponent extends React.ElementType = 'span', SecondaryTypographyComponent extends React.ElementType = 'p'> extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * Alias for the `primary` prop.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ListItemTextClasses>;
        /**
         * If `true`, the children won't be wrapped by a Typography component.
         * This can be useful to render an alternative Typography variant by wrapping
         * the `children` (or `primary`) text, and optional `secondary` text
         * with the Typography component.
         * @default false
         */
        disableTypography?: boolean;
        /**
         * If `true`, the children are indented.
         * This should be used if there is no left avatar or left icon.
         * @default false
         */
        inset?: boolean;
        /**
         * The main content element.
         */
        primary?: React.ReactNode;
        /**
         * These props will be forwarded to the primary typography component
         * (as long as disableTypography is not `true`).
         */
        primaryTypographyProps?: TypographyProps<PrimaryTypographyComponent, {
            component?: PrimaryTypographyComponent;
        }>;
        /**
         * The secondary content element.
         */
        secondary?: React.ReactNode;
        /**
         * These props will be forwarded to the secondary typography component
         * (as long as disableTypography is not `true`).
         */
        secondaryTypographyProps?: TypographyProps<SecondaryTypographyComponent, {
            component?: SecondaryTypographyComponent;
        }>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [ListItemText API](https://mui.com/api/list-item-text/)
     */
    export type ListItemText = <PrimaryTypographyComponent extends React.ElementType = 'span', SecondaryTypographyComponent extends React.ElementType = 'p'>(props: ListItemTextProps<PrimaryTypographyComponent, SecondaryTypographyComponent>) => JSX.Element;
    export default ListItemText;
}
declare module "@mui/material/ListItemText/index" {
    export { default } from "@mui/material/ListItemText/ListItemText";
    export * from "@mui/material/ListItemText/ListItemText";
    export { default as listItemTextClasses } from "@mui/material/ListItemText/listItemTextClasses";
    export * from "@mui/material/ListItemText/listItemTextClasses";
}
declare module "@mui/material/List/listClasses" {
    export interface ListClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `disablePadding={true}`. */
        padding: string;
        /** Styles applied to the root element if dense. */
        dense: string;
        /** Styles applied to the root element if a `subheader` is provided. */
        subheader: string;
    }
    export type ListClassKey = keyof ListClasses;
    export function getListUtilityClass(slot: string): string;
    const listClasses: ListClasses;
    export default listClasses;
}
declare module "@mui/material/List/List" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/material/OverridableComponent";
    import { ListClasses } from "@mui/material/List/listClasses";
    export interface ListTypeMap<P = {}, D extends React.ElementType = 'ul'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ListClasses>;
            /**
             * If `true`, compact vertical padding designed for keyboard and mouse input is used for
             * the list and list items.
             * The prop is available to descendant components as the `dense` context.
             * @default false
             */
            dense?: boolean;
            /**
             * If `true`, vertical padding is removed from the list.
             * @default false
             */
            disablePadding?: boolean;
            /**
             * The content of the subheader, normally `ListSubheader`.
             */
            subheader?: React.ReactNode;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     * utility to create component types that inherit props from List.
     */
    export interface ExtendListTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & ListTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendList<M extends OverridableTypeMap> = OverridableComponent<ExtendListTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     * - [Transfer List](https://mui.com/components/transfer-list/)
     *
     * API:
     *
     * - [List API](https://mui.com/api/list/)
     */
    const List: ExtendList<ListTypeMap>;
    export type ListProps<D extends React.ElementType = ListTypeMap['defaultComponent'], P = {}> = OverrideProps<ListTypeMap<P, D>, D>;
    export default List;
}
declare module "@mui/material/List/index" {
    export { default } from "@mui/material/List/List";
    export * from "@mui/material/List/List";
    export { default as listClasses } from "@mui/material/List/listClasses";
    export * from "@mui/material/List/listClasses";
}
declare module "@mui/material/ListSubheader/listSubheaderClasses" {
    export interface ListSubheaderClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="inherit"`. */
        colorInherit: string;
        /** Styles applied to the inner `component` element unless `disableGutters={true}`. */
        gutters: string;
        /** Styles applied to the root element if `inset={true}`. */
        inset: string;
        /** Styles applied to the root element unless `disableSticky={true}`. */
        sticky: string;
    }
    export type ListSubheaderClassKey = keyof ListSubheaderClasses;
    export function getListSubheaderUtilityClass(slot: string): string;
    const listSubheaderClasses: ListSubheaderClasses;
    export default listSubheaderClasses;
}
declare module "@mui/material/ListSubheader/ListSubheader" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ListSubheaderClasses } from "@mui/material/ListSubheader/listSubheaderClasses";
    export interface ListSubheaderTypeMap<P = {}, D extends React.ElementType = 'li'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ListSubheaderClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'default'
             */
            color?: 'default' | 'primary' | 'inherit';
            /**
             * If `true`, the List Subheader will not have gutters.
             * @default false
             */
            disableGutters?: boolean;
            /**
             * If `true`, the List Subheader will not stick to the top during scroll.
             * @default false
             */
            disableSticky?: boolean;
            /**
             * If `true`, the List Subheader is indented.
             * @default false
             */
            inset?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Lists](https://mui.com/components/lists/)
     *
     * API:
     *
     * - [ListSubheader API](https://mui.com/api/list-subheader/)
     */
    const ListSubheader: OverridableComponent<ListSubheaderTypeMap>;
    export type ListSubheaderProps<D extends React.ElementType = ListSubheaderTypeMap['defaultComponent'], P = {}> = OverrideProps<ListSubheaderTypeMap<P, D>, D>;
    export default ListSubheader;
}
declare module "@mui/material/ListSubheader/index" {
    export { default } from "@mui/material/ListSubheader/ListSubheader";
    export * from "@mui/material/ListSubheader/ListSubheader";
    export { default as listSubheaderClasses } from "@mui/material/ListSubheader/listSubheaderClasses";
    export * from "@mui/material/ListSubheader/listSubheaderClasses";
}
declare module "@mui/material/MenuItem/menuItemClasses" {
    export interface MenuItemClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if keyboard focused. */
        focusVisible: string;
        /** Styles applied to the root element if dense. */
        dense: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `divider={true}`. */
        divider: string;
        /** Styles applied to the inner `component` element unless `disableGutters={true}`. */
        gutters: string;
        /** State class applied to the root element if `selected={true}`. */
        selected: string;
    }
    export type MenuItemClassKey = keyof MenuItemClasses;
    export function getMenuItemUtilityClass(slot: string): string;
    const menuItemClasses: MenuItemClasses;
    export default menuItemClasses;
}
declare module "@mui/material/MenuItem/MenuItem" {
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { MenuItemClasses } from "@mui/material/MenuItem/menuItemClasses";
    export type MenuItemTypeMap<P = {}, D extends React.ElementType = 'li'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * If `true`, the list item is focused during the first mount.
             * Focus will also be triggered if the value changes from false to true.
             * @default false
             */
            autoFocus?: boolean;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<MenuItemClasses>;
            /**
             * If `true`, compact vertical padding designed for keyboard and mouse input is used.
             * The prop defaults to the value inherited from the parent Menu component.
             * @default false
             */
            dense?: boolean;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the left and right padding is removed.
             * @default false
             */
            disableGutters?: boolean;
            /**
             * If `true`, a 1px light border is added to the bottom of the menu item.
             * @default false
             */
            divider?: boolean;
            /**
             * Use to apply selected styling.
             * @default false
             */
            selected?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Menus](https://mui.com/components/menus/)
     *
     * API:
     *
     * - [MenuItem API](https://mui.com/api/menu-item/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const MenuItem: ExtendButtonBase<MenuItemTypeMap>;
    export type MenuItemProps<D extends React.ElementType = MenuItemTypeMap['defaultComponent'], P = {}> = OverrideProps<MenuItemTypeMap<P, D>, D>;
    export default MenuItem;
}
declare module "@mui/material/MenuItem/index" {
    export { default } from "@mui/material/MenuItem/MenuItem";
    export * from "@mui/material/MenuItem/MenuItem";
    export * from "@mui/material/MenuItem/menuItemClasses";
    export { default as menuItemClasses } from "@mui/material/MenuItem/menuItemClasses";
}
declare module "@mui/material/MenuList/MenuList" {
    import * as React from 'react';
    import { ExtendList, ExtendListTypeMap } from "@mui/material/List/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    export type MenuListTypeMap<P = {}, D extends React.ElementType = 'ul'> = ExtendListTypeMap<{
        props: P & {
            /**
             * If `true`, will focus the `[role="menu"]` container and move into tab order.
             * @default false
             */
            autoFocus?: boolean;
            /**
             * If `true`, will focus the first menuitem if `variant="menu"` or selected item
             * if `variant="selectedMenu"`.
             * @default false
             */
            autoFocusItem?: boolean;
            /**
             * MenuList contents, normally `MenuItem`s.
             */
            children?: React.ReactNode;
            /**
             * If `true`, will allow focus on disabled items.
             * @default false
             */
            disabledItemsFocusable?: boolean;
            /**
             * If `true`, the menu items will not wrap focus.
             * @default false
             */
            disableListWrap?: boolean;
            /**
             * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
             * and the vertical alignment relative to the anchor element.
             * @default 'selectedMenu'
             */
            variant?: 'menu' | 'selectedMenu';
        };
        defaultComponent: D;
    }>;
    export type MenuListClassKey = keyof NonNullable<MenuListTypeMap['props']['classes']>;
    /**
     * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.
     * It's exposed to help customization of the [`Menu`](https://mui.com/api/menu/) component if you
     * use it separately you need to move focus into the component manually. Once
     * the focus is placed inside the component it is fully keyboard accessible.
     *
     * Demos:
     *
     * - [Menus](https://mui.com/components/menus/)
     *
     * API:
     *
     * - [MenuList API](https://mui.com/api/menu-list/)
     * - inherits [List API](https://mui.com/api/list/)
     */
    const MenuList: ExtendList<MenuListTypeMap>;
    export type MenuListProps<D extends React.ElementType = MenuListTypeMap['defaultComponent'], P = {}> = OverrideProps<MenuListTypeMap<P, D>, D>;
    export default MenuList;
}
declare module "@mui/material/MenuList/index" {
    export { default } from "@mui/material/MenuList/MenuList";
    export * from "@mui/material/MenuList/MenuList";
}
declare module "@mui/material/Popover/popoverClasses" {
    export interface PopoverClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the Paper component. */
        paper: string;
    }
    export type PopoverClassKey = keyof PopoverClasses;
    export function getPopoverUtilityClass(slot: string): string;
    const popoverClasses: PopoverClasses;
    export default popoverClasses;
}
declare module "@mui/material/Popover/Popover" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { ModalProps } from "@mui/material/Modal/index";
    import { Theme } from "@mui/material/styles/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { PopoverClasses } from "@mui/material/Popover/popoverClasses";
    export interface PopoverOrigin {
        vertical: 'top' | 'center' | 'bottom' | number;
        horizontal: 'left' | 'center' | 'right' | number;
    }
    export interface PopoverPosition {
        top: number;
        left: number;
    }
    export type PopoverReference = 'anchorEl' | 'anchorPosition' | 'none';
    export interface PopoverProps extends StandardProps<ModalProps, 'children'> {
        /**
         * A ref for imperative actions.
         * It currently only supports updatePosition() action.
         */
        action?: React.Ref<PopoverActions>;
        /**
         * An HTML element, or a function that returns one.
         * It's used to set the position of the popover.
         */
        anchorEl?: null | Element | ((element: Element) => Element);
        /**
         * This is the point on the anchor where the popover's
         * `anchorEl` will attach to. This is not used when the
         * anchorReference is 'anchorPosition'.
         *
         * Options:
         * vertical: [top, center, bottom];
         * horizontal: [left, center, right].
         * @default {
         *   vertical: 'top',
         *   horizontal: 'left',
         * }
         */
        anchorOrigin?: PopoverOrigin;
        /**
         * This is the position that may be used to set the position of the popover.
         * The coordinates are relative to the application's client area.
         */
        anchorPosition?: PopoverPosition;
        /**
         * This determines which anchor prop to refer to when setting
         * the position of the popover.
         * @default 'anchorEl'
         */
        anchorReference?: PopoverReference;
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<PopoverClasses>;
        /**
         * An HTML element, component instance, or function that returns either.
         * The `container` will passed to the Modal component.
         *
         * By default, it uses the body of the anchorEl's top-level document object,
         * so it's simply `document.body` most of the time.
         */
        container?: ModalProps['container'];
        /**
         * The elevation of the popover.
         * @default 8
         */
        elevation?: number;
        /**
         * Specifies how close to the edge of the window the popover can appear.
         * @default 16
         */
        marginThreshold?: number;
        onClose?: ModalProps['onClose'];
        /**
         * If `true`, the component is shown.
         */
        open: boolean;
        /**
         * Props applied to the [`Paper`](/api/paper/) element.
         * @default {}
         */
        PaperProps?: Partial<PaperProps>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * This is the point on the popover which
         * will attach to the anchor's origin.
         *
         * Options:
         * vertical: [top, center, bottom, x(px)];
         * horizontal: [left, center, right, x(px)].
         * @default {
         *   vertical: 'top',
         *   horizontal: 'left',
         * }
         */
        transformOrigin?: PopoverOrigin;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Grow
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps & {
            children: React.ReactElement<any, any>;
        }>;
        /**
         * Set to 'auto' to automatically calculate transition time based on height.
         * @default 'auto'
         */
        transitionDuration?: TransitionProps['timeout'] | 'auto';
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         * @default {}
         */
        TransitionProps?: TransitionProps;
    }
    export interface PopoverActions {
        updatePosition(): void;
    }
    /**
     *
     * Demos:
     *
     * - [Menus](https://mui.com/components/menus/)
     * - [Popover](https://mui.com/components/popover/)
     *
     * API:
     *
     * - [Popover API](https://mui.com/api/popover/)
     * - inherits [Modal API](https://mui.com/api/modal/)
     */
    export type Popover = (props: PopoverProps) => JSX.Element;
    export default Popover;
}
declare module "@mui/material/Popover/index" {
    export { default } from "@mui/material/Popover/Popover";
    export * from "@mui/material/Popover/Popover";
    export { default as popoverClasses } from "@mui/material/Popover/popoverClasses";
    export * from "@mui/material/Popover/popoverClasses";
}
declare module "@mui/material/Menu/menuClasses" {
    export interface MenuClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the Paper component. */
        paper: string;
        /** Styles applied to the List component via `MenuList`. */
        list: string;
    }
    export type MenuClassKey = keyof MenuClasses;
    export function getMenuUtilityClass(slot: string): string;
    const menuClasses: MenuClasses;
    export default menuClasses;
}
declare module "@mui/material/Menu/Menu" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { PopoverProps } from "@mui/material/Popover/index";
    import { MenuListProps } from "@mui/material/MenuList/index";
    import { Theme } from "@mui/material/styles/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { MenuClasses } from "@mui/material/Menu/menuClasses";
    export interface MenuProps extends StandardProps<PopoverProps> {
        /**
         * An HTML element, or a function that returns one.
         * It's used to set the position of the menu.
         */
        anchorEl?: PopoverProps['anchorEl'];
        /**
         * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
         * children are not focusable. If you set this prop to `false` focus will be placed
         * on the parent modal container. This has severe accessibility implications
         * and should only be considered if you manage focus otherwise.
         * @default true
         */
        autoFocus?: boolean;
        /**
         * Menu contents, normally `MenuItem`s.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<MenuClasses>;
        /**
         * When opening the menu will not focus the active item but the `[role="menu"]`
         * unless `autoFocus` is also set to `false`. Not using the default means not
         * following WAI-ARIA authoring practices. Please be considerate about possible
         * accessibility implications.
         * @default false
         */
        disableAutoFocusItem?: boolean;
        /**
         * Props applied to the [`MenuList`](/api/menu-list/) element.
         * @default {}
         */
        MenuListProps?: Partial<MenuListProps>;
        /**
         * Callback fired when the component requests to be closed.
         *
         * @param {object} event The event source of the callback.
         * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
         */
        onClose?: PopoverProps['onClose'];
        /**
         * If `true`, the component is shown.
         */
        open: boolean;
        /**
         * `classes` prop applied to the [`Popover`](/api/popover/) element.
         */
        PopoverClasses?: PopoverProps['classes'];
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The length of the transition in `ms`, or 'auto'
         * @default 'auto'
         */
        transitionDuration?: TransitionProps['timeout'] | 'auto';
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         * @default {}
         */
        TransitionProps?: TransitionProps;
        /**
         * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
         * @default 'selectedMenu'
         */
        variant?: 'menu' | 'selectedMenu';
    }
    /**
     *
     * Demos:
     *
     * - [App Bar](https://mui.com/components/app-bar/)
     * - [Menus](https://mui.com/components/menus/)
     *
     * API:
     *
     * - [Menu API](https://mui.com/api/menu/)
     * - inherits [Popover API](https://mui.com/api/popover/)
     */
    export type Menu = (props: MenuProps) => JSX.Element;
    export default Menu;
}
declare module "@mui/material/Menu/index" {
    export { default } from "@mui/material/Menu/Menu";
    export * from "@mui/material/Menu/Menu";
    export { default as menuClasses } from "@mui/material/Menu/menuClasses";
    export * from "@mui/material/Menu/menuClasses";
}
declare module "@mui/material/MobileStepper/mobileStepperClasses" {
    export interface MobileStepperClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `position="bottom"`. */
        positionBottom: string;
        /** Styles applied to the root element if `position="top"`. */
        positionTop: string;
        /** Styles applied to the root element if `position="static"`. */
        positionStatic: string;
        /** Styles applied to the dots container if `variant="dots"`. */
        dots: string;
        /** Styles applied to each dot if `variant="dots"`. */
        dot: string;
        /** Styles applied to a dot if `variant="dots"` and this is the active step. */
        dotActive: string;
        /** Styles applied to the Linear Progress component if `variant="progress"`. */
        progress: string;
    }
    export type MobileStepperClassKey = keyof MobileStepperClasses;
    export function getMobileStepperUtilityClass(slot: string): string;
    const mobileStepperClasses: MobileStepperClasses;
    export default mobileStepperClasses;
}
declare module "@mui/material/MobileStepper/MobileStepper" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { LinearProgressProps } from "@mui/material/LinearProgress/index";
    import { MobileStepperClasses } from "@mui/material/MobileStepper/mobileStepperClasses";
    export interface MobileStepperProps extends StandardProps<PaperProps, 'children' | 'variant'> {
        /**
         * Set the active step (zero based index).
         * Defines which dot is highlighted when the variant is 'dots'.
         * @default 0
         */
        activeStep?: number;
        /**
         * A back button element. For instance, it can be a `Button` or an `IconButton`.
         */
        backButton: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<MobileStepperClasses>;
        /**
         * Props applied to the `LinearProgress` element.
         */
        LinearProgressProps?: Partial<LinearProgressProps>;
        /**
         * A next button element. For instance, it can be a `Button` or an `IconButton`.
         */
        nextButton: React.ReactNode;
        /**
         * Set the positioning type.
         * @default 'bottom'
         */
        position?: 'bottom' | 'top' | 'static';
        /**
         * The total steps.
         */
        steps: number;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The variant to use.
         * @default 'dots'
         */
        variant?: 'text' | 'dots' | 'progress';
    }
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [MobileStepper API](https://mui.com/api/mobile-stepper/)
     * - inherits [Paper API](https://mui.com/api/paper/)
     */
    export type MobileStepper = (props: MobileStepperProps) => JSX.Element;
    export default MobileStepper;
}
declare module "@mui/material/MobileStepper/index" {
    export { default } from "@mui/material/MobileStepper/MobileStepper";
    export * from "@mui/material/MobileStepper/MobileStepper";
    export { default as mobileStepperClasses } from "@mui/material/MobileStepper/mobileStepperClasses";
    export * from "@mui/material/MobileStepper/mobileStepperClasses";
}
declare module "@mui/material/NativeSelect/NativeSelectInput" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    export interface NativeSelectInputProps extends React.SelectHTMLAttributes<HTMLSelectElement> {
        disabled?: boolean;
        IconComponent: React.ElementType;
        inputRef?: React.Ref<HTMLSelectElement>;
        variant?: 'standard' | 'outlined' | 'filled';
        sx?: SxProps<Theme>;
    }
    const NativeSelectInput: React.JSXElementConstructor<NativeSelectInputProps>;
    export default NativeSelectInput;
}
declare module "@mui/material/NativeSelect/nativeSelectClasses" {
    export interface NativeSelectClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the select component `select` class. */
        select: string;
        /** Styles applied to the select component if `multiple={true}`. */
        multiple: string;
        /** Styles applied to the select component if `variant="filled"`. */
        filled: string;
        /** Styles applied to the select component if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the select component if `variant="standard"`. */
        standard: string;
        /** State class applied to the select component `disabled` class. */
        disabled: string;
        /** Styles applied to the icon component. */
        icon: string;
        /** Styles applied to the icon component if the popup is open. */
        iconOpen: string;
        /** Styles applied to the icon component if `variant="filled"`. */
        iconFilled: string;
        /** Styles applied to the icon component if `variant="outlined"`. */
        iconOutlined: string;
        /** Styles applied to the icon component if `variant="standard"`. */
        iconStandard: string;
        /** Styles applied to the underlying native input component. */
        nativeInput: string;
    }
    export type NativeSelectClassKey = keyof NativeSelectClasses;
    export function getNativeSelectUtilityClasses(slot: string): string;
    const nativeSelectClasses: NativeSelectClasses;
    export default nativeSelectClasses;
}
declare module "@mui/material/NativeSelect/NativeSelect" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { InputProps } from "@mui/material/Input/index";
    import { NativeSelectInputProps } from "@mui/material/NativeSelect/NativeSelectInput";
    import { NativeSelectClasses } from "@mui/material/NativeSelect/nativeSelectClasses";
    export interface NativeSelectProps extends StandardProps<InputProps, 'inputProps' | 'value' | 'onChange'> {
        /**
         * The option elements to populate the select with.
         * Can be some `<option>` elements.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         * @default {}
         */
        classes?: Partial<NativeSelectClasses>;
        /**
         * The icon that displays the arrow.
         * @default ArrowDropDownIcon
         */
        IconComponent?: React.ElementType;
        /**
         * An `Input` element; does not have to be a material-ui specific `Input`.
         * @default <Input />
         */
        input?: React.ReactElement<any, any>;
        /**
         * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.
         */
        inputProps?: Partial<NativeSelectInputProps>;
        /**
         * Callback fired when a menu item is selected.
         *
         * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         */
        onChange?: NativeSelectInputProps['onChange'];
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The `input` value. The DOM API casts this to a string.
         */
        value?: unknown;
        /**
         * The variant to use.
         */
        variant?: 'standard' | 'outlined' | 'filled';
    }
    /**
     * An alternative to `<Select native />` with a much smaller bundle size footprint.
     *
     * Demos:
     *
     * - [Selects](https://mui.com/components/selects/)
     *
     * API:
     *
     * - [NativeSelect API](https://mui.com/api/native-select/)
     * - inherits [Input API](https://mui.com/api/input/)
     */
    const NativeSelect: ((props: NativeSelectProps) => JSX.Element) & {
        muiName: string;
    };
    export default NativeSelect;
}
declare module "@mui/material/NativeSelect/index" {
    export { default } from "@mui/material/NativeSelect/NativeSelect";
    export * from "@mui/material/NativeSelect/NativeSelect";
    export { default as nativeSelectClasses } from "@mui/material/NativeSelect/nativeSelectClasses";
    export * from "@mui/material/NativeSelect/nativeSelectClasses";
}
declare module "@mui/material/useMediaQuery/useMediaQuery" {
    /**
     * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.
     */
    export interface MuiMediaQueryListEvent {
        matches: boolean;
    }
    /**
     * @deprecated Not used internally. Use `MediaQueryList` from lib.dom.d.ts instead.
     */
    export interface MuiMediaQueryList {
        matches: boolean;
        addListener: (listener: MuiMediaQueryListListener) => void;
        removeListener: (listener: MuiMediaQueryListListener) => void;
    }
    /**
     * @deprecated Not used internally. Use `(event: MediaQueryListEvent) => void` instead.
     */
    export type MuiMediaQueryListListener = (event: MuiMediaQueryListEvent) => void;
    export interface Options {
        defaultMatches?: boolean;
        matchMedia?: typeof window.matchMedia;
        /**
         * This option is kept for backwards compatibility and has no longer any effect.
         * It's previous behavior is now handled automatically.
         */
        noSsr?: boolean;
        ssrMatchMedia?: (query: string) => {
            matches: boolean;
        };
    }
    export type useMediaQuery = <Theme = unknown>(queryInput: string | ((theme: Theme) => string), options?: Options) => boolean;
    export default useMediaQuery;
}
declare module "@mui/material/useMediaQuery/index" {
    export { default } from "@mui/material/useMediaQuery/useMediaQuery";
    export * from "@mui/material/useMediaQuery/useMediaQuery";
}
declare module "@mui/material/OutlinedInput/outlinedInputClasses" {
    export interface OutlinedInputClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the color is secondary. */
        colorSecondary: string;
        /** Styles applied to the root element if the component is focused. */
        focused: string;
        /** Styles applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `startAdornment` is provided. */
        adornedStart: string;
        /** Styles applied to the root element if `endAdornment` is provided. */
        adornedEnd: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** Styles applied to the input element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `multiline={true}`. */
        multiline: string;
        /** Styles applied to the NotchedOutline element. */
        notchedOutline: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if `size="small"`. */
        inputSizeSmall: string;
        /** Styles applied to the input element if `multiline={true}`. */
        inputMultiline: string;
        /** Styles applied to the input element if `startAdornment` is provided. */
        inputAdornedStart: string;
        /** Styles applied to the input element if `endAdornment` is provided. */
        inputAdornedEnd: string;
    }
    export type OutlinedInputClassKey = keyof OutlinedInputClasses;
    export function getOutlinedInputUtilityClass(slot: string): string;
    const outlinedInputClasses: OutlinedInputClasses;
    export default outlinedInputClasses;
}
declare module "@mui/material/OutlinedInput/OutlinedInput" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { InputBaseProps } from "@mui/material/InputBase/index";
    import { OutlinedInputClasses } from "@mui/material/OutlinedInput/outlinedInputClasses";
    export interface OutlinedInputProps extends StandardProps<InputBaseProps> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<OutlinedInputClasses>;
        /**
         * The label of the `input`. It is only used for layout. The actual labelling
         * is handled by `InputLabel`.
         */
        label?: React.ReactNode;
        /**
         * If `true`, the outline is notched to accommodate the label.
         */
        notched?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [OutlinedInput API](https://mui.com/api/outlined-input/)
     * - inherits [InputBase API](https://mui.com/api/input-base/)
     */
    const OutlinedInput: ((props: OutlinedInputProps) => JSX.Element) & {
        muiName: string;
    };
    export default OutlinedInput;
}
declare module "@mui/material/OutlinedInput/index" {
    export { default } from "@mui/material/OutlinedInput/OutlinedInput";
    export * from "@mui/material/OutlinedInput/OutlinedInput";
    export { default as outlinedInputClasses } from "@mui/material/OutlinedInput/outlinedInputClasses";
    export * from "@mui/material/OutlinedInput/outlinedInputClasses";
}
declare module "@mui/material/usePagination/usePagination" {
    import * as React from 'react';
    export interface UsePaginationProps {
        /**
         * Number of always visible pages at the beginning and end.
         * @default 1
         */
        boundaryCount?: number;
        /**
         * The name of the component where this hook is used.
         */
        componentName?: string;
        /**
         * The total number of pages.
         * @default 1
         */
        count?: number;
        /**
         * The page selected by default when the component is uncontrolled.
         * @default 1
         */
        defaultPage?: number;
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, hide the next-page button.
         * @default false
         */
        hideNextButton?: boolean;
        /**
         * If `true`, hide the previous-page button.
         * @default false
         */
        hidePrevButton?: boolean;
        /**
         * Callback fired when the page is changed.
         *
         * @param {React.ChangeEvent<unknown>} event The event source of the callback.
         * @param {number} page The page selected.
         */
        onChange?: (event: React.ChangeEvent<unknown>, page: number) => void;
        /**
         * The current page.
         */
        page?: number;
        /**
         * If `true`, show the first-page button.
         * @default false
         */
        showFirstButton?: boolean;
        /**
         * If `true`, show the last-page button.
         * @default false
         */
        showLastButton?: boolean;
        /**
         * Number of always visible pages before and after the current page.
         * @default 1
         */
        siblingCount?: number;
    }
    export interface UsePaginationItem {
        onClick: React.ReactEventHandler;
        type: 'page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis';
        page: number;
        selected: boolean;
        disabled: boolean;
    }
    export interface UsePaginationResult {
        items: UsePaginationItem[];
    }
    export type usePagination = (props: UsePaginationProps) => UsePaginationResult;
    export default usePagination;
}
declare module "@mui/material/Pagination/paginationClasses" {
    export interface PaginationClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the ul element. */
        ul: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="text"`. */
        text: string;
    }
    export type PaginationClassKey = keyof PaginationClasses;
    export function getPaginationUtilityClass(slot: string): string;
    const paginationClasses: PaginationClasses;
    export default paginationClasses;
}
declare module "@mui/material/Pagination/Pagination" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { UsePaginationItem, UsePaginationProps } from "@mui/material/usePagination/usePagination";
    import { PaginationClasses } from "@mui/material/Pagination/paginationClasses";
    export interface PaginationRenderItemParams extends UsePaginationItem {
        color: PaginationProps['color'];
        shape: PaginationProps['shape'];
        size: PaginationProps['size'];
        variant: PaginationProps['variant'];
    }
    export interface PaginationPropsVariantOverrides {
    }
    export interface PaginationPropsSizeOverrides {
    }
    export interface PaginationPropsColorOverrides {
    }
    export interface PaginationProps extends UsePaginationProps, StandardProps<React.HTMLAttributes<HTMLElement>, 'children' | 'onChange'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<PaginationClasses>;
        /**
         * The active color.
         * @default 'standard'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'standard', PaginationPropsColorOverrides>;
        /**
         * Accepts a function which returns a string value that provides a user-friendly name for the current page.
         * This is important for screen reader users.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.
         * @param {number} page The page number to format.
         * @param {bool} selected If true, the current page is selected.
         * @returns {string}
         */
        getItemAriaLabel?: (type: 'page' | 'first' | 'last' | 'next' | 'previous', page: number, selected: boolean) => string;
        /**
         * Render the item.
         * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
         * @returns {ReactNode}
         * @default (item) => <PaginationItem {...item} />
         */
        renderItem?: (params: PaginationRenderItemParams) => React.ReactNode;
        /**
         * The shape of the pagination items.
         * @default 'circular'
         */
        shape?: 'circular' | 'rounded';
        /**
         * The size of the component.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium' | 'large', PaginationPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The variant to use.
         * @default 'text'
         */
        variant?: OverridableStringUnion<'text' | 'outlined', PaginationPropsVariantOverrides>;
    }
    /**
     *
     * Demos:
     *
     * - [Pagination](https://mui.com/components/pagination/)
     *
     * API:
     *
     * - [Pagination API](https://mui.com/api/pagination/)
     */
    export type Pagination = (props: PaginationProps) => JSX.Element;
    export default Pagination;
}
declare module "@mui/material/Pagination/index" {
    export { default } from "@mui/material/Pagination/Pagination";
    export * from "@mui/material/Pagination/Pagination";
    export { default as paginationClasses } from "@mui/material/Pagination/paginationClasses";
    export * from "@mui/material/Pagination/paginationClasses";
}
declare module "@mui/material/PaginationItem/paginationItemClasses" {
    export interface PaginationItemClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `type="page"`. */
        page: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="large"`. */
        sizeLarge: string;
        /** Styles applied to the root element if `variant="text"`. */
        text: string;
        /** Styles applied to the root element if `variant="text"` and `color="primary"`. */
        textPrimary: string;
        /** Styles applied to the root element if `variant="text"` and `color="secondary"`. */
        textSecondary: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="primary"`. */
        outlinedPrimary: string;
        /** Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */
        outlinedSecondary: string;
        /** Styles applied to the root element if `rounded="true"`. */
        rounded: string;
        /** Styles applied to the root element if `type="start-ellipsis"` or `type="end-ellipsis"`. */
        ellipsis: string;
        /** Styles applyed to the root element if `type="first"` or type="last". */
        firstLast: string;
        /** Styles applyed to the root element if `type="previous"` or type="next". */
        previousNext: string;
        /** State class applied to the root element if keyboard focused. */
        focusVisible: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `selected={true}`. */
        selected: string;
        /** Styles applied to the icon to display. */
        icon: string;
    }
    export type PaginationItemClassKey = keyof PaginationItemClasses;
    export function getPaginationItemUtilityClass(slot: string): string;
    const paginationItemClasses: PaginationItemClasses;
    export default paginationItemClasses;
}
declare module "@mui/material/PaginationItem/PaginationItem" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { UsePaginationItem } from "@mui/material/usePagination/usePagination";
    import { PaginationItemClasses } from "@mui/material/PaginationItem/paginationItemClasses";
    export interface PaginationItemPropsVariantOverrides {
    }
    export interface PaginationItemPropsSizeOverrides {
    }
    export interface PaginationItemPropsColorOverrides {
    }
    export interface PaginationItemTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<PaginationItemClasses>;
            /**
             * The active color.
             * @default 'standard'
             */
            color?: OverridableStringUnion<'standard' | 'primary' | 'secondary', PaginationItemPropsColorOverrides>;
            /**
             * The components used for first, last, next & previous item type
             * @default {
             *   first: FirstPageIcon,
             *   last: LastPageIcon,
             *   next: NavigateNextIcon,
             *   previous: NavigateBeforeIcon,
             * }
             */
            components?: {
                first?: React.ElementType;
                last?: React.ElementType;
                next?: React.ElementType;
                previous?: React.ElementType;
            };
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * The current page number.
             */
            page?: React.ReactNode;
            /**
             * If `true` the pagination item is selected.
             * @default false
             */
            selected?: boolean;
            /**
             * The shape of the pagination item.
             * @default 'circular'
             */
            shape?: 'circular' | 'rounded';
            /**
             * The size of the component.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium' | 'large', PaginationItemPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The type of pagination item.
             * @default 'page'
             */
            type?: UsePaginationItem['type'];
            /**
             * The variant to use.
             * @default 'text'
             */
            variant?: OverridableStringUnion<'text' | 'outlined', PaginationItemPropsVariantOverrides>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Pagination](https://mui.com/components/pagination/)
     *
     * API:
     *
     * - [PaginationItem API](https://mui.com/api/pagination-item/)
     */
    const PaginationItem: OverridableComponent<PaginationItemTypeMap>;
    export type PaginationItemProps<D extends React.ElementType = PaginationItemTypeMap['defaultComponent'], P = {}> = OverrideProps<PaginationItemTypeMap<P, D>, D>;
    export default PaginationItem;
}
declare module "@mui/material/PaginationItem/index" {
    export { default } from "@mui/material/PaginationItem/PaginationItem";
    export * from "@mui/material/PaginationItem/PaginationItem";
    export { default as paginationItemClasses } from "@mui/material/PaginationItem/paginationItemClasses";
    export * from "@mui/material/PaginationItem/paginationItemClasses";
}
declare module "@mui/material/RadioGroup/RadioGroup" {
    import * as React from 'react';
    import { FormGroupProps } from "@mui/material/FormGroup/index";
    export interface RadioGroupProps extends Omit<FormGroupProps, 'onChange'> {
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: any;
        /**
         * The name used to reference the value of the control.
         * If you don't provide this prop, it falls back to a randomly generated name.
         */
        name?: string;
        /**
         * Callback fired when a radio button is selected.
         *
         * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
         * @param {string} value The value of the selected radio button.
         * You can pull out the new value by accessing `event.target.value` (string).
         */
        onChange?: (event: React.ChangeEvent<HTMLInputElement>, value: string) => void;
        /**
         * Value of the selected radio button. The DOM API casts this to a string.
         */
        value?: any;
    }
    export type RadioGroupClassKey = keyof NonNullable<RadioGroupProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Radio Buttons](https://mui.com/components/radio-buttons/)
     *
     * API:
     *
     * - [RadioGroup API](https://mui.com/api/radio-group/)
     * - inherits [FormGroup API](https://mui.com/api/form-group/)
     */
    export type RadioGroup = (props: RadioGroupProps) => JSX.Element;
    export default RadioGroup;
}
declare module "@mui/material/RadioGroup/RadioGroupContext" {
    import * as React from 'react';
    export interface RadioGroupContextValue {
        name: string | undefined;
        onChange: (event: React.ChangeEvent<HTMLInputElement>, value: string) => void;
        value: any;
    }
    /**
     * @ignore - internal component.
     */
    const RadioGroupContext: React.Context<RadioGroupContextValue | undefined>;
    export default RadioGroupContext;
}
declare module "@mui/material/RadioGroup/useRadioGroup" {
    import { RadioGroupContextValue } from "@mui/material/RadioGroup/RadioGroupContext";
    export interface RadioGroupState extends RadioGroupContextValue {
    }
    export type useRadioGroup = () => RadioGroupState | undefined;
    export default useRadioGroup;
}
declare module "@mui/material/RadioGroup/index" {
    export { default } from "@mui/material/RadioGroup/RadioGroup";
    export * from "@mui/material/RadioGroup/RadioGroup";
    export { default as useRadioGroup, RadioGroupState } from "@mui/material/RadioGroup/useRadioGroup";
}
declare module "@mui/material/Radio/radioClasses" {
    export interface RadioClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `checked={true}`. */
        checked: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
    }
    export type RadioClassKey = keyof RadioClasses;
    export function getRadioUtilityClass(slot: string): string;
    const radioClasses: RadioClasses;
    export default radioClasses;
}
declare module "@mui/material/Radio/Radio" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { SwitchBaseProps } from "@mui/material/internal/SwitchBase";
    import { RadioClasses } from "@mui/material/Radio/radioClasses";
    export interface RadioPropsSizeOverrides {
    }
    export interface RadioPropsColorOverrides {
    }
    export interface RadioProps extends StandardProps<SwitchBaseProps, 'checkedIcon' | 'color' | 'icon' | 'type'> {
        /**
         * The icon to display when the component is checked.
         * @default <RadioButtonIcon checked />
         */
        checkedIcon?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<RadioClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * @default 'primary'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' | 'default', RadioPropsColorOverrides>;
        /**
         * If `true`, the component is disabled.
         */
        disabled?: boolean;
        /**
         * The icon to display when the component is unchecked.
         * @default <RadioButtonIcon />
         */
        icon?: React.ReactNode;
        /**
         * The size of the component.
         * `small` is equivalent to the dense radio styling.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium', RadioPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Radio Buttons](https://mui.com/components/radio-buttons/)
     *
     * API:
     *
     * - [Radio API](https://mui.com/api/radio/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    export type Radio = (props: RadioProps) => JSX.Element;
    export default Radio;
}
declare module "@mui/material/Radio/index" {
    export { default } from "@mui/material/Radio/Radio";
    export * from "@mui/material/Radio/Radio";
    export { default as radioClasses } from "@mui/material/Radio/radioClasses";
    export * from "@mui/material/Radio/radioClasses";
}
declare module "@mui/material/Rating/ratingClasses" {
    export interface RatingClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** Styles applied to the root element if `size="large"`. */
        sizeLarge: string;
        /** Styles applied to the root element if `readOnly={true}`. */
        readOnly: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if keyboard focused. */
        focusVisible: string;
        /** Visually hide an element. */
        visuallyHidden: string;
        /** Styles applied to the label elements. */
        label: string;
        /** Styles applied to the label of the "no value" input when it is active. */
        labelEmptyValueActive: string;
        /** Styles applied to the icon wrapping elements. */
        icon: string;
        /** Styles applied to the icon wrapping elements when empty. */
        iconEmpty: string;
        /** Styles applied to the icon wrapping elements when filled. */
        iconFilled: string;
        /** Styles applied to the icon wrapping elements when hover. */
        iconHover: string;
        /** Styles applied to the icon wrapping elements when focus. */
        iconFocus: string;
        /** Styles applied to the icon wrapping elements when active. */
        iconActive: string;
        /** Styles applied to the icon wrapping elements when decimals are necessary. */
        decimal: string;
    }
    export type RatingClassKey = keyof RatingClasses;
    export function getRatingUtilityClass(slot: string): string;
    const ratingClasses: RatingClasses;
    export default ratingClasses;
}
declare module "@mui/material/Rating/Rating" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { RatingClasses } from "@mui/material/Rating/ratingClasses";
    export interface IconContainerProps extends React.HTMLAttributes<HTMLSpanElement> {
        value: number;
    }
    export interface RatingPropsSizeOverrides {
    }
    export interface RatingProps extends StandardProps<React.HTMLAttributes<HTMLSpanElement>, 'children' | 'onChange'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<RatingClasses>;
        /**
         * The default value. Use when the component is not controlled.
         * @default null
         */
        defaultValue?: number;
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * The icon to display when empty.
         * @default <StarBorder fontSize="inherit" />
         */
        emptyIcon?: React.ReactNode;
        /**
         * The label read when the rating input is empty.
         * @default 'Empty'
         */
        emptyLabelText?: React.ReactNode;
        /**
         * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.
         * This is important for screen reader users.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @param {number} value The rating label's value to format.
         * @returns {string}
         * @default function defaultLabelText(value) {
         *   return `${value} Star${value !== 1 ? 's' : ''}`;
         * }
         */
        getLabelText?: (value: number) => string;
        /**
         * If `true`, only the selected icon will be highlighted.
         * @default false
         */
        highlightSelectedOnly?: boolean;
        /**
         * The icon to display.
         * @default <Star fontSize="inherit" />
         */
        icon?: React.ReactNode;
        /**
         * The component containing the icon.
         * @default function IconContainer(props) {
         *   const { value, ...other } = props;
         *   return <span {...other} />;
         * }
         */
        IconContainerComponent?: React.ElementType<IconContainerProps>;
        /**
         * Maximum rating.
         * @default 5
         */
        max?: number;
        /**
         * The name attribute of the radio `input` elements.
         * This input `name` should be unique within the page.
         * Being unique within a form is insufficient since the `name` is used to generated IDs.
         */
        name?: string;
        /**
         * Callback fired when the value changes.
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {number|null} value The new value.
         */
        onChange?: (event: React.SyntheticEvent, value: number | null) => void;
        /**
         * Callback function that is fired when the hover state changes.
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {number} value The new value.
         */
        onChangeActive?: (event: React.SyntheticEvent, value: number) => void;
        /**
         * The minimum increment value change allowed.
         * @default 1
         */
        precision?: number;
        /**
         * Removes all hover effects and pointer events.
         * @default false
         */
        readOnly?: boolean;
        /**
         * The size of the component.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium' | 'large', RatingPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The rating value.
         */
        value?: number | null;
    }
    /**
     *
     * Demos:
     *
     * - [Rating](https://mui.com/components/rating/)
     *
     * API:
     *
     * - [Rating API](https://mui.com/api/rating/)
     */
    export type Rating = (props: RatingProps) => JSX.Element;
    export default Rating;
}
declare module "@mui/material/Rating/index" {
    export { default } from "@mui/material/Rating/Rating";
    export * from "@mui/material/Rating/Rating";
    export { default as ratingClasses } from "@mui/material/Rating/ratingClasses";
    export * from "@mui/material/Rating/ratingClasses";
}
declare module "@mui/material/ScopedCssBaseline/scopedCssBaselineClasses" {
    export interface ScopedCssBaselineClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type ScopedCssBaselineClassKey = keyof ScopedCssBaselineClasses;
    export function getScopedCssBaselineUtilityClass(slot: string): string;
    const scopedCssBaselineClasses: Record<"root", string>;
    export default scopedCssBaselineClasses;
}
declare module "@mui/material/ScopedCssBaseline/ScopedCssBaseline" {
    import * as React from 'react';
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ScopedCssBaselineClasses } from "@mui/material/ScopedCssBaseline/scopedCssBaselineClasses";
    export interface ScopedCssBaselineTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ScopedCssBaselineClasses>;
            /**
             * Enable `color-scheme` CSS property to use `theme.palette.mode`.
             * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
             * For browser support, check out https://caniuse.com/?search=color-scheme
             */
            enableColorScheme?: boolean;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Css Baseline](https://mui.com/components/css-baseline/)
     *
     * API:
     *
     * - [ScopedCssBaseline API](https://mui.com/api/scoped-css-baseline/)
     */
    const ScopedCssBaseline: OverridableComponent<ScopedCssBaselineTypeMap>;
    export type ScopedCssBaselineProps<D extends React.ElementType = ScopedCssBaselineTypeMap['defaultComponent'], P = {}> = OverrideProps<ScopedCssBaselineTypeMap<P, D>, D>;
    /**
     *
     * Demos:
     *
     * - [Css Baseline](https://mui.com/components/css-baseline/)
     *
     * API:
     *
     * - [ScopedCssBaseline API](https://mui.com/api/scoped-css-baseline/)
     */
    export default ScopedCssBaseline;
}
declare module "@mui/material/ScopedCssBaseline/index" {
    export { default } from "@mui/material/ScopedCssBaseline/ScopedCssBaseline";
    export * from "@mui/material/ScopedCssBaseline/ScopedCssBaseline";
    export { default as scopedCssBaselineClasses } from "@mui/material/ScopedCssBaseline/scopedCssBaselineClasses";
    export * from "@mui/material/ScopedCssBaseline/scopedCssBaselineClasses";
}
declare module "@mui/material/Select/SelectInput" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { MenuProps } from "@mui/material/Menu/index";
    /**
     * The change can be caused by different kind of events.
     * The type of event depends on what caused the change.
     * For example, when the browser auto-fills the `Select` you'll receive a `React.ChangeEvent`.
     */
    export type SelectChangeEvent<T = string> = (Event & {
        target: {
            value: T;
            name: string;
        };
    }) | React.ChangeEvent<HTMLInputElement>;
    export interface SelectInputProps<T = unknown> {
        autoFocus?: boolean;
        autoWidth: boolean;
        defaultOpen?: boolean;
        disabled?: boolean;
        IconComponent?: React.ElementType;
        inputRef?: (ref: HTMLSelectElement | {
            node: HTMLInputElement;
            value: SelectInputProps<T>['value'];
        }) => void;
        MenuProps?: Partial<MenuProps>;
        multiple: boolean;
        name?: string;
        native: boolean;
        onBlur?: React.FocusEventHandler<any>;
        onChange?: (event: SelectChangeEvent<T>, child: React.ReactNode) => void;
        onClose?: (event: React.SyntheticEvent) => void;
        onFocus?: React.FocusEventHandler<any>;
        onOpen?: (event: React.SyntheticEvent) => void;
        open?: boolean;
        readOnly?: boolean;
        renderValue?: (value: SelectInputProps<T>['value']) => React.ReactNode;
        SelectDisplayProps?: React.HTMLAttributes<HTMLDivElement>;
        sx?: SxProps<Theme>;
        tabIndex?: number;
        value?: T;
        variant?: 'standard' | 'outlined' | 'filled';
    }
    const SelectInput: React.JSXElementConstructor<SelectInputProps>;
    export default SelectInput;
}
declare module "@mui/material/Select/selectClasses" {
    export interface SelectClasses {
        /** Styles applied to the select component `select` class. */
        select: string;
        /** Styles applied to the select component if `multiple={true}`. */
        multiple: string;
        /** Styles applied to the select component if `variant="filled"`. */
        filled: string;
        /** Styles applied to the select component if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the select component if `variant="standard"`. */
        standard: string;
        /** State class applied to the select component `disabled` class. */
        disabled: string;
        /** Styles applied to the icon component. */
        icon: string;
        /** Styles applied to the icon component if the popup is open. */
        iconOpen: string;
        /** Styles applied to the icon component if `variant="filled"`. */
        iconFilled: string;
        /** Styles applied to the icon component if `variant="outlined"`. */
        iconOutlined: string;
        /** Styles applied to the icon component if `variant="standard"`. */
        iconStandard: string;
        /** Styles applied to the underlying native input component. */
        nativeInput: string;
    }
    export type SelectClassKey = keyof SelectClasses;
    export function getSelectUtilityClasses(slot: string): string;
    const selectClasses: SelectClasses;
    export default selectClasses;
}
declare module "@mui/material/Select/Select" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { InputProps } from "@mui/material/Input/index";
    import { MenuProps } from "@mui/material/Menu/index";
    import { SelectChangeEvent, SelectInputProps } from "@mui/material/Select/SelectInput";
    import { SelectClasses } from "@mui/material/Select/selectClasses";
    export { SelectChangeEvent };
    export interface SelectProps<T = unknown> extends StandardProps<InputProps, 'value' | 'onChange'>, Pick<SelectInputProps<T>, 'onChange'> {
        /**
         * If `true`, the width of the popover will automatically be set according to the items inside the
         * menu, otherwise it will be at least the width of the select input.
         * @default false
         */
        autoWidth?: boolean;
        /**
         * The option elements to populate the select with.
         * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
         *
         * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         * @default {}
         */
        classes?: Partial<SelectClasses>;
        /**
         * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
         * You can only use it when the `native` prop is `false` (default).
         * @default false
         */
        defaultOpen?: boolean;
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: T;
        /**
         * If `true`, a value is displayed even if no items are selected.
         *
         * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
         * returns the value to be displayed when no items are selected.
         *
         * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
         * The label should either be hidden or forced to a shrunk state.
         * @default false
         */
        displayEmpty?: boolean;
        /**
         * The icon that displays the arrow.
         * @default ArrowDropDownIcon
         */
        IconComponent?: React.ElementType;
        /**
         * The `id` of the wrapper element or the `select` element when `native`.
         */
        id?: string;
        /**
         * An `Input` element; does not have to be a material-ui specific `Input`.
         */
        input?: React.ReactElement<any, any>;
        /**
         * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
         * When `native` is `true`, the attributes are applied on the `select` element.
         */
        inputProps?: InputProps['inputProps'];
        /**
         * See [OutlinedInput#label](/api/outlined-input/#props)
         */
        label?: React.ReactNode;
        /**
         * The ID of an element that acts as an additional label. The Select will
         * be labelled by the additional label and the selected value.
         */
        labelId?: string;
        /**
         * Props applied to the [`Menu`](/api/menu/) element.
         */
        MenuProps?: Partial<MenuProps>;
        /**
         * If `true`, `value` must be an array and the menu will support multiple selections.
         * @default false
         */
        multiple?: boolean;
        /**
         * If `true`, the component uses a native `select` element.
         * @default false
         */
        native?: boolean;
        /**
         * Callback fired when a menu item is selected.
         *
         * @param {SelectChangeEvent<T>} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (any).
         * **Warning**: This is a generic event not a change event unless the change event is caused by browser autofill.
         * @param {object} [child] The react element that was selected when `native` is `false` (default).
         */
        onChange?: SelectInputProps<T>['onChange'];
        /**
         * Callback fired when the component requests to be closed.
         * Use in controlled mode (see open).
         *
         * @param {object} event The event source of the callback.
         */
        onClose?: (event: React.SyntheticEvent) => void;
        /**
         * Callback fired when the component requests to be opened.
         * Use in controlled mode (see open).
         *
         * @param {object} event The event source of the callback.
         */
        onOpen?: (event: React.SyntheticEvent) => void;
        /**
         * If `true`, the component is shown.
         * You can only use it when the `native` prop is `false` (default).
         */
        open?: boolean;
        /**
         * Render the selected value.
         * You can only use it when the `native` prop is `false` (default).
         *
         * @param {any} value The `value` provided to the component.
         * @returns {ReactNode}
         */
        renderValue?: (value: T) => React.ReactNode;
        /**
         * Props applied to the clickable div element.
         */
        SelectDisplayProps?: React.HTMLAttributes<HTMLDivElement>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The `input` value. Providing an empty string will select no options.
         * Set to an empty string `''` if you don't want any of the available options to be selected.
         *
         * If the value is an object it must have reference equality with the option in order to be selected.
         * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
         */
        value?: T;
        /**
         * The variant to use.
         * @default 'outlined'
         */
        variant?: 'standard' | 'outlined' | 'filled';
    }
    /**
     *
     * Demos:
     *
     * - [Selects](https://mui.com/components/selects/)
     *
     * API:
     *
     * - [Select API](https://mui.com/api/select/)
     * - inherits [OutlinedInput API](https://mui.com/api/outlined-input/)
     */
    const Select: (<T>(props: SelectProps<T>) => JSX.Element) & {
        muiName: string;
    };
    export default Select;
}
declare module "@mui/material/Select/index" {
    export { default } from "@mui/material/Select/Select";
    export * from "@mui/material/Select/Select";
    export { default as selectClasses } from "@mui/material/Select/selectClasses";
    export * from "@mui/material/Select/selectClasses";
}
declare module "@mui/material/Skeleton/skeletonClasses" {
    export interface SkeletonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="text"`. */
        text: string;
        /** Styles applied to the root element if `variant="rectangular"`. */
        rectangular: string;
        /** Styles applied to the root element if `variant="circular"`. */
        circular: string;
        /** Styles applied to the root element if `animation="pulse"`. */
        pulse: string;
        /** Styles applied to the root element if `animation="wave"`. */
        wave: string;
        /** Styles applied when the component is passed children. */
        withChildren: string;
        /** Styles applied when the component is passed children and no width. */
        fitContent: string;
        /** Styles applied when the component is passed children and no height. */
        heightAuto: string;
    }
    export type SkeletonClassKey = keyof SkeletonClasses;
    export function getSkeletonUtilityClass(slot: string): string;
    const skeletonClasses: SkeletonClasses;
    export default skeletonClasses;
}
declare module "@mui/material/Skeleton/Skeleton" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { SkeletonClasses } from "@mui/material/Skeleton/skeletonClasses";
    export interface SkeletonPropsVariantOverrides {
    }
    export interface SkeletonTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & {
            /**
             * The animation.
             * If `false` the animation effect is disabled.
             * @default 'pulse'
             */
            animation?: 'pulse' | 'wave' | false;
            /**
             * Optional children to infer width and height from.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<SkeletonClasses>;
            /**
             * Height of the skeleton.
             * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
             */
            height?: number | string;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The type of content that will be rendered.
             * @default 'text'
             */
            variant?: OverridableStringUnion<'text' | 'rectangular' | 'circular', SkeletonPropsVariantOverrides>;
            /**
             * Width of the skeleton.
             * Useful when the skeleton is inside an inline element with no width of its own.
             */
            width?: number | string;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Skeleton](https://mui.com/components/skeleton/)
     *
     * API:
     *
     * - [Skeleton API](https://mui.com/api/skeleton/)
     */
    const Skeleton: OverridableComponent<SkeletonTypeMap>;
    export type SkeletonProps<D extends React.ElementType = SkeletonTypeMap['defaultComponent'], P = {}> = OverrideProps<SkeletonTypeMap<P, D>, D>;
    export default Skeleton;
}
declare module "@mui/material/Skeleton/index" {
    export * from "@mui/material/Skeleton/Skeleton";
    export { default } from "@mui/material/Skeleton/Skeleton";
    export * from "@mui/material/Skeleton/skeletonClasses";
    export { default as skeletonClasses } from "@mui/material/Skeleton/skeletonClasses";
}
declare module "@mui/material/Slider/Slider" {
    import * as React from 'react';
    import { ExtendSliderUnstyledTypeMap, ExtendSliderUnstyled, SliderUnstyledTypeMap } from "@mui/core/SliderUnstyled/index";
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    export interface SliderPropsColorOverrides {
    }
    export interface SliderPropsSizeOverrides {
    }
    export type SliderTypeMap<D extends React.ElementType = 'span', P = {}> = ExtendSliderUnstyledTypeMap<{
        props: P & {
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * @default 'primary'
             */
            color?: OverridableStringUnion<'primary' | 'secondary', SliderPropsColorOverrides>;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: SliderUnstyledTypeMap['props']['classes'] & {
                /** Class name applied to the root element if `color="primary"`. */
                colorPrimary?: string;
                /** Class name applied to the root element if `color="secondary"`. */
                colorSecondary?: string;
                /** Class name applied to the root element if `size="small"`. */
                sizeSmall?: string;
                /** Class name applied to the thumb element if `color="primary"`. */
                thumbColorPrimary?: string;
                /** Class name applied to the thumb element if `color="secondary"`. */
                thumbColorSecondary?: string;
                /** Class name applied to the thumb element if `size="small"`. */
                thumbSizeSmall?: string;
            };
            /**
             * The size of the slider.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium', SliderPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    type SliderRootProps = NonNullable<SliderTypeMap['props']['componentsProps']>['root'];
    type SliderMarkProps = NonNullable<SliderTypeMap['props']['componentsProps']>['mark'];
    type SliderMarkLabelProps = NonNullable<SliderTypeMap['props']['componentsProps']>['markLabel'];
    type SliderRailProps = NonNullable<SliderTypeMap['props']['componentsProps']>['rail'];
    type SliderTrackProps = NonNullable<SliderTypeMap['props']['componentsProps']>['track'];
    type SliderThumbProps = NonNullable<SliderTypeMap['props']['componentsProps']>['thumb'];
    type SliderValueLabelProps = NonNullable<SliderTypeMap['props']['componentsProps']>['valueLabel'];
    type SliderInputProps = any;
    export const SliderRoot: React.FC<SliderRootProps>;
    export const SliderMark: React.FC<SliderMarkProps>;
    export const SliderMarkLabel: React.FC<SliderMarkLabelProps>;
    export const SliderRail: React.FC<SliderRailProps>;
    export const SliderTrack: React.FC<SliderTrackProps>;
    export const SliderThumb: React.FC<SliderThumbProps>;
    export const SliderValueLabel: React.FC<SliderValueLabelProps>;
    export const SliderInput: React.FC<SliderInputProps>;
    /**
     *
     * Demos:
     *
     * - [Slider](https://mui.com/components/slider/)
     *
     * API:
     *
     * - [Slider API](https://mui.com/api/slider/)
     * - inherits [SliderUnstyled API](https://mui.com/api/slider-unstyled/)
     */
    const Slider: ExtendSliderUnstyled<SliderTypeMap>;
    export type SliderClassKey = keyof NonNullable<SliderTypeMap['props']['classes']>;
    export type SliderProps<D extends React.ElementType = SliderTypeMap['defaultComponent'], P = {}> = OverrideProps<SliderTypeMap<D, P>, D>;
    export type SliderClasses = Record<SliderClassKey, string>;
    export const sliderClasses: SliderClasses;
    export default Slider;
}
declare module "@mui/material/Slider/index" {
    export { default } from "@mui/material/Slider/Slider";
    export * from "@mui/material/Slider/Slider";
}
declare module "@mui/material/SnackbarContent/snackbarContentClasses" {
    export interface SnackbarContentClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the message wrapper element. */
        message: string;
        /** Styles applied to the action wrapper element if `action` is provided. */
        action: string;
    }
    export type SnackbarContentClassKey = keyof SnackbarContentClasses;
    export function getSnackbarContentUtilityClass(slot: string): string;
    const snackbarContentClasses: SnackbarContentClasses;
    export default snackbarContentClasses;
}
declare module "@mui/material/SnackbarContent/SnackbarContent" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { SnackbarContentClasses } from "@mui/material/SnackbarContent/snackbarContentClasses";
    export interface SnackbarContentProps extends StandardProps<PaperProps, 'children'> {
        /**
         * The action to display. It renders after the message, at the end of the snackbar.
         */
        action?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SnackbarContentClasses>;
        /**
         * The message to display.
         */
        message?: React.ReactNode;
        /**
         * The ARIA role attribute of the element.
         * @default 'alert'
         */
        role?: PaperProps['role'];
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Snackbars](https://mui.com/components/snackbars/)
     *
     * API:
     *
     * - [SnackbarContent API](https://mui.com/api/snackbar-content/)
     * - inherits [Paper API](https://mui.com/api/paper/)
     */
    export type SnackbarContent = (props: SnackbarContentProps) => JSX.Element;
    export default SnackbarContent;
}
declare module "@mui/material/SnackbarContent/index" {
    export { default } from "@mui/material/SnackbarContent/SnackbarContent";
    export * from "@mui/material/SnackbarContent/SnackbarContent";
    export { default as snackbarContentClasses } from "@mui/material/SnackbarContent/snackbarContentClasses";
    export * from "@mui/material/SnackbarContent/snackbarContentClasses";
}
declare module "@mui/core/ClickAwayListener/ClickAwayListener" {
    import * as React from 'react';
    type ClickAwayMouseEventHandler = 'onClick' | 'onMouseDown' | 'onMouseUp';
    type ClickAwayTouchEventHandler = 'onTouchStart' | 'onTouchEnd';
    export interface ClickAwayListenerProps {
        /**
         * The wrapped element.
         */
        children: React.ReactElement;
        /**
         * If `true`, the React tree is ignored and only the DOM tree is considered.
         * This prop changes how portaled elements are handled.
         * @default false
         */
        disableReactTree?: boolean;
        /**
         * The mouse event to listen to. You can disable the listener by providing `false`.
         * @default 'onClick'
         */
        mouseEvent?: ClickAwayMouseEventHandler | false;
        /**
         * Callback fired when a "click away" event is detected.
         */
        onClickAway: (event: MouseEvent | TouchEvent) => void;
        /**
         * The touch event to listen to. You can disable the listener by providing `false`.
         * @default 'onTouchEnd'
         */
        touchEvent?: ClickAwayTouchEventHandler | false;
    }
    /**
     * Listen for click events that occur somewhere in the document, outside of the element itself.
     * For instance, if you need to hide a menu when people click anywhere else on your page.
     *
     * Demos:
     *
     * - [Click Away Listener](https://mui.com/components/click-away-listener/)
     * - [Menus](https://mui.com/components/menus/)
     *
     * API:
     *
     * - [ClickAwayListener API](https://mui.com/api/click-away-listener/)
     */
    function ClickAwayListener(props: ClickAwayListenerProps): JSX.Element;
    namespace ClickAwayListener {
        var propTypes: any;
    }
    export default ClickAwayListener;
}
declare module "@mui/core/ClickAwayListener/index" {
    export { default } from "@mui/core/ClickAwayListener/ClickAwayListener";
    export * from "@mui/core/ClickAwayListener/ClickAwayListener";
}
declare module "@mui/material/Snackbar/snackbarClasses" {
    export interface SnackbarClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */
        anchorOriginTopCenter: string;
        /** Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */
        anchorOriginBottomCenter: string;
        /** Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */
        anchorOriginTopRight: string;
        /** Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */
        anchorOriginBottomRight: string;
        /** Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */
        anchorOriginTopLeft: string;
        /** Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */
        anchorOriginBottomLeft: string;
    }
    export type SnackbarClassKey = keyof SnackbarClasses;
    export function getSnackbarUtilityClass(slot: string): string;
    const snackbarClasses: SnackbarClasses;
    export default snackbarClasses;
}
declare module "@mui/material/Snackbar/Snackbar" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { ClickAwayListenerProps } from "@mui/core/ClickAwayListener/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { SnackbarContentProps } from "@mui/material/SnackbarContent/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { SnackbarClasses } from "@mui/material/Snackbar/snackbarClasses";
    export interface SnackbarOrigin {
        vertical: 'top' | 'bottom';
        horizontal: 'left' | 'center' | 'right';
    }
    export type SnackbarCloseReason = 'timeout' | 'clickaway' | 'escapeKeyDown';
    export interface SnackbarProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The action to display. It renders after the message, at the end of the snackbar.
         */
        action?: SnackbarContentProps['action'];
        /**
         * The anchor of the `Snackbar`.
         * On smaller screens, the component grows to occupy all the available width,
         * the horizontal alignment is ignored.
         * @default { vertical: 'bottom', horizontal: 'left' }
         */
        anchorOrigin?: SnackbarOrigin;
        /**
         * The number of milliseconds to wait before automatically calling the
         * `onClose` function. `onClose` should then set the state of the `open`
         * prop to hide the Snackbar. This behavior is disabled by default with
         * the `null` value.
         * @default null
         */
        autoHideDuration?: number | null;
        /**
         * Replace the `SnackbarContent` component.
         */
        children?: React.ReactElement<any, any>;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SnackbarClasses>;
        /**
         * Props applied to the `ClickAwayListener` element.
         */
        ClickAwayListenerProps?: Partial<ClickAwayListenerProps>;
        /**
         * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.
         */
        ContentProps?: Partial<SnackbarContentProps>;
        /**
         * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.
         * @default false
         */
        disableWindowBlurListener?: boolean;
        /**
         * When displaying multiple consecutive Snackbars from a parent rendering a single
         * <Snackbar/>, add the key prop to ensure independent treatment of each message.
         * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and
         * features such as autoHideDuration may be canceled.
         */
        key?: any;
        /**
         * The message to display.
         */
        message?: SnackbarContentProps['message'];
        /**
         * Callback fired when the component requests to be closed.
         * Typically `onClose` is used to set state in the parent component,
         * which is used to control the `Snackbar` `open` prop.
         * The `reason` parameter can optionally be used to control the response to `onClose`,
         * for example ignoring `clickaway`.
         *
         * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.
         * @param {string} reason Can be: `"timeout"` (`autoHideDuration` expired), `"clickaway"`, or `"escapeKeyDown"`.
         */
        onClose?: (event: React.SyntheticEvent<any> | Event, reason: SnackbarCloseReason) => void;
        /**
         * If `true`, the component is shown.
         */
        open?: boolean;
        /**
         * The number of milliseconds to wait before dismissing after user interaction.
         * If `autoHideDuration` prop isn't specified, it does nothing.
         * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,
         * we default to `autoHideDuration / 2` ms.
         */
        resumeHideDuration?: number;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Grow
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps & {
            children: React.ReactElement<any, any>;
        }>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        transitionDuration?: TransitionProps['timeout'];
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         * @default {}
         */
        TransitionProps?: TransitionProps;
    }
    /**
     *
     * Demos:
     *
     * - [Snackbars](https://mui.com/components/snackbars/)
     *
     * API:
     *
     * - [Snackbar API](https://mui.com/api/snackbar/)
     */
    export type Snackbar = (props: SnackbarProps) => JSX.Element;
    export default Snackbar;
}
declare module "@mui/material/Snackbar/index" {
    export { default } from "@mui/material/Snackbar/Snackbar";
    export * from "@mui/material/Snackbar/Snackbar";
    export { default as snackbarClasses } from "@mui/material/Snackbar/snackbarClasses";
    export * from "@mui/material/Snackbar/snackbarClasses";
}
declare module "@mui/material/transitions/index" {
    export * from "@mui/material/transitions/transition";
}
declare module "@mui/material/SpeedDial/speedDialClasses" {
    export interface SpeedDialClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the Fab component. */
        fab: string;
        /** Styles applied to the root element if direction="up" */
        directionUp: string;
        /** Styles applied to the root element if direction="down" */
        directionDown: string;
        /** Styles applied to the root element if direction="left" */
        directionLeft: string;
        /** Styles applied to the root element if direction="right" */
        directionRight: string;
        /** Styles applied to the actions (`children` wrapper) element. */
        actions: string;
        /** Styles applied to the actions (`children` wrapper) element if `open={false}`. */
        actionsClosed: string;
    }
    export type SpeedDialClassKey = keyof SpeedDialClasses;
    export function getSpeedDialUtilityClass(slot: string): string;
    const speedDialClasses: SpeedDialClasses;
    export default speedDialClasses;
}
declare module "@mui/material/SpeedDial/SpeedDial" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { FabProps } from "@mui/material/Fab/index";
    import { TransitionProps } from "@mui/material/transitions/index";
    import { SpeedDialClasses } from "@mui/material/SpeedDial/speedDialClasses";
    export type CloseReason = 'toggle' | 'blur' | 'mouseLeave' | 'escapeKeyDown';
    export type OpenReason = 'toggle' | 'focus' | 'mouseEnter';
    export interface SpeedDialProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'children'> {
        /**
         * SpeedDialActions to display when the SpeedDial is `open`.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SpeedDialClasses>;
        /**
         * The aria-label of the button element.
         * Also used to provide the `id` for the `SpeedDial` element and its children.
         */
        ariaLabel: string;
        /**
         * The direction the actions open relative to the floating action button.
         * @default 'up'
         */
        direction?: 'up' | 'down' | 'left' | 'right';
        /**
         * If `true`, the SpeedDial is hidden.
         * @default false
         */
        hidden?: boolean;
        /**
         * Props applied to the [`Fab`](/api/fab/) element.
         * @default {}
         */
        FabProps?: Partial<FabProps>;
        /**
         * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component
         * provides a default Icon with animation.
         */
        icon?: React.ReactNode;
        /**
         * Callback fired when the component requests to be closed.
         *
         * @param {object} event The event source of the callback.
         * @param {string} reason Can be: `"toggle"`, `"blur"`, `"mouseLeave"`, `"escapeKeyDown"`.
         */
        onClose?: (event: React.SyntheticEvent<{}>, reason: CloseReason) => void;
        /**
         * Callback fired when the component requests to be open.
         *
         * @param {object} event The event source of the callback.
         * @param {string} reason Can be: `"toggle"`, `"focus"`, `"mouseEnter"`.
         */
        onOpen?: (event: React.SyntheticEvent<{}>, reason: OpenReason) => void;
        /**
         * If `true`, the component is shown.
         */
        open?: boolean;
        /**
         * The icon to display in the SpeedDial Fab when the SpeedDial is open.
         */
        openIcon?: React.ReactNode;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Zoom
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        transitionDuration?: TransitionProps['timeout'];
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         */
        TransitionProps?: TransitionProps;
    }
    /**
     *
     * Demos:
     *
     * - [Speed Dial](https://mui.com/components/speed-dial/)
     *
     * API:
     *
     * - [SpeedDial API](https://mui.com/api/speed-dial/)
     */
    export type SpeedDial = (props: SpeedDialProps) => JSX.Element;
    export default SpeedDial;
}
declare module "@mui/material/SpeedDial/index" {
    export { default } from "@mui/material/SpeedDial/SpeedDial";
    export * from "@mui/material/SpeedDial/SpeedDial";
    export { default as speedDialClasses } from "@mui/material/SpeedDial/speedDialClasses";
    export * from "@mui/material/SpeedDial/speedDialClasses";
}
declare module "@mui/material/Tooltip/tooltipClasses" {
    export interface TooltipClasses {
        /** Styles applied to the Popper component. */
        popper: string;
        /** Styles applied to the Popper component unless `disableInteractive={true}`. */
        popperInteractive: string;
        /** Styles applied to the Popper component if `arrow={true}`. */
        popperArrow: string;
        /** Styles applied to the Popper component unless the tooltip is open. */
        popperClose: string;
        /** Styles applied to the tooltip (label wrapper) element. */
        tooltip: string;
        /** Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */
        tooltipArrow: string;
        /** Styles applied to the arrow element. */
        arrow: string;
        /** Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */
        touch: string;
        /** Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */
        tooltipPlacementLeft: string;
        /** Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */
        tooltipPlacementRight: string;
        /** Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */
        tooltipPlacementTop: string;
        /** Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */
        tooltipPlacementBottom: string;
    }
    export type TooltipClassKey = keyof TooltipClasses;
    export function getTooltipUtilityClass(slot: string): string;
    const tooltipClasses: TooltipClasses;
    export default tooltipClasses;
}
declare module "@mui/material/Tooltip/Tooltip" {
    import * as React from 'react';
    import { MUIStyledCommonProps, SxProps } from "@mui/system/index";
    import { PopperProps } from "@mui/material/Popper/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { TooltipClasses } from "@mui/material/Tooltip/tooltipClasses";
    export interface TooltipComponentsPropsOverrides {
    }
    export interface TooltipProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'title'> {
        /**
         * If `true`, adds an arrow to the tooltip.
         * @default false
         */
        arrow?: boolean;
        /**
         * Tooltip reference element.
         */
        children: React.ReactElement<any, any>;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TooltipClasses>;
        /**
         * The components used for each slot inside the Tooltip.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Popper?: React.ElementType;
            Transition?: React.ElementType;
            Tooltip?: React.ElementType;
            Arrow?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Tooltip.
         * Note that `componentsProps.popper` prop values win over `PopperProps`
         * and `componentsProps.transition` prop values win over `TransitionProps` if both are applied.
         * @default {}
         */
        componentsProps?: {
            popper?: Partial<PopperProps> & TooltipComponentsPropsOverrides;
            transition?: TransitionProps & TooltipComponentsPropsOverrides;
            tooltip?: React.HTMLProps<HTMLDivElement> & MUIStyledCommonProps & TooltipComponentsPropsOverrides;
            arrow?: React.HTMLProps<HTMLSpanElement> & MUIStyledCommonProps & TooltipComponentsPropsOverrides;
        };
        /**
         * Set to `true` if the `title` acts as an accessible description.
         * By default the `title` acts as an accessible label for the child.
         * @default false
         */
        describeChild?: boolean;
        /**
         * Do not respond to focus-visible events.
         * @default false
         */
        disableFocusListener?: boolean;
        /**
         * Do not respond to hover events.
         * @default false
         */
        disableHoverListener?: boolean;
        /**
         * Makes a tooltip not interactive, i.e. it will close when the user
         * hovers over the tooltip before the `leaveDelay` is expired.
         * @default false
         */
        disableInteractive?: boolean;
        /**
         * Do not respond to long press touch events.
         * @default false
         */
        disableTouchListener?: boolean;
        /**
         * The number of milliseconds to wait before showing the tooltip.
         * This prop won't impact the enter touch delay (`enterTouchDelay`).
         * @default 100
         */
        enterDelay?: number;
        /**
         * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
         * @default 0
         */
        enterNextDelay?: number;
        /**
         * The number of milliseconds a user must touch the element before showing the tooltip.
         * @default 700
         */
        enterTouchDelay?: number;
        /**
         * If `true`, the tooltip follow the cursor over the wrapped element.
         * @default false
         */
        followCursor?: boolean;
        /**
         * This prop is used to help implement the accessibility logic.
         * If you don't provide this prop. It falls back to a randomly generated id.
         */
        id?: string;
        /**
         * The number of milliseconds to wait before hiding the tooltip.
         * This prop won't impact the leave touch delay (`leaveTouchDelay`).
         * @default 0
         */
        leaveDelay?: number;
        /**
         * The number of milliseconds after the user stops touching an element before hiding the tooltip.
         * @default 1500
         */
        leaveTouchDelay?: number;
        /**
         * Callback fired when the component requests to be closed.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         */
        onClose?: (event: React.SyntheticEvent | Event) => void;
        /**
         * Callback fired when the component requests to be open.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         */
        onOpen?: (event: React.SyntheticEvent) => void;
        /**
         * If `true`, the component is shown.
         */
        open?: boolean;
        /**
         * Tooltip placement.
         * @default 'bottom'
         */
        placement?: 'bottom-end' | 'bottom-start' | 'bottom' | 'left-end' | 'left-start' | 'left' | 'right-end' | 'right-start' | 'right' | 'top-end' | 'top-start' | 'top';
        /**
         * The component used for the popper.
         * @default Popper
         */
        PopperComponent?: React.JSXElementConstructor<PopperProps>;
        /**
         * Props applied to the [`Popper`](/api/popper/) element.
         * @default {}
         */
        PopperProps?: Partial<PopperProps>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * Tooltip title. Zero-length titles string are never displayed.
         */
        title: NonNullable<React.ReactNode>;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Grow
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps & {
            children: React.ReactElement<any, any>;
        }>;
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         */
        TransitionProps?: TransitionProps;
    }
    /**
     *
     * Demos:
     *
     * - [Tooltips](https://mui.com/components/tooltips/)
     *
     * API:
     *
     * - [Tooltip API](https://mui.com/api/tooltip/)
     */
    export type Tooltip = (props: TooltipProps) => JSX.Element;
    export default Tooltip;
}
declare module "@mui/material/Tooltip/index" {
    export { default } from "@mui/material/Tooltip/Tooltip";
    export * from "@mui/material/Tooltip/Tooltip";
    export { default as tooltipClasses } from "@mui/material/Tooltip/tooltipClasses";
    export * from "@mui/material/Tooltip/tooltipClasses";
}
declare module "@mui/material/SpeedDialAction/speedDialActionClasses" {
    export interface SpeedDialActionClasses {
        /** Styles applied to the Fab component. */
        fab: string;
        /** Styles applied to the Fab component if `open={false}`. */
        fabClosed: string;
        /** Styles applied to the root element if `tooltipOpen={true}`. */
        staticTooltip: string;
        /** Styles applied to the root element if `tooltipOpen={true}` and `open={false}`. */
        staticTooltipClosed: string;
        /** Styles applied to the static tooltip label if `tooltipOpen={true}`. */
        staticTooltipLabel: string;
        /** Styles applied to the root element if `tooltipOpen={true}` and `tooltipPlacement="left"`` */
        tooltipPlacementLeft: string;
        /** Styles applied to the root element if `tooltipOpen={true}` and `tooltipPlacement="right"`` */
        tooltipPlacementRight: string;
    }
    export type SpeedDialActionClassKey = keyof SpeedDialActionClasses;
    export function getSpeedDialActionUtilityClass(slot: string): string;
    const speedDialActionClasses: SpeedDialActionClasses;
    export default speedDialActionClasses;
}
declare module "@mui/material/SpeedDialAction/SpeedDialAction" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { FabProps } from "@mui/material/Fab/index";
    import { TooltipProps } from "@mui/material/Tooltip/index";
    import { SpeedDialActionClasses } from "@mui/material/SpeedDialAction/speedDialActionClasses";
    export interface SpeedDialActionProps extends StandardProps<Partial<TooltipProps>, 'children'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SpeedDialActionClasses>;
        /**
         * Props applied to the [`Fab`](/api/fab/) component.
         * @default {}
         */
        FabProps?: Partial<FabProps>;
        /**
         * Adds a transition delay, to allow a series of SpeedDialActions to be animated.
         * @default 0
         */
        delay?: number;
        /**
         * The icon to display in the SpeedDial Fab.
         */
        icon?: React.ReactNode;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * `classes` prop applied to the [`Tooltip`](/api/tooltip/) element.
         */
        TooltipClasses?: TooltipProps['classes'];
        /**
         * Placement of the tooltip.
         * @default 'left'
         */
        tooltipPlacement?: TooltipProps['placement'];
        /**
         * Label to display in the tooltip.
         */
        tooltipTitle?: React.ReactNode;
        /**
         * Make the tooltip always visible when the SpeedDial is open.
         * @default false
         */
        tooltipOpen?: boolean;
    }
    /**
     *
     * Demos:
     *
     * - [Speed Dial](https://mui.com/components/speed-dial/)
     *
     * API:
     *
     * - [SpeedDialAction API](https://mui.com/api/speed-dial-action/)
     * - inherits [Tooltip API](https://mui.com/api/tooltip/)
     */
    export type SpeedDialAction = (props: SpeedDialActionProps) => JSX.Element;
    export default SpeedDialAction;
}
declare module "@mui/material/SpeedDialAction/index" {
    export { default } from "@mui/material/SpeedDialAction/SpeedDialAction";
    export * from "@mui/material/SpeedDialAction/SpeedDialAction";
    export { default as speedDialActionClasses } from "@mui/material/SpeedDialAction/speedDialActionClasses";
    export * from "@mui/material/SpeedDialAction/speedDialActionClasses";
}
declare module "@mui/material/SpeedDialIcon/speedDialIconClasses" {
    export interface SpeedDialIconClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the icon component. */
        icon: string;
        /** Styles applied to the icon component if `open={true}`. */
        iconOpen: string;
        /** Styles applied to the icon when an `openIcon` is provided and if `open={true}`. */
        iconWithOpenIconOpen: string;
        /** Styles applied to the `openIcon` if provided. */
        openIcon: string;
        /** Styles applied to the `openIcon` if provided and if `open={true}`. */
        openIconOpen: string;
    }
    export type SpeedDialIconClassKey = keyof SpeedDialIconClasses;
    export function getSpeedDialIconUtilityClass(slot: string): string;
    const speedDialIconClasses: SpeedDialIconClasses;
    export default speedDialIconClasses;
}
declare module "@mui/material/SpeedDialIcon/SpeedDialIcon" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { SpeedDialIconClasses } from "@mui/material/SpeedDialIcon/speedDialIconClasses";
    export interface SpeedDialIconProps extends StandardProps<React.HTMLAttributes<HTMLSpanElement>, 'children'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SpeedDialIconClasses>;
        /**
         * The icon to display.
         */
        icon?: React.ReactNode;
        /**
         * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.
         */
        openIcon?: React.ReactNode;
        /**
         * @ignore
         * If `true`, the component is shown.
         */
        open?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Speed Dial](https://mui.com/components/speed-dial/)
     *
     * API:
     *
     * - [SpeedDialIcon API](https://mui.com/api/speed-dial-icon/)
     */
    const SpeedDialIcon: ((props: SpeedDialIconProps) => JSX.Element) & {
        muiName: string;
    };
    export default SpeedDialIcon;
}
declare module "@mui/material/SpeedDialIcon/index" {
    export { default } from "@mui/material/SpeedDialIcon/SpeedDialIcon";
    export * from "@mui/material/SpeedDialIcon/SpeedDialIcon";
    export { default as speedDialIconClasses } from "@mui/material/SpeedDialIcon/speedDialIconClasses";
    export * from "@mui/material/SpeedDialIcon/speedDialIconClasses";
}
declare module "@mui/material/Stack/Stack" {
    import * as React from 'react';
    import { ResponsiveStyleValue, SxProps, SystemProps } from "@mui/system/index";
    import { OverrideProps, OverridableComponent } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/createTheme";
    export interface StackTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & SystemProps<Theme> & {
            ref?: React.Ref<unknown>;
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Defines the `flex-direction` style property.
             * It is applied for all screen sizes.
             * @default 'column'
             */
            direction?: ResponsiveStyleValue<'row' | 'row-reverse' | 'column' | 'column-reverse'>;
            /**
             * Defines the space between immediate children.
             * @default 0
             */
            spacing?: ResponsiveStyleValue<number | string>;
            /**
             * Add an element between each child.
             */
            divider?: React.ReactNode;
            /**
             * The system prop, which allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Stack](https://mui.com/components/stack/)
     *
     * API:
     *
     * - [Stack API](https://mui.com/api/stack/)
     */
    const Stack: OverridableComponent<StackTypeMap>;
    export type StackProps<D extends React.ElementType = StackTypeMap['defaultComponent'], P = {}> = OverrideProps<StackTypeMap<P, D>, D>;
    export default Stack;
}
declare module "@mui/material/Stack/index" {
    export { default } from "@mui/material/Stack/Stack";
    export * from "@mui/material/Stack/Stack";
}
declare module "@mui/material/StepButton/stepButtonClasses" {
    export interface StepButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="horizontal"`. */
        horizontal: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the `ButtonBase` touch-ripple. */
        touchRipple: string;
    }
    export type StepButtonClassKey = keyof StepButtonClasses;
    export function getStepButtonUtilityClass(slot: string): string;
    const stepButtonClasses: StepButtonClasses;
    export default stepButtonClasses;
}
declare module "@mui/material/StepButton/StepButton" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { ButtonBaseTypeMap, ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { StepButtonClasses } from "@mui/material/StepButton/stepButtonClasses";
    /**
     * @deprecated use `StepButtonProps['icon']` instead
     */
    export type StepButtonIcon = React.ReactNode;
    export type StepButtonTypeMap<P, D extends React.ElementType> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<StepButtonClasses>;
            /**
             * The icon displayed by the step label.
             */
            icon?: React.ReactNode;
            /**
             * The optional node to display.
             */
            optional?: React.ReactNode;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
        ignoredProps: 'disabled';
    }>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [StepButton API](https://mui.com/api/step-button/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const StepButton: ExtendButtonBase<StepButtonTypeMap<{}, ButtonBaseTypeMap['defaultComponent']>>;
    export type StepButtonClasskey = keyof NonNullable<StepButtonProps['classes']>;
    export type StepButtonProps<D extends React.ElementType = ButtonBaseTypeMap['defaultComponent'], P = {}> = OverrideProps<StepButtonTypeMap<P, D>, D>;
    export default StepButton;
}
declare module "@mui/material/StepButton/index" {
    export { default } from "@mui/material/StepButton/StepButton";
    export * from "@mui/material/StepButton/StepButton";
    export { default as stepButtonClasses } from "@mui/material/StepButton/stepButtonClasses";
    export * from "@mui/material/StepButton/stepButtonClasses";
}
declare module "@mui/material/StepConnector/stepConnectorClasses" {
    export interface StepConnectorClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="horizontal"`. */
        horizontal: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the root element if `alternativeLabel={true}`. */
        alternativeLabel: string;
        /** State class applied to the root element if `active={true}`. */
        active: string;
        /** State class applied to the root element if `completed={true}`. */
        completed: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the line element. */
        line: string;
        /** Styles applied to the root element if `orientation="horizontal"`. */
        lineHorizontal: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        lineVertical: string;
    }
    export type StepConnectorClassKey = keyof StepConnectorClasses;
    export function getStepConnectorUtilityClass(slot: string): string;
    const stepConnectorClasses: StepConnectorClasses;
    export default stepConnectorClasses;
}
declare module "@mui/material/StepConnector/StepConnector" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { StepConnectorClasses } from "@mui/material/StepConnector/stepConnectorClasses";
    export type StepConnectorIcon = React.ReactElement | string | number;
    export interface StepConnectorProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'children'> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<StepConnectorClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type StepConnectorClasskey = keyof NonNullable<StepConnectorProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [StepConnector API](https://mui.com/api/step-connector/)
     */
    export type StepConnector = (props: StepConnectorProps) => JSX.Element;
    export default StepConnector;
}
declare module "@mui/material/StepConnector/index" {
    export { default } from "@mui/material/StepConnector/StepConnector";
    export * from "@mui/material/StepConnector/StepConnector";
    export { default as stepConnectorClasses } from "@mui/material/StepConnector/stepConnectorClasses";
    export * from "@mui/material/StepConnector/stepConnectorClasses";
}
declare module "@mui/material/StepContent/stepContentClasses" {
    export interface StepContentClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `last={true}` (controlled by `Step`). */
        last: string;
        /** Styles applied to the Transition component. */
        transition: string;
    }
    export type StepContentClassKey = keyof StepContentClasses;
    export function getStepContentUtilityClass(slot: string): string;
    const stepContentClasses: StepContentClasses;
    export default stepContentClasses;
}
declare module "@mui/material/StepContent/StepContent" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { TransitionProps } from "@mui/material/transitions/transition";
    import { StepContentClasses } from "@mui/material/StepContent/stepContentClasses";
    export interface StepContentProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<StepContentClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Collapse
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps>;
        /**
         * Adjust the duration of the content expand transition.
         * Passed as a prop to the transition component.
         *
         * Set to 'auto' to automatically calculate transition time based on height.
         * @default 'auto'
         */
        transitionDuration?: TransitionProps['timeout'] | 'auto';
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         */
        TransitionProps?: TransitionProps;
    }
    export type StepContentClasskey = keyof NonNullable<StepContentProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [StepContent API](https://mui.com/api/step-content/)
     */
    export type StepContent = (props: StepContentProps) => JSX.Element;
    export default StepContent;
}
declare module "@mui/material/StepContent/index" {
    export { default } from "@mui/material/StepContent/StepContent";
    export * from "@mui/material/StepContent/StepContent";
    export { default as stepContentClasses } from "@mui/material/StepContent/stepContentClasses";
    export * from "@mui/material/StepContent/stepContentClasses";
}
declare module "@mui/material/StepIcon/stepIconClasses" {
    export interface StepIconClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the SVG text element. */
        text: string;
        /** State class applied to the root element if `active={true}`. */
        active: string;
        /** State class applied to the root element if `completed={true}`. */
        completed: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
    }
    export type StepIconClassKey = keyof StepIconClasses;
    export function getStepIconUtilityClass(slot: string): string;
    const stepIconClasses: StepIconClasses;
    export default stepIconClasses;
}
declare module "@mui/material/StepIcon/StepIcon" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { StepIconClasses } from "@mui/material/StepIcon/stepIconClasses";
    export interface StepIconProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'children'> {
        /**
         * Whether this step is active.
         * @default false
         */
        active?: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<StepIconClasses>;
        /**
         * Mark the step as completed. Is passed to child components.
         * @default false
         */
        completed?: boolean;
        /**
         * If `true`, the step is marked as failed.
         * @default false
         */
        error?: boolean;
        /**
         * The label displayed in the step icon.
         */
        icon: React.ReactNode;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type StepIconClasskey = keyof NonNullable<StepIconProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [StepIcon API](https://mui.com/api/step-icon/)
     */
    export type StepIcon = (props: StepIconProps) => JSX.Element;
    export default StepIcon;
}
declare module "@mui/material/StepIcon/index" {
    export { default } from "@mui/material/StepIcon/StepIcon";
    export * from "@mui/material/StepIcon/StepIcon";
    export { default as stepIconClasses } from "@mui/material/StepIcon/stepIconClasses";
    export * from "@mui/material/StepIcon/stepIconClasses";
}
declare module "@mui/material/StepLabel/stepLabelClasses" {
    export interface StepLabelClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="horizontal"`. */
        horizontal: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the label element that wraps `children`. */
        label: string;
        /** State class applied to the label element if `active={true}`. */
        active: string;
        /** State class applied to the label element if `completed={true}`. */
        completed: string;
        /** State class applied to the root and label elements if `error={true}`. */
        error: string;
        /** State class applied to the root and label elements if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the `icon` container element. */
        iconContainer: string;
        /** State class applied to the root and icon container and label if `alternativeLabel={true}`. */
        alternativeLabel: string;
        /** Styles applied to the container element which wraps label and `optional`. */
        labelContainer: string;
    }
    export type StepLabelClassKey = keyof StepLabelClasses;
    export function getStepLabelUtilityClass(slot: string): string;
    const stepLabelClasses: StepLabelClasses;
    export default stepLabelClasses;
}
declare module "@mui/material/StepLabel/StepLabel" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { StepIconProps } from "@mui/material/StepIcon/index";
    import { Theme } from "@mui/material/styles/index";
    import { StepLabelClasses } from "@mui/material/StepLabel/stepLabelClasses";
    export interface StepLabelProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * In most cases will simply be a string containing a title for the label.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<StepLabelClasses>;
        /**
         * The props used for each slot inside.
         * @default {}
         */
        componentsProps?: {
            /**
             * Props applied to the label element.
             * @default {}
             */
            label?: React.HTMLProps<HTMLSpanElement>;
        };
        /**
         * If `true`, the step is marked as failed.
         * @default false
         */
        error?: boolean;
        /**
         * Override the default label of the step icon.
         */
        icon?: React.ReactNode;
        /**
         * The optional node to display.
         */
        optional?: React.ReactNode;
        /**
         * The component to render in place of the [`StepIcon`](/api/step-icon/).
         */
        StepIconComponent?: React.ElementType;
        /**
         * Props applied to the [`StepIcon`](/api/step-icon/) element.
         */
        StepIconProps?: Partial<StepIconProps>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type StepLabelClasskey = keyof NonNullable<StepLabelProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [StepLabel API](https://mui.com/api/step-label/)
     */
    const StepLabel: ((props: StepLabelProps) => JSX.Element) & {
        muiName: string;
    };
    export default StepLabel;
}
declare module "@mui/material/StepLabel/index" {
    export { default } from "@mui/material/StepLabel/StepLabel";
    export * from "@mui/material/StepLabel/StepLabel";
    export { default as stepLabelClasses } from "@mui/material/StepLabel/stepLabelClasses";
    export * from "@mui/material/StepLabel/stepLabelClasses";
}
declare module "@mui/material/Stepper/stepperClasses" {
    export interface StepperClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="horizontal"`. */
        horizontal: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the root element if `alternativeLabel={true}`. */
        alternativeLabel: string;
    }
    export type StepperClassKey = keyof StepperClasses;
    export function getStepperUtilityClass(slot: string): string;
    const stepperClasses: StepperClasses;
    export default stepperClasses;
}
declare module "@mui/material/Stepper/Stepper" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { StepperClasses } from "@mui/material/Stepper/stepperClasses";
    export type Orientation = 'horizontal' | 'vertical';
    export interface StepperProps extends StandardProps<PaperProps> {
        /**
         * Set the active step (zero based index).
         * Set to -1 to disable all the steps.
         * @default 0
         */
        activeStep?: number;
        /**
         * If set to 'true' and orientation is horizontal,
         * then the step label will be positioned under the icon.
         * @default false
         */
        alternativeLabel?: boolean;
        /**
         * Two or more `<Step />` components.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<StepperClasses>;
        /**
         * An element to be placed between each step.
         * @default <StepConnector />
         */
        connector?: React.ReactElement<any, any> | null;
        /**
         * If set the `Stepper` will not assist in controlling steps for linear flow.
         * @default false
         */
        nonLinear?: boolean;
        /**
         * The component orientation (layout flow direction).
         * @default 'horizontal'
         */
        orientation?: Orientation;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type StepperClasskey = keyof NonNullable<StepperProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [Stepper API](https://mui.com/api/stepper/)
     */
    export type Stepper = (props: StepperProps) => JSX.Element;
    export default Stepper;
}
declare module "@mui/material/Stepper/index" {
    export { default } from "@mui/material/Stepper/Stepper";
    export * from "@mui/material/Stepper/Stepper";
    export { default as stepperClasses } from "@mui/material/Stepper/stepperClasses";
    export * from "@mui/material/Stepper/stepperClasses";
}
declare module "@mui/material/Step/stepClasses" {
    export interface StepClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="horizontal"`. */
        horizontal: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the root element if `alternativeLabel={true}`. */
        alternativeLabel: string;
        /** State class applied to the root element if `completed={true}`. */
        completed: string;
    }
    export type StepClassKey = keyof StepClasses;
    export function getStepUtilityClass(slot: string): string;
    const stepClasses: StepClasses;
    export default stepClasses;
}
declare module "@mui/material/Step/Step" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { StepClasses } from "@mui/material/Step/stepClasses";
    export interface StepProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * Sets the step as active. Is passed to child components.
         */
        active?: boolean;
        /**
         * Should be `Step` sub-components such as `StepLabel`, `StepContent`.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<StepClasses>;
        /**
         * Mark the step as completed. Is passed to child components.
         */
        completed?: boolean;
        /**
         * If `true`, the step is disabled, will also disable the button if
         * `StepButton` is a child of `Step`. Is passed to child components.
         */
        disabled?: boolean;
        /**
         * Expand the step.
         * @default false
         */
        expanded?: boolean;
        /**
         * The position of the step.
         * The prop defaults to the value inherited from the parent Stepper component.
         */
        index?: number;
        /**
         * If `true`, the Step is displayed as rendered last.
         * The prop defaults to the value inherited from the parent Stepper component.
         */
        last?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type StepClasskey = keyof NonNullable<StepProps['classes']>;
    /**
     *
     * Demos:
     *
     * - [Steppers](https://mui.com/components/steppers/)
     *
     * API:
     *
     * - [Step API](https://mui.com/api/step/)
     */
    export type Step = (props: StepProps) => JSX.Element;
    export default Step;
}
declare module "@mui/material/Step/StepContext" {
    import * as React from 'react';
    export interface StepContextType {
        index: number;
        last: boolean;
        expanded: boolean;
        icon: React.ReactNode;
        active: boolean;
        completed: boolean;
        disabled: boolean;
    }
    /**
     * Provides information about the current step in Stepper.
     */
    const StepContext: React.Context<{} | StepContextType>;
    /**
     * Returns the current StepContext or an empty object if no StepContext
     * has been defined in the component tree.
     */
    export function useStepContext(): StepContextType | {};
    export default StepContext;
}
declare module "@mui/material/Step/index" {
    export { default } from "@mui/material/Step/Step";
    export * from "@mui/material/Step/Step";
    export { default as stepClasses } from "@mui/material/Step/stepClasses";
    export * from "@mui/material/Step/stepClasses";
    export { default as StepContext } from "@mui/material/Step/StepContext";
    export * from "@mui/material/Step/StepContext";
}
declare module "@mui/material/SvgIcon/svgIconClasses" {
    export interface SvgIconClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the root element if `color="secondary"`. */
        colorSecondary: string;
        /** Styles applied to the root element if `color="action"`. */
        colorAction: string;
        /** Styles applied to the root element if `color="error"`. */
        colorError: string;
        /** Styles applied to the root element if `color="disabled"`. */
        colorDisabled: string;
        /** Styles applied to the root element if `fontSize="inherit"`. */
        fontSizeInherit: string;
        /** Styles applied to the root element if `fontSize="small"`. */
        fontSizeSmall: string;
        /** Styles applied to the root element if `fontSize="large"`. */
        fontSizeLarge: string;
    }
    export type SvgIconClassKey = keyof SvgIconClasses;
    export function getSvgIconUtilityClass(slot: string): string;
    const svgIconClasses: SvgIconClasses;
    export default svgIconClasses;
}
declare module "@mui/material/SvgIcon/SvgIcon" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { SvgIconClasses } from "@mui/material/SvgIcon/svgIconClasses";
    export interface SvgIconPropsSizeOverrides {
    }
    export interface SvgIconPropsColorOverrides {
    }
    export interface SvgIconTypeMap<P = {}, D extends React.ElementType = 'svg'> {
        props: P & {
            /**
             * Node passed into the SVG element.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<SvgIconClasses>;
            /**
             * The color of the component. It supports those theme colors that make sense for this component.
             * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
             * @default 'inherit'
             */
            color?: OverridableStringUnion<'inherit' | 'action' | 'disabled' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', SvgIconPropsColorOverrides>;
            /**
             * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
             * @default 'medium'
             */
            fontSize?: OverridableStringUnion<'inherit' | 'large' | 'medium' | 'small', SvgIconPropsSizeOverrides>;
            /**
             * Applies a color attribute to the SVG element.
             */
            htmlColor?: string;
            /**
             * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
             * prop will be ignored.
             * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
             * `component`'s viewBox to the root node.
             * @default false
             */
            inheritViewBox?: boolean;
            /**
             * The shape-rendering attribute. The behavior of the different options is described on the
             * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
             * If you are having issues with blurry icons you should investigate this prop.
             */
            shapeRendering?: string;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * Provides a human-readable title for the element that contains it.
             * https://www.w3.org/TR/SVG-access/#Equivalent
             */
            titleAccess?: string;
            /**
             * Allows you to redefine what the coordinates without units mean inside an SVG element.
             * For example, if the SVG element is 500 (width) by 200 (height),
             * and you pass viewBox="0 0 50 20",
             * this means that the coordinates inside the SVG will go from the top left corner (0,0)
             * to bottom right (50,20) and each unit will be worth 10px.
             * @default '0 0 24 24'
             */
            viewBox?: string;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Icons](https://mui.com/components/icons/)
     * - [Material Icons](https://mui.com/components/material-icons/)
     *
     * API:
     *
     * - [SvgIcon API](https://mui.com/api/svg-icon/)
     */
    const SvgIcon: OverridableComponent<SvgIconTypeMap> & {
        muiName: string;
    };
    export type SvgIconProps<D extends React.ElementType = SvgIconTypeMap['defaultComponent'], P = {}> = OverrideProps<SvgIconTypeMap<P, D>, D>;
    export default SvgIcon;
}
declare module "@mui/material/SvgIcon/index" {
    export { default } from "@mui/material/SvgIcon/SvgIcon";
    export * from "@mui/material/SvgIcon/SvgIcon";
    export { default as svgIconClasses } from "@mui/material/SvgIcon/svgIconClasses";
    export * from "@mui/material/SvgIcon/svgIconClasses";
}
declare module "@mui/material/SwipeableDrawer/SwipeableDrawer" {
    import * as React from 'react';
    import { DrawerProps } from "@mui/material/Drawer/index";
    export interface SwipeableDrawerProps extends Omit<DrawerProps, 'onClose' | 'open'> {
        /**
         * Disable the backdrop transition.
         * This can improve the FPS on low-end devices.
         * @default false
         */
        disableBackdropTransition?: boolean;
        /**
         * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit
         * to promote accidental discovery of the swipe gesture.
         * @default false
         */
        disableDiscovery?: boolean;
        /**
         * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers
         * navigation actions. Swipe to open is disabled on iOS browsers by default.
         * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)
         */
        disableSwipeToOpen?: boolean;
        /**
         * Affects how far the drawer must be opened/closed to change its state.
         * Specified as percent (0-1) of the width of the drawer
         * @default 0.52
         */
        hysteresis?: number;
        /**
         * Defines, from which (average) velocity on, the swipe is
         * defined as complete although hysteresis isn't reached.
         * Good threshold is between 250 - 1000 px/s
         * @default 450
         */
        minFlingVelocity?: number;
        /**
         * Callback fired when the component requests to be closed.
         *
         * @param {React.SyntheticEvent<{}>} event The event source of the callback.
         */
        onClose: React.ReactEventHandler<{}>;
        /**
         * Callback fired when the component requests to be opened.
         *
         * @param {React.SyntheticEvent<{}>} event The event source of the callback.
         */
        onOpen: React.ReactEventHandler<{}>;
        /**
         * If `true`, the component is shown.
         */
        open: boolean;
        /**
         * The element is used to intercept the touch events on the edge.
         */
        SwipeAreaProps?: object;
        /**
         * The width of the left most (or right most) area in `px` that
         * the drawer can be swiped open from.
         * @default 20
         */
        swipeAreaWidth?: number;
    }
    /**
     *
     * Demos:
     *
     * - [Drawers](https://mui.com/components/drawers/)
     *
     * API:
     *
     * - [SwipeableDrawer API](https://mui.com/api/swipeable-drawer/)
     * - inherits [Drawer API](https://mui.com/api/drawer/)
     */
    const SwipeableDrawer: React.JSXElementConstructor<SwipeableDrawerProps>;
    export default SwipeableDrawer;
}
declare module "@mui/material/SwipeableDrawer/index" {
    export { default } from "@mui/material/SwipeableDrawer/SwipeableDrawer";
    export * from "@mui/material/SwipeableDrawer/SwipeableDrawer";
}
declare module "@mui/material/Switch/switchClasses" {
    export interface SwitchClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `edge="start"`. */
        edgeStart: string;
        /** Styles applied to the root element if `edge="end"`. */
        edgeEnd: string;
        /** Styles applied to the internal `SwitchBase` component's `root` class. */
        switchBase: string;
        /** Styles applied to the internal SwitchBase component's root element if `color="primary"`. */
        colorPrimary: string;
        /** Styles applied to the internal SwitchBase component's root element if `color="secondary"`. */
        colorSecondary: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** State class applied to the internal `SwitchBase` component's `checked` class. */
        checked: string;
        /** State class applied to the internal SwitchBase component's disabled class. */
        disabled: string;
        /** Styles applied to the internal SwitchBase component's input element. */
        input: string;
        /** Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */
        thumb: string;
        /** Styles applied to the track element. */
        track: string;
    }
    export type SwitchClassKey = keyof SwitchClasses;
    export function getSwitchUtilityClass(slot: string): string;
    const switchClasses: SwitchClasses;
    export default switchClasses;
}
declare module "@mui/material/Switch/Switch" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { SwitchBaseProps } from "@mui/material/internal/SwitchBase";
    import { SwitchClasses } from "@mui/material/Switch/switchClasses";
    export interface SwitchPropsSizeOverrides {
    }
    export interface SwitchPropsColorOverrides {
    }
    export interface SwitchProps extends StandardProps<SwitchBaseProps, 'checkedIcon' | 'color' | 'icon'> {
        /**
         * The icon to display when the component is checked.
         */
        checkedIcon?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<SwitchClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * @default 'primary'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' | 'default', SwitchPropsColorOverrides>;
        /**
         * If `true`, the component is disabled.
         */
        disabled?: boolean;
        /**
         * The icon to display when the component is unchecked.
         */
        icon?: React.ReactNode;
        /**
         * The size of the component.
         * `small` is equivalent to the dense switch styling.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium', SwitchPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The value of the component. The DOM API casts this to a string.
         * The browser uses "on" as the default value.
         */
        value?: unknown;
    }
    /**
     *
     * Demos:
     *
     * - [Switches](https://mui.com/components/switches/)
     * - [Transfer List](https://mui.com/components/transfer-list/)
     *
     * API:
     *
     * - [Switch API](https://mui.com/api/switch/)
     * - inherits [IconButton API](https://mui.com/api/icon-button/)
     */
    export type Switch = (props: SwitchProps) => JSX.Element;
    export default Switch;
}
declare module "@mui/material/Switch/index" {
    export { default } from "@mui/material/Switch/Switch";
    export * from "@mui/material/Switch/Switch";
    export { default as switchClasses } from "@mui/material/Switch/switchClasses";
    export * from "@mui/material/Switch/switchClasses";
}
declare module "@mui/material/TableBody/tableBodyClasses" {
    export interface TableBodyClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TableBodyClassKey = keyof TableBodyClasses;
    export function getTableBodyUtilityClass(slot: string): string;
    const tableBodyClasses: TableBodyClasses;
    export default tableBodyClasses;
}
declare module "@mui/material/TableBody/TableBody" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TableBodyClasses } from "@mui/material/TableBody/tableBodyClasses";
    export interface TableBodyTypeMap<P = {}, D extends React.ElementType = 'tbody'> {
        props: P & {
            /**
             * The content of the component, normally `TableRow`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableBodyClasses>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableBody API](https://mui.com/api/table-body/)
     */
    const TableBody: OverridableComponent<TableBodyTypeMap>;
    export type TableBodyProps<D extends React.ElementType = TableBodyTypeMap['defaultComponent'], P = {}> = OverrideProps<TableBodyTypeMap<P, D>, D>;
    export default TableBody;
}
declare module "@mui/material/TableBody/index" {
    export { default } from "@mui/material/TableBody/TableBody";
    export * from "@mui/material/TableBody/TableBody";
    export { default as tableBodyClasses } from "@mui/material/TableBody/tableBodyClasses";
    export * from "@mui/material/TableBody/tableBodyClasses";
}
declare module "@mui/material/TableCell/tableCellClasses" {
    export interface TableCellClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="head"` or `context.table.head`. */
        head: string;
        /** Styles applied to the root element if `variant="body"` or `context.table.body`. */
        body: string;
        /** Styles applied to the root element if `variant="footer"` or `context.table.footer`. */
        footer: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** Styles applied to the root element if `padding="checkbox"`. */
        paddingCheckbox: string;
        /** Styles applied to the root element if `padding="none"`. */
        paddingNone: string;
        /** Styles applied to the root element if `align="left"`. */
        alignLeft: string;
        /** Styles applied to the root element if `align="center"`. */
        alignCenter: string;
        /** Styles applied to the root element if `align="right"`. */
        alignRight: string;
        /** Styles applied to the root element if `align="justify"`. */
        alignJustify: string;
        /** Styles applied to the root element if `context.table.stickyHeader={true}`. */
        stickyHeader: string;
    }
    export type TableCellClassKey = keyof TableCellClasses;
    export function getTableCellUtilityClass(slot: string): string;
    const tableCellClasses: TableCellClasses;
    export default tableCellClasses;
}
declare module "@mui/material/TableCell/TableCell" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TableCellClasses } from "@mui/material/TableCell/tableCellClasses";
    /**
     * `<TableCell>` will be rendered as an `<th>`or `<td>` depending
     * on the context it is used in. Where context literally is the
     * React `context`.
     *
     * Since it is not decided via prop, we have create loose typings
     * here.
     */
    export interface TableCellProps extends StandardProps<TableCellBaseProps, 'align'> {
        /**
         * Set the text-align on the table cell content.
         *
         * Monetary or generally number fields **should be right aligned** as that allows
         * you to add them up quickly in your head without having to worry about decimals.
         * @default 'inherit'
         */
        align?: 'inherit' | 'left' | 'center' | 'right' | 'justify';
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TableCellClasses>;
        /**
         * The component used for the root node.
         * Either a string to use a HTML element or a component.
         */
        component?: React.ElementType<TableCellBaseProps>;
        /**
         * Sets the padding applied to the cell.
         * The prop defaults to the value (`'default'`) inherited from the parent Table component.
         */
        padding?: 'normal' | 'checkbox' | 'none';
        /**
         * Set scope attribute.
         */
        scope?: TableCellBaseProps['scope'];
        /**
         * Specify the size of the cell.
         * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
         */
        size?: 'small' | 'medium';
        /**
         * Set aria-sort direction.
         */
        sortDirection?: SortDirection;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * Specify the cell type.
         * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
         */
        variant?: 'head' | 'body' | 'footer';
    }
    export type TableCellBaseProps = React.ThHTMLAttributes<HTMLTableCellElement> & React.TdHTMLAttributes<HTMLTableCellElement>;
    export type SortDirection = 'asc' | 'desc' | false;
    /**
     * The component renders a `<th>` element when the parent context is a header
     * or otherwise a `<td>` element.
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableCell API](https://mui.com/api/table-cell/)
     */
    export type TableCell = (props: TableCellProps) => JSX.Element;
    export default TableCell;
}
declare module "@mui/material/TableCell/index" {
    export { default } from "@mui/material/TableCell/TableCell";
    export * from "@mui/material/TableCell/TableCell";
    export { default as tableCellClasses } from "@mui/material/TableCell/tableCellClasses";
    export * from "@mui/material/TableCell/tableCellClasses";
}
declare module "@mui/material/TableContainer/tableContainerClasses" {
    export interface TableContainerClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TableContainerClassKey = keyof TableContainerClasses;
    export function getTableContainerUtilityClass(slot: string): string;
    const tableContainerClasses: TableContainerClasses;
    export default tableContainerClasses;
}
declare module "@mui/material/TableContainer/TableContainer" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TableContainerClasses } from "@mui/material/TableContainer/tableContainerClasses";
    export interface TableContainerTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component, normally `Table`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableContainerClasses>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableContainer API](https://mui.com/api/table-container/)
     */
    const TableContainer: OverridableComponent<TableContainerTypeMap>;
    export type TableContainerProps<D extends React.ElementType = TableContainerTypeMap['defaultComponent'], P = {}> = OverrideProps<TableContainerTypeMap<P, D>, D>;
    export default TableContainer;
}
declare module "@mui/material/TableContainer/index" {
    export { default } from "@mui/material/TableContainer/TableContainer";
    export * from "@mui/material/TableContainer/TableContainer";
    export { default as tableContainerClasses } from "@mui/material/TableContainer/tableContainerClasses";
    export * from "@mui/material/TableContainer/tableContainerClasses";
}
declare module "@mui/material/TableHead/tableHeadClasses" {
    export interface TableHeadClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TableHeadClassKey = keyof TableHeadClasses;
    export function getTableHeadUtilityClass(slot: string): string;
    const tableHeadClasses: TableHeadClasses;
    export default tableHeadClasses;
}
declare module "@mui/material/TableHead/TableHead" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TableHeadClasses } from "@mui/material/TableHead/tableHeadClasses";
    export interface TableHeadTypeMap<P = {}, D extends React.ElementType = 'thead'> {
        props: P & {
            /**
             * The content of the component, normally `TableRow`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableHeadClasses>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableHead API](https://mui.com/api/table-head/)
     */
    const TableHead: OverridableComponent<TableHeadTypeMap>;
    export type TableHeadProps<D extends React.ElementType = TableHeadTypeMap['defaultComponent'], P = {}> = OverrideProps<TableHeadTypeMap<P, D>, D>;
    export default TableHead;
}
declare module "@mui/material/TableHead/index" {
    export { default } from "@mui/material/TableHead/TableHead";
    export * from "@mui/material/TableHead/TableHead";
    export { default as tableHeadClasses } from "@mui/material/TableHead/tableHeadClasses";
    export * from "@mui/material/TableHead/tableHeadClasses";
}
declare module "@mui/material/TablePagination/TablePaginationActions" {
    import * as React from 'react';
    import { IconButtonProps } from "@mui/material/IconButton/IconButton";
    export interface TablePaginationActionsProps extends React.HTMLAttributes<HTMLDivElement> {
        backIconButtonProps?: Partial<IconButtonProps>;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: {};
        count: number;
        /**
         * Accepts a function which returns a string value that provides a user-friendly name for the current page.
         * This is important for screen reader users.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
         * @returns {string}
         */
        getItemAriaLabel: (type: 'first' | 'last' | 'next' | 'previous') => string;
        nextIconButtonProps?: Partial<IconButtonProps>;
        onPageChange: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;
        page: number;
        rowsPerPage: number;
        showFirstButton: boolean;
        showLastButton: boolean;
    }
    const TablePaginationActions: React.JSXElementConstructor<TablePaginationActionsProps>;
    export default TablePaginationActions;
}
declare module "@mui/material/TablePagination/tablePaginationClasses" {
    export interface TablePaginationClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the Toolbar component. */
        toolbar: string;
        /** Styles applied to the spacer element. */
        spacer: string;
        /** Styles applied to the select label Typography element. */
        selectLabel: string;
        /** Styles applied to the Select component `root` element. */
        selectRoot: string;
        /** Styles applied to the Select component `select` class. */
        select: string;
        /** Styles applied to the Select component `icon` class. */
        selectIcon: string;
        /** Styles applied to the Select component `root` element. */
        input: string;
        /** Styles applied to the MenuItem component. */
        menuItem: string;
        /** Styles applied to the displayed rows Typography element. */
        displayedRows: string;
        /** Styles applied to the internal `TablePaginationActions` component. */
        actions: string;
    }
    export type TablePaginationClassKey = keyof TablePaginationClasses;
    export function getTablePaginationUtilityClass(slot: string): string;
    const tablePaginationClasses: TablePaginationClasses;
    export default tablePaginationClasses;
}
declare module "@mui/material/TablePagination/TablePagination" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TablePaginationActionsProps } from "@mui/material/TablePagination/TablePaginationActions";
    import { TableCellProps } from "@mui/material/TableCell/index";
    import { IconButtonProps } from "@mui/material/IconButton/index";
    import { SelectProps } from "@mui/material/Select/index";
    import { TablePaginationClasses } from "@mui/material/TablePagination/tablePaginationClasses";
    export interface LabelDisplayedRowsArgs {
        from: number;
        to: number;
        count: number;
        page: number;
    }
    export interface TablePaginationTypeMap<P, D extends React.ElementType> {
        props: P & TablePaginationBaseProps & {
            /**
             * The component used for displaying the actions.
             * Either a string to use a HTML element or a component.
             * @default TablePaginationActions
             */
            ActionsComponent?: React.ElementType<TablePaginationActionsProps>;
            /**
             * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.
             */
            backIconButtonProps?: Partial<IconButtonProps>;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TablePaginationClasses>;
            /**
             * The total number of rows.
             *
             * To enable server side pagination for an unknown number of items, provide -1.
             */
            count: number;
            /**
             * Accepts a function which returns a string value that provides a user-friendly name for the current page.
             * This is important for screen reader users.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
             * @returns {string}
             * @default function defaultGetAriaLabel(type) {
             *   return `Go to ${type} page`;
             * }
             */
            getItemAriaLabel?: (type: 'first' | 'last' | 'next' | 'previous') => string;
            /**
             * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
             * object.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @default function defaultLabelDisplayedRows({ from, to, count }) {
             *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
             * }
             */
            labelDisplayedRows?: (paginationInfo: LabelDisplayedRowsArgs) => React.ReactNode;
            /**
             * Customize the rows per page label.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @default 'Rows per page:'
             */
            labelRowsPerPage?: React.ReactNode;
            /**
             * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.
             */
            nextIconButtonProps?: Partial<IconButtonProps>;
            /**
             * Callback fired when the page is changed.
             *
             * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
             * @param {number} page The page selected.
             */
            onPageChange: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;
            /**
             * Callback fired when the number of rows per page is changed.
             *
             * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
             */
            onRowsPerPageChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;
            /**
             * The zero-based index of the current page.
             */
            page: number;
            /**
             * The number of rows per page.
             *
             * Set -1 to display all the rows.
             */
            rowsPerPage: number;
            /**
             * Customizes the options of the rows per page select field. If less than two options are
             * available, no select field will be displayed.
             * Use -1 for the value with a custom label to show all the rows.
             * @default [10, 25, 50, 100]
             */
            rowsPerPageOptions?: Array<number | {
                value: number;
                label: string;
            }>;
            /**
             * Props applied to the rows per page [`Select`](/api/select/) element.
             * @default {}
             */
            SelectProps?: Partial<SelectProps>;
            /**
             * If `true`, show the first-page button.
             * @default false
             */
            showFirstButton?: boolean;
            /**
             * If `true`, show the last-page button.
             * @default false
             */
            showLastButton?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     * A `TableCell` based component for placing inside `TableFooter` for pagination.
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TablePagination API](https://mui.com/api/table-pagination/)
     * - inherits [TableCell API](https://mui.com/api/table-cell/)
     */
    const TablePagination: OverridableComponent<TablePaginationTypeMap<{}, React.JSXElementConstructor<TablePaginationBaseProps>>>;
    export type TablePaginationBaseProps = Omit<TableCellProps, 'classes' | 'component' | 'children'>;
    export type TablePaginationProps<D extends React.ElementType = React.JSXElementConstructor<TablePaginationBaseProps>, P = {}> = OverrideProps<TablePaginationTypeMap<P, D>, D>;
    export default TablePagination;
}
declare module "@mui/material/TablePagination/index" {
    export { default } from "@mui/material/TablePagination/TablePagination";
    export * from "@mui/material/TablePagination/TablePagination";
    export { default as tablePaginationClasses } from "@mui/material/TablePagination/tablePaginationClasses";
    export * from "@mui/material/TablePagination/tablePaginationClasses";
}
declare module "@mui/material/Table/tableClasses" {
    export interface TableClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `stickyHeader={true}`. */
        stickyHeader: string;
    }
    export type TableClassKey = keyof TableClasses;
    export function getTableUtilityClass(slot: string): string;
    const tableClasses: TableClasses;
    export default tableClasses;
}
declare module "@mui/material/Table/Table" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TableClasses } from "@mui/material/Table/tableClasses";
    export interface TablePropsSizeOverrides {
    }
    export interface TableTypeMap<P = {}, D extends React.ElementType = 'table'> {
        props: P & {
            /**
             * The content of the table, normally `TableHead` and `TableBody`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableClasses>;
            /**
             * Allows TableCells to inherit padding of the Table.
             * @default 'normal'
             */
            padding?: 'normal' | 'checkbox' | 'none';
            /**
             * Allows TableCells to inherit size of the Table.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium', TablePropsSizeOverrides>;
            /**
             * Set the header sticky.
             *
             * ⚠️ It doesn't work with IE11.
             * @default false
             */
            stickyHeader?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [Table API](https://mui.com/api/table/)
     */
    const Table: OverridableComponent<TableTypeMap>;
    export type TableProps<D extends React.ElementType = TableTypeMap['defaultComponent'], P = {}> = OverrideProps<TableTypeMap<P, D>, D>;
    export default Table;
}
declare module "@mui/material/Table/index" {
    export { default } from "@mui/material/Table/Table";
    export * from "@mui/material/Table/Table";
    export { default as tableClasses } from "@mui/material/Table/tableClasses";
    export * from "@mui/material/Table/tableClasses";
}
declare module "@mui/material/TableRow/tableRowClasses" {
    export interface TableRowClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `selected={true}`. */
        selected: string;
        /** State class applied to the root element if `hover={true}`. */
        hover: string;
        /** Styles applied to the root element if table variant="head". */
        head: string;
        /** Styles applied to the root element if table variant="footer". */
        footer: string;
    }
    export type TableRowClassKey = keyof TableRowClasses;
    export function getTableRowUtilityClass(slot: string): string;
    const tableRowClasses: TableRowClasses;
    export default tableRowClasses;
}
declare module "@mui/material/TableRow/TableRow" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TableRowClasses } from "@mui/material/TableRow/tableRowClasses";
    export interface TableRowTypeMap<P = {}, D extends React.ElementType = 'tr'> {
        props: P & {
            /**
             * Should be valid <tr> children such as `TableCell`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableRowClasses>;
            /**
             * If `true`, the table row will shade on hover.
             * @default false
             */
            hover?: boolean;
            /**
             * If `true`, the table row will have the selected shading.
             * @default false
             */
            selected?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     * Will automatically set dynamic row height
     * based on the material table element parent (head, body, etc).
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableRow API](https://mui.com/api/table-row/)
     */
    const TableRow: OverridableComponent<TableRowTypeMap>;
    export type TableRowProps<D extends React.ElementType = TableRowTypeMap['defaultComponent'], P = {}> = OverrideProps<TableRowTypeMap<P, D>, D>;
    export default TableRow;
}
declare module "@mui/material/TableRow/index" {
    export { default } from "@mui/material/TableRow/TableRow";
    export * from "@mui/material/TableRow/TableRow";
    export { default as tableRowClasses } from "@mui/material/TableRow/tableRowClasses";
    export * from "@mui/material/TableRow/tableRowClasses";
}
declare module "@mui/material/TableSortLabel/tableSortLabelClasses" {
    export interface TableSortLabelClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `active={true}`. */
        active: string;
        /** Styles applied to the icon component. */
        icon: string;
        /** Styles applied to the icon component if `direction="desc"`. */
        iconDirectionDesc: string;
        /** Styles applied to the icon component if `direction="asc"`. */
        iconDirectionAsc: string;
    }
    export type TableSortLabelClassKey = keyof TableSortLabelClasses;
    export function getTableSortLabelUtilityClass(slot: string): string;
    const tableSortLabelClasses: TableSortLabelClasses;
    export default tableSortLabelClasses;
}
declare module "@mui/material/TableSortLabel/TableSortLabel" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { TableSortLabelClasses } from "@mui/material/TableSortLabel/tableSortLabelClasses";
    export type TableSortLabelTypeMap<P = {}, D extends React.ElementType = 'span'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * If `true`, the label will have the active styling (should be true for the sorted column).
             * @default false
             */
            active?: boolean;
            /**
             * Label contents, the arrow will be appended automatically.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableSortLabelClasses>;
            /**
             * The current sort direction.
             * @default 'asc'
             */
            direction?: 'asc' | 'desc';
            /**
             * Hide sort icon when active is false.
             * @default false
             */
            hideSortIcon?: boolean;
            /**
             * Sort icon to use.
             * @default ArrowDownwardIcon
             */
            IconComponent?: React.JSXElementConstructor<{
                className: string;
            }>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     * A button based label for placing inside `TableCell` for column sorting.
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableSortLabel API](https://mui.com/api/table-sort-label/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const TableSortLabel: ExtendButtonBase<TableSortLabelTypeMap>;
    export type TableSortLabelProps<D extends React.ElementType = TableSortLabelTypeMap['defaultComponent'], P = {}> = OverrideProps<TableSortLabelTypeMap<P, D>, D>;
    export default TableSortLabel;
}
declare module "@mui/material/TableSortLabel/index" {
    export { default } from "@mui/material/TableSortLabel/TableSortLabel";
    export * from "@mui/material/TableSortLabel/TableSortLabel";
    export { default as tableSortLabelClasses } from "@mui/material/TableSortLabel/tableSortLabelClasses";
    export * from "@mui/material/TableSortLabel/tableSortLabelClasses";
}
declare module "@mui/material/TableFooter/tableFooterClasses" {
    export interface TableFooterClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TableFooterClassKey = keyof TableFooterClasses;
    export function getTableFooterUtilityClass(slot: string): string;
    const tableFooterClasses: TableFooterClasses;
    export default tableFooterClasses;
}
declare module "@mui/material/TableFooter/TableFooter" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TableFooterClasses } from "@mui/material/TableFooter/tableFooterClasses";
    export interface TableFooterTypeMap<P = {}, D extends React.ElementType = 'tfoot'> {
        props: P & {
            /**
             * The content of the component, normally `TableRow`.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TableFooterClasses>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TableFooter API](https://mui.com/api/table-footer/)
     */
    const TableFooter: OverridableComponent<TableFooterTypeMap>;
    export type TableFooterProps<D extends React.ElementType = TableFooterTypeMap['defaultComponent'], P = {}> = OverrideProps<TableFooterTypeMap<P, D>, D>;
    export default TableFooter;
}
declare module "@mui/material/TableFooter/index" {
    export { default } from "@mui/material/TableFooter/TableFooter";
    export * from "@mui/material/TableFooter/TableFooter";
    export { default as tableFooterClasses } from "@mui/material/TableFooter/tableFooterClasses";
    export * from "@mui/material/TableFooter/tableFooterClasses";
}
declare module "@mui/material/Tab/tabClasses" {
    export interface TabClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if both `icon` and `label` are provided. */
        labelIcon: string;
        /** Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="inherit"`. */
        textColorInherit: string;
        /** Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="primary"`. */
        textColorPrimary: string;
        /** Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="secondary"`. */
        textColorSecondary: string;
        /** State class applied to the root element if `selected={true}` (controlled by the Tabs component). */
        selected: string;
        /** State class applied to the root element if `disabled={true}` (controlled by the Tabs component). */
        disabled: string;
        /** Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */
        fullWidth: string;
        /** Styles applied to the root element if `wrapped={true}`. */
        wrapped: string;
        /** Styles applied to the wrapper element of `icon` if `icon` is provided. */
        iconWrapper: string;
    }
    export type TabClassKey = keyof TabClasses;
    export function getTabUtilityClass(slot: string): string;
    const tabClasses: TabClasses;
    export default tabClasses;
}
declare module "@mui/material/Tab/Tab" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { TabClasses } from "@mui/material/Tab/tabClasses";
    export type TabTypeMap<P = {}, D extends React.ElementType = 'div'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * This prop isn't supported.
             * Use the `component` prop if you need to change the children structure.
             */
            children?: null;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TabClasses>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the  keyboard focus ripple is disabled.
             * @default false
             */
            disableFocusRipple?: boolean;
            /**
             * The icon to display.
             */
            icon?: string | React.ReactElement;
            /**
             * The position of the icon relative to the label.
             * @default 'top'
             */
            iconPosition?: 'top' | 'bottom' | 'start' | 'end';
            /**
             * The label element.
             */
            label?: React.ReactNode;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * You can provide your own value. Otherwise, we fallback to the child position index.
             */
            value?: any;
            /**
             * Tab labels appear in a single row.
             * They can use a second line if needed.
             * @default false
             */
            wrapped?: boolean;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [Tab API](https://mui.com/api/tab/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const Tab: ExtendButtonBase<TabTypeMap>;
    export type TabProps<D extends React.ElementType = TabTypeMap['defaultComponent'], P = {}> = OverrideProps<TabTypeMap<P, D>, D>;
    export default Tab;
}
declare module "@mui/material/Tab/index" {
    export { default } from "@mui/material/Tab/Tab";
    export * from "@mui/material/Tab/Tab";
    export { default as tabClasses } from "@mui/material/Tab/tabClasses";
    export * from "@mui/material/Tab/tabClasses";
}
declare module "@mui/material/TabScrollButton/tabScrollButtonClasses" {
    export interface TabScrollButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
    }
    export type TabScrollButtonClassKey = keyof TabScrollButtonClasses;
    export function getTabScrollButtonUtilityClass(slot: string): string;
    const tabScrollButtonClasses: TabScrollButtonClasses;
    export default tabScrollButtonClasses;
}
declare module "@mui/material/TabScrollButton/TabScrollButton" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TabScrollButtonClasses } from "@mui/material/TabScrollButton/tabScrollButtonClasses";
    export interface TabScrollButtonProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TabScrollButtonClasses>;
        /**
         * The direction the button should indicate.
         */
        direction: 'left' | 'right';
        /**
         * If `true`, the component is disabled.
         */
        disabled?: boolean;
        /**
         * The component orientation (layout flow direction).
         */
        orientation: 'horizontal' | 'vertical';
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabScrollButton API](https://mui.com/api/tab-scroll-button/)
     */
    export type TabScrollButton = (props: TabScrollButtonProps) => JSX.Element;
    export default TabScrollButton;
}
declare module "@mui/material/TabScrollButton/index" {
    export { default } from "@mui/material/TabScrollButton/TabScrollButton";
    export * from "@mui/material/TabScrollButton/TabScrollButton";
    export { default as tabScrollButtonClasses } from "@mui/material/TabScrollButton/tabScrollButtonClasses";
    export * from "@mui/material/TabScrollButton/tabScrollButtonClasses";
}
declare module "@mui/material/Tabs/tabsClasses" {
    export interface TabsClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** Styles applied to the flex container element. */
        flexContainer: string;
        /** Styles applied to the flex container element if `orientation="vertical"`. */
        flexContainerVertical: string;
        /** Styles applied to the flex container element if `centered={true}` & `!variant="scrollable"`. */
        centered: string;
        /** Styles applied to the tablist element. */
        scroller: string;
        /** Styles applied to the tablist element if `!variant="scrollable"`. */
        fixed: string;
        /** Styles applied to the tablist element if `variant="scrollable"` and `orientation="horizontal"`. */
        scrollableX: string;
        /** Styles applied to the tablist element if `variant="scrollable"` and `orientation="vertical"`. */
        scrollableY: string;
        /** Styles applied to the tablist element if `variant="scrollable"` and `visibleScrollbar={false}`. */
        hideScrollbar: string;
        /** Styles applied to the ScrollButtonComponent component. */
        scrollButtons: string;
        /** Styles applied to the ScrollButtonComponent component if `allowScrollButtonsMobile={true}`. */
        scrollButtonsHideMobile: string;
        /** Styles applied to the TabIndicator component. */
        indicator: string;
    }
    export type TabsClassKey = keyof TabsClasses;
    export function getTabsUtilityClass(slot: string): string;
    const tabsClasses: TabsClasses;
    export default tabsClasses;
}
declare module "@mui/material/Tabs/Tabs" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import ButtonBase from "@mui/material/ButtonBase/index";
    import { TabScrollButtonProps } from "@mui/material/TabScrollButton/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { TabsClasses } from "@mui/material/Tabs/tabsClasses";
    export interface TabsTypeMap<P = {}, D extends React.ElementType = typeof ButtonBase> {
        props: P & {
            /**
             * Callback fired when the component mounts.
             * This is useful when you want to trigger an action programmatically.
             * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
             *
             * @param {object} actions This object contains all possible actions
             * that can be triggered programmatically.
             */
            action?: React.Ref<TabsActions>;
            /**
             * If `true`, the scroll buttons aren't forced hidden on mobile.
             * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
             * @default false
             */
            allowScrollButtonsMobile?: boolean;
            /**
             * The label for the Tabs as a string.
             */
            'aria-label'?: string;
            /**
             * An id or list of ids separated by a space that label the Tabs.
             */
            'aria-labelledby'?: string;
            /**
             * If `true`, the tabs are centered.
             * This prop is intended for large views.
             * @default false
             */
            centered?: boolean;
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TabsClasses>;
            /**
             * Determines the color of the indicator.
             * @default 'primary'
             */
            indicatorColor?: 'secondary' | 'primary';
            /**
             * Callback fired when the value changes.
             *
             * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
             * @param {any} value We default to the index of the child (number)
             */
            onChange?: (event: React.SyntheticEvent, value: any) => void;
            /**
             * The component orientation (layout flow direction).
             * @default 'horizontal'
             */
            orientation?: 'horizontal' | 'vertical';
            /**
             * The component used to render the scroll buttons.
             * @default TabScrollButton
             */
            ScrollButtonComponent?: React.ElementType;
            /**
             * Determine behavior of scroll buttons when tabs are set to scroll:
             *
             * - `auto` will only present them when not all the items are visible.
             * - `true` will always present them.
             * - `false` will never present them.
             *
             * By default the scroll buttons are hidden on mobile.
             * This behavior can be disabled with `allowScrollButtonsMobile`.
             * @default 'auto'
             */
            scrollButtons?: 'auto' | true | false;
            /**
             * If `true` the selected tab changes on focus. Otherwise it only
             * changes on activation.
             */
            selectionFollowsFocus?: boolean;
            /**
             * Props applied to the tab indicator element.
             * @default  {}
             */
            TabIndicatorProps?: React.HTMLAttributes<HTMLDivElement>;
            /**
             * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.
             * @default {}
             */
            TabScrollButtonProps?: Partial<TabScrollButtonProps>;
            /**
             * Determines the color of the `Tab`.
             * @default 'primary'
             */
            textColor?: 'secondary' | 'primary' | 'inherit';
            /**
             * The value of the currently selected `Tab`.
             * If you don't want any selected `Tab`, you can set this prop to `false`.
             */
            value?: any;
            /**
             *  Determines additional display behavior of the tabs:
             *
             *  - `scrollable` will invoke scrolling properties and allow for horizontally
             *  scrolling (or swiping) of the tab bar.
             *  -`fullWidth` will make the tabs grow to use all the available space,
             *  which should be used for small views, like on mobile.
             *  - `standard` will render the default state.
             * @default 'standard'
             */
            variant?: 'standard' | 'scrollable' | 'fullWidth';
            /**
             * If `true`, the scrollbar is visible. It can be useful when displaying
             * a long vertical list of tabs.
             * @default false
             */
            visibleScrollbar?: boolean;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [Tabs API](https://mui.com/api/tabs/)
     */
    const Tabs: OverridableComponent<TabsTypeMap>;
    export interface TabsActions {
        updateIndicator(): void;
        updateScrollButtons(): void;
    }
    export type TabsProps<D extends React.ElementType = TabsTypeMap['defaultComponent'], P = {}> = OverrideProps<TabsTypeMap<P, D>, D>;
    export default Tabs;
}
declare module "@mui/material/Tabs/index" {
    export { default } from "@mui/material/Tabs/Tabs";
    export * from "@mui/material/Tabs/Tabs";
    export { default as tabsClasses } from "@mui/material/Tabs/tabsClasses";
    export * from "@mui/material/Tabs/tabsClasses";
}
declare module "@mui/material/TextField/textFieldClasses" {
    export interface TextFieldClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TextFieldClassKey = keyof TextFieldClasses;
    export function getTextFieldUtilityClass(slot: string): string;
    const textFieldClasses: TextFieldClasses;
    export default textFieldClasses;
}
declare module "@mui/material/TextField/TextField" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { FormControlProps } from "@mui/material/FormControl/index";
    import { FormHelperTextProps } from "@mui/material/FormHelperText/index";
    import { InputBaseProps } from "@mui/material/InputBase/index";
    import { InputProps as StandardInputProps } from "@mui/material/Input/index";
    import { FilledInputProps } from "@mui/material/FilledInput/index";
    import { OutlinedInputProps } from "@mui/material/OutlinedInput/index";
    import { InputLabelProps } from "@mui/material/InputLabel/index";
    import { SelectProps } from "@mui/material/Select/index";
    import { Theme } from "@mui/material/styles/index";
    import { TextFieldClasses } from "@mui/material/TextField/textFieldClasses";
    export interface TextFieldPropsColorOverrides {
    }
    export interface TextFieldPropsSizeOverrides {
    }
    export interface BaseTextFieldProps extends StandardProps<FormControlProps, 'onChange' | 'onBlur' | 'onFocus' | 'defaultValue'> {
        /**
         * This prop helps users to fill forms faster, especially on mobile devices.
         * The name can be confusing, as it's more like an autofill.
         * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
         */
        autoComplete?: string;
        /**
         * If `true`, the `input` element is focused during the first mount.
         * @default false
         */
        autoFocus?: boolean;
        /**
         * @ignore
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TextFieldClasses>;
        /**
         * The color of the component. It supports those theme colors that make sense for this component.
         * @default 'primary'
         */
        color?: OverridableStringUnion<'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', TextFieldPropsColorOverrides>;
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: unknown;
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the label is displayed in an error state.
         * @default false
         */
        error?: boolean;
        /**
         * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.
         */
        FormHelperTextProps?: Partial<FormHelperTextProps>;
        /**
         * If `true`, the input will take up the full width of its container.
         * @default false
         */
        fullWidth?: boolean;
        /**
         * The helper text content.
         */
        helperText?: React.ReactNode;
        /**
         * The id of the `input` element.
         * Use this prop to make `label` and `helperText` accessible for screen readers.
         */
        id?: string;
        /**
         * Props applied to the [`InputLabel`](/api/input-label/) element.
         * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
         */
        InputLabelProps?: Partial<InputLabelProps>;
        /**
         * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
         */
        inputProps?: InputBaseProps['inputProps'];
        /**
         * Pass a ref to the `input` element.
         */
        inputRef?: React.Ref<any>;
        /**
         * The label content.
         */
        label?: React.ReactNode;
        /**
         * If `true`, a `textarea` element is rendered instead of an input.
         * @default false
         */
        multiline?: boolean;
        /**
         * Name attribute of the `input` element.
         */
        name?: string;
        onBlur?: InputBaseProps['onBlur'];
        onFocus?: StandardInputProps['onFocus'];
        /**
         * The short hint displayed in the `input` before the user enters a value.
         */
        placeholder?: string;
        /**
         * If `true`, the label is displayed as required and the `input` element is required.
         * @default false
         */
        required?: boolean;
        /**
         * Number of rows to display when multiline option is set to true.
         */
        rows?: string | number;
        /**
         * Maximum number of rows to display when multiline option is set to true.
         */
        maxRows?: string | number;
        /**
         * Minimum number of rows to display when multiline option is set to true.
         */
        minRows?: string | number;
        /**
         * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.
         * If this option is set you must pass the options of the select as children.
         * @default false
         */
        select?: boolean;
        /**
         * Props applied to the [`Select`](/api/select/) element.
         */
        SelectProps?: Partial<SelectProps>;
        /**
         * The size of the component.
         */
        size?: OverridableStringUnion<'small' | 'medium', TextFieldPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
         */
        type?: React.InputHTMLAttributes<unknown>['type'];
        /**
         * The value of the `input` element, required for a controlled component.
         */
        value?: unknown;
    }
    export interface StandardTextFieldProps extends BaseTextFieldProps {
        /**
         * Callback fired when the value is changed.
         *
         * @param {object} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         */
        onChange?: StandardInputProps['onChange'];
        /**
         * The variant to use.
         * @default 'outlined'
         */
        variant?: 'standard';
        /**
         * Props applied to the Input element.
         * It will be a [`FilledInput`](/api/filled-input/),
         * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)
         * component depending on the `variant` prop value.
         */
        InputProps?: Partial<StandardInputProps>;
    }
    export interface FilledTextFieldProps extends BaseTextFieldProps {
        /**
         * Callback fired when the value is changed.
         *
         * @param {object} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         */
        onChange?: FilledInputProps['onChange'];
        /**
         * The variant to use.
         * @default 'outlined'
         */
        variant: 'filled';
        /**
         * Props applied to the Input element.
         * It will be a [`FilledInput`](/api/filled-input/),
         * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)
         * component depending on the `variant` prop value.
         */
        InputProps?: Partial<FilledInputProps>;
    }
    export interface OutlinedTextFieldProps extends BaseTextFieldProps {
        /**
         * Callback fired when the value is changed.
         *
         * @param {object} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         */
        onChange?: OutlinedInputProps['onChange'];
        /**
         * The variant to use.
         * @default 'outlined'
         */
        variant: 'outlined';
        /**
         * Props applied to the Input element.
         * It will be a [`FilledInput`](/api/filled-input/),
         * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)
         * component depending on the `variant` prop value.
         */
        InputProps?: Partial<OutlinedInputProps>;
    }
    export type TextFieldProps = StandardTextFieldProps | FilledTextFieldProps | OutlinedTextFieldProps;
    /**
     * The `TextField` is a convenience wrapper for the most common cases (80%).
     * It cannot be all things to all people, otherwise the API would grow out of control.
     *
     * ## Advanced Configuration
     *
     * It's important to understand that the text field is a simple abstraction
     * on top of the following components:
     *
     * *   [FormControl](https://mui.com/api/form-control/)
     * *   [InputLabel](https://mui.com/api/input-label/)
     * *   [FilledInput](https://mui.com/api/filled-input/)
     * *   [OutlinedInput](https://mui.com/api/outlined-input/)
     * *   [Input](https://mui.com/api/input/)
     * *   [FormHelperText](https://mui.com/api/form-helper-text/)
     *
     * If you wish to alter the props applied to the `input` element, you can do so as follows:
     *
     * ```jsx
     * const inputProps = {
     *   step: 300,
     * };
     *
     * return <TextField id="time" type="time" inputProps={inputProps} />;
     * ```
     *
     * For advanced cases, please look at the source of TextField by clicking on the
     * "Edit this page" button above. Consider either:
     *
     * *   using the upper case props for passing values directly to the components
     * *   using the underlying components directly as shown in the demos
     *
     * Demos:
     *
     * - [Autocomplete](https://mui.com/components/autocomplete/)
     * - [Pickers](https://mui.com/components/pickers/)
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [TextField API](https://mui.com/api/text-field/)
     * - inherits [FormControl API](https://mui.com/api/form-control/)
     */
    export type TextField = (props: TextFieldProps) => JSX.Element;
    export default TextField;
}
declare module "@mui/material/TextField/index" {
    export { default } from "@mui/material/TextField/TextField";
    export * from "@mui/material/TextField/TextField";
    export { default as textFieldClasses } from "@mui/material/TextField/textFieldClasses";
    export * from "@mui/material/TextField/textFieldClasses";
}
declare module "@mui/material/ToggleButton/toggleButtonClasses" {
    export interface ToggleButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `selected={true}`. */
        selected: string;
        /** State class applied to the root element if `color="standard"`. */
        standard: string;
        /** State class applied to the root element if `color="primary"`. */
        primary: string;
        /** State class applied to the root element if `color="secondary"`. */
        secondary: string;
        /** Styles applied to the root element if `size="small"`. */
        sizeSmall: string;
        /** Styles applied to the root element if `size="medium"`. */
        sizeMedium: string;
        /** Styles applied to the root element if `size="large"`. */
        sizeLarge: string;
    }
    export type ToggleButtonClassKey = keyof ToggleButtonClasses;
    export function getToggleButtonUtilityClass(slot: string): string;
    const toggleButtonClasses: ToggleButtonClasses;
    export default toggleButtonClasses;
}
declare module "@mui/material/ToggleButton/ToggleButton" {
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import * as React from 'react';
    import { Theme } from "@mui/material/index";
    import { ExtendButtonBase, ExtendButtonBaseTypeMap } from "@mui/material/ButtonBase/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { ToggleButtonClasses } from "@mui/material/ToggleButton/toggleButtonClasses";
    export interface ToggleButtonPropsSizeOverrides {
    }
    export interface ToggleButtonPropsColorOverrides {
    }
    export type ToggleButtonTypeMap<P = {}, D extends React.ElementType = 'button'> = ExtendButtonBaseTypeMap<{
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ToggleButtonClasses>;
            /**
             * The color of the button when it is in an active state.
             * @default 'standard'
             */
            color?: OverridableStringUnion<'standard' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', ToggleButtonPropsColorOverrides>;
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the  keyboard focus ripple is disabled.
             * @default false
             */
            disableFocusRipple?: boolean;
            /**
             * If `true`, the button will take up the full width of its container.
             * @default false
             */
            fullWidth?: boolean;
            /**
             * Callback fired when the state changes.
             *
             * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
             * @param {any} value of the selected button.
             */
            onChange?: (event: React.MouseEvent<HTMLElement>, value: any) => void;
            /**
             * Callback fired when the button is clicked.
             *
             * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
             * @param {any} value of the selected button.
             */
            onClick?: (event: React.MouseEvent<HTMLElement>, value: any) => void;
            /**
             * If `true`, the button is rendered in an active state.
             */
            selected?: boolean;
            /**
             * The size of the component.
             * The prop defaults to the value inherited from the parent ToggleButtonGroup component.
             * @default 'medium'
             */
            size?: OverridableStringUnion<'small' | 'medium' | 'large', ToggleButtonPropsSizeOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
            /**
             * The value to associate with the button when selected in a
             * ToggleButtonGroup.
             */
            value: NonNullable<unknown>;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Toggle Button](https://mui.com/components/toggle-button/)
     *
     * API:
     *
     * - [ToggleButton API](https://mui.com/api/toggle-button/)
     * - inherits [ButtonBase API](https://mui.com/api/button-base/)
     */
    const ToggleButton: ExtendButtonBase<ToggleButtonTypeMap>;
    export type ToggleButtonProps<D extends React.ElementType = ToggleButtonTypeMap['defaultComponent'], P = {}> = OverrideProps<ToggleButtonTypeMap<P, D>, D>;
    export default ToggleButton;
}
declare module "@mui/material/ToggleButton/index" {
    export { default } from "@mui/material/ToggleButton/ToggleButton";
    export * from "@mui/material/ToggleButton/ToggleButton";
    export { default as toggleButtonClasses } from "@mui/material/ToggleButton/toggleButtonClasses";
    export * from "@mui/material/ToggleButton/toggleButtonClasses";
}
declare module "@mui/material/ToggleButtonGroup/toggleButtonGroupClasses" {
    export interface ToggleButtonGroupClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** State class applied to the root element if `disabled={true}`. */
        disabled: string;
        /** Styles applied to the children. */
        grouped: string;
        /** Styles applied to the children if `orientation="horizontal"`. */
        groupedHorizontal: string;
        /** Styles applied to the children if `orientation="vertical"`. */
        groupedVertical: string;
    }
    export type ToggleButtonGroupClassKey = keyof ToggleButtonGroupClasses;
    export function getToggleButtonGroupUtilityClass(slot: string): string;
    const toggleButtonGroupClasses: ToggleButtonGroupClasses;
    export default toggleButtonGroupClasses;
}
declare module "@mui/material/ToggleButtonGroup/ToggleButtonGroup" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { ToggleButtonGroupClasses } from "@mui/material/ToggleButtonGroup/toggleButtonGroupClasses";
    export interface ToggleButtonGroupPropsSizeOverrides {
    }
    export interface ToggleButtonGroupPropsColorOverrides {
    }
    export interface ToggleButtonGroupProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'children'> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ToggleButtonGroupClasses>;
        /**
         * The color of a button when it is selected.
         * @default 'standard'
         */
        color?: OverridableStringUnion<'standard' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', ToggleButtonGroupPropsColorOverrides>;
        /**
         * If `true`, only allow one of the child ToggleButton values to be selected.
         * @default false
         */
        exclusive?: boolean;
        /**
         * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the button group will take up the full width of its container.
         * @default false
         */
        fullWidth?: boolean;
        /**
         * Callback fired when the value changes.
         *
         * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.
         * @param {any} value of the selected buttons. When `exclusive` is true
         * this is a single value; when false an array of selected values. If no value
         * is selected and `exclusive` is true the value is null; when false an empty array.
         */
        onChange?: (event: React.MouseEvent<HTMLElement>, value: any) => void;
        /**
         * The component orientation (layout flow direction).
         * @default 'horizontal'
         */
        orientation?: 'horizontal' | 'vertical';
        /**
         * The size of the component.
         * @default 'medium'
         */
        size?: OverridableStringUnion<'small' | 'medium' | 'large', ToggleButtonGroupPropsSizeOverrides>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The currently selected value within the group or an array of selected
         * values when `exclusive` is false.
         *
         * The value must have reference equality with the option in order to be selected.
         */
        value?: any;
    }
    /**
     *
     * Demos:
     *
     * - [Toggle Button](https://mui.com/components/toggle-button/)
     *
     * API:
     *
     * - [ToggleButtonGroup API](https://mui.com/api/toggle-button-group/)
     */
    export type ToggleButtonGroup = (props: ToggleButtonGroupProps) => JSX.Element;
    export default ToggleButtonGroup;
}
declare module "@mui/material/ToggleButtonGroup/index" {
    export { default } from "@mui/material/ToggleButtonGroup/ToggleButtonGroup";
    export * from "@mui/material/ToggleButtonGroup/ToggleButtonGroup";
    export { default as toggleButtonGroupClasses } from "@mui/material/ToggleButtonGroup/toggleButtonGroupClasses";
    export * from "@mui/material/ToggleButtonGroup/toggleButtonGroupClasses";
}
declare module "@mui/material/Toolbar/toolbarClasses" {
    export interface ToolbarClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element unless `disableGutters={true}`. */
        gutters: string;
        /** Styles applied to the root element if `variant="regular"`. */
        regular: string;
        /** Styles applied to the root element if `variant="dense"`. */
        dense: string;
    }
    export type ToolbarClassKey = keyof ToolbarClasses;
    export function getToolbarUtilityClass(slot: string): string;
    const toolbarClasses: ToolbarClasses;
    export default toolbarClasses;
}
declare module "@mui/material/Toolbar/Toolbar" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { OverridableStringUnion } from "@mui/types/index";
    import { Theme } from "@mui/material/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { ToolbarClasses } from "@mui/material/Toolbar/toolbarClasses";
    export interface ToolbarPropsVariantOverrides {
    }
    export interface ToolbarTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.
             * The Toolbar is a flex container, allowing flex item properites to be used to lay out the children.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ToolbarClasses>;
            /**
             * If `true`, disables gutter padding.
             * @default false
             */
            disableGutters?: boolean;
            /**
             * The variant to use.
             * @default 'regular'
             */
            variant?: OverridableStringUnion<'regular' | 'dense', ToolbarPropsVariantOverrides>;
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [App Bar](https://mui.com/components/app-bar/)
     *
     * API:
     *
     * - [Toolbar API](https://mui.com/api/toolbar/)
     */
    const Toolbar: OverridableComponent<ToolbarTypeMap>;
    export type ToolbarProps<D extends React.ElementType = ToolbarTypeMap['defaultComponent'], P = {}> = OverrideProps<ToolbarTypeMap<P, D>, D>;
    export default Toolbar;
}
declare module "@mui/material/Toolbar/index" {
    export { default } from "@mui/material/Toolbar/Toolbar";
    export * from "@mui/material/Toolbar/Toolbar";
    export { default as toolbarClasses } from "@mui/material/Toolbar/toolbarClasses";
    export * from "@mui/material/Toolbar/toolbarClasses";
}
declare module "@mui/material/styles/props" {
    import { AlertProps } from "@mui/material/Alert/index";
    import { AlertTitleProps } from "@mui/material/AlertTitle/index";
    import { AppBarProps } from "@mui/material/AppBar/index";
    import { AutocompleteProps } from "@mui/material/Autocomplete/index";
    import { AvatarProps } from "@mui/material/Avatar/index";
    import { AvatarGroupProps } from "@mui/material/AvatarGroup/index";
    import { BackdropProps } from "@mui/material/Backdrop/index";
    import { BadgeProps } from "@mui/material/Badge/index";
    import { BottomNavigationActionProps } from "@mui/material/BottomNavigationAction/index";
    import { BottomNavigationProps } from "@mui/material/BottomNavigation/index";
    import { BreadcrumbsProps } from "@mui/material/Breadcrumbs/index";
    import { ButtonBaseProps } from "@mui/material/ButtonBase/index";
    import { ButtonGroupProps } from "@mui/material/ButtonGroup/index";
    import { ButtonProps } from "@mui/material/Button/index";
    import { CardActionAreaProps } from "@mui/material/CardActionArea/index";
    import { CardActionsProps } from "@mui/material/CardActions/index";
    import { CardContentProps } from "@mui/material/CardContent/index";
    import { CardHeaderProps } from "@mui/material/CardHeader/index";
    import { CardMediaProps } from "@mui/material/CardMedia/index";
    import { CardProps } from "@mui/material/Card/index";
    import { CheckboxProps } from "@mui/material/Checkbox/index";
    import { ChipProps } from "@mui/material/Chip/index";
    import { CircularProgressProps } from "@mui/material/CircularProgress/index";
    import { CollapseProps } from "@mui/material/Collapse/index";
    import { ContainerProps } from "@mui/material/Container/index";
    import { CssBaselineProps } from "@mui/material/CssBaseline/index";
    import { DialogActionsProps } from "@mui/material/DialogActions/index";
    import { DialogContentProps } from "@mui/material/DialogContent/index";
    import { DialogContentTextProps } from "@mui/material/DialogContentText/index";
    import { DialogProps } from "@mui/material/Dialog/index";
    import { DialogTitleProps } from "@mui/material/DialogTitle/index";
    import { DividerProps } from "@mui/material/Divider/index";
    import { DrawerProps } from "@mui/material/Drawer/index";
    import { AccordionActionsProps } from "@mui/material/AccordionActions/index";
    import { AccordionDetailsProps } from "@mui/material/AccordionDetails/index";
    import { AccordionProps } from "@mui/material/Accordion/index";
    import { AccordionSummaryProps } from "@mui/material/AccordionSummary/index";
    import { FabProps } from "@mui/material/Fab/index";
    import { FilledInputProps } from "@mui/material/FilledInput/index";
    import { FormControlLabelProps } from "@mui/material/FormControlLabel/index";
    import { FormControlProps } from "@mui/material/FormControl/index";
    import { FormGroupProps } from "@mui/material/FormGroup/index";
    import { FormHelperTextProps } from "@mui/material/FormHelperText/index";
    import { FormLabelProps } from "@mui/material/FormLabel/index";
    import { GridProps } from "@mui/material/Grid/index";
    import { IconButtonProps } from "@mui/material/IconButton/index";
    import { IconProps } from "@mui/material/Icon/index";
    import { ImageListProps } from "@mui/material/ImageList/index";
    import { ImageListItemBarProps } from "@mui/material/ImageListItemBar/index";
    import { ImageListItemProps } from "@mui/material/ImageListItem/index";
    import { InputAdornmentProps } from "@mui/material/InputAdornment/index";
    import { InputBaseProps } from "@mui/material/InputBase/index";
    import { InputLabelProps } from "@mui/material/InputLabel/index";
    import { InputProps } from "@mui/material/Input/index";
    import { LinearProgressProps } from "@mui/material/LinearProgress/index";
    import { LinkProps } from "@mui/material/Link/index";
    import { ListItemAvatarProps } from "@mui/material/ListItemAvatar/index";
    import { ListItemIconProps } from "@mui/material/ListItemIcon/index";
    import { ListItemProps } from "@mui/material/ListItem/index";
    import { ListItemButtonProps } from "@mui/material/ListItemButton/index";
    import { ListItemSecondaryActionProps } from "@mui/material/ListItemSecondaryAction/index";
    import { ListItemTextProps } from "@mui/material/ListItemText/index";
    import { ListProps } from "@mui/material/List/index";
    import { ListSubheaderProps } from "@mui/material/ListSubheader/index";
    import { MenuItemProps } from "@mui/material/MenuItem/index";
    import { MenuListProps } from "@mui/material/MenuList/index";
    import { MenuProps } from "@mui/material/Menu/index";
    import { MobileStepperProps } from "@mui/material/MobileStepper/index";
    import { ModalProps } from "@mui/material/Modal/index";
    import { NativeSelectProps } from "@mui/material/NativeSelect/index";
    import { Options as useMediaQueryOptions } from "@mui/material/useMediaQuery/index";
    import { OutlinedInputProps } from "@mui/material/OutlinedInput/index";
    import { PaginationProps } from "@mui/material/Pagination/index";
    import { PaginationItemProps } from "@mui/material/PaginationItem/index";
    import { PaperProps } from "@mui/material/Paper/index";
    import { PopoverProps } from "@mui/material/Popover/index";
    import { RadioGroupProps } from "@mui/material/RadioGroup/index";
    import { RadioProps } from "@mui/material/Radio/index";
    import { RatingProps } from "@mui/material/Rating/index";
    import { ScopedCssBaselineProps } from "@mui/material/ScopedCssBaseline/index";
    import { SelectProps } from "@mui/material/Select/index";
    import { SkeletonProps } from "@mui/material/Skeleton/index";
    import { SliderProps } from "@mui/material/Slider/index";
    import { SnackbarContentProps } from "@mui/material/SnackbarContent/index";
    import { SnackbarProps } from "@mui/material/Snackbar/index";
    import { SpeedDialProps } from "@mui/material/SpeedDial/index";
    import { SpeedDialActionProps } from "@mui/material/SpeedDialAction/index";
    import { SpeedDialIconProps } from "@mui/material/SpeedDialIcon/index";
    import { StackProps } from "@mui/material/Stack/index";
    import { StepButtonProps } from "@mui/material/StepButton/index";
    import { StepConnectorProps } from "@mui/material/StepConnector/index";
    import { StepContentProps } from "@mui/material/StepContent/index";
    import { StepIconProps } from "@mui/material/StepIcon/index";
    import { StepLabelProps } from "@mui/material/StepLabel/index";
    import { StepperProps } from "@mui/material/Stepper/index";
    import { StepProps } from "@mui/material/Step/index";
    import { SvgIconProps } from "@mui/material/SvgIcon/index";
    import { SwipeableDrawerProps } from "@mui/material/SwipeableDrawer/index";
    import { SwitchProps } from "@mui/material/Switch/index";
    import { TableBodyProps } from "@mui/material/TableBody/index";
    import { TableCellProps } from "@mui/material/TableCell/index";
    import { TableContainerProps } from "@mui/material/TableContainer/index";
    import { TableHeadProps } from "@mui/material/TableHead/index";
    import { TablePaginationProps } from "@mui/material/TablePagination/index";
    import { TableProps } from "@mui/material/Table/index";
    import { TableRowProps } from "@mui/material/TableRow/index";
    import { TableSortLabelProps } from "@mui/material/TableSortLabel/index";
    import { TableFooterProps } from "@mui/material/TableFooter/index";
    import { TabProps } from "@mui/material/Tab/index";
    import { TabsProps } from "@mui/material/Tabs/index";
    import { TextFieldProps } from "@mui/material/TextField/index";
    import { ToggleButtonProps } from "@mui/material/ToggleButton/index";
    import { ToggleButtonGroupProps } from "@mui/material/ToggleButtonGroup/index";
    import { ToolbarProps } from "@mui/material/Toolbar/index";
    import { TooltipProps } from "@mui/material/Tooltip/index";
    import { TouchRippleProps } from "@mui/material/ButtonBase/TouchRipple";
    import { TypographyProps } from "@mui/material/Typography/index";
    export type ComponentsProps = {
        [Name in keyof ComponentsPropsList]?: Partial<ComponentsPropsList[Name]>;
    };
    export interface ComponentsPropsList {
        MuiAlert: AlertProps;
        MuiAlertTitle: AlertTitleProps;
        MuiAppBar: AppBarProps;
        MuiAutocomplete: AutocompleteProps<any, any, any, any>;
        MuiAvatar: AvatarProps;
        MuiAvatarGroup: AvatarGroupProps;
        MuiBackdrop: BackdropProps;
        MuiBadge: BadgeProps;
        MuiBottomNavigation: BottomNavigationProps;
        MuiBottomNavigationAction: BottomNavigationActionProps;
        MuiBreadcrumbs: BreadcrumbsProps;
        MuiButton: ButtonProps;
        MuiButtonBase: ButtonBaseProps;
        MuiButtonGroup: ButtonGroupProps;
        MuiCard: CardProps;
        MuiCardActionArea: CardActionAreaProps;
        MuiCardActions: CardActionsProps;
        MuiCardContent: CardContentProps;
        MuiCardHeader: CardHeaderProps;
        MuiCardMedia: CardMediaProps;
        MuiCheckbox: CheckboxProps;
        MuiChip: ChipProps;
        MuiCircularProgress: CircularProgressProps;
        MuiCollapse: CollapseProps;
        MuiContainer: ContainerProps;
        MuiCssBaseline: CssBaselineProps;
        MuiDialog: DialogProps;
        MuiDialogActions: DialogActionsProps;
        MuiDialogContent: DialogContentProps;
        MuiDialogContentText: DialogContentTextProps;
        MuiDialogTitle: DialogTitleProps;
        MuiDivider: DividerProps;
        MuiDrawer: DrawerProps;
        MuiAccordion: AccordionProps;
        MuiAccordionActions: AccordionActionsProps;
        MuiAccordionDetails: AccordionDetailsProps;
        MuiAccordionSummary: AccordionSummaryProps;
        MuiFab: FabProps;
        MuiFilledInput: FilledInputProps;
        MuiFormControl: FormControlProps;
        MuiFormControlLabel: FormControlLabelProps;
        MuiFormGroup: FormGroupProps;
        MuiFormHelperText: FormHelperTextProps;
        MuiFormLabel: FormLabelProps;
        MuiGrid: GridProps;
        MuiImageList: ImageListProps;
        MuiImageListItem: ImageListItemProps;
        MuiImageListItemBar: ImageListItemBarProps;
        MuiIcon: IconProps;
        MuiIconButton: IconButtonProps;
        MuiInput: InputProps;
        MuiInputAdornment: InputAdornmentProps;
        MuiInputBase: InputBaseProps;
        MuiInputLabel: InputLabelProps;
        MuiLinearProgress: LinearProgressProps;
        MuiLink: LinkProps;
        MuiList: ListProps;
        MuiListItem: ListItemProps;
        MuiListItemButton: ListItemButtonProps;
        MuiListItemAvatar: ListItemAvatarProps;
        MuiListItemIcon: ListItemIconProps;
        MuiListItemSecondaryAction: ListItemSecondaryActionProps;
        MuiListItemText: ListItemTextProps;
        MuiListSubheader: ListSubheaderProps;
        MuiMenu: MenuProps;
        MuiMenuItem: MenuItemProps;
        MuiMenuList: MenuListProps;
        MuiMobileStepper: MobileStepperProps;
        MuiModal: ModalProps;
        MuiNativeSelect: NativeSelectProps;
        MuiOutlinedInput: OutlinedInputProps;
        MuiPagination: PaginationProps;
        MuiPaginationItem: PaginationItemProps;
        MuiPaper: PaperProps;
        MuiPopover: PopoverProps;
        MuiRadio: RadioProps;
        MuiRadioGroup: RadioGroupProps;
        MuiRating: RatingProps;
        MuiScopedCssBaseline: ScopedCssBaselineProps;
        MuiSelect: SelectProps;
        MuiSkeleton: SkeletonProps;
        MuiSlider: SliderProps;
        MuiSnackbar: SnackbarProps;
        MuiSnackbarContent: SnackbarContentProps;
        MuiSpeedDial: SpeedDialProps;
        MuiSpeedDialAction: SpeedDialActionProps;
        MuiSpeedDialIcon: SpeedDialIconProps;
        MuiStack: StackProps;
        MuiStep: StepProps;
        MuiStepButton: StepButtonProps;
        MuiStepConnector: StepConnectorProps;
        MuiStepContent: StepContentProps;
        MuiStepIcon: StepIconProps;
        MuiStepLabel: StepLabelProps;
        MuiStepper: StepperProps;
        MuiSvgIcon: SvgIconProps;
        MuiSwipeableDrawer: SwipeableDrawerProps;
        MuiSwitch: SwitchProps;
        MuiTab: TabProps;
        MuiTable: TableProps;
        MuiTableBody: TableBodyProps;
        MuiTableCell: TableCellProps;
        MuiTableContainer: TableContainerProps;
        MuiTableFooter: TableFooterProps;
        MuiTableHead: TableHeadProps;
        MuiTablePagination: TablePaginationProps;
        MuiTableRow: TableRowProps;
        MuiTableSortLabel: TableSortLabelProps;
        MuiTabs: TabsProps;
        MuiTextField: TextFieldProps;
        MuiToggleButton: ToggleButtonProps;
        MuiToggleButtonGroup: ToggleButtonGroupProps;
        MuiToolbar: ToolbarProps;
        MuiTooltip: TooltipProps;
        MuiTouchRipple: TouchRippleProps;
        MuiTypography: TypographyProps;
        MuiUseMediaQuery: useMediaQueryOptions;
    }
}
declare module "@mui/material/styles/overrides" {
    import { CSSObject, CSSInterpolation } from "@mui/system/index";
    import { ComponentsPropsList } from "@mui/material/styles/props";
    import { AccordionActionsClassKey } from "@mui/material/AccordionActions/index";
    import { AccordionClassKey } from "@mui/material/Accordion/index";
    import { AccordionDetailsClassKey } from "@mui/material/AccordionDetails/index";
    import { AccordionSummaryClassKey } from "@mui/material/AccordionSummary/index";
    import { AlertClassKey } from "@mui/material/Alert/index";
    import { AlertTitleClassKey } from "@mui/material/AlertTitle/index";
    import { AppBarClassKey } from "@mui/material/AppBar/index";
    import { AutocompleteClassKey } from "@mui/material/Autocomplete/index";
    import { AvatarClassKey } from "@mui/material/Avatar/index";
    import { AvatarGroupClassKey } from "@mui/material/AvatarGroup/index";
    import { BackdropClassKey } from "@mui/material/Backdrop/index";
    import { BadgeClassKey } from "@mui/material/Badge/index";
    import { BottomNavigationActionClassKey } from "@mui/material/BottomNavigationAction/index";
    import { BottomNavigationClassKey } from "@mui/material/BottomNavigation/index";
    import { BreadcrumbsClassKey } from "@mui/material/Breadcrumbs/index";
    import { ButtonBaseClassKey } from "@mui/material/ButtonBase/index";
    import { ButtonClassKey } from "@mui/material/Button/index";
    import { ButtonGroupClassKey } from "@mui/material/ButtonGroup/index";
    import { CardActionAreaClassKey } from "@mui/material/CardActionArea/index";
    import { CardActionsClassKey } from "@mui/material/CardActions/index";
    import { CardClassKey } from "@mui/material/Card/index";
    import { CardContentClassKey } from "@mui/material/CardContent/index";
    import { CardHeaderClassKey } from "@mui/material/CardHeader/index";
    import { CardMediaClassKey } from "@mui/material/CardMedia/index";
    import { CheckboxClassKey } from "@mui/material/Checkbox/index";
    import { ChipClassKey } from "@mui/material/Chip/index";
    import { CircularProgressClassKey } from "@mui/material/CircularProgress/index";
    import { CollapseClassKey } from "@mui/material/Collapse/index";
    import { ContainerClassKey } from "@mui/material/Container/index";
    import { DialogActionsClassKey } from "@mui/material/DialogActions/index";
    import { DialogClassKey } from "@mui/material/Dialog/index";
    import { DialogContentClassKey } from "@mui/material/DialogContent/index";
    import { DialogContentTextClassKey } from "@mui/material/DialogContentText/index";
    import { DialogTitleClassKey } from "@mui/material/DialogTitle/index";
    import { DividerClassKey } from "@mui/material/Divider/index";
    import { DrawerClassKey } from "@mui/material/Drawer/index";
    import { FabClassKey } from "@mui/material/Fab/index";
    import { FilledInputClassKey } from "@mui/material/FilledInput/index";
    import { FormControlClassKey } from "@mui/material/FormControl/index";
    import { FormControlLabelClassKey } from "@mui/material/FormControlLabel/index";
    import { FormGroupClassKey } from "@mui/material/FormGroup/index";
    import { FormHelperTextClassKey } from "@mui/material/FormHelperText/index";
    import { FormLabelClassKey } from "@mui/material/FormLabel/index";
    import { GridClassKey } from "@mui/material/Grid/index";
    import { IconButtonClassKey } from "@mui/material/IconButton/index";
    import { IconClassKey } from "@mui/material/Icon/index";
    import { ImageListClassKey } from "@mui/material/ImageList/index";
    import { ImageListItemBarClassKey } from "@mui/material/ImageListItemBar/index";
    import { ImageListItemClassKey } from "@mui/material/ImageListItem/index";
    import { InputAdornmentClassKey } from "@mui/material/InputAdornment/index";
    import { InputBaseClassKey } from "@mui/material/InputBase/index";
    import { InputClassKey } from "@mui/material/Input/index";
    import { InputLabelClassKey } from "@mui/material/InputLabel/index";
    import { LinearProgressClassKey } from "@mui/material/LinearProgress/index";
    import { LinkClassKey } from "@mui/material/Link/index";
    import { ListClassKey } from "@mui/material/List/index";
    import { ListItemAvatarClassKey } from "@mui/material/ListItemAvatar/index";
    import { ListItemClassKey } from "@mui/material/ListItem/index";
    import { ListItemButtonClassKey } from "@mui/material/ListItemButton/index";
    import { ListItemIconClassKey } from "@mui/material/ListItemIcon/index";
    import { ListItemSecondaryActionClassKey } from "@mui/material/ListItemSecondaryAction/index";
    import { ListItemTextClassKey } from "@mui/material/ListItemText/index";
    import { ListSubheaderClassKey } from "@mui/material/ListSubheader/index";
    import { MenuClassKey } from "@mui/material/Menu/index";
    import { MenuItemClassKey } from "@mui/material/MenuItem/index";
    import { MobileStepperClassKey } from "@mui/material/MobileStepper/index";
    import { ModalClassKey } from "@mui/material/Modal/index";
    import { NativeSelectClassKey } from "@mui/material/NativeSelect/index";
    import { OutlinedInputClassKey } from "@mui/material/OutlinedInput/index";
    import { PaginationClassKey } from "@mui/material/Pagination/index";
    import { PaginationItemClassKey } from "@mui/material/PaginationItem/index";
    import { PaperClassKey } from "@mui/material/Paper/index";
    import { PopoverClassKey } from "@mui/material/Popover/index";
    import { RadioClassKey } from "@mui/material/Radio/index";
    import { RatingClassKey } from "@mui/material/Rating/index";
    import { ScopedCssBaselineClassKey } from "@mui/material/ScopedCssBaseline/index";
    import { SelectClassKey } from "@mui/material/Select/index";
    import { SkeletonClassKey } from "@mui/material/Skeleton/index";
    import { SliderClassKey } from "@mui/material/Slider/index";
    import { SnackbarClassKey } from "@mui/material/Snackbar/index";
    import { SnackbarContentClassKey } from "@mui/material/SnackbarContent/index";
    import { SpeedDialClassKey } from "@mui/material/SpeedDial/index";
    import { SpeedDialActionClassKey } from "@mui/material/SpeedDialAction/index";
    import { SpeedDialIconClassKey } from "@mui/material/SpeedDialIcon/index";
    import { StepButtonClasskey } from "@mui/material/StepButton/index";
    import { StepClasskey } from "@mui/material/Step/index";
    import { StepConnectorClasskey } from "@mui/material/StepConnector/index";
    import { StepContentClasskey } from "@mui/material/StepContent/index";
    import { StepIconClasskey } from "@mui/material/StepIcon/index";
    import { StepLabelClasskey } from "@mui/material/StepLabel/index";
    import { StepperClasskey } from "@mui/material/Stepper/index";
    import { SvgIconClassKey } from "@mui/material/SvgIcon/index";
    import { SwitchClassKey } from "@mui/material/Switch/index";
    import { TabClassKey } from "@mui/material/Tab/index";
    import { TableBodyClassKey } from "@mui/material/TableBody/index";
    import { TableCellClassKey } from "@mui/material/TableCell/index";
    import { TableClassKey } from "@mui/material/Table/index";
    import { TableContainerClassKey } from "@mui/material/TableContainer/index";
    import { TableFooterClassKey } from "@mui/material/TableFooter/index";
    import { TableHeadClassKey } from "@mui/material/TableHead/index";
    import { TablePaginationClassKey } from "@mui/material/TablePagination/index";
    import { TableRowClassKey } from "@mui/material/TableRow/index";
    import { TableSortLabelClassKey } from "@mui/material/TableSortLabel/index";
    import { TabsClassKey } from "@mui/material/Tabs/index";
    import { TextFieldClassKey } from "@mui/material/TextField/index";
    import { ToggleButtonClassKey } from "@mui/material/ToggleButton/index";
    import { ToggleButtonGroupClassKey } from "@mui/material/ToggleButtonGroup/index";
    import { ToolbarClassKey } from "@mui/material/Toolbar/index";
    import { TooltipClassKey } from "@mui/material/Tooltip/index";
    import { TouchRippleClassKey } from "@mui/material/ButtonBase/TouchRipple";
    import { TypographyClassKey } from "@mui/material/Typography/index";
    export type OverridesStyleRules<ClassKey extends string = string, ComponentName = keyof ComponentsPropsList, Theme = unknown> = Record<ClassKey, CSSInterpolation | ((props: (ComponentName extends keyof ComponentsPropsList ? {
        ownerState: ComponentsPropsList[ComponentName] & Record<string, unknown>;
    } : {}) & {
        theme: Theme;
    } & Record<string, unknown>) => CSSInterpolation)>;
    export type ComponentsOverrides<Theme = unknown> = {
        [Name in keyof ComponentNameToClassKey]?: Partial<OverridesStyleRules<ComponentNameToClassKey[Name], Name, Theme>>;
    } & {
        MuiCssBaseline?: CSSObject | string;
    };
    export interface ComponentNameToClassKey {
        MuiAlert: AlertClassKey;
        MuiAlertTitle: AlertTitleClassKey;
        MuiAppBar: AppBarClassKey;
        MuiAutocomplete: AutocompleteClassKey;
        MuiAvatar: AvatarClassKey;
        MuiAvatarGroup: AvatarGroupClassKey;
        MuiBackdrop: BackdropClassKey;
        MuiBadge: BadgeClassKey;
        MuiBottomNavigation: BottomNavigationClassKey;
        MuiBottomNavigationAction: BottomNavigationActionClassKey;
        MuiBreadcrumbs: BreadcrumbsClassKey;
        MuiButton: ButtonClassKey;
        MuiButtonBase: ButtonBaseClassKey;
        MuiButtonGroup: ButtonGroupClassKey;
        MuiCard: CardClassKey;
        MuiCardActionArea: CardActionAreaClassKey;
        MuiCardActions: CardActionsClassKey;
        MuiCardContent: CardContentClassKey;
        MuiCardHeader: CardHeaderClassKey;
        MuiCardMedia: CardMediaClassKey;
        MuiCheckbox: CheckboxClassKey;
        MuiChip: ChipClassKey;
        MuiCircularProgress: CircularProgressClassKey;
        MuiCollapse: CollapseClassKey;
        MuiContainer: ContainerClassKey;
        MuiDialog: DialogClassKey;
        MuiDialogActions: DialogActionsClassKey;
        MuiDialogContent: DialogContentClassKey;
        MuiDialogContentText: DialogContentTextClassKey;
        MuiDialogTitle: DialogTitleClassKey;
        MuiDivider: DividerClassKey;
        MuiDrawer: DrawerClassKey;
        MuiAccordion: AccordionClassKey;
        MuiAccordionActions: AccordionActionsClassKey;
        MuiAccordionDetails: AccordionDetailsClassKey;
        MuiAccordionSummary: AccordionSummaryClassKey;
        MuiFab: FabClassKey;
        MuiFilledInput: FilledInputClassKey;
        MuiFormControl: FormControlClassKey;
        MuiFormControlLabel: FormControlLabelClassKey;
        MuiFormGroup: FormGroupClassKey;
        MuiFormHelperText: FormHelperTextClassKey;
        MuiFormLabel: FormLabelClassKey;
        MuiGrid: GridClassKey;
        MuiIcon: IconClassKey;
        MuiIconButton: IconButtonClassKey;
        MuiImageList: ImageListClassKey;
        MuiImageListItem: ImageListItemClassKey;
        MuiImageListItemBar: ImageListItemBarClassKey;
        MuiInput: InputClassKey;
        MuiInputAdornment: InputAdornmentClassKey;
        MuiInputBase: InputBaseClassKey;
        MuiInputLabel: InputLabelClassKey;
        MuiLinearProgress: LinearProgressClassKey;
        MuiLink: LinkClassKey;
        MuiList: ListClassKey;
        MuiListItem: ListItemClassKey;
        MuiListItemButton: ListItemButtonClassKey;
        MuiListItemAvatar: ListItemAvatarClassKey;
        MuiListItemIcon: ListItemIconClassKey;
        MuiListItemSecondaryAction: ListItemSecondaryActionClassKey;
        MuiListItemText: ListItemTextClassKey;
        MuiListSubheader: ListSubheaderClassKey;
        MuiMenu: MenuClassKey;
        MuiMenuItem: MenuItemClassKey;
        MuiMobileStepper: MobileStepperClassKey;
        MuiModal: ModalClassKey;
        MuiNativeSelect: NativeSelectClassKey;
        MuiOutlinedInput: OutlinedInputClassKey;
        MuiPagination: PaginationClassKey;
        MuiPaginationItem: PaginationItemClassKey;
        MuiPaper: PaperClassKey;
        MuiPopover: PopoverClassKey;
        MuiRadio: RadioClassKey;
        MuiRating: RatingClassKey;
        MuiScopedCssBaseline: ScopedCssBaselineClassKey;
        MuiSelect: SelectClassKey;
        MuiSkeleton: SkeletonClassKey;
        MuiSlider: SliderClassKey;
        MuiSnackbar: SnackbarClassKey;
        MuiSnackbarContent: SnackbarContentClassKey;
        MuiSpeedDial: SpeedDialClassKey;
        MuiSpeedDialAction: SpeedDialActionClassKey;
        MuiSpeedDialIcon: SpeedDialIconClassKey;
        MuiStep: StepClasskey;
        MuiStepButton: StepButtonClasskey;
        MuiStepConnector: StepConnectorClasskey;
        MuiStepContent: StepContentClasskey;
        MuiStepIcon: StepIconClasskey;
        MuiStepLabel: StepLabelClasskey;
        MuiStepper: StepperClasskey;
        MuiSvgIcon: SvgIconClassKey;
        MuiSwitch: SwitchClassKey;
        MuiTab: TabClassKey;
        MuiTable: TableClassKey;
        MuiTableBody: TableBodyClassKey;
        MuiTableCell: TableCellClassKey;
        MuiTableContainer: TableContainerClassKey;
        MuiTableFooter: TableFooterClassKey;
        MuiTableHead: TableHeadClassKey;
        MuiTablePagination: TablePaginationClassKey;
        MuiTableRow: TableRowClassKey;
        MuiTableSortLabel: TableSortLabelClassKey;
        MuiTabs: TabsClassKey;
        MuiTextField: TextFieldClassKey;
        MuiToggleButton: ToggleButtonClassKey;
        MuiToggleButtonGroup: ToggleButtonGroupClassKey;
        MuiToolbar: ToolbarClassKey;
        MuiTooltip: TooltipClassKey;
        MuiTouchRipple: TouchRippleClassKey;
        MuiTypography: TypographyClassKey;
    }
}
declare module "@mui/material/styles/variants" {
    import { Interpolation } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/createTheme";
    import { ComponentsPropsList } from "@mui/material/styles/props";
    export type ComponentsVariants = {
        [Name in keyof ComponentsPropsList]?: Array<{
            props: Partial<ComponentsPropsList[Name]>;
            style: Interpolation<{
                theme: Theme;
            }>;
        }>;
    };
}
declare module "@mui/material/styles/components" {
    import { ComponentsProps } from "@mui/material/styles/props";
    import { ComponentsOverrides } from "@mui/material/styles/overrides";
    import { ComponentsVariants } from "@mui/material/styles/variants";
    export interface Components<Theme = unknown> {
        MuiAlert?: {
            defaultProps?: ComponentsProps['MuiAlert'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAlert'];
            variants?: ComponentsVariants['MuiAlert'];
        };
        MuiAlertTitle?: {
            defaultProps?: ComponentsProps['MuiAlertTitle'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAlertTitle'];
            variants?: ComponentsVariants['MuiAlertTitle'];
        };
        MuiAppBar?: {
            defaultProps?: ComponentsProps['MuiAppBar'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAppBar'];
            variants?: ComponentsVariants['MuiAppBar'];
        };
        MuiAutocomplete?: {
            defaultProps?: ComponentsProps['MuiAutocomplete'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAutocomplete'];
            variants?: ComponentsVariants['MuiAutocomplete'];
        };
        MuiAvatar?: {
            defaultProps?: ComponentsProps['MuiAvatar'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAvatar'];
            variants?: ComponentsVariants['MuiAvatar'];
        };
        MuiAvatarGroup?: {
            defaultProps?: ComponentsProps['MuiAvatarGroup'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAvatarGroup'];
            variants?: ComponentsVariants['MuiAvatarGroup'];
        };
        MuiBackdrop?: {
            defaultProps?: ComponentsProps['MuiBackdrop'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiBackdrop'];
            variants?: ComponentsVariants['MuiBackdrop'];
        };
        MuiBadge?: {
            defaultProps?: ComponentsProps['MuiBadge'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiBadge'];
            variants?: ComponentsVariants['MuiBadge'];
        };
        MuiBottomNavigation?: {
            defaultProps?: ComponentsProps['MuiBottomNavigation'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiBottomNavigation'];
            variants?: ComponentsVariants['MuiBottomNavigation'];
        };
        MuiBottomNavigationAction?: {
            defaultProps?: ComponentsProps['MuiBottomNavigationAction'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiBottomNavigationAction'];
            variants?: ComponentsVariants['MuiBottomNavigationAction'];
        };
        MuiBreadcrumbs?: {
            defaultProps?: ComponentsProps['MuiBreadcrumbs'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiBreadcrumbs'];
            variants?: ComponentsVariants['MuiBreadcrumbs'];
        };
        MuiButton?: {
            defaultProps?: ComponentsProps['MuiButton'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiButton'];
            variants?: ComponentsVariants['MuiButton'];
        };
        MuiButtonBase?: {
            defaultProps?: ComponentsProps['MuiButtonBase'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiButtonBase'];
            variants?: ComponentsVariants['MuiButtonBase'];
        };
        MuiButtonGroup?: {
            defaultProps?: ComponentsProps['MuiButtonGroup'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiButtonGroup'];
            variants?: ComponentsVariants['MuiButtonGroup'];
        };
        MuiCard?: {
            defaultProps?: ComponentsProps['MuiCard'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCard'];
            variants?: ComponentsVariants['MuiCard'];
        };
        MuiCardActionArea?: {
            defaultProps?: ComponentsProps['MuiCardActionArea'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCardActionArea'];
            variants?: ComponentsVariants['MuiCardActionArea'];
        };
        MuiCardActions?: {
            defaultProps?: ComponentsProps['MuiCardActions'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCardActions'];
            variants?: ComponentsVariants['MuiCardActions'];
        };
        MuiCardContent?: {
            defaultProps?: ComponentsProps['MuiCardContent'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCardContent'];
            variants?: ComponentsVariants['MuiCardContent'];
        };
        MuiCardHeader?: {
            defaultProps?: ComponentsProps['MuiCardHeader'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCardHeader'];
            variants?: ComponentsVariants['MuiCardHeader'];
        };
        MuiCardMedia?: {
            defaultProps?: ComponentsProps['MuiCardMedia'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCardMedia'];
            variants?: ComponentsVariants['MuiCardMedia'];
        };
        MuiCheckbox?: {
            defaultProps?: ComponentsProps['MuiCheckbox'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCheckbox'];
            variants?: ComponentsVariants['MuiCheckbox'];
        };
        MuiChip?: {
            defaultProps?: ComponentsProps['MuiChip'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiChip'];
            variants?: ComponentsVariants['MuiChip'];
        };
        MuiCircularProgress?: {
            defaultProps?: ComponentsProps['MuiCircularProgress'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCircularProgress'];
            variants?: ComponentsVariants['MuiCircularProgress'];
        };
        MuiCollapse?: {
            defaultProps?: ComponentsProps['MuiCollapse'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCollapse'];
            variants?: ComponentsVariants['MuiCollapse'];
        };
        MuiContainer?: {
            defaultProps?: ComponentsProps['MuiContainer'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiContainer'];
            variants?: ComponentsVariants['MuiContainer'];
        };
        MuiCssBaseline?: {
            defaultProps?: ComponentsProps['MuiCssBaseline'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiCssBaseline'];
            variants?: ComponentsVariants['MuiCssBaseline'];
        };
        MuiDialog?: {
            defaultProps?: ComponentsProps['MuiDialog'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDialog'];
            variants?: ComponentsVariants['MuiDialog'];
        };
        MuiDialogActions?: {
            defaultProps?: ComponentsProps['MuiDialogActions'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDialogActions'];
            variants?: ComponentsVariants['MuiDialogActions'];
        };
        MuiDialogContent?: {
            defaultProps?: ComponentsProps['MuiDialogContent'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDialogContent'];
            variants?: ComponentsVariants['MuiDialogContent'];
        };
        MuiDialogContentText?: {
            defaultProps?: ComponentsProps['MuiDialogContentText'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDialogContentText'];
            variants?: ComponentsVariants['MuiDialogContentText'];
        };
        MuiDialogTitle?: {
            defaultProps?: ComponentsProps['MuiDialogTitle'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDialogTitle'];
            variants?: ComponentsVariants['MuiDialogTitle'];
        };
        MuiDivider?: {
            defaultProps?: ComponentsProps['MuiDivider'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDivider'];
            variants?: ComponentsVariants['MuiDivider'];
        };
        MuiDrawer?: {
            defaultProps?: ComponentsProps['MuiDrawer'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiDrawer'];
            variants?: ComponentsVariants['MuiDrawer'];
        };
        MuiAccordion?: {
            defaultProps?: ComponentsProps['MuiAccordion'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAccordion'];
            variants?: ComponentsVariants['MuiAccordion'];
        };
        MuiAccordionActions?: {
            defaultProps?: ComponentsProps['MuiAccordionActions'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAccordionActions'];
            variants?: ComponentsVariants['MuiAccordionActions'];
        };
        MuiAccordionDetails?: {
            defaultProps?: ComponentsProps['MuiAccordionDetails'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAccordionDetails'];
            variants?: ComponentsVariants['MuiAccordionDetails'];
        };
        MuiAccordionSummary?: {
            defaultProps?: ComponentsProps['MuiAccordionSummary'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiAccordionSummary'];
            variants?: ComponentsVariants['MuiAccordionSummary'];
        };
        MuiFab?: {
            defaultProps?: ComponentsProps['MuiFab'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFab'];
            variants?: ComponentsVariants['MuiFab'];
        };
        MuiFilledInput?: {
            defaultProps?: ComponentsProps['MuiFilledInput'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFilledInput'];
            variants?: ComponentsVariants['MuiFilledInput'];
        };
        MuiFormControl?: {
            defaultProps?: ComponentsProps['MuiFormControl'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFormControl'];
            variants?: ComponentsVariants['MuiFormControl'];
        };
        MuiFormControlLabel?: {
            defaultProps?: ComponentsProps['MuiFormControlLabel'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFormControlLabel'];
            variants?: ComponentsVariants['MuiFormControlLabel'];
        };
        MuiFormGroup?: {
            defaultProps?: ComponentsProps['MuiFormGroup'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFormGroup'];
            variants?: ComponentsVariants['MuiFormGroup'];
        };
        MuiFormHelperText?: {
            defaultProps?: ComponentsProps['MuiFormHelperText'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFormHelperText'];
            variants?: ComponentsVariants['MuiFormHelperText'];
        };
        MuiFormLabel?: {
            defaultProps?: ComponentsProps['MuiFormLabel'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiFormLabel'];
            variants?: ComponentsVariants['MuiFormLabel'];
        };
        MuiGrid?: {
            defaultProps?: ComponentsProps['MuiGrid'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiGrid'];
            variants?: ComponentsVariants['MuiGrid'];
        };
        MuiImageList?: {
            defaultProps?: ComponentsProps['MuiImageList'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiImageList'];
            variants?: ComponentsVariants['MuiImageList'];
        };
        MuiImageListItem?: {
            defaultProps?: ComponentsProps['MuiImageListItem'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiImageListItem'];
            variants?: ComponentsVariants['MuiImageListItem'];
        };
        MuiImageListItemBar?: {
            defaultProps?: ComponentsProps['MuiImageListItemBar'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiImageListItemBar'];
            variants?: ComponentsVariants['MuiImageListItemBar'];
        };
        MuiIcon?: {
            defaultProps?: ComponentsProps['MuiIcon'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiIcon'];
            variants?: ComponentsVariants['MuiIcon'];
        };
        MuiIconButton?: {
            defaultProps?: ComponentsProps['MuiIconButton'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiIconButton'];
            variants?: ComponentsVariants['MuiIconButton'];
        };
        MuiInput?: {
            defaultProps?: ComponentsProps['MuiInput'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiInput'];
            variants?: ComponentsVariants['MuiInput'];
        };
        MuiInputAdornment?: {
            defaultProps?: ComponentsProps['MuiInputAdornment'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiInputAdornment'];
            variants?: ComponentsVariants['MuiInputAdornment'];
        };
        MuiInputBase?: {
            defaultProps?: ComponentsProps['MuiInputBase'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiInputBase'];
            variants?: ComponentsVariants['MuiInputBase'];
        };
        MuiInputLabel?: {
            defaultProps?: ComponentsProps['MuiInputLabel'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiInputLabel'];
            variants?: ComponentsVariants['MuiInputLabel'];
        };
        MuiLinearProgress?: {
            defaultProps?: ComponentsProps['MuiLinearProgress'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiLinearProgress'];
            variants?: ComponentsVariants['MuiLinearProgress'];
        };
        MuiLink?: {
            defaultProps?: ComponentsProps['MuiLink'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiLink'];
            variants?: ComponentsVariants['MuiLink'];
        };
        MuiList?: {
            defaultProps?: ComponentsProps['MuiList'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiList'];
            variants?: ComponentsVariants['MuiList'];
        };
        MuiListItem?: {
            defaultProps?: ComponentsProps['MuiListItem'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListItem'];
            variants?: ComponentsVariants['MuiListItem'];
        };
        MuiListItemButton?: {
            defaultProps?: ComponentsProps['MuiListItemButton'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListItemButton'];
            variants?: ComponentsVariants['MuiListItemButton'];
        };
        MuiListItemAvatar?: {
            defaultProps?: ComponentsProps['MuiListItemAvatar'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListItemAvatar'];
            variants?: ComponentsVariants['MuiListItemAvatar'];
        };
        MuiListItemIcon?: {
            defaultProps?: ComponentsProps['MuiListItemIcon'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListItemIcon'];
            variants?: ComponentsVariants['MuiListItemIcon'];
        };
        MuiListItemSecondaryAction?: {
            defaultProps?: ComponentsProps['MuiListItemSecondaryAction'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListItemSecondaryAction'];
            variants?: ComponentsVariants['MuiListItemSecondaryAction'];
        };
        MuiListItemText?: {
            defaultProps?: ComponentsProps['MuiListItemText'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListItemText'];
            variants?: ComponentsVariants['MuiListItemText'];
        };
        MuiListSubheader?: {
            defaultProps?: ComponentsProps['MuiListSubheader'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiListSubheader'];
            variants?: ComponentsVariants['MuiListSubheader'];
        };
        MuiMenu?: {
            defaultProps?: ComponentsProps['MuiMenu'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiMenu'];
            variants?: ComponentsVariants['MuiMenu'];
        };
        MuiMenuItem?: {
            defaultProps?: ComponentsProps['MuiMenuItem'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiMenuItem'];
            variants?: ComponentsVariants['MuiMenuItem'];
        };
        MuiMobileStepper?: {
            defaultProps?: ComponentsProps['MuiMobileStepper'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiMobileStepper'];
            variants?: ComponentsVariants['MuiMobileStepper'];
        };
        MuiModal?: {
            defaultProps?: ComponentsProps['MuiModal'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiModal'];
            variants?: ComponentsVariants['MuiModal'];
        };
        MuiNativeSelect?: {
            defaultProps?: ComponentsProps['MuiNativeSelect'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiNativeSelect'];
            variants?: ComponentsVariants['MuiNativeSelect'];
        };
        MuiOutlinedInput?: {
            defaultProps?: ComponentsProps['MuiOutlinedInput'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiOutlinedInput'];
            variants?: ComponentsVariants['MuiOutlinedInput'];
        };
        MuiPagination?: {
            defaultProps?: ComponentsProps['MuiPagination'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiPagination'];
            variants?: ComponentsVariants['MuiPagination'];
        };
        MuiPaginationItem?: {
            defaultProps?: ComponentsProps['MuiPaginationItem'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiPaginationItem'];
            variants?: ComponentsVariants['MuiPaginationItem'];
        };
        MuiPaper?: {
            defaultProps?: ComponentsProps['MuiPaper'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiPaper'];
            variants?: ComponentsVariants['MuiPaper'];
        };
        MuiPopover?: {
            defaultProps?: ComponentsProps['MuiPopover'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiPopover'];
            variants?: ComponentsVariants['MuiPopover'];
        };
        MuiRadio?: {
            defaultProps?: ComponentsProps['MuiRadio'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiRadio'];
            variants?: ComponentsVariants['MuiRadio'];
        };
        MuiRating?: {
            defaultProps?: ComponentsProps['MuiRating'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiRating'];
            variants?: ComponentsVariants['MuiRating'];
        };
        MuiScopedCssBaseline?: {
            defaultProps?: ComponentsProps['MuiScopedCssBaseline'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiScopedCssBaseline'];
            variants?: ComponentsVariants['MuiScopedCssBaseline'];
        };
        MuiSelect?: {
            defaultProps?: ComponentsProps['MuiSelect'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSelect'];
            variants?: ComponentsVariants['MuiSelect'];
        };
        MuiSkeleton?: {
            defaultProps?: ComponentsProps['MuiSkeleton'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSkeleton'];
            variants?: ComponentsVariants['MuiSkeleton'];
        };
        MuiSlider?: {
            defaultProps?: ComponentsProps['MuiSlider'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSlider'];
            variants?: ComponentsVariants['MuiSlider'];
        };
        MuiSnackbar?: {
            defaultProps?: ComponentsProps['MuiSnackbar'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSnackbar'];
            variants?: ComponentsVariants['MuiSnackbar'];
        };
        MuiSnackbarContent?: {
            defaultProps?: ComponentsProps['MuiSnackbarContent'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSnackbarContent'];
            variants?: ComponentsVariants['MuiSnackbarContent'];
        };
        MuiSpeedDial?: {
            defaultProps?: ComponentsProps['MuiSpeedDial'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSpeedDial'];
            variants?: ComponentsVariants['MuiSpeedDial'];
        };
        MuiSpeedDialAction?: {
            defaultProps?: ComponentsProps['MuiSpeedDialAction'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSpeedDialAction'];
            variants?: ComponentsVariants['MuiSpeedDialAction'];
        };
        MuiSpeedDialIcon?: {
            defaultProps?: ComponentsProps['MuiSpeedDialIcon'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSpeedDialIcon'];
            variants?: ComponentsVariants['MuiSpeedDialIcon'];
        };
        MuiStack?: {
            defaultProps?: ComponentsProps['MuiStack'];
            variants?: ComponentsVariants['MuiStack'];
        };
        MuiStep?: {
            defaultProps?: ComponentsProps['MuiStep'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStep'];
            variants?: ComponentsVariants['MuiStep'];
        };
        MuiStepButton?: {
            defaultProps?: ComponentsProps['MuiStepButton'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStepButton'];
            variants?: ComponentsVariants['MuiStepButton'];
        };
        MuiStepConnector?: {
            defaultProps?: ComponentsProps['MuiStepConnector'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStepConnector'];
            variants?: ComponentsVariants['MuiStepConnector'];
        };
        MuiStepContent?: {
            defaultProps?: ComponentsProps['MuiStepContent'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStepContent'];
            variants?: ComponentsVariants['MuiStepContent'];
        };
        MuiStepIcon?: {
            defaultProps?: ComponentsProps['MuiStepIcon'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStepIcon'];
            variants?: ComponentsVariants['MuiStepIcon'];
        };
        MuiStepLabel?: {
            defaultProps?: ComponentsProps['MuiStepLabel'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStepLabel'];
            variants?: ComponentsVariants['MuiStepLabel'];
        };
        MuiStepper?: {
            defaultProps?: ComponentsProps['MuiStepper'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiStepper'];
            variants?: ComponentsVariants['MuiStepper'];
        };
        MuiSvgIcon?: {
            defaultProps?: ComponentsProps['MuiSvgIcon'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSvgIcon'];
            variants?: ComponentsVariants['MuiSvgIcon'];
        };
        MuiSwitch?: {
            defaultProps?: ComponentsProps['MuiSwitch'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiSwitch'];
            variants?: ComponentsVariants['MuiSwitch'];
        };
        MuiTab?: {
            defaultProps?: ComponentsProps['MuiTab'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTab'];
            variants?: ComponentsVariants['MuiTab'];
        };
        MuiTable?: {
            defaultProps?: ComponentsProps['MuiTable'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTable'];
            variants?: ComponentsVariants['MuiTable'];
        };
        MuiTableBody?: {
            defaultProps?: ComponentsProps['MuiTableBody'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableBody'];
            variants?: ComponentsVariants['MuiTableBody'];
        };
        MuiTableCell?: {
            defaultProps?: ComponentsProps['MuiTableCell'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableCell'];
            variants?: ComponentsVariants['MuiTableCell'];
        };
        MuiTableContainer?: {
            defaultProps?: ComponentsProps['MuiTableContainer'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableContainer'];
            variants?: ComponentsVariants['MuiTableContainer'];
        };
        MuiTableFooter?: {
            defaultProps?: ComponentsProps['MuiTableFooter'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableFooter'];
            variants?: ComponentsVariants['MuiTableFooter'];
        };
        MuiTableHead?: {
            defaultProps?: ComponentsProps['MuiTableHead'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableHead'];
            variants?: ComponentsVariants['MuiTableHead'];
        };
        MuiTablePagination?: {
            defaultProps?: ComponentsProps['MuiTablePagination'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTablePagination'];
            variants?: ComponentsVariants['MuiTablePagination'];
        };
        MuiTableRow?: {
            defaultProps?: ComponentsProps['MuiTableRow'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableRow'];
            variants?: ComponentsVariants['MuiTableRow'];
        };
        MuiTableSortLabel?: {
            defaultProps?: ComponentsProps['MuiTableSortLabel'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTableSortLabel'];
            variants?: ComponentsVariants['MuiTableSortLabel'];
        };
        MuiTabs?: {
            defaultProps?: ComponentsProps['MuiTabs'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTabs'];
            variants?: ComponentsVariants['MuiTabs'];
        };
        MuiTextField?: {
            defaultProps?: ComponentsProps['MuiTextField'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTextField'];
            variants?: ComponentsVariants['MuiTextField'];
        };
        MuiToggleButton?: {
            defaultProps?: ComponentsProps['MuiToggleButton'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiToggleButton'];
            variants?: ComponentsVariants['MuiToggleButton'];
        };
        MuiToggleButtonGroup?: {
            defaultProps?: ComponentsProps['MuiToggleButtonGroup'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiToggleButtonGroup'];
            variants?: ComponentsVariants['MuiToggleButtonGroup'];
        };
        MuiToolbar?: {
            defaultProps?: ComponentsProps['MuiToolbar'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiToolbar'];
            variants?: ComponentsVariants['MuiToolbar'];
        };
        MuiTooltip?: {
            defaultProps?: ComponentsProps['MuiTooltip'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTooltip'];
            variants?: ComponentsVariants['MuiTooltip'];
        };
        MuiTouchRipple?: {
            defaultProps?: ComponentsProps['MuiTouchRipple'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTouchRipple'];
            variants?: ComponentsVariants['MuiTouchRipple'];
        };
        MuiTypography?: {
            defaultProps?: ComponentsProps['MuiTypography'];
            styleOverrides?: ComponentsOverrides<Theme>['MuiTypography'];
            variants?: ComponentsVariants['MuiTypography'];
        };
        MuiUseMediaQuery?: {
            defaultProps?: ComponentsProps['MuiUseMediaQuery'];
        };
    }
}
declare module "@mui/material/styles/createTheme" {
    import { ThemeOptions as SystemThemeOptions, Theme as SystemTheme } from "@mui/system/index";
    import { Mixins, MixinsOptions } from "@mui/material/styles/createMixins";
    import { Palette, PaletteOptions } from "@mui/material/styles/createPalette";
    import { Typography, TypographyOptions } from "@mui/material/styles/createTypography";
    import { Shadows } from "@mui/material/styles/shadows";
    import { Transitions, TransitionsOptions } from "@mui/material/styles/createTransitions";
    import { ZIndex, ZIndexOptions } from "@mui/material/styles/zIndex";
    import { Components } from "@mui/material/styles/components";
    export interface ThemeOptions extends Omit<SystemThemeOptions, 'zIndex'> {
        mixins?: MixinsOptions;
        components?: Components<BaseTheme>;
        palette?: PaletteOptions;
        shadows?: Shadows;
        transitions?: TransitionsOptions;
        typography?: TypographyOptions | ((palette: Palette) => TypographyOptions);
        zIndex?: ZIndexOptions;
        unstable_strictMode?: boolean;
    }
    interface BaseTheme extends SystemTheme {
        mixins: Mixins;
        palette: Palette;
        shadows: Shadows;
        transitions: Transitions;
        typography: Typography;
        zIndex: ZIndex;
        unstable_strictMode?: boolean;
    }
    export {};
    /**
     * Our [TypeScript guide on theme customization](https://mui.com/guides/typescript/#customization-of-theme) explains in detail how you would add custom properties.
     */
    export interface Theme extends BaseTheme {
        components?: Components<BaseTheme>;
    }
    /**
     * @deprecated
     * Use `import { createTheme } from '@mui/material/styles'` instead.
     */
    export function createMuiTheme(options?: ThemeOptions, ...args: object[]): Theme;
    /**
     * Generate a theme base on the options received.
     * @param options Takes an incomplete theme object and adds the missing parts.
     * @param args Deep merge the arguments with the about to be returned theme.
     * @returns A complete, ready-to-use theme object.
     */
    export type createTheme = (options?: ThemeOptions, ...args: object[]) => Theme;
    export default createTheme;
}
declare module "@mui/material/styles/adaptV4Theme" {
    import { BreakpointsOptions, ShapeOptions, SpacingOptions } from "@mui/system/index";
    import { MixinsOptions } from "@mui/material/styles/createMixins";
    import { Palette, PaletteOptions } from "@mui/material/styles/createPalette";
    import { TypographyOptions } from "@mui/material/styles/createTypography";
    import { Shadows } from "@mui/material/styles/shadows";
    import { TransitionsOptions } from "@mui/material/styles/createTransitions";
    import { ZIndexOptions } from "@mui/material/styles/zIndex";
    import { ComponentsOverrides } from "@mui/material/styles/overrides";
    import { ComponentsVariants } from "@mui/material/styles/variants";
    import { ComponentsProps } from "@mui/material/styles/props";
    import { Theme } from "@mui/material/styles/createTheme";
    export type Direction = 'ltr' | 'rtl';
    export interface DeprecatedThemeOptions {
        shape?: ShapeOptions;
        breakpoints?: BreakpointsOptions;
        direction?: Direction;
        mixins?: MixinsOptions;
        overrides?: ComponentsOverrides;
        palette?: PaletteOptions;
        props?: ComponentsProps;
        shadows?: Shadows;
        spacing?: SpacingOptions;
        transitions?: TransitionsOptions;
        typography?: TypographyOptions | ((palette: Palette) => TypographyOptions);
        variants?: ComponentsVariants;
        zIndex?: ZIndexOptions;
        unstable_strictMode?: boolean;
    }
    /**
     * Generate a theme base on the V4 theme options received.
     * @deprecated Follow the upgrade guide on https://mui.com/r/migration-v4#theme
     * @param options Takes an incomplete theme object and adds the missing parts.
     * @returns A complete, ready-to-use theme object.
     */
    export type adaptV4Theme = (options?: DeprecatedThemeOptions) => Theme;
    export default adaptV4Theme;
}
declare module "@mui/material/styles/createStyles" {
    export type createStyles = (styles: any) => never;
    export default createStyles;
}
declare module "@mui/material/styles/responsiveFontSizes" {
    import { Breakpoint } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/createTheme";
    import { Variant } from "@mui/material/styles/createTypography";
    export interface ResponsiveFontSizesOptions {
        breakpoints?: Breakpoint[];
        disableAlign?: boolean;
        factor?: number;
        variants?: Variant[];
    }
    export type responsiveFontSizes = (theme: Theme, options?: ResponsiveFontSizesOptions) => Theme;
    export default responsiveFontSizes;
}
declare module "@mui/material/styles/useTheme" {
    import { Theme } from "@mui/material/styles/createTheme";
    export type useTheme = <T = Theme>() => T;
    export default useTheme;
}
declare module "@mui/material/styles/useThemeProps" {
    import { Theme } from "@mui/material/styles/createTheme";
    import { Components } from "@mui/material/styles/components";
    export interface ThemeWithProps {
        components?: Components<Omit<Theme, 'components'>>;
    }
    export type ThemedProps<Theme, Name extends keyof any> = Theme extends {
        components: Record<Name, {
            defaultProps: infer Props;
        }>;
    } ? Props : {};
    export type useThemeProps = <Theme extends ThemeWithProps, Props, Name extends keyof any>(params: {
        props: Props;
        name: Name;
    }) => Props & ThemedProps<Theme, Name>;
    export default useThemeProps;
}
declare module "@mui/material/styles/styled" {
    import { CreateMUIStyled } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/createTheme";
    export function rootShouldForwardProp(prop: string): boolean;
    export function slotShouldForwardProp(prop: string): boolean;
    /**
     * Custom styled utility that has a default MUI theme.
     * @param tag HTML tag or component that should serve as base.
     * @param options Styled options for the created component.
     * @returns React component that has styles attached to it.
     */
    const styled: CreateMUIStyled<Theme>;
    export default styled;
}
declare module "@mui/material/styles/ThemeProvider" {
    import { DefaultTheme } from "@mui/system/index";
    export interface ThemeProviderProps<Theme = DefaultTheme> {
        children?: React.ReactNode;
        theme: Partial<Theme> | ((outerTheme: Theme) => Theme);
    }
    /**
     * This component makes the `theme` available down the React tree.
     * It should preferably be used at **the root of your component tree**.
     * API:
     *
     * - [ThemeProvider API](/customization/theming/#themeprovider)
     */
    export type ThemeProvider = <T = DefaultTheme>(props: ThemeProviderProps<T>) => React.ReactElement<ThemeProviderProps<T>>;
    export default ThemeProvider;
}
declare module "@mui/material/styles/cssUtils" {
    import { CSSProperties } from "@mui/material/styles/createTypography";
    export function isUnitless(value: string): boolean;
    export function getUnit(input: string): string;
    export function toUnitless(value: string): number;
    export function convertLength(baseFontSize: string): (length: string, toUnit: string) => string;
    export interface AlignPropertyParams {
        size: number;
        grid: number;
    }
    export function alignProperty(params: AlignPropertyParams): number;
    export interface FontGridParams {
        lineHeight: number;
        pixels: number;
        htmlFontSize: number;
    }
    export function fontGrid(params: FontGridParams): number;
    export interface ResponsivePropertyParams {
        cssProperty: string;
        min: number;
        max: number;
        unit?: string;
        breakpoints?: number[];
        transform?: (value: number) => number;
    }
    export function responsiveProperty(params: ResponsivePropertyParams): CSSProperties;
}
declare module "@mui/material/styles/makeStyles" {
    export type makeStyles = (stylesCreator: any, options?: object) => never;
    export default makeStyles;
}
declare module "@mui/material/styles/withStyles" {
    export type withStyles = (stylesCreator: any, options?: object) => never;
    export default withStyles;
}
declare module "@mui/material/styles/withTheme" {
    export type withTheme = (Component: any) => never;
    export default withTheme;
}
declare module "@mui/material/styles/index" {
    export { default as createTheme, default as unstable_createMuiStrictModeTheme, createMuiTheme, ThemeOptions, Theme, } from "@mui/material/styles/createTheme";
    export { default as adaptV4Theme, DeprecatedThemeOptions } from "@mui/material/styles/adaptV4Theme";
    export { Palette, PaletteColor, PaletteColorOptions, PaletteOptions, SimplePaletteColorOptions, TypeText, TypeAction, TypeBackground, } from "@mui/material/styles/createPalette";
    export { default as createStyles } from "@mui/material/styles/createStyles";
    export { Typography as TypographyVariants, TypographyOptions as TypographyVariantsOptions, TypographyStyle, Variant as TypographyVariant, } from "@mui/material/styles/createTypography";
    export { default as responsiveFontSizes } from "@mui/material/styles/responsiveFontSizes";
    export { Duration, Easing, Transitions, TransitionsOptions, duration, easing, } from "@mui/material/styles/createTransitions";
    export { Direction, Breakpoint, BreakpointOverrides, Breakpoints, BreakpointsOptions, CreateMUIStyled, Interpolation, CSSInterpolation, CSSObject, css, keyframes, hexToRgb, rgbToHex, hslToRgb, decomposeColor, recomposeColor, getContrastRatio, getLuminance, emphasize, alpha, darken, lighten, ColorFormat, ColorObject, StyledEngineProvider, SxProps, experimental_sx, } from "@mui/system/index";
    export { default as useTheme } from "@mui/material/styles/useTheme";
    export { default as useThemeProps } from "@mui/material/styles/useThemeProps";
    export * from "@mui/material/styles/useThemeProps";
    export { default as styled } from "@mui/material/styles/styled";
    /**
     * @deprecated will be removed in v5.beta, please use styled from @mui/material/styles instead
     */
    export { default as experimentalStyled } from "@mui/material/styles/styled";
    export { default as ThemeProvider } from "@mui/material/styles/ThemeProvider";
    export { ComponentsProps, ComponentsPropsList } from "@mui/material/styles/props";
    export { ComponentsVariants } from "@mui/material/styles/variants";
    export { ComponentsOverrides, ComponentNameToClassKey } from "@mui/material/styles/overrides";
    export { Components } from "@mui/material/styles/components";
    export { getUnit as unstable_getUnit, toUnitless as unstable_toUnitless } from "@mui/material/styles/cssUtils";
    export type ClassNameMap<ClassKey extends string = string> = Record<ClassKey, string>;
    export interface StyledComponentProps<ClassKey extends string = string> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ClassNameMap<ClassKey>>;
    }
    export { default as makeStyles } from "@mui/material/styles/makeStyles";
    export { default as withStyles } from "@mui/material/styles/withStyles";
    export { default as withTheme } from "@mui/material/styles/withTheme";
}
declare module "@mui/material/colors/amber" {
    /**
     * ![amber 50](https://mui.com/static/colors-preview/amber-50-24x24.png) ![amber 100](https://mui.com/static/colors-preview/amber-100-24x24.png) ![amber 200](https://mui.com/static/colors-preview/amber-200-24x24.png) ![amber 300](https://mui.com/static/colors-preview/amber-300-24x24.png) ![amber 400](https://mui.com/static/colors-preview/amber-400-24x24.png) ![amber 500](https://mui.com/static/colors-preview/amber-500-24x24.png) ![amber 600](https://mui.com/static/colors-preview/amber-600-24x24.png) ![amber 700](https://mui.com/static/colors-preview/amber-700-24x24.png) ![amber 800](https://mui.com/static/colors-preview/amber-800-24x24.png) ![amber 900](https://mui.com/static/colors-preview/amber-900-24x24.png) ![amber A100](https://mui.com/static/colors-preview/amber-A100-24x24.png) ![amber A200](https://mui.com/static/colors-preview/amber-A200-24x24.png) ![amber A400](https://mui.com/static/colors-preview/amber-A400-24x24.png) ![amber A700](https://mui.com/static/colors-preview/amber-A700-24x24.png)
     */
    const amber: {
        /**
         * Preview: ![amber 50](https://mui.com/static/colors-preview/amber-50-24x24.png)
         */
        50: '#fff8e1';
        /**
         * Preview: ![amber 100](https://mui.com/static/colors-preview/amber-100-24x24.png)
         */
        100: '#ffecb3';
        /**
         * Preview: ![amber 200](https://mui.com/static/colors-preview/amber-200-24x24.png)
         */
        200: '#ffe082';
        /**
         * Preview: ![amber 300](https://mui.com/static/colors-preview/amber-300-24x24.png)
         */
        300: '#ffd54f';
        /**
         * Preview: ![amber 400](https://mui.com/static/colors-preview/amber-400-24x24.png)
         */
        400: '#ffca28';
        /**
         * Preview: ![amber 500](https://mui.com/static/colors-preview/amber-500-24x24.png)
         */
        500: '#ffc107';
        /**
         * Preview: ![amber 600](https://mui.com/static/colors-preview/amber-600-24x24.png)
         */
        600: '#ffb300';
        /**
         * Preview: ![amber 700](https://mui.com/static/colors-preview/amber-700-24x24.png)
         */
        700: '#ffa000';
        /**
         * Preview: ![amber 800](https://mui.com/static/colors-preview/amber-800-24x24.png)
         */
        800: '#ff8f00';
        /**
         * Preview: ![amber 900](https://mui.com/static/colors-preview/amber-900-24x24.png)
         */
        900: '#ff6f00';
        /**
         * Preview: ![amber A100](https://mui.com/static/colors-preview/amber-A100-24x24.png)
         */
        A100: '#ffe57f';
        /**
         * Preview: ![amber A200](https://mui.com/static/colors-preview/amber-A200-24x24.png)
         */
        A200: '#ffd740';
        /**
         * Preview: ![amber A400](https://mui.com/static/colors-preview/amber-A400-24x24.png)
         */
        A400: '#ffc400';
        /**
         * Preview: ![amber A700](https://mui.com/static/colors-preview/amber-A700-24x24.png)
         */
        A700: '#ffab00';
    };
    export default amber;
}
declare module "@mui/material/colors/blue" {
    /**
     * ![blue 50](https://mui.com/static/colors-preview/blue-50-24x24.png) ![blue 100](https://mui.com/static/colors-preview/blue-100-24x24.png) ![blue 200](https://mui.com/static/colors-preview/blue-200-24x24.png) ![blue 300](https://mui.com/static/colors-preview/blue-300-24x24.png) ![blue 400](https://mui.com/static/colors-preview/blue-400-24x24.png) ![blue 500](https://mui.com/static/colors-preview/blue-500-24x24.png) ![blue 600](https://mui.com/static/colors-preview/blue-600-24x24.png) ![blue 700](https://mui.com/static/colors-preview/blue-700-24x24.png) ![blue 800](https://mui.com/static/colors-preview/blue-800-24x24.png) ![blue 900](https://mui.com/static/colors-preview/blue-900-24x24.png) ![blue A100](https://mui.com/static/colors-preview/blue-A100-24x24.png) ![blue A200](https://mui.com/static/colors-preview/blue-A200-24x24.png) ![blue A400](https://mui.com/static/colors-preview/blue-A400-24x24.png) ![blue A700](https://mui.com/static/colors-preview/blue-A700-24x24.png)
     */
    const blue: {
        /**
         * Preview: ![blue 50](https://mui.com/static/colors-preview/blue-50-24x24.png)
         */
        50: '#e3f2fd';
        /**
         * Preview: ![blue 100](https://mui.com/static/colors-preview/blue-100-24x24.png)
         */
        100: '#bbdefb';
        /**
         * Preview: ![blue 200](https://mui.com/static/colors-preview/blue-200-24x24.png)
         */
        200: '#90caf9';
        /**
         * Preview: ![blue 300](https://mui.com/static/colors-preview/blue-300-24x24.png)
         */
        300: '#64b5f6';
        /**
         * Preview: ![blue 400](https://mui.com/static/colors-preview/blue-400-24x24.png)
         */
        400: '#42a5f5';
        /**
         * Preview: ![blue 500](https://mui.com/static/colors-preview/blue-500-24x24.png)
         */
        500: '#2196f3';
        /**
         * Preview: ![blue 600](https://mui.com/static/colors-preview/blue-600-24x24.png)
         */
        600: '#1e88e5';
        /**
         * Preview: ![blue 700](https://mui.com/static/colors-preview/blue-700-24x24.png)
         */
        700: '#1976d2';
        /**
         * Preview: ![blue 800](https://mui.com/static/colors-preview/blue-800-24x24.png)
         */
        800: '#1565c0';
        /**
         * Preview: ![blue 900](https://mui.com/static/colors-preview/blue-900-24x24.png)
         */
        900: '#0d47a1';
        /**
         * Preview: ![blue A100](https://mui.com/static/colors-preview/blue-A100-24x24.png)
         */
        A100: '#82b1ff';
        /**
         * Preview: ![blue A200](https://mui.com/static/colors-preview/blue-A200-24x24.png)
         */
        A200: '#448aff';
        /**
         * Preview: ![blue A400](https://mui.com/static/colors-preview/blue-A400-24x24.png)
         */
        A400: '#2979ff';
        /**
         * Preview: ![blue A700](https://mui.com/static/colors-preview/blue-A700-24x24.png)
         */
        A700: '#2962ff';
    };
    export default blue;
}
declare module "@mui/material/colors/blueGrey" {
    /**
     * ![blueGrey 50](https://mui.com/static/colors-preview/blueGrey-50-24x24.png) ![blueGrey 100](https://mui.com/static/colors-preview/blueGrey-100-24x24.png) ![blueGrey 200](https://mui.com/static/colors-preview/blueGrey-200-24x24.png) ![blueGrey 300](https://mui.com/static/colors-preview/blueGrey-300-24x24.png) ![blueGrey 400](https://mui.com/static/colors-preview/blueGrey-400-24x24.png) ![blueGrey 500](https://mui.com/static/colors-preview/blueGrey-500-24x24.png) ![blueGrey 600](https://mui.com/static/colors-preview/blueGrey-600-24x24.png) ![blueGrey 700](https://mui.com/static/colors-preview/blueGrey-700-24x24.png) ![blueGrey 800](https://mui.com/static/colors-preview/blueGrey-800-24x24.png) ![blueGrey 900](https://mui.com/static/colors-preview/blueGrey-900-24x24.png) ![blueGrey A100](https://mui.com/static/colors-preview/blueGrey-A100-24x24.png) ![blueGrey A200](https://mui.com/static/colors-preview/blueGrey-A200-24x24.png) ![blueGrey A400](https://mui.com/static/colors-preview/blueGrey-A400-24x24.png) ![blueGrey A700](https://mui.com/static/colors-preview/blueGrey-A700-24x24.png)
     */
    const blueGrey: {
        /**
         * Preview: ![blueGrey 50](https://mui.com/static/colors-preview/blueGrey-50-24x24.png)
         */
        50: '#eceff1';
        /**
         * Preview: ![blueGrey 100](https://mui.com/static/colors-preview/blueGrey-100-24x24.png)
         */
        100: '#cfd8dc';
        /**
         * Preview: ![blueGrey 200](https://mui.com/static/colors-preview/blueGrey-200-24x24.png)
         */
        200: '#b0bec5';
        /**
         * Preview: ![blueGrey 300](https://mui.com/static/colors-preview/blueGrey-300-24x24.png)
         */
        300: '#90a4ae';
        /**
         * Preview: ![blueGrey 400](https://mui.com/static/colors-preview/blueGrey-400-24x24.png)
         */
        400: '#78909c';
        /**
         * Preview: ![blueGrey 500](https://mui.com/static/colors-preview/blueGrey-500-24x24.png)
         */
        500: '#607d8b';
        /**
         * Preview: ![blueGrey 600](https://mui.com/static/colors-preview/blueGrey-600-24x24.png)
         */
        600: '#546e7a';
        /**
         * Preview: ![blueGrey 700](https://mui.com/static/colors-preview/blueGrey-700-24x24.png)
         */
        700: '#455a64';
        /**
         * Preview: ![blueGrey 800](https://mui.com/static/colors-preview/blueGrey-800-24x24.png)
         */
        800: '#37474f';
        /**
         * Preview: ![blueGrey 900](https://mui.com/static/colors-preview/blueGrey-900-24x24.png)
         */
        900: '#263238';
        /**
         * Preview: ![blueGrey A100](https://mui.com/static/colors-preview/blueGrey-A100-24x24.png)
         */
        A100: '#cfd8dc';
        /**
         * Preview: ![blueGrey A200](https://mui.com/static/colors-preview/blueGrey-A200-24x24.png)
         */
        A200: '#b0bec5';
        /**
         * Preview: ![blueGrey A400](https://mui.com/static/colors-preview/blueGrey-A400-24x24.png)
         */
        A400: '#78909c';
        /**
         * Preview: ![blueGrey A700](https://mui.com/static/colors-preview/blueGrey-A700-24x24.png)
         */
        A700: '#455a64';
    };
    export default blueGrey;
}
declare module "@mui/material/colors/brown" {
    /**
     * ![brown 50](https://mui.com/static/colors-preview/brown-50-24x24.png) ![brown 100](https://mui.com/static/colors-preview/brown-100-24x24.png) ![brown 200](https://mui.com/static/colors-preview/brown-200-24x24.png) ![brown 300](https://mui.com/static/colors-preview/brown-300-24x24.png) ![brown 400](https://mui.com/static/colors-preview/brown-400-24x24.png) ![brown 500](https://mui.com/static/colors-preview/brown-500-24x24.png) ![brown 600](https://mui.com/static/colors-preview/brown-600-24x24.png) ![brown 700](https://mui.com/static/colors-preview/brown-700-24x24.png) ![brown 800](https://mui.com/static/colors-preview/brown-800-24x24.png) ![brown 900](https://mui.com/static/colors-preview/brown-900-24x24.png) ![brown A100](https://mui.com/static/colors-preview/brown-A100-24x24.png) ![brown A200](https://mui.com/static/colors-preview/brown-A200-24x24.png) ![brown A400](https://mui.com/static/colors-preview/brown-A400-24x24.png) ![brown A700](https://mui.com/static/colors-preview/brown-A700-24x24.png)
     */
    const brown: {
        /**
         * Preview: ![brown 50](https://mui.com/static/colors-preview/brown-50-24x24.png)
         */
        50: '#efebe9';
        /**
         * Preview: ![brown 100](https://mui.com/static/colors-preview/brown-100-24x24.png)
         */
        100: '#d7ccc8';
        /**
         * Preview: ![brown 200](https://mui.com/static/colors-preview/brown-200-24x24.png)
         */
        200: '#bcaaa4';
        /**
         * Preview: ![brown 300](https://mui.com/static/colors-preview/brown-300-24x24.png)
         */
        300: '#a1887f';
        /**
         * Preview: ![brown 400](https://mui.com/static/colors-preview/brown-400-24x24.png)
         */
        400: '#8d6e63';
        /**
         * Preview: ![brown 500](https://mui.com/static/colors-preview/brown-500-24x24.png)
         */
        500: '#795548';
        /**
         * Preview: ![brown 600](https://mui.com/static/colors-preview/brown-600-24x24.png)
         */
        600: '#6d4c41';
        /**
         * Preview: ![brown 700](https://mui.com/static/colors-preview/brown-700-24x24.png)
         */
        700: '#5d4037';
        /**
         * Preview: ![brown 800](https://mui.com/static/colors-preview/brown-800-24x24.png)
         */
        800: '#4e342e';
        /**
         * Preview: ![brown 900](https://mui.com/static/colors-preview/brown-900-24x24.png)
         */
        900: '#3e2723';
        /**
         * Preview: ![brown A100](https://mui.com/static/colors-preview/brown-A100-24x24.png)
         */
        A100: '#d7ccc8';
        /**
         * Preview: ![brown A200](https://mui.com/static/colors-preview/brown-A200-24x24.png)
         */
        A200: '#bcaaa4';
        /**
         * Preview: ![brown A400](https://mui.com/static/colors-preview/brown-A400-24x24.png)
         */
        A400: '#8d6e63';
        /**
         * Preview: ![brown A700](https://mui.com/static/colors-preview/brown-A700-24x24.png)
         */
        A700: '#5d4037';
    };
    export default brown;
}
declare module "@mui/material/colors/common" {
    /**
     * ![common black](https://mui.com/static/colors-preview/common-black-24x24.png) ![common white](https://mui.com/static/colors-preview/common-white-24x24.png)
     */
    const common: {
        /**
         * Preview: ![common black](https://mui.com/static/colors-preview/common-black-24x24.png)
         */
        black: '#000';
        /**
         * Preview: ![common white](https://mui.com/static/colors-preview/common-white-24x24.png)
         */
        white: '#fff';
    };
    export default common;
}
declare module "@mui/material/colors/cyan" {
    /**
     * ![cyan 50](https://mui.com/static/colors-preview/cyan-50-24x24.png) ![cyan 100](https://mui.com/static/colors-preview/cyan-100-24x24.png) ![cyan 200](https://mui.com/static/colors-preview/cyan-200-24x24.png) ![cyan 300](https://mui.com/static/colors-preview/cyan-300-24x24.png) ![cyan 400](https://mui.com/static/colors-preview/cyan-400-24x24.png) ![cyan 500](https://mui.com/static/colors-preview/cyan-500-24x24.png) ![cyan 600](https://mui.com/static/colors-preview/cyan-600-24x24.png) ![cyan 700](https://mui.com/static/colors-preview/cyan-700-24x24.png) ![cyan 800](https://mui.com/static/colors-preview/cyan-800-24x24.png) ![cyan 900](https://mui.com/static/colors-preview/cyan-900-24x24.png) ![cyan A100](https://mui.com/static/colors-preview/cyan-A100-24x24.png) ![cyan A200](https://mui.com/static/colors-preview/cyan-A200-24x24.png) ![cyan A400](https://mui.com/static/colors-preview/cyan-A400-24x24.png) ![cyan A700](https://mui.com/static/colors-preview/cyan-A700-24x24.png)
     */
    const cyan: {
        /**
         * Preview: ![cyan 50](https://mui.com/static/colors-preview/cyan-50-24x24.png)
         */
        50: '#e0f7fa';
        /**
         * Preview: ![cyan 100](https://mui.com/static/colors-preview/cyan-100-24x24.png)
         */
        100: '#b2ebf2';
        /**
         * Preview: ![cyan 200](https://mui.com/static/colors-preview/cyan-200-24x24.png)
         */
        200: '#80deea';
        /**
         * Preview: ![cyan 300](https://mui.com/static/colors-preview/cyan-300-24x24.png)
         */
        300: '#4dd0e1';
        /**
         * Preview: ![cyan 400](https://mui.com/static/colors-preview/cyan-400-24x24.png)
         */
        400: '#26c6da';
        /**
         * Preview: ![cyan 500](https://mui.com/static/colors-preview/cyan-500-24x24.png)
         */
        500: '#00bcd4';
        /**
         * Preview: ![cyan 600](https://mui.com/static/colors-preview/cyan-600-24x24.png)
         */
        600: '#00acc1';
        /**
         * Preview: ![cyan 700](https://mui.com/static/colors-preview/cyan-700-24x24.png)
         */
        700: '#0097a7';
        /**
         * Preview: ![cyan 800](https://mui.com/static/colors-preview/cyan-800-24x24.png)
         */
        800: '#00838f';
        /**
         * Preview: ![cyan 900](https://mui.com/static/colors-preview/cyan-900-24x24.png)
         */
        900: '#006064';
        /**
         * Preview: ![cyan A100](https://mui.com/static/colors-preview/cyan-A100-24x24.png)
         */
        A100: '#84ffff';
        /**
         * Preview: ![cyan A200](https://mui.com/static/colors-preview/cyan-A200-24x24.png)
         */
        A200: '#18ffff';
        /**
         * Preview: ![cyan A400](https://mui.com/static/colors-preview/cyan-A400-24x24.png)
         */
        A400: '#00e5ff';
        /**
         * Preview: ![cyan A700](https://mui.com/static/colors-preview/cyan-A700-24x24.png)
         */
        A700: '#00b8d4';
    };
    export default cyan;
}
declare module "@mui/material/colors/deepOrange" {
    /**
     * ![deepOrange 50](https://mui.com/static/colors-preview/deepOrange-50-24x24.png) ![deepOrange 100](https://mui.com/static/colors-preview/deepOrange-100-24x24.png) ![deepOrange 200](https://mui.com/static/colors-preview/deepOrange-200-24x24.png) ![deepOrange 300](https://mui.com/static/colors-preview/deepOrange-300-24x24.png) ![deepOrange 400](https://mui.com/static/colors-preview/deepOrange-400-24x24.png) ![deepOrange 500](https://mui.com/static/colors-preview/deepOrange-500-24x24.png) ![deepOrange 600](https://mui.com/static/colors-preview/deepOrange-600-24x24.png) ![deepOrange 700](https://mui.com/static/colors-preview/deepOrange-700-24x24.png) ![deepOrange 800](https://mui.com/static/colors-preview/deepOrange-800-24x24.png) ![deepOrange 900](https://mui.com/static/colors-preview/deepOrange-900-24x24.png) ![deepOrange A100](https://mui.com/static/colors-preview/deepOrange-A100-24x24.png) ![deepOrange A200](https://mui.com/static/colors-preview/deepOrange-A200-24x24.png) ![deepOrange A400](https://mui.com/static/colors-preview/deepOrange-A400-24x24.png) ![deepOrange A700](https://mui.com/static/colors-preview/deepOrange-A700-24x24.png)
     */
    const deepOrange: {
        /**
         * Preview: ![deepOrange 50](https://mui.com/static/colors-preview/deepOrange-50-24x24.png)
         */
        50: '#fbe9e7';
        /**
         * Preview: ![deepOrange 100](https://mui.com/static/colors-preview/deepOrange-100-24x24.png)
         */
        100: '#ffccbc';
        /**
         * Preview: ![deepOrange 200](https://mui.com/static/colors-preview/deepOrange-200-24x24.png)
         */
        200: '#ffab91';
        /**
         * Preview: ![deepOrange 300](https://mui.com/static/colors-preview/deepOrange-300-24x24.png)
         */
        300: '#ff8a65';
        /**
         * Preview: ![deepOrange 400](https://mui.com/static/colors-preview/deepOrange-400-24x24.png)
         */
        400: '#ff7043';
        /**
         * Preview: ![deepOrange 500](https://mui.com/static/colors-preview/deepOrange-500-24x24.png)
         */
        500: '#ff5722';
        /**
         * Preview: ![deepOrange 600](https://mui.com/static/colors-preview/deepOrange-600-24x24.png)
         */
        600: '#f4511e';
        /**
         * Preview: ![deepOrange 700](https://mui.com/static/colors-preview/deepOrange-700-24x24.png)
         */
        700: '#e64a19';
        /**
         * Preview: ![deepOrange 800](https://mui.com/static/colors-preview/deepOrange-800-24x24.png)
         */
        800: '#d84315';
        /**
         * Preview: ![deepOrange 900](https://mui.com/static/colors-preview/deepOrange-900-24x24.png)
         */
        900: '#bf360c';
        /**
         * Preview: ![deepOrange A100](https://mui.com/static/colors-preview/deepOrange-A100-24x24.png)
         */
        A100: '#ff9e80';
        /**
         * Preview: ![deepOrange A200](https://mui.com/static/colors-preview/deepOrange-A200-24x24.png)
         */
        A200: '#ff6e40';
        /**
         * Preview: ![deepOrange A400](https://mui.com/static/colors-preview/deepOrange-A400-24x24.png)
         */
        A400: '#ff3d00';
        /**
         * Preview: ![deepOrange A700](https://mui.com/static/colors-preview/deepOrange-A700-24x24.png)
         */
        A700: '#dd2c00';
    };
    export default deepOrange;
}
declare module "@mui/material/colors/deepPurple" {
    /**
     * ![deepPurple 50](https://mui.com/static/colors-preview/deepPurple-50-24x24.png) ![deepPurple 100](https://mui.com/static/colors-preview/deepPurple-100-24x24.png) ![deepPurple 200](https://mui.com/static/colors-preview/deepPurple-200-24x24.png) ![deepPurple 300](https://mui.com/static/colors-preview/deepPurple-300-24x24.png) ![deepPurple 400](https://mui.com/static/colors-preview/deepPurple-400-24x24.png) ![deepPurple 500](https://mui.com/static/colors-preview/deepPurple-500-24x24.png) ![deepPurple 600](https://mui.com/static/colors-preview/deepPurple-600-24x24.png) ![deepPurple 700](https://mui.com/static/colors-preview/deepPurple-700-24x24.png) ![deepPurple 800](https://mui.com/static/colors-preview/deepPurple-800-24x24.png) ![deepPurple 900](https://mui.com/static/colors-preview/deepPurple-900-24x24.png) ![deepPurple A100](https://mui.com/static/colors-preview/deepPurple-A100-24x24.png) ![deepPurple A200](https://mui.com/static/colors-preview/deepPurple-A200-24x24.png) ![deepPurple A400](https://mui.com/static/colors-preview/deepPurple-A400-24x24.png) ![deepPurple A700](https://mui.com/static/colors-preview/deepPurple-A700-24x24.png)
     */
    const deepPurple: {
        /**
         * Preview: ![deepPurple 50](https://mui.com/static/colors-preview/deepPurple-50-24x24.png)
         */
        50: '#ede7f6';
        /**
         * Preview: ![deepPurple 100](https://mui.com/static/colors-preview/deepPurple-100-24x24.png)
         */
        100: '#d1c4e9';
        /**
         * Preview: ![deepPurple 200](https://mui.com/static/colors-preview/deepPurple-200-24x24.png)
         */
        200: '#b39ddb';
        /**
         * Preview: ![deepPurple 300](https://mui.com/static/colors-preview/deepPurple-300-24x24.png)
         */
        300: '#9575cd';
        /**
         * Preview: ![deepPurple 400](https://mui.com/static/colors-preview/deepPurple-400-24x24.png)
         */
        400: '#7e57c2';
        /**
         * Preview: ![deepPurple 500](https://mui.com/static/colors-preview/deepPurple-500-24x24.png)
         */
        500: '#673ab7';
        /**
         * Preview: ![deepPurple 600](https://mui.com/static/colors-preview/deepPurple-600-24x24.png)
         */
        600: '#5e35b1';
        /**
         * Preview: ![deepPurple 700](https://mui.com/static/colors-preview/deepPurple-700-24x24.png)
         */
        700: '#512da8';
        /**
         * Preview: ![deepPurple 800](https://mui.com/static/colors-preview/deepPurple-800-24x24.png)
         */
        800: '#4527a0';
        /**
         * Preview: ![deepPurple 900](https://mui.com/static/colors-preview/deepPurple-900-24x24.png)
         */
        900: '#311b92';
        /**
         * Preview: ![deepPurple A100](https://mui.com/static/colors-preview/deepPurple-A100-24x24.png)
         */
        A100: '#b388ff';
        /**
         * Preview: ![deepPurple A200](https://mui.com/static/colors-preview/deepPurple-A200-24x24.png)
         */
        A200: '#7c4dff';
        /**
         * Preview: ![deepPurple A400](https://mui.com/static/colors-preview/deepPurple-A400-24x24.png)
         */
        A400: '#651fff';
        /**
         * Preview: ![deepPurple A700](https://mui.com/static/colors-preview/deepPurple-A700-24x24.png)
         */
        A700: '#6200ea';
    };
    export default deepPurple;
}
declare module "@mui/material/colors/green" {
    /**
     * ![green 50](https://mui.com/static/colors-preview/green-50-24x24.png) ![green 100](https://mui.com/static/colors-preview/green-100-24x24.png) ![green 200](https://mui.com/static/colors-preview/green-200-24x24.png) ![green 300](https://mui.com/static/colors-preview/green-300-24x24.png) ![green 400](https://mui.com/static/colors-preview/green-400-24x24.png) ![green 500](https://mui.com/static/colors-preview/green-500-24x24.png) ![green 600](https://mui.com/static/colors-preview/green-600-24x24.png) ![green 700](https://mui.com/static/colors-preview/green-700-24x24.png) ![green 800](https://mui.com/static/colors-preview/green-800-24x24.png) ![green 900](https://mui.com/static/colors-preview/green-900-24x24.png) ![green A100](https://mui.com/static/colors-preview/green-A100-24x24.png) ![green A200](https://mui.com/static/colors-preview/green-A200-24x24.png) ![green A400](https://mui.com/static/colors-preview/green-A400-24x24.png) ![green A700](https://mui.com/static/colors-preview/green-A700-24x24.png)
     */
    const green: {
        /**
         * Preview: ![green 50](https://mui.com/static/colors-preview/green-50-24x24.png)
         */
        50: '#e8f5e9';
        /**
         * Preview: ![green 100](https://mui.com/static/colors-preview/green-100-24x24.png)
         */
        100: '#c8e6c9';
        /**
         * Preview: ![green 200](https://mui.com/static/colors-preview/green-200-24x24.png)
         */
        200: '#a5d6a7';
        /**
         * Preview: ![green 300](https://mui.com/static/colors-preview/green-300-24x24.png)
         */
        300: '#81c784';
        /**
         * Preview: ![green 400](https://mui.com/static/colors-preview/green-400-24x24.png)
         */
        400: '#66bb6a';
        /**
         * Preview: ![green 500](https://mui.com/static/colors-preview/green-500-24x24.png)
         */
        500: '#4caf50';
        /**
         * Preview: ![green 600](https://mui.com/static/colors-preview/green-600-24x24.png)
         */
        600: '#43a047';
        /**
         * Preview: ![green 700](https://mui.com/static/colors-preview/green-700-24x24.png)
         */
        700: '#388e3c';
        /**
         * Preview: ![green 800](https://mui.com/static/colors-preview/green-800-24x24.png)
         */
        800: '#2e7d32';
        /**
         * Preview: ![green 900](https://mui.com/static/colors-preview/green-900-24x24.png)
         */
        900: '#1b5e20';
        /**
         * Preview: ![green A100](https://mui.com/static/colors-preview/green-A100-24x24.png)
         */
        A100: '#b9f6ca';
        /**
         * Preview: ![green A200](https://mui.com/static/colors-preview/green-A200-24x24.png)
         */
        A200: '#69f0ae';
        /**
         * Preview: ![green A400](https://mui.com/static/colors-preview/green-A400-24x24.png)
         */
        A400: '#00e676';
        /**
         * Preview: ![green A700](https://mui.com/static/colors-preview/green-A700-24x24.png)
         */
        A700: '#00c853';
    };
    export default green;
}
declare module "@mui/material/colors/grey" {
    /**
     * ![grey 50](https://mui.com/static/colors-preview/grey-50-24x24.png) ![grey 100](https://mui.com/static/colors-preview/grey-100-24x24.png) ![grey 200](https://mui.com/static/colors-preview/grey-200-24x24.png) ![grey 300](https://mui.com/static/colors-preview/grey-300-24x24.png) ![grey 400](https://mui.com/static/colors-preview/grey-400-24x24.png) ![grey 500](https://mui.com/static/colors-preview/grey-500-24x24.png) ![grey 600](https://mui.com/static/colors-preview/grey-600-24x24.png) ![grey 700](https://mui.com/static/colors-preview/grey-700-24x24.png) ![grey 800](https://mui.com/static/colors-preview/grey-800-24x24.png) ![grey 900](https://mui.com/static/colors-preview/grey-900-24x24.png) ![grey A100](https://mui.com/static/colors-preview/grey-A100-24x24.png) ![grey A200](https://mui.com/static/colors-preview/grey-A200-24x24.png) ![grey A400](https://mui.com/static/colors-preview/grey-A400-24x24.png) ![grey A700](https://mui.com/static/colors-preview/grey-A700-24x24.png)
     */
    const grey: {
        /**
         * Preview: ![grey 50](https://mui.com/static/colors-preview/grey-50-24x24.png)
         */
        50: '#fafafa';
        /**
         * Preview: ![grey 100](https://mui.com/static/colors-preview/grey-100-24x24.png)
         */
        100: '#f5f5f5';
        /**
         * Preview: ![grey 200](https://mui.com/static/colors-preview/grey-200-24x24.png)
         */
        200: '#eeeeee';
        /**
         * Preview: ![grey 300](https://mui.com/static/colors-preview/grey-300-24x24.png)
         */
        300: '#e0e0e0';
        /**
         * Preview: ![grey 400](https://mui.com/static/colors-preview/grey-400-24x24.png)
         */
        400: '#bdbdbd';
        /**
         * Preview: ![grey 500](https://mui.com/static/colors-preview/grey-500-24x24.png)
         */
        500: '#9e9e9e';
        /**
         * Preview: ![grey 600](https://mui.com/static/colors-preview/grey-600-24x24.png)
         */
        600: '#757575';
        /**
         * Preview: ![grey 700](https://mui.com/static/colors-preview/grey-700-24x24.png)
         */
        700: '#616161';
        /**
         * Preview: ![grey 800](https://mui.com/static/colors-preview/grey-800-24x24.png)
         */
        800: '#424242';
        /**
         * Preview: ![grey 900](https://mui.com/static/colors-preview/grey-900-24x24.png)
         */
        900: '#212121';
        /**
         * Preview: ![grey A100](https://mui.com/static/colors-preview/grey-A100-24x24.png)
         */
        A100: '#f5f5f5';
        /**
         * Preview: ![grey A200](https://mui.com/static/colors-preview/grey-A200-24x24.png)
         */
        A200: '#eeeeee';
        /**
         * Preview: ![grey A400](https://mui.com/static/colors-preview/grey-A400-24x24.png)
         */
        A400: '#bdbdbd';
        /**
         * Preview: ![grey A700](https://mui.com/static/colors-preview/grey-A700-24x24.png)
         */
        A700: '#616161';
    };
    export default grey;
}
declare module "@mui/material/colors/indigo" {
    /**
     * ![indigo 50](https://mui.com/static/colors-preview/indigo-50-24x24.png) ![indigo 100](https://mui.com/static/colors-preview/indigo-100-24x24.png) ![indigo 200](https://mui.com/static/colors-preview/indigo-200-24x24.png) ![indigo 300](https://mui.com/static/colors-preview/indigo-300-24x24.png) ![indigo 400](https://mui.com/static/colors-preview/indigo-400-24x24.png) ![indigo 500](https://mui.com/static/colors-preview/indigo-500-24x24.png) ![indigo 600](https://mui.com/static/colors-preview/indigo-600-24x24.png) ![indigo 700](https://mui.com/static/colors-preview/indigo-700-24x24.png) ![indigo 800](https://mui.com/static/colors-preview/indigo-800-24x24.png) ![indigo 900](https://mui.com/static/colors-preview/indigo-900-24x24.png) ![indigo A100](https://mui.com/static/colors-preview/indigo-A100-24x24.png) ![indigo A200](https://mui.com/static/colors-preview/indigo-A200-24x24.png) ![indigo A400](https://mui.com/static/colors-preview/indigo-A400-24x24.png) ![indigo A700](https://mui.com/static/colors-preview/indigo-A700-24x24.png)
     */
    const indigo: {
        /**
         * Preview: ![indigo 50](https://mui.com/static/colors-preview/indigo-50-24x24.png)
         */
        50: '#e8eaf6';
        /**
         * Preview: ![indigo 100](https://mui.com/static/colors-preview/indigo-100-24x24.png)
         */
        100: '#c5cae9';
        /**
         * Preview: ![indigo 200](https://mui.com/static/colors-preview/indigo-200-24x24.png)
         */
        200: '#9fa8da';
        /**
         * Preview: ![indigo 300](https://mui.com/static/colors-preview/indigo-300-24x24.png)
         */
        300: '#7986cb';
        /**
         * Preview: ![indigo 400](https://mui.com/static/colors-preview/indigo-400-24x24.png)
         */
        400: '#5c6bc0';
        /**
         * Preview: ![indigo 500](https://mui.com/static/colors-preview/indigo-500-24x24.png)
         */
        500: '#3f51b5';
        /**
         * Preview: ![indigo 600](https://mui.com/static/colors-preview/indigo-600-24x24.png)
         */
        600: '#3949ab';
        /**
         * Preview: ![indigo 700](https://mui.com/static/colors-preview/indigo-700-24x24.png)
         */
        700: '#303f9f';
        /**
         * Preview: ![indigo 800](https://mui.com/static/colors-preview/indigo-800-24x24.png)
         */
        800: '#283593';
        /**
         * Preview: ![indigo 900](https://mui.com/static/colors-preview/indigo-900-24x24.png)
         */
        900: '#1a237e';
        /**
         * Preview: ![indigo A100](https://mui.com/static/colors-preview/indigo-A100-24x24.png)
         */
        A100: '#8c9eff';
        /**
         * Preview: ![indigo A200](https://mui.com/static/colors-preview/indigo-A200-24x24.png)
         */
        A200: '#536dfe';
        /**
         * Preview: ![indigo A400](https://mui.com/static/colors-preview/indigo-A400-24x24.png)
         */
        A400: '#3d5afe';
        /**
         * Preview: ![indigo A700](https://mui.com/static/colors-preview/indigo-A700-24x24.png)
         */
        A700: '#304ffe';
    };
    export default indigo;
}
declare module "@mui/material/colors/lightBlue" {
    /**
     * ![lightBlue 50](https://mui.com/static/colors-preview/lightBlue-50-24x24.png) ![lightBlue 100](https://mui.com/static/colors-preview/lightBlue-100-24x24.png) ![lightBlue 200](https://mui.com/static/colors-preview/lightBlue-200-24x24.png) ![lightBlue 300](https://mui.com/static/colors-preview/lightBlue-300-24x24.png) ![lightBlue 400](https://mui.com/static/colors-preview/lightBlue-400-24x24.png) ![lightBlue 500](https://mui.com/static/colors-preview/lightBlue-500-24x24.png) ![lightBlue 600](https://mui.com/static/colors-preview/lightBlue-600-24x24.png) ![lightBlue 700](https://mui.com/static/colors-preview/lightBlue-700-24x24.png) ![lightBlue 800](https://mui.com/static/colors-preview/lightBlue-800-24x24.png) ![lightBlue 900](https://mui.com/static/colors-preview/lightBlue-900-24x24.png) ![lightBlue A100](https://mui.com/static/colors-preview/lightBlue-A100-24x24.png) ![lightBlue A200](https://mui.com/static/colors-preview/lightBlue-A200-24x24.png) ![lightBlue A400](https://mui.com/static/colors-preview/lightBlue-A400-24x24.png) ![lightBlue A700](https://mui.com/static/colors-preview/lightBlue-A700-24x24.png)
     */
    const lightBlue: {
        /**
         * Preview: ![lightBlue 50](https://mui.com/static/colors-preview/lightBlue-50-24x24.png)
         */
        50: '#e1f5fe';
        /**
         * Preview: ![lightBlue 100](https://mui.com/static/colors-preview/lightBlue-100-24x24.png)
         */
        100: '#b3e5fc';
        /**
         * Preview: ![lightBlue 200](https://mui.com/static/colors-preview/lightBlue-200-24x24.png)
         */
        200: '#81d4fa';
        /**
         * Preview: ![lightBlue 300](https://mui.com/static/colors-preview/lightBlue-300-24x24.png)
         */
        300: '#4fc3f7';
        /**
         * Preview: ![lightBlue 400](https://mui.com/static/colors-preview/lightBlue-400-24x24.png)
         */
        400: '#29b6f6';
        /**
         * Preview: ![lightBlue 500](https://mui.com/static/colors-preview/lightBlue-500-24x24.png)
         */
        500: '#03a9f4';
        /**
         * Preview: ![lightBlue 600](https://mui.com/static/colors-preview/lightBlue-600-24x24.png)
         */
        600: '#039be5';
        /**
         * Preview: ![lightBlue 700](https://mui.com/static/colors-preview/lightBlue-700-24x24.png)
         */
        700: '#0288d1';
        /**
         * Preview: ![lightBlue 800](https://mui.com/static/colors-preview/lightBlue-800-24x24.png)
         */
        800: '#0277bd';
        /**
         * Preview: ![lightBlue 900](https://mui.com/static/colors-preview/lightBlue-900-24x24.png)
         */
        900: '#01579b';
        /**
         * Preview: ![lightBlue A100](https://mui.com/static/colors-preview/lightBlue-A100-24x24.png)
         */
        A100: '#80d8ff';
        /**
         * Preview: ![lightBlue A200](https://mui.com/static/colors-preview/lightBlue-A200-24x24.png)
         */
        A200: '#40c4ff';
        /**
         * Preview: ![lightBlue A400](https://mui.com/static/colors-preview/lightBlue-A400-24x24.png)
         */
        A400: '#00b0ff';
        /**
         * Preview: ![lightBlue A700](https://mui.com/static/colors-preview/lightBlue-A700-24x24.png)
         */
        A700: '#0091ea';
    };
    export default lightBlue;
}
declare module "@mui/material/colors/lightGreen" {
    /**
     * ![lightGreen 50](https://mui.com/static/colors-preview/lightGreen-50-24x24.png) ![lightGreen 100](https://mui.com/static/colors-preview/lightGreen-100-24x24.png) ![lightGreen 200](https://mui.com/static/colors-preview/lightGreen-200-24x24.png) ![lightGreen 300](https://mui.com/static/colors-preview/lightGreen-300-24x24.png) ![lightGreen 400](https://mui.com/static/colors-preview/lightGreen-400-24x24.png) ![lightGreen 500](https://mui.com/static/colors-preview/lightGreen-500-24x24.png) ![lightGreen 600](https://mui.com/static/colors-preview/lightGreen-600-24x24.png) ![lightGreen 700](https://mui.com/static/colors-preview/lightGreen-700-24x24.png) ![lightGreen 800](https://mui.com/static/colors-preview/lightGreen-800-24x24.png) ![lightGreen 900](https://mui.com/static/colors-preview/lightGreen-900-24x24.png) ![lightGreen A100](https://mui.com/static/colors-preview/lightGreen-A100-24x24.png) ![lightGreen A200](https://mui.com/static/colors-preview/lightGreen-A200-24x24.png) ![lightGreen A400](https://mui.com/static/colors-preview/lightGreen-A400-24x24.png) ![lightGreen A700](https://mui.com/static/colors-preview/lightGreen-A700-24x24.png)
     */
    const lightGreen: {
        /**
         * Preview: ![lightGreen 50](https://mui.com/static/colors-preview/lightGreen-50-24x24.png)
         */
        50: '#f1f8e9';
        /**
         * Preview: ![lightGreen 100](https://mui.com/static/colors-preview/lightGreen-100-24x24.png)
         */
        100: '#dcedc8';
        /**
         * Preview: ![lightGreen 200](https://mui.com/static/colors-preview/lightGreen-200-24x24.png)
         */
        200: '#c5e1a5';
        /**
         * Preview: ![lightGreen 300](https://mui.com/static/colors-preview/lightGreen-300-24x24.png)
         */
        300: '#aed581';
        /**
         * Preview: ![lightGreen 400](https://mui.com/static/colors-preview/lightGreen-400-24x24.png)
         */
        400: '#9ccc65';
        /**
         * Preview: ![lightGreen 500](https://mui.com/static/colors-preview/lightGreen-500-24x24.png)
         */
        500: '#8bc34a';
        /**
         * Preview: ![lightGreen 600](https://mui.com/static/colors-preview/lightGreen-600-24x24.png)
         */
        600: '#7cb342';
        /**
         * Preview: ![lightGreen 700](https://mui.com/static/colors-preview/lightGreen-700-24x24.png)
         */
        700: '#689f38';
        /**
         * Preview: ![lightGreen 800](https://mui.com/static/colors-preview/lightGreen-800-24x24.png)
         */
        800: '#558b2f';
        /**
         * Preview: ![lightGreen 900](https://mui.com/static/colors-preview/lightGreen-900-24x24.png)
         */
        900: '#33691e';
        /**
         * Preview: ![lightGreen A100](https://mui.com/static/colors-preview/lightGreen-A100-24x24.png)
         */
        A100: '#ccff90';
        /**
         * Preview: ![lightGreen A200](https://mui.com/static/colors-preview/lightGreen-A200-24x24.png)
         */
        A200: '#b2ff59';
        /**
         * Preview: ![lightGreen A400](https://mui.com/static/colors-preview/lightGreen-A400-24x24.png)
         */
        A400: '#76ff03';
        /**
         * Preview: ![lightGreen A700](https://mui.com/static/colors-preview/lightGreen-A700-24x24.png)
         */
        A700: '#64dd17';
    };
    export default lightGreen;
}
declare module "@mui/material/colors/lime" {
    /**
     * ![lime 50](https://mui.com/static/colors-preview/lime-50-24x24.png) ![lime 100](https://mui.com/static/colors-preview/lime-100-24x24.png) ![lime 200](https://mui.com/static/colors-preview/lime-200-24x24.png) ![lime 300](https://mui.com/static/colors-preview/lime-300-24x24.png) ![lime 400](https://mui.com/static/colors-preview/lime-400-24x24.png) ![lime 500](https://mui.com/static/colors-preview/lime-500-24x24.png) ![lime 600](https://mui.com/static/colors-preview/lime-600-24x24.png) ![lime 700](https://mui.com/static/colors-preview/lime-700-24x24.png) ![lime 800](https://mui.com/static/colors-preview/lime-800-24x24.png) ![lime 900](https://mui.com/static/colors-preview/lime-900-24x24.png) ![lime A100](https://mui.com/static/colors-preview/lime-A100-24x24.png) ![lime A200](https://mui.com/static/colors-preview/lime-A200-24x24.png) ![lime A400](https://mui.com/static/colors-preview/lime-A400-24x24.png) ![lime A700](https://mui.com/static/colors-preview/lime-A700-24x24.png)
     */
    const lime: {
        /**
         * Preview: ![lime 50](https://mui.com/static/colors-preview/lime-50-24x24.png)
         */
        50: '#f9fbe7';
        /**
         * Preview: ![lime 100](https://mui.com/static/colors-preview/lime-100-24x24.png)
         */
        100: '#f0f4c3';
        /**
         * Preview: ![lime 200](https://mui.com/static/colors-preview/lime-200-24x24.png)
         */
        200: '#e6ee9c';
        /**
         * Preview: ![lime 300](https://mui.com/static/colors-preview/lime-300-24x24.png)
         */
        300: '#dce775';
        /**
         * Preview: ![lime 400](https://mui.com/static/colors-preview/lime-400-24x24.png)
         */
        400: '#d4e157';
        /**
         * Preview: ![lime 500](https://mui.com/static/colors-preview/lime-500-24x24.png)
         */
        500: '#cddc39';
        /**
         * Preview: ![lime 600](https://mui.com/static/colors-preview/lime-600-24x24.png)
         */
        600: '#c0ca33';
        /**
         * Preview: ![lime 700](https://mui.com/static/colors-preview/lime-700-24x24.png)
         */
        700: '#afb42b';
        /**
         * Preview: ![lime 800](https://mui.com/static/colors-preview/lime-800-24x24.png)
         */
        800: '#9e9d24';
        /**
         * Preview: ![lime 900](https://mui.com/static/colors-preview/lime-900-24x24.png)
         */
        900: '#827717';
        /**
         * Preview: ![lime A100](https://mui.com/static/colors-preview/lime-A100-24x24.png)
         */
        A100: '#f4ff81';
        /**
         * Preview: ![lime A200](https://mui.com/static/colors-preview/lime-A200-24x24.png)
         */
        A200: '#eeff41';
        /**
         * Preview: ![lime A400](https://mui.com/static/colors-preview/lime-A400-24x24.png)
         */
        A400: '#c6ff00';
        /**
         * Preview: ![lime A700](https://mui.com/static/colors-preview/lime-A700-24x24.png)
         */
        A700: '#aeea00';
    };
    export default lime;
}
declare module "@mui/material/colors/orange" {
    /**
     * ![orange 50](https://mui.com/static/colors-preview/orange-50-24x24.png) ![orange 100](https://mui.com/static/colors-preview/orange-100-24x24.png) ![orange 200](https://mui.com/static/colors-preview/orange-200-24x24.png) ![orange 300](https://mui.com/static/colors-preview/orange-300-24x24.png) ![orange 400](https://mui.com/static/colors-preview/orange-400-24x24.png) ![orange 500](https://mui.com/static/colors-preview/orange-500-24x24.png) ![orange 600](https://mui.com/static/colors-preview/orange-600-24x24.png) ![orange 700](https://mui.com/static/colors-preview/orange-700-24x24.png) ![orange 800](https://mui.com/static/colors-preview/orange-800-24x24.png) ![orange 900](https://mui.com/static/colors-preview/orange-900-24x24.png) ![orange A100](https://mui.com/static/colors-preview/orange-A100-24x24.png) ![orange A200](https://mui.com/static/colors-preview/orange-A200-24x24.png) ![orange A400](https://mui.com/static/colors-preview/orange-A400-24x24.png) ![orange A700](https://mui.com/static/colors-preview/orange-A700-24x24.png)
     */
    const orange: {
        /**
         * Preview: ![orange 50](https://mui.com/static/colors-preview/orange-50-24x24.png)
         */
        50: '#fff3e0';
        /**
         * Preview: ![orange 100](https://mui.com/static/colors-preview/orange-100-24x24.png)
         */
        100: '#ffe0b2';
        /**
         * Preview: ![orange 200](https://mui.com/static/colors-preview/orange-200-24x24.png)
         */
        200: '#ffcc80';
        /**
         * Preview: ![orange 300](https://mui.com/static/colors-preview/orange-300-24x24.png)
         */
        300: '#ffb74d';
        /**
         * Preview: ![orange 400](https://mui.com/static/colors-preview/orange-400-24x24.png)
         */
        400: '#ffa726';
        /**
         * Preview: ![orange 500](https://mui.com/static/colors-preview/orange-500-24x24.png)
         */
        500: '#ff9800';
        /**
         * Preview: ![orange 600](https://mui.com/static/colors-preview/orange-600-24x24.png)
         */
        600: '#fb8c00';
        /**
         * Preview: ![orange 700](https://mui.com/static/colors-preview/orange-700-24x24.png)
         */
        700: '#f57c00';
        /**
         * Preview: ![orange 800](https://mui.com/static/colors-preview/orange-800-24x24.png)
         */
        800: '#ef6c00';
        /**
         * Preview: ![orange 900](https://mui.com/static/colors-preview/orange-900-24x24.png)
         */
        900: '#e65100';
        /**
         * Preview: ![orange A100](https://mui.com/static/colors-preview/orange-A100-24x24.png)
         */
        A100: '#ffd180';
        /**
         * Preview: ![orange A200](https://mui.com/static/colors-preview/orange-A200-24x24.png)
         */
        A200: '#ffab40';
        /**
         * Preview: ![orange A400](https://mui.com/static/colors-preview/orange-A400-24x24.png)
         */
        A400: '#ff9100';
        /**
         * Preview: ![orange A700](https://mui.com/static/colors-preview/orange-A700-24x24.png)
         */
        A700: '#ff6d00';
    };
    export default orange;
}
declare module "@mui/material/colors/pink" {
    /**
     * ![pink 50](https://mui.com/static/colors-preview/pink-50-24x24.png) ![pink 100](https://mui.com/static/colors-preview/pink-100-24x24.png) ![pink 200](https://mui.com/static/colors-preview/pink-200-24x24.png) ![pink 300](https://mui.com/static/colors-preview/pink-300-24x24.png) ![pink 400](https://mui.com/static/colors-preview/pink-400-24x24.png) ![pink 500](https://mui.com/static/colors-preview/pink-500-24x24.png) ![pink 600](https://mui.com/static/colors-preview/pink-600-24x24.png) ![pink 700](https://mui.com/static/colors-preview/pink-700-24x24.png) ![pink 800](https://mui.com/static/colors-preview/pink-800-24x24.png) ![pink 900](https://mui.com/static/colors-preview/pink-900-24x24.png) ![pink A100](https://mui.com/static/colors-preview/pink-A100-24x24.png) ![pink A200](https://mui.com/static/colors-preview/pink-A200-24x24.png) ![pink A400](https://mui.com/static/colors-preview/pink-A400-24x24.png) ![pink A700](https://mui.com/static/colors-preview/pink-A700-24x24.png)
     */
    const pink: {
        /**
         * Preview: ![pink 50](https://mui.com/static/colors-preview/pink-50-24x24.png)
         */
        50: '#fce4ec';
        /**
         * Preview: ![pink 100](https://mui.com/static/colors-preview/pink-100-24x24.png)
         */
        100: '#f8bbd0';
        /**
         * Preview: ![pink 200](https://mui.com/static/colors-preview/pink-200-24x24.png)
         */
        200: '#f48fb1';
        /**
         * Preview: ![pink 300](https://mui.com/static/colors-preview/pink-300-24x24.png)
         */
        300: '#f06292';
        /**
         * Preview: ![pink 400](https://mui.com/static/colors-preview/pink-400-24x24.png)
         */
        400: '#ec407a';
        /**
         * Preview: ![pink 500](https://mui.com/static/colors-preview/pink-500-24x24.png)
         */
        500: '#e91e63';
        /**
         * Preview: ![pink 600](https://mui.com/static/colors-preview/pink-600-24x24.png)
         */
        600: '#d81b60';
        /**
         * Preview: ![pink 700](https://mui.com/static/colors-preview/pink-700-24x24.png)
         */
        700: '#c2185b';
        /**
         * Preview: ![pink 800](https://mui.com/static/colors-preview/pink-800-24x24.png)
         */
        800: '#ad1457';
        /**
         * Preview: ![pink 900](https://mui.com/static/colors-preview/pink-900-24x24.png)
         */
        900: '#880e4f';
        /**
         * Preview: ![pink A100](https://mui.com/static/colors-preview/pink-A100-24x24.png)
         */
        A100: '#ff80ab';
        /**
         * Preview: ![pink A200](https://mui.com/static/colors-preview/pink-A200-24x24.png)
         */
        A200: '#ff4081';
        /**
         * Preview: ![pink A400](https://mui.com/static/colors-preview/pink-A400-24x24.png)
         */
        A400: '#f50057';
        /**
         * Preview: ![pink A700](https://mui.com/static/colors-preview/pink-A700-24x24.png)
         */
        A700: '#c51162';
    };
    export default pink;
}
declare module "@mui/material/colors/purple" {
    /**
     * ![purple 50](https://mui.com/static/colors-preview/purple-50-24x24.png) ![purple 100](https://mui.com/static/colors-preview/purple-100-24x24.png) ![purple 200](https://mui.com/static/colors-preview/purple-200-24x24.png) ![purple 300](https://mui.com/static/colors-preview/purple-300-24x24.png) ![purple 400](https://mui.com/static/colors-preview/purple-400-24x24.png) ![purple 500](https://mui.com/static/colors-preview/purple-500-24x24.png) ![purple 600](https://mui.com/static/colors-preview/purple-600-24x24.png) ![purple 700](https://mui.com/static/colors-preview/purple-700-24x24.png) ![purple 800](https://mui.com/static/colors-preview/purple-800-24x24.png) ![purple 900](https://mui.com/static/colors-preview/purple-900-24x24.png) ![purple A100](https://mui.com/static/colors-preview/purple-A100-24x24.png) ![purple A200](https://mui.com/static/colors-preview/purple-A200-24x24.png) ![purple A400](https://mui.com/static/colors-preview/purple-A400-24x24.png) ![purple A700](https://mui.com/static/colors-preview/purple-A700-24x24.png)
     */
    const purple: {
        /**
         * Preview: ![purple 50](https://mui.com/static/colors-preview/purple-50-24x24.png)
         */
        50: '#f3e5f5';
        /**
         * Preview: ![purple 100](https://mui.com/static/colors-preview/purple-100-24x24.png)
         */
        100: '#e1bee7';
        /**
         * Preview: ![purple 200](https://mui.com/static/colors-preview/purple-200-24x24.png)
         */
        200: '#ce93d8';
        /**
         * Preview: ![purple 300](https://mui.com/static/colors-preview/purple-300-24x24.png)
         */
        300: '#ba68c8';
        /**
         * Preview: ![purple 400](https://mui.com/static/colors-preview/purple-400-24x24.png)
         */
        400: '#ab47bc';
        /**
         * Preview: ![purple 500](https://mui.com/static/colors-preview/purple-500-24x24.png)
         */
        500: '#9c27b0';
        /**
         * Preview: ![purple 600](https://mui.com/static/colors-preview/purple-600-24x24.png)
         */
        600: '#8e24aa';
        /**
         * Preview: ![purple 700](https://mui.com/static/colors-preview/purple-700-24x24.png)
         */
        700: '#7b1fa2';
        /**
         * Preview: ![purple 800](https://mui.com/static/colors-preview/purple-800-24x24.png)
         */
        800: '#6a1b9a';
        /**
         * Preview: ![purple 900](https://mui.com/static/colors-preview/purple-900-24x24.png)
         */
        900: '#4a148c';
        /**
         * Preview: ![purple A100](https://mui.com/static/colors-preview/purple-A100-24x24.png)
         */
        A100: '#ea80fc';
        /**
         * Preview: ![purple A200](https://mui.com/static/colors-preview/purple-A200-24x24.png)
         */
        A200: '#e040fb';
        /**
         * Preview: ![purple A400](https://mui.com/static/colors-preview/purple-A400-24x24.png)
         */
        A400: '#d500f9';
        /**
         * Preview: ![purple A700](https://mui.com/static/colors-preview/purple-A700-24x24.png)
         */
        A700: '#aa00ff';
    };
    export default purple;
}
declare module "@mui/material/colors/red" {
    /**
     * ![red 50](https://mui.com/static/colors-preview/red-50-24x24.png) ![red 100](https://mui.com/static/colors-preview/red-100-24x24.png) ![red 200](https://mui.com/static/colors-preview/red-200-24x24.png) ![red 300](https://mui.com/static/colors-preview/red-300-24x24.png) ![red 400](https://mui.com/static/colors-preview/red-400-24x24.png) ![red 500](https://mui.com/static/colors-preview/red-500-24x24.png) ![red 600](https://mui.com/static/colors-preview/red-600-24x24.png) ![red 700](https://mui.com/static/colors-preview/red-700-24x24.png) ![red 800](https://mui.com/static/colors-preview/red-800-24x24.png) ![red 900](https://mui.com/static/colors-preview/red-900-24x24.png) ![red A100](https://mui.com/static/colors-preview/red-A100-24x24.png) ![red A200](https://mui.com/static/colors-preview/red-A200-24x24.png) ![red A400](https://mui.com/static/colors-preview/red-A400-24x24.png) ![red A700](https://mui.com/static/colors-preview/red-A700-24x24.png)
     */
    const red: {
        /**
         * Preview: ![red 50](https://mui.com/static/colors-preview/red-50-24x24.png)
         */
        50: '#ffebee';
        /**
         * Preview: ![red 100](https://mui.com/static/colors-preview/red-100-24x24.png)
         */
        100: '#ffcdd2';
        /**
         * Preview: ![red 200](https://mui.com/static/colors-preview/red-200-24x24.png)
         */
        200: '#ef9a9a';
        /**
         * Preview: ![red 300](https://mui.com/static/colors-preview/red-300-24x24.png)
         */
        300: '#e57373';
        /**
         * Preview: ![red 400](https://mui.com/static/colors-preview/red-400-24x24.png)
         */
        400: '#ef5350';
        /**
         * Preview: ![red 500](https://mui.com/static/colors-preview/red-500-24x24.png)
         */
        500: '#f44336';
        /**
         * Preview: ![red 600](https://mui.com/static/colors-preview/red-600-24x24.png)
         */
        600: '#e53935';
        /**
         * Preview: ![red 700](https://mui.com/static/colors-preview/red-700-24x24.png)
         */
        700: '#d32f2f';
        /**
         * Preview: ![red 800](https://mui.com/static/colors-preview/red-800-24x24.png)
         */
        800: '#c62828';
        /**
         * Preview: ![red 900](https://mui.com/static/colors-preview/red-900-24x24.png)
         */
        900: '#b71c1c';
        /**
         * Preview: ![red A100](https://mui.com/static/colors-preview/red-A100-24x24.png)
         */
        A100: '#ff8a80';
        /**
         * Preview: ![red A200](https://mui.com/static/colors-preview/red-A200-24x24.png)
         */
        A200: '#ff5252';
        /**
         * Preview: ![red A400](https://mui.com/static/colors-preview/red-A400-24x24.png)
         */
        A400: '#ff1744';
        /**
         * Preview: ![red A700](https://mui.com/static/colors-preview/red-A700-24x24.png)
         */
        A700: '#d50000';
    };
    export default red;
}
declare module "@mui/material/colors/teal" {
    /**
     * ![teal 50](https://mui.com/static/colors-preview/teal-50-24x24.png) ![teal 100](https://mui.com/static/colors-preview/teal-100-24x24.png) ![teal 200](https://mui.com/static/colors-preview/teal-200-24x24.png) ![teal 300](https://mui.com/static/colors-preview/teal-300-24x24.png) ![teal 400](https://mui.com/static/colors-preview/teal-400-24x24.png) ![teal 500](https://mui.com/static/colors-preview/teal-500-24x24.png) ![teal 600](https://mui.com/static/colors-preview/teal-600-24x24.png) ![teal 700](https://mui.com/static/colors-preview/teal-700-24x24.png) ![teal 800](https://mui.com/static/colors-preview/teal-800-24x24.png) ![teal 900](https://mui.com/static/colors-preview/teal-900-24x24.png) ![teal A100](https://mui.com/static/colors-preview/teal-A100-24x24.png) ![teal A200](https://mui.com/static/colors-preview/teal-A200-24x24.png) ![teal A400](https://mui.com/static/colors-preview/teal-A400-24x24.png) ![teal A700](https://mui.com/static/colors-preview/teal-A700-24x24.png)
     */
    const teal: {
        /**
         * Preview: ![teal 50](https://mui.com/static/colors-preview/teal-50-24x24.png)
         */
        50: '#e0f2f1';
        /**
         * Preview: ![teal 100](https://mui.com/static/colors-preview/teal-100-24x24.png)
         */
        100: '#b2dfdb';
        /**
         * Preview: ![teal 200](https://mui.com/static/colors-preview/teal-200-24x24.png)
         */
        200: '#80cbc4';
        /**
         * Preview: ![teal 300](https://mui.com/static/colors-preview/teal-300-24x24.png)
         */
        300: '#4db6ac';
        /**
         * Preview: ![teal 400](https://mui.com/static/colors-preview/teal-400-24x24.png)
         */
        400: '#26a69a';
        /**
         * Preview: ![teal 500](https://mui.com/static/colors-preview/teal-500-24x24.png)
         */
        500: '#009688';
        /**
         * Preview: ![teal 600](https://mui.com/static/colors-preview/teal-600-24x24.png)
         */
        600: '#00897b';
        /**
         * Preview: ![teal 700](https://mui.com/static/colors-preview/teal-700-24x24.png)
         */
        700: '#00796b';
        /**
         * Preview: ![teal 800](https://mui.com/static/colors-preview/teal-800-24x24.png)
         */
        800: '#00695c';
        /**
         * Preview: ![teal 900](https://mui.com/static/colors-preview/teal-900-24x24.png)
         */
        900: '#004d40';
        /**
         * Preview: ![teal A100](https://mui.com/static/colors-preview/teal-A100-24x24.png)
         */
        A100: '#a7ffeb';
        /**
         * Preview: ![teal A200](https://mui.com/static/colors-preview/teal-A200-24x24.png)
         */
        A200: '#64ffda';
        /**
         * Preview: ![teal A400](https://mui.com/static/colors-preview/teal-A400-24x24.png)
         */
        A400: '#1de9b6';
        /**
         * Preview: ![teal A700](https://mui.com/static/colors-preview/teal-A700-24x24.png)
         */
        A700: '#00bfa5';
    };
    export default teal;
}
declare module "@mui/material/colors/yellow" {
    /**
     * ![yellow 50](https://mui.com/static/colors-preview/yellow-50-24x24.png) ![yellow 100](https://mui.com/static/colors-preview/yellow-100-24x24.png) ![yellow 200](https://mui.com/static/colors-preview/yellow-200-24x24.png) ![yellow 300](https://mui.com/static/colors-preview/yellow-300-24x24.png) ![yellow 400](https://mui.com/static/colors-preview/yellow-400-24x24.png) ![yellow 500](https://mui.com/static/colors-preview/yellow-500-24x24.png) ![yellow 600](https://mui.com/static/colors-preview/yellow-600-24x24.png) ![yellow 700](https://mui.com/static/colors-preview/yellow-700-24x24.png) ![yellow 800](https://mui.com/static/colors-preview/yellow-800-24x24.png) ![yellow 900](https://mui.com/static/colors-preview/yellow-900-24x24.png) ![yellow A100](https://mui.com/static/colors-preview/yellow-A100-24x24.png) ![yellow A200](https://mui.com/static/colors-preview/yellow-A200-24x24.png) ![yellow A400](https://mui.com/static/colors-preview/yellow-A400-24x24.png) ![yellow A700](https://mui.com/static/colors-preview/yellow-A700-24x24.png)
     */
    const yellow: {
        /**
         * Preview: ![yellow 50](https://mui.com/static/colors-preview/yellow-50-24x24.png)
         */
        50: '#fffde7';
        /**
         * Preview: ![yellow 100](https://mui.com/static/colors-preview/yellow-100-24x24.png)
         */
        100: '#fff9c4';
        /**
         * Preview: ![yellow 200](https://mui.com/static/colors-preview/yellow-200-24x24.png)
         */
        200: '#fff59d';
        /**
         * Preview: ![yellow 300](https://mui.com/static/colors-preview/yellow-300-24x24.png)
         */
        300: '#fff176';
        /**
         * Preview: ![yellow 400](https://mui.com/static/colors-preview/yellow-400-24x24.png)
         */
        400: '#ffee58';
        /**
         * Preview: ![yellow 500](https://mui.com/static/colors-preview/yellow-500-24x24.png)
         */
        500: '#ffeb3b';
        /**
         * Preview: ![yellow 600](https://mui.com/static/colors-preview/yellow-600-24x24.png)
         */
        600: '#fdd835';
        /**
         * Preview: ![yellow 700](https://mui.com/static/colors-preview/yellow-700-24x24.png)
         */
        700: '#fbc02d';
        /**
         * Preview: ![yellow 800](https://mui.com/static/colors-preview/yellow-800-24x24.png)
         */
        800: '#f9a825';
        /**
         * Preview: ![yellow 900](https://mui.com/static/colors-preview/yellow-900-24x24.png)
         */
        900: '#f57f17';
        /**
         * Preview: ![yellow A100](https://mui.com/static/colors-preview/yellow-A100-24x24.png)
         */
        A100: '#ffff8d';
        /**
         * Preview: ![yellow A200](https://mui.com/static/colors-preview/yellow-A200-24x24.png)
         */
        A200: '#ffff00';
        /**
         * Preview: ![yellow A400](https://mui.com/static/colors-preview/yellow-A400-24x24.png)
         */
        A400: '#ffea00';
        /**
         * Preview: ![yellow A700](https://mui.com/static/colors-preview/yellow-A700-24x24.png)
         */
        A700: '#ffd600';
    };
    export default yellow;
}
declare module "@mui/material/colors/index" {
    export { default as amber } from "@mui/material/colors/amber";
    export { default as blue } from "@mui/material/colors/blue";
    export { default as blueGrey } from "@mui/material/colors/blueGrey";
    export { default as brown } from "@mui/material/colors/brown";
    export { default as common } from "@mui/material/colors/common";
    export { default as cyan } from "@mui/material/colors/cyan";
    export { default as deepOrange } from "@mui/material/colors/deepOrange";
    export { default as deepPurple } from "@mui/material/colors/deepPurple";
    export { default as green } from "@mui/material/colors/green";
    export { default as grey } from "@mui/material/colors/grey";
    export { default as indigo } from "@mui/material/colors/indigo";
    export { default as lightBlue } from "@mui/material/colors/lightBlue";
    export { default as lightGreen } from "@mui/material/colors/lightGreen";
    export { default as lime } from "@mui/material/colors/lime";
    export { default as orange } from "@mui/material/colors/orange";
    export { default as pink } from "@mui/material/colors/pink";
    export { default as purple } from "@mui/material/colors/purple";
    export { default as red } from "@mui/material/colors/red";
    export { default as teal } from "@mui/material/colors/teal";
    export { default as yellow } from "@mui/material/colors/yellow";
}
declare module "@mui/utils/chainPropTypes" {
    import PropTypes from 'prop-types';
    export type chainPropTypes = <A, B>(propType1: PropTypes.Validator<A>, propType2: PropTypes.Validator<B>) => PropTypes.Validator<A & B>;
    export default chainPropTypes;
}
declare module "@mui/utils/deepmerge" {
    export function isPlainObject(item: unknown): item is Record<keyof any, unknown>;
    export interface DeepmergeOptions {
        clone?: boolean;
    }
    export type deepmerge = <T>(target: T, source: unknown, options?: DeepmergeOptions) => T;
    export default deepmerge;
}
declare module "@mui/utils/elementAcceptingRef" {
    import PropTypes from 'prop-types';
    const elementAcceptingRef: PropTypes.Requireable<unknown>;
    export default elementAcceptingRef;
}
declare module "@mui/utils/elementTypeAcceptingRef" {
    import PropTypes from 'prop-types';
    const _default: PropTypes.Validator<PropTypes.ReactComponentLike | null | undefined>;
    export default _default;
}
declare module "@mui/utils/exactProp" {
    import { ValidationMap } from 'prop-types';
    export type exactProp = <T>(propTypes: ValidationMap<T>) => ValidationMap<T>;
    export default exactProp;
}
declare module "@mui/utils/formatMuiErrorMessage" {
    /**
     * WARNING: Don't import this directly.
     * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.
     * @param {number} code
     */
    export type formatMuiErrorMessage = (code: number) => string;
    export default formatMuiErrorMessage;
}
declare module "@mui/utils/getDisplayName" {
    import * as React from 'react';
    export function getFunctionName(fn: Function): string;
    /**
     * cherry-pick from
     * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
     * originally forked from recompose/getDisplayName with added IE11 support
     */
    export type getDisplayName = (Component: React.ElementType) => string | undefined;
    export default getDisplayName;
}
declare module "@mui/utils/HTMLElementType" {
    export type HTMLElementType = (props: {
        [key: string]: unknown;
    }, propName: string, componentName: string, location: string, propFullName: string) => Error | null;
    export default HTMLElementType;
}
declare module "@mui/utils/ponyfillGlobal" {
    const _default: any;
    export default _default;
}
declare module "@mui/utils/refType" {
    import PropTypes from 'prop-types';
    const refType: PropTypes.Requireable<object>;
    export default refType;
}
declare module "@mui/utils/capitalize" {
    export type capitalize = (string: string) => string;
    export default capitalize;
}
declare module "@mui/utils/createChainedFunction" {
    /**
     * Safe chained function.
     *
     * Will only create a new function if needed,
     * otherwise will pass back existing functions or null.
     */
    export type createChainedFunction = <Args extends any[], This>(...funcs: Array<(this: This, ...args: Args) => any>) => (this: This, ...args: Args) => void;
    export default createChainedFunction;
}
declare module "@mui/utils/debounce" {
    export interface Cancelable {
        clear(): void;
    }
    export type debounce = <T extends (...args: any[]) => any>(func: T, wait?: number) => T & Cancelable;
    export default debounce;
}
declare module "@mui/utils/deprecatedPropType" {
    export type deprecatedPropType = <T>(validator: T, reason: string) => T;
    export default deprecatedPropType;
}
declare module "@mui/utils/isMuiElement" {
    export type isMuiElement = (element: any, muiNames: readonly string[]) => boolean;
    export default isMuiElement;
}
declare module "@mui/utils/ownerDocument" {
    export type ownerDocument = (node: Node | null | undefined) => Document;
    export default ownerDocument;
}
declare module "@mui/utils/ownerWindow" {
    export type ownerWindow = (node: Node | undefined) => Window;
    export default ownerWindow;
}
declare module "@mui/utils/requirePropFactory" {
    import * as React from 'react';
    export type requirePropFactory = (componentNameInError: string, Component?: React.JSXElementConstructor<unknown>) => any;
    export default requirePropFactory;
}
declare module "@mui/utils/setRef" {
    import * as React from 'react';
    /**
     * TODO v5: consider making it private
     *
     * passes {value} to {ref}
     *
     * WARNING: Be sure to only call this inside a callback that is passed as a ref.
     * Otherwise, make sure to cleanup the previous {ref} if it changes. See
     * https://github.com/mui/material-ui/issues/13539
     *
     * Useful if you want to expose the ref of an inner component to the public API
     * while still using it inside the component.
     * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
     */
    export type setRef<T> = (ref: React.MutableRefObject<T | null> | ((instance: T | null) => void) | null | undefined, value: T | null) => void;
    export default setRef;
}
declare module "@mui/utils/useEnhancedEffect" {
    import * as React from 'react';
    export type useEnhancedEffect = (effect: React.EffectCallback, deps?: React.DependencyList) => void;
    export default useEnhancedEffect;
}
declare module "@mui/utils/useId" {
    /**
     *
     * @example <div id={useId()} />
     * @param idOverride
     * @returns {string}
     */
    export type useId = (idOverride?: string) => string | undefined;
    export default useId;
}
declare module "@mui/utils/unsupportedProp" {
    export type unsupportedProp = (props: {
        [key: string]: any;
    }, propName: string, componentName: string, location: string, propFullName: string) => Error | null;
    export default unsupportedProp;
}
declare module "@mui/utils/useControlled" {
    export interface UseControlledProps<T = unknown> {
        /**
         * Holds the component value when it's controlled.
         */
        controlled: T | undefined;
        /**
         * The default value when uncontrolled.
         */
        default: T | undefined;
        /**
         * The component name displayed in warnings.
         */
        name: string;
        /**
         * The name of the state variable displayed in warnings.
         */
        state?: string;
    }
    export type useControlled = <T = unknown>(props: UseControlledProps<T>) => [T, (newValue: T | ((prevValue: T) => T)) => void];
    export default useControlled;
}
declare module "@mui/utils/useEventCallback" {
    /**
     * https://github.com/facebook/react/issues/14099#issuecomment-440013892
     */
    export type useEventCallback = <Args extends unknown[], Return>(fn: (...args: Args) => Return) => (...args: Args) => Return;
    export default useEventCallback;
}
declare module "@mui/utils/useForkRef" {
    import * as React from 'react';
    export type useForkRef = <Instance>(refA: React.Ref<Instance> | null | undefined, refB: React.Ref<Instance> | null | undefined) => React.Ref<Instance> | null;
    export default useForkRef;
}
declare module "@mui/utils/useIsFocusVisible" {
    import * as React from 'react';
    export function teardown(doc: Document): void;
    export interface UseIsFocusVisibleResult {
        isFocusVisibleRef: React.MutableRefObject<boolean>;
        onBlur: (event: React.FocusEvent<any>) => void;
        onFocus: (event: React.FocusEvent<any>) => void;
        ref: React.Ref<unknown>;
    }
    export type useIsFocusVisible = () => UseIsFocusVisibleResult;
    export default useIsFocusVisible;
}
declare module "@mui/utils/getScrollbarSize" {
    export type getScrollbarSize = (doc: Document) => number;
    export default getScrollbarSize;
}
declare module "@mui/utils/scrollLeft" {
    export function detectScrollType(): string;
    export function getNormalizedScrollLeft(element: HTMLElement, direction: string): number;
}
declare module "@mui/utils/usePreviousProps" {
    const usePreviousProps: (value: object) => object;
    export default usePreviousProps;
}
declare module "@mui/utils/visuallyHidden" {
    const visuallyHidden: import('react').CSSProperties;
    export default visuallyHidden;
}
declare module "@mui/utils/integerPropType" {
    export function getTypeByValue(value: any): any;
    function _default(props: any, propName: any, ...other: any[]): RangeError | null;
    namespace _default {
        export { requiredInteger as isRequired };
    }
    export default _default;
    function requiredInteger(props: any, propName: any, componentName: any, location: any): RangeError | null;
}
declare module "@mui/utils/resolveProps" {
    /**
     * Add keys, values of `defaultProps` that does not exist in `props`
     * @param {object} defaultProps
     * @param {object} props
     * @returns {object} resolved props
     */
    export type resolveProps = <T extends {
        className?: string;
    } & Record<string, unknown>>(defaultProps: T, props: T) => T;
    export default resolveProps;
}
declare module "@mui/utils/index" {
    export { default as chainPropTypes } from "@mui/utils/chainPropTypes";
    export { default as deepmerge } from "@mui/utils/deepmerge";
    export { isPlainObject } from "@mui/utils/deepmerge";
    export { default as elementAcceptingRef } from "@mui/utils/elementAcceptingRef";
    export { default as elementTypeAcceptingRef } from "@mui/utils/elementTypeAcceptingRef";
    export { default as exactProp } from "@mui/utils/exactProp";
    export { default as formatMuiErrorMessage } from "@mui/utils/formatMuiErrorMessage";
    export { default as getDisplayName } from "@mui/utils/getDisplayName";
    export { default as HTMLElementType } from "@mui/utils/HTMLElementType";
    export { default as ponyfillGlobal } from "@mui/utils/ponyfillGlobal";
    export { default as refType } from "@mui/utils/refType";
    export { default as unstable_capitalize } from "@mui/utils/capitalize";
    export { default as unstable_createChainedFunction } from "@mui/utils/createChainedFunction";
    export { default as unstable_debounce } from "@mui/utils/debounce";
    export { default as unstable_deprecatedPropType } from "@mui/utils/deprecatedPropType";
    export { default as unstable_isMuiElement } from "@mui/utils/isMuiElement";
    export { default as unstable_ownerDocument } from "@mui/utils/ownerDocument";
    export { default as unstable_ownerWindow } from "@mui/utils/ownerWindow";
    export { default as unstable_requirePropFactory } from "@mui/utils/requirePropFactory";
    export { default as unstable_setRef } from "@mui/utils/setRef";
    export { default as unstable_useEnhancedEffect } from "@mui/utils/useEnhancedEffect";
    export { default as unstable_useId } from "@mui/utils/useId";
    export { default as unstable_unsupportedProp } from "@mui/utils/unsupportedProp";
    export { default as unstable_useControlled } from "@mui/utils/useControlled";
    export { default as unstable_useEventCallback } from "@mui/utils/useEventCallback";
    export { default as unstable_useForkRef } from "@mui/utils/useForkRef";
    export { default as unstable_useIsFocusVisible } from "@mui/utils/useIsFocusVisible";
    export { default as unstable_getScrollbarSize } from "@mui/utils/getScrollbarSize";
    export { detectScrollType as unstable_detectScrollType, getNormalizedScrollLeft as unstable_getNormalizedScrollLeft, } from "@mui/utils/scrollLeft";
    export { default as usePreviousProps } from "@mui/utils/usePreviousProps";
    export { default as visuallyHidden } from "@mui/utils/visuallyHidden";
    export { default as integerPropType } from "@mui/utils/integerPropType";
    export { default as internal_resolveProps } from "@mui/utils/resolveProps";
}
declare module "@mui/material/utils/capitalize" {
    import { unstable_capitalize as capitalize } from "@mui/utils/index";
    export default capitalize;
}
declare module "@mui/material/utils/createChainedFunction" {
    import { unstable_createChainedFunction as createChainedFunction } from "@mui/utils/index";
    export default createChainedFunction;
}
declare module "@mui/material/utils/createSvgIcon" {
    import SvgIcon from "@mui/material/SvgIcon/index";
    export type createSvgIcon = (path: React.ReactNode, displayName: string) => typeof SvgIcon;
    export default createSvgIcon;
}
declare module "@mui/material/utils/debounce" {
    import { unstable_debounce as debounce } from "@mui/utils/index";
    export default debounce;
}
declare module "@mui/material/utils/deprecatedPropType" {
    import { unstable_deprecatedPropType as deprecatedPropType } from "@mui/utils/index";
    export default deprecatedPropType;
}
declare module "@mui/material/utils/isMuiElement" {
    import { unstable_isMuiElement as isMuiElement } from "@mui/utils/index";
    export default isMuiElement;
}
declare module "@mui/material/utils/ownerDocument" {
    import { unstable_ownerDocument as ownerDocument } from "@mui/utils/index";
    export default ownerDocument;
}
declare module "@mui/material/utils/ownerWindow" {
    import { unstable_ownerWindow as ownerWindow } from "@mui/utils/index";
    export default ownerWindow;
}
declare module "@mui/material/utils/requirePropFactory" {
    import { unstable_requirePropFactory as requirePropFactory } from "@mui/utils/index";
    export default requirePropFactory;
}
declare module "@mui/material/utils/setRef" {
    import { unstable_setRef as setRef } from "@mui/utils/index";
    export default setRef;
}
declare module "@mui/material/utils/useEnhancedEffect" {
    import { unstable_useEnhancedEffect as useEnhancedEffect } from "@mui/utils/index";
    export default useEnhancedEffect;
}
declare module "@mui/material/utils/useId" {
    import { unstable_useId as useId } from "@mui/utils/index";
    export default useId;
}
declare module "@mui/material/utils/unsupportedProp" {
    import { unstable_unsupportedProp as unsupportedProp } from "@mui/utils/index";
    export default unsupportedProp;
}
declare module "@mui/material/utils/useControlled" {
    import { unstable_useControlled as useControlled } from "@mui/utils/index";
    export default useControlled;
}
declare module "@mui/material/utils/useEventCallback" {
    import { unstable_useEventCallback as useEventCallback } from "@mui/utils/index";
    export default useEventCallback;
}
declare module "@mui/material/utils/useForkRef" {
    import { unstable_useForkRef as useForkRef } from "@mui/utils/index";
    export default useForkRef;
}
declare module "@mui/material/utils/useIsFocusVisible" {
    import { unstable_useIsFocusVisible as useIsFocusVisible } from "@mui/utils/index";
    export default useIsFocusVisible;
}
declare module "@mui/material/utils/index" {
    export { default as capitalize } from "@mui/material/utils/capitalize";
    export { default as createChainedFunction } from "@mui/material/utils/createChainedFunction";
    export { default as createSvgIcon } from "@mui/material/utils/createSvgIcon";
    export { default as debounce } from "@mui/material/utils/debounce";
    export { default as deprecatedPropType } from "@mui/material/utils/deprecatedPropType";
    export { default as isMuiElement } from "@mui/material/utils/isMuiElement";
    export { default as ownerDocument } from "@mui/material/utils/ownerDocument";
    export { default as ownerWindow } from "@mui/material/utils/ownerWindow";
    export { default as requirePropFactory } from "@mui/material/utils/requirePropFactory";
    export { default as setRef } from "@mui/material/utils/setRef";
    export { default as unstable_useEnhancedEffect } from "@mui/material/utils/useEnhancedEffect";
    export { default as unstable_useId } from "@mui/material/utils/useId";
    export { default as unsupportedProp } from "@mui/material/utils/unsupportedProp";
    export { default as useControlled } from "@mui/material/utils/useControlled";
    export { default as useEventCallback } from "@mui/material/utils/useEventCallback";
    export { default as useForkRef } from "@mui/material/utils/useForkRef";
    export { default as useIsFocusVisible } from "@mui/material/utils/useIsFocusVisible";
    export { unstable_ClassNameGenerator } from "@mui/core/index";
}
declare module "@mui/material/Box/Box" {
    import { SxProps, SystemProps } from "@mui/system/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    export interface BoxTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & SystemProps<Theme> & {
            children?: React.ReactNode;
            component?: React.ElementType;
            ref?: React.Ref<unknown>;
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Box](https://mui.com/components/box/)
     *
     * API:
     *
     * - [Box API](https://mui.com/components/box/#api)
     * NOTE - As a CSS utility component, Box also supports all system props.
     * You can use them as props directly on the component.
     * Props use same syntax as `sx`. Not all props are listed in the API section.
     *
     * Example:
     *
     * // For instance, a Box with margin-top:
     * <Box mt={2}>
     */
    const Box: OverridableComponent<BoxTypeMap>;
    export type BoxProps<D extends React.ElementType = BoxTypeMap['defaultComponent'], P = {}> = OverrideProps<BoxTypeMap<P, D>, D>;
    /**
     *
     * Demos:
     *
     * - [Box](https://mui.com/components/box/)
     *
     * API:
     *
     * - [Box API](https://mui.com/components/box/#api)
     * NOTE - As a CSS utility component, Box also supports all system props.
     * You can use them as props directly on the component.
     * Props use same syntax as `sx`. Not all props are listed in the API section.
     *
     * Example:
     *
     * // For instance, a Box with margin-top:
     * <Box mt={2}>
     */
    export default Box;
}
declare module "@mui/material/Box/index" {
    export { default } from "@mui/material/Box/Box";
    export * from "@mui/material/Box/Box";
}
declare module "@mui/material/ClickAwayListener/index" {
    export { default } from "@mui/core/ClickAwayListener/index";
    export * from "@mui/core/ClickAwayListener/index";
}
declare module "@mui/material/darkScrollbar/index" {
    export type darkScrollbar = (options?: {
        track: string;
        thumb: string;
        active: string;
    }) => {
        scrollbarColor: string;
        '&::-webkit-scrollbar, & *::-webkit-scrollbar': {
            backgroundColor: string;
        };
        '&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb': {
            borderRadius: number;
            backgroundColor: string;
            minHeight: number;
            border: string;
        };
        '&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus': {
            backgroundColor: string;
        };
        '&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active': {
            backgroundColor: string;
        };
        '&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover': {
            backgroundColor: string;
        };
        '&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner': {
            backgroundColor: string;
        };
    };
    export default darkScrollbar;
}
declare module "@mui/material/Grow/Grow" {
    import * as React from 'react';
    import { TransitionProps } from "@mui/material/transitions/transition";
    export interface GrowProps extends Omit<TransitionProps, 'timeout'> {
        /**
         * Perform the enter transition when it first mounts if `in` is also `true`.
         * Set this to `false` to disable this behavior.
         * @default true
         */
        appear?: boolean;
        /**
         * A single child content element.
         */
        children: React.ReactElement<any, any>;
        /**
         * The transition timing function.
         * You may specify a single easing or a object containing enter and exit values.
         */
        easing?: TransitionProps['easing'];
        /**
         * If `true`, the component will transition in.
         */
        in?: boolean;
        ref?: React.Ref<unknown>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         *
         * Set to 'auto' to automatically calculate transition time based on height.
         * @default 'auto'
         */
        timeout?: TransitionProps['timeout'] | 'auto';
    }
    /**
     * The Grow transition is used by the [Tooltip](https://mui.com/components/tooltips/) and
     * [Popover](https://mui.com/components/popover/) components.
     * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
     *
     * Demos:
     *
     * - [Popover](https://mui.com/components/popover/)
     * - [Transitions](https://mui.com/components/transitions/)
     *
     * API:
     *
     * - [Grow API](https://mui.com/api/grow/)
     * - inherits [Transition API](http://reactcommunity.org/react-transition-group/transition/#Transition-props)
     */
    export type Grow = (props: GrowProps) => JSX.Element;
    export default Grow;
}
declare module "@mui/material/Grow/index" {
    export { default } from "@mui/material/Grow/Grow";
    export * from "@mui/material/Grow/Grow";
}
declare module "@mui/material/Hidden/Hidden" {
    import * as React from 'react';
    import { Breakpoint } from "@mui/system/index";
    export interface HiddenProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Specify which implementation to use.  'js' is the default, 'css' works better for
         * server-side rendering.
         * @default 'js'
         */
        implementation?: 'js' | 'css';
        /**
         * You can use this prop when choosing the `js` implementation with server-side rendering.
         *
         * As `window.innerWidth` is unavailable on the server,
         * we default to rendering an empty component during the first mount.
         * You might want to use a heuristic to approximate
         * the screen width of the client browser screen width.
         *
         * For instance, you could be using the user-agent or the client-hints.
         * https://caniuse.com/#search=client%20hint
         */
        initialWidth?: Breakpoint;
        /**
         * If `true`, screens this size and down are hidden.
         * @default false
         */
        lgDown?: boolean;
        /**
         * If `true`, screens this size and up are hidden.
         * @default false
         */
        lgUp?: boolean;
        /**
         * If `true`, screens this size and down are hidden.
         * @default false
         */
        mdDown?: boolean;
        /**
         * If `true`, screens this size and up are hidden.
         * @default false
         */
        mdUp?: boolean;
        /**
         * Hide the given breakpoint(s).
         */
        only?: Breakpoint | Breakpoint[];
        /**
         * If `true`, screens this size and down are hidden.
         * @default false
         */
        smDown?: boolean;
        /**
         * If `true`, screens this size and up are hidden.
         * @default false
         */
        smUp?: boolean;
        /**
         * If `true`, screens this size and down are hidden.
         * @default false
         */
        xlDown?: boolean;
        /**
         * If `true`, screens this size and up are hidden.
         * @default false
         */
        xlUp?: boolean;
        /**
         * If `true`, screens this size and down are hidden.
         * @default false
         */
        xsDown?: boolean;
        /**
         * If `true`, screens this size and up are hidden.
         * @default false
         */
        xsUp?: boolean;
    }
    /**
     * Responsively hides children based on the selected implementation.
     *
     * Demos:
     *
     * - [Hidden](https://mui.com/components/hidden/)
     *
     * API:
     *
     * - [Hidden API](https://mui.com/api/hidden/)
     */
    const Hidden: React.JSXElementConstructor<HiddenProps>;
    export default Hidden;
}
declare module "@mui/material/Hidden/index" {
    export { default } from "@mui/material/Hidden/Hidden";
    export * from "@mui/material/Hidden/Hidden";
}
declare module "@mui/material/NoSsr/index" {
    export { default } from "@mui/core/NoSsr/index";
    export * from "@mui/core/NoSsr/index";
}
declare module "@mui/material/Portal/index" {
    export { default } from "@mui/core/Portal/index";
    export * from "@mui/core/Portal/index";
}
declare module "@mui/material/TextareaAutosize/index" {
    export { default } from "@mui/core/TextareaAutosize/index";
    export * from "@mui/core/TextareaAutosize/index";
}
declare module "@mui/material/useScrollTrigger/useScrollTrigger" {
    export interface UseScrollTriggerOptions {
        disableHysteresis?: boolean;
        target?: Node | Window;
        threshold?: number;
    }
    export type useScrollTrigger = (options?: UseScrollTriggerOptions) => boolean;
    export default useScrollTrigger;
}
declare module "@mui/material/useScrollTrigger/index" {
    export { default } from "@mui/material/useScrollTrigger/useScrollTrigger";
}
declare module "@mui/material/Zoom/Zoom" {
    import * as React from 'react';
    import { TransitionProps } from "@mui/material/transitions/transition";
    export interface ZoomProps extends TransitionProps {
        /**
         * Perform the enter transition when it first mounts if `in` is also `true`.
         * Set this to `false` to disable this behavior.
         * @default true
         */
        appear?: boolean;
        /**
         * A single child content element.
         */
        children: React.ReactElement<any, any>;
        /**
         * The transition timing function.
         * You may specify a single easing or a object containing enter and exit values.
         */
        easing?: TransitionProps['easing'];
        /**
         * If `true`, the component will transition in.
         */
        in?: boolean;
        ref?: React.Ref<unknown>;
        /**
         * The duration for the transition, in milliseconds.
         * You may specify a single timeout for all transitions, or individually with an object.
         * @default {
         *   enter: theme.transitions.duration.enteringScreen,
         *   exit: theme.transitions.duration.leavingScreen,
         * }
         */
        timeout?: TransitionProps['timeout'];
    }
    /**
     * The Zoom transition can be used for the floating variant of the
     * [Button](https://mui.com/components/buttons/#floating-action-buttons) component.
     * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
     *
     * Demos:
     *
     * - [Transitions](https://mui.com/components/transitions/)
     *
     * API:
     *
     * - [Zoom API](https://mui.com/api/zoom/)
     * - inherits [Transition API](http://reactcommunity.org/react-transition-group/transition/#Transition-props)
     */
    export type Zoom = (props: ZoomProps) => JSX.Element;
    export default Zoom;
}
declare module "@mui/material/Zoom/index" {
    export { default } from "@mui/material/Zoom/Zoom";
    export * from "@mui/material/Zoom/Zoom";
}
declare module "@mui/material/useAutocomplete/useAutocomplete" {
    export { useAutocomplete as default } from "@mui/core/AutocompleteUnstyled/index";
    export * from "@mui/core/AutocompleteUnstyled/index";
}
declare module "@mui/material/useAutocomplete/index" {
    export { default } from "@mui/material/useAutocomplete/useAutocomplete";
    export * from "@mui/material/useAutocomplete/useAutocomplete";
}
declare module "@mui/material/GlobalStyles/GlobalStyles" {
    import { GlobalStylesProps as StyledGlobalStylesProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    export interface GlobalStylesProps {
        /**
         * The styles you want to apply globally.
         */
        styles: StyledGlobalStylesProps<Theme>['styles'];
    }
    /**
     *
     * Demos:
     *
     * - [How To Customize](https://mui.com/customization/how-to-customize/)
     *
     * API:
     *
     * - [GlobalStyles API](https://mui.com/api/global-styles/)
     */
    export type GlobalStyles = (props: GlobalStylesProps) => React.ReactElement;
    export default GlobalStyles;
}
declare module "@mui/material/GlobalStyles/index" {
    export { default } from "@mui/material/GlobalStyles/GlobalStyles";
    export * from "@mui/material/GlobalStyles/GlobalStyles";
}
declare module "@mui/material/index" {
    import * as React from 'react';
    import { DistributiveOmit } from "@mui/types/index";
    import { StyledComponentProps } from "@mui/material/styles/index";
    export { StyledComponentProps };
    /**
     * All standard components exposed by `material-ui` are `StyledComponents` with
     * certain `classes`, on which one can also set a top-level `className` and inline
     * `style`.
     * @deprecated will be removed in v5 for internal usage only
     */
    export type StandardProps<C, ClassKey extends string, Removals extends keyof C = never> = DistributiveOmit<C, 'classes' | Removals> & StyledComponentProps<ClassKey> & {
        className?: string;
        ref?: C extends {
            ref?: infer RefType;
        } ? RefType : React.Ref<unknown>;
        style?: React.CSSProperties;
    };
    /**
     * @internal
     * ONLY USE FROM WITHIN mui/material-ui
     *
     * Internal helper type for conform (describeConformance) components
     * However, we don't declare classes on this type.
     * It is recommended to declare them manually with an interface so that each class can have a separate JSDoc.
     */
    export type InternalStandardProps<C, Removals extends keyof C = never> = DistributiveOmit<C, 'classes' | Removals> & StyledComponentProps<never> & {
        ref?: C extends {
            ref?: infer RefType;
        } ? RefType : React.Ref<unknown>;
        className?: string;
        style?: React.CSSProperties;
    };
    export type PaletteMode = 'light' | 'dark';
    export interface Color {
        50: string;
        100: string;
        200: string;
        300: string;
        400: string;
        500: string;
        600: string;
        700: string;
        800: string;
        900: string;
        A100: string;
        A200: string;
        A400: string;
        A700: string;
    }
    export namespace PropTypes {
        type Color = 'inherit' | 'primary' | 'secondary' | 'default';
    }
    import * as colors from "@mui/material/colors/index";
    export { colors };
    export * from "@mui/material/styles/index";
    export * from "@mui/material/utils/index";
    export { default as Accordion } from "@mui/material/Accordion/index";
    export * from "@mui/material/Accordion/index";
    export { default as AccordionActions } from "@mui/material/AccordionActions/index";
    export * from "@mui/material/AccordionActions/index";
    export { default as AccordionDetails } from "@mui/material/AccordionDetails/index";
    export * from "@mui/material/AccordionDetails/index";
    export { default as AccordionSummary } from "@mui/material/AccordionSummary/index";
    export * from "@mui/material/AccordionSummary/index";
    export { default as Alert } from "@mui/material/Alert/index";
    export * from "@mui/material/Alert/index";
    export { default as AlertTitle } from "@mui/material/AlertTitle/index";
    export * from "@mui/material/AlertTitle/index";
    export { default as AppBar } from "@mui/material/AppBar/index";
    export * from "@mui/material/AppBar/index";
    export { default as Autocomplete } from "@mui/material/Autocomplete/index";
    export * from "@mui/material/Autocomplete/index";
    export { default as Avatar } from "@mui/material/Avatar/index";
    export * from "@mui/material/Avatar/index";
    export { default as AvatarGroup } from "@mui/material/AvatarGroup/index";
    export * from "@mui/material/AvatarGroup/index";
    export { default as Backdrop } from "@mui/material/Backdrop/index";
    export * from "@mui/material/Backdrop/index";
    export { default as Badge } from "@mui/material/Badge/index";
    export * from "@mui/material/Badge/index";
    export { default as BottomNavigation } from "@mui/material/BottomNavigation/index";
    export * from "@mui/material/BottomNavigation/index";
    export { default as BottomNavigationAction } from "@mui/material/BottomNavigationAction/index";
    export * from "@mui/material/BottomNavigationAction/index";
    export { default as Box } from "@mui/material/Box/index";
    export * from "@mui/material/Box/index";
    export { default as Breadcrumbs } from "@mui/material/Breadcrumbs/index";
    export * from "@mui/material/Breadcrumbs/index";
    export { default as Button } from "@mui/material/Button/index";
    export * from "@mui/material/Button/index";
    export { default as ButtonBase } from "@mui/material/ButtonBase/index";
    export * from "@mui/material/ButtonBase/index";
    export { default as ButtonGroup } from "@mui/material/ButtonGroup/index";
    export * from "@mui/material/ButtonGroup/index";
    export { default as Card } from "@mui/material/Card/index";
    export * from "@mui/material/Card/index";
    export { default as CardActionArea } from "@mui/material/CardActionArea/index";
    export * from "@mui/material/CardActionArea/index";
    export { default as CardActions } from "@mui/material/CardActions/index";
    export * from "@mui/material/CardActions/index";
    export { default as CardContent } from "@mui/material/CardContent/index";
    export * from "@mui/material/CardContent/index";
    export { default as CardHeader } from "@mui/material/CardHeader/index";
    export * from "@mui/material/CardHeader/index";
    export { default as CardMedia } from "@mui/material/CardMedia/index";
    export * from "@mui/material/CardMedia/index";
    export { default as Checkbox } from "@mui/material/Checkbox/index";
    export * from "@mui/material/Checkbox/index";
    export { default as Chip } from "@mui/material/Chip/index";
    export * from "@mui/material/Chip/index";
    export { default as CircularProgress } from "@mui/material/CircularProgress/index";
    export * from "@mui/material/CircularProgress/index";
    export { default as ClickAwayListener } from "@mui/material/ClickAwayListener/index";
    export * from "@mui/material/ClickAwayListener/index";
    export { default as Collapse } from "@mui/material/Collapse/index";
    export * from "@mui/material/Collapse/index";
    export { default as Container } from "@mui/material/Container/index";
    export * from "@mui/material/Container/index";
    export { default as CssBaseline } from "@mui/material/CssBaseline/index";
    export * from "@mui/material/CssBaseline/index";
    /**
     * @deprecated use color-scheme in CssBaseline or ScopedCssBaseline to modify scrollbar color
     */
    export { default as darkScrollbar } from "@mui/material/darkScrollbar/index";
    export * from "@mui/material/darkScrollbar/index";
    export { default as Dialog } from "@mui/material/Dialog/index";
    export * from "@mui/material/Dialog/index";
    export { default as DialogActions } from "@mui/material/DialogActions/index";
    export * from "@mui/material/DialogActions/index";
    export { default as DialogContent } from "@mui/material/DialogContent/index";
    export * from "@mui/material/DialogContent/index";
    export { default as DialogContentText } from "@mui/material/DialogContentText/index";
    export * from "@mui/material/DialogContentText/index";
    export { default as DialogTitle } from "@mui/material/DialogTitle/index";
    export * from "@mui/material/DialogTitle/index";
    export { default as Divider } from "@mui/material/Divider/index";
    export * from "@mui/material/Divider/index";
    export { default as Drawer } from "@mui/material/Drawer/index";
    export * from "@mui/material/Drawer/index";
    export { default as Fab } from "@mui/material/Fab/index";
    export * from "@mui/material/Fab/index";
    export { default as Fade } from "@mui/material/Fade/index";
    export * from "@mui/material/Fade/index";
    export { default as FilledInput } from "@mui/material/FilledInput/index";
    export * from "@mui/material/FilledInput/index";
    export { default as FormControl } from "@mui/material/FormControl/index";
    export * from "@mui/material/FormControl/index";
    export { default as FormControlLabel } from "@mui/material/FormControlLabel/index";
    export * from "@mui/material/FormControlLabel/index";
    export { default as FormGroup } from "@mui/material/FormGroup/index";
    export * from "@mui/material/FormGroup/index";
    export { default as FormHelperText } from "@mui/material/FormHelperText/index";
    export * from "@mui/material/FormHelperText/index";
    export { default as FormLabel } from "@mui/material/FormLabel/index";
    export * from "@mui/material/FormLabel/index";
    export { default as Grid } from "@mui/material/Grid/index";
    export * from "@mui/material/Grid/index";
    export { default as Grow } from "@mui/material/Grow/index";
    export * from "@mui/material/Grow/index";
    export { default as Hidden } from "@mui/material/Hidden/index";
    export * from "@mui/material/Hidden/index";
    export { default as Icon } from "@mui/material/Icon/index";
    export * from "@mui/material/Icon/index";
    export { default as IconButton } from "@mui/material/IconButton/index";
    export * from "@mui/material/IconButton/index";
    export { default as ImageList } from "@mui/material/ImageList/index";
    export * from "@mui/material/ImageList/index";
    export { default as ImageListItem } from "@mui/material/ImageListItem/index";
    export * from "@mui/material/ImageListItem/index";
    export { default as ImageListItemBar } from "@mui/material/ImageListItemBar/index";
    export * from "@mui/material/ImageListItemBar/index";
    export { default as Input } from "@mui/material/Input/index";
    export * from "@mui/material/Input/index";
    export { default as InputAdornment } from "@mui/material/InputAdornment/index";
    export * from "@mui/material/InputAdornment/index";
    export { default as InputBase } from "@mui/material/InputBase/index";
    export * from "@mui/material/InputBase/index";
    export { default as InputLabel } from "@mui/material/InputLabel/index";
    export * from "@mui/material/InputLabel/index";
    export { default as LinearProgress } from "@mui/material/LinearProgress/index";
    export * from "@mui/material/LinearProgress/index";
    export { default as Link } from "@mui/material/Link/index";
    export * from "@mui/material/Link/index";
    export { default as List } from "@mui/material/List/index";
    export * from "@mui/material/List/index";
    export { default as ListItem } from "@mui/material/ListItem/index";
    export * from "@mui/material/ListItem/index";
    export { default as ListItemAvatar } from "@mui/material/ListItemAvatar/index";
    export * from "@mui/material/ListItemAvatar/index";
    export { default as ListItemButton } from "@mui/material/ListItemButton/index";
    export * from "@mui/material/ListItemButton/index";
    export { default as ListItemIcon } from "@mui/material/ListItemIcon/index";
    export * from "@mui/material/ListItemIcon/index";
    export { default as ListItemSecondaryAction } from "@mui/material/ListItemSecondaryAction/index";
    export * from "@mui/material/ListItemSecondaryAction/index";
    export { default as ListItemText } from "@mui/material/ListItemText/index";
    export * from "@mui/material/ListItemText/index";
    export { default as ListSubheader } from "@mui/material/ListSubheader/index";
    export * from "@mui/material/ListSubheader/index";
    export { default as Menu } from "@mui/material/Menu/index";
    export * from "@mui/material/Menu/index";
    export { default as MenuItem } from "@mui/material/MenuItem/index";
    export * from "@mui/material/MenuItem/index";
    export { default as MenuList } from "@mui/material/MenuList/index";
    export * from "@mui/material/MenuList/index";
    export { default as MobileStepper } from "@mui/material/MobileStepper/index";
    export * from "@mui/material/MobileStepper/index";
    export { default as Modal } from "@mui/material/Modal/index";
    export * from "@mui/material/Modal/index";
    export { default as NativeSelect } from "@mui/material/NativeSelect/index";
    export * from "@mui/material/NativeSelect/index";
    export { default as NoSsr } from "@mui/material/NoSsr/index";
    export * from "@mui/material/NoSsr/index";
    export { default as OutlinedInput } from "@mui/material/OutlinedInput/index";
    export * from "@mui/material/OutlinedInput/index";
    export { default as Pagination } from "@mui/material/Pagination/index";
    export * from "@mui/material/Pagination/index";
    export { default as PaginationItem } from "@mui/material/PaginationItem/index";
    export * from "@mui/material/PaginationItem/index";
    export { default as Paper } from "@mui/material/Paper/index";
    export * from "@mui/material/Paper/index";
    export { default as Popover } from "@mui/material/Popover/index";
    export * from "@mui/material/Popover/index";
    export { default as Popper } from "@mui/material/Popper/index";
    export * from "@mui/material/Popper/index";
    export { default as Portal } from "@mui/material/Portal/index";
    export * from "@mui/material/Portal/index";
    export { default as Radio } from "@mui/material/Radio/index";
    export * from "@mui/material/Radio/index";
    export { default as RadioGroup } from "@mui/material/RadioGroup/index";
    export * from "@mui/material/RadioGroup/index";
    export { default as Rating } from "@mui/material/Rating/index";
    export * from "@mui/material/Rating/index";
    export { default as ScopedCssBaseline } from "@mui/material/ScopedCssBaseline/index";
    export * from "@mui/material/ScopedCssBaseline/index";
    export { default as Select } from "@mui/material/Select/index";
    export * from "@mui/material/Select/index";
    export { default as Skeleton } from "@mui/material/Skeleton/index";
    export * from "@mui/material/Skeleton/index";
    export { default as Slide } from "@mui/material/Slide/index";
    export * from "@mui/material/Slide/index";
    export { default as Slider } from "@mui/material/Slider/index";
    export * from "@mui/material/Slider/index";
    export { default as Snackbar } from "@mui/material/Snackbar/index";
    export * from "@mui/material/Snackbar/index";
    export { default as SnackbarContent } from "@mui/material/SnackbarContent/index";
    export * from "@mui/material/SnackbarContent/index";
    export { default as SpeedDial } from "@mui/material/SpeedDial/index";
    export * from "@mui/material/SpeedDial/index";
    export { default as SpeedDialAction } from "@mui/material/SpeedDialAction/index";
    export * from "@mui/material/SpeedDialAction/index";
    export { default as SpeedDialIcon } from "@mui/material/SpeedDialIcon/index";
    export * from "@mui/material/SpeedDialIcon/index";
    export { default as Stack } from "@mui/material/Stack/index";
    export * from "@mui/material/Stack/index";
    export { default as Step } from "@mui/material/Step/index";
    export * from "@mui/material/Step/index";
    export { default as StepButton } from "@mui/material/StepButton/index";
    export * from "@mui/material/StepButton/index";
    export { default as StepConnector } from "@mui/material/StepConnector/index";
    export * from "@mui/material/StepConnector/index";
    export { default as StepContent } from "@mui/material/StepContent/index";
    export * from "@mui/material/StepContent/index";
    export { default as StepIcon } from "@mui/material/StepIcon/index";
    export * from "@mui/material/StepIcon/index";
    export { default as StepLabel } from "@mui/material/StepLabel/index";
    export * from "@mui/material/StepLabel/index";
    export { default as Stepper } from "@mui/material/Stepper/index";
    export * from "@mui/material/Stepper/index";
    export { default as SvgIcon } from "@mui/material/SvgIcon/index";
    export * from "@mui/material/SvgIcon/index";
    export { default as SwipeableDrawer } from "@mui/material/SwipeableDrawer/index";
    export * from "@mui/material/SwipeableDrawer/index";
    export { default as Switch } from "@mui/material/Switch/index";
    export * from "@mui/material/Switch/index";
    export { default as Tab } from "@mui/material/Tab/index";
    export * from "@mui/material/Tab/index";
    export { default as Table } from "@mui/material/Table/index";
    export * from "@mui/material/Table/index";
    export { default as TableBody } from "@mui/material/TableBody/index";
    export * from "@mui/material/TableBody/index";
    export { default as TableCell } from "@mui/material/TableCell/index";
    export * from "@mui/material/TableCell/index";
    export { default as TableContainer } from "@mui/material/TableContainer/index";
    export * from "@mui/material/TableContainer/index";
    export { default as TableFooter } from "@mui/material/TableFooter/index";
    export * from "@mui/material/TableFooter/index";
    export { default as TableHead } from "@mui/material/TableHead/index";
    export * from "@mui/material/TableHead/index";
    export { default as TablePagination } from "@mui/material/TablePagination/index";
    export * from "@mui/material/TablePagination/index";
    export { default as TableRow } from "@mui/material/TableRow/index";
    export * from "@mui/material/TableRow/index";
    export { default as TableSortLabel } from "@mui/material/TableSortLabel/index";
    export * from "@mui/material/TableSortLabel/index";
    export { default as Tabs } from "@mui/material/Tabs/index";
    export * from "@mui/material/Tabs/index";
    export { default as TabScrollButton } from "@mui/material/TabScrollButton/index";
    export * from "@mui/material/TabScrollButton/index";
    export { default as TextField } from "@mui/material/TextField/index";
    export * from "@mui/material/TextField/index";
    export { default as TextareaAutosize } from "@mui/material/TextareaAutosize/index";
    export * from "@mui/material/TextareaAutosize/index";
    export { default as ToggleButton } from "@mui/material/ToggleButton/index";
    export * from "@mui/material/ToggleButton/index";
    export { default as ToggleButtonGroup } from "@mui/material/ToggleButtonGroup/index";
    export * from "@mui/material/ToggleButtonGroup/index";
    export { default as Toolbar } from "@mui/material/Toolbar/index";
    export * from "@mui/material/Toolbar/index";
    export { default as Tooltip } from "@mui/material/Tooltip/index";
    export * from "@mui/material/Tooltip/index";
    export { default as Typography } from "@mui/material/Typography/index";
    export * from "@mui/material/Typography/index";
    export { default as useMediaQuery } from "@mui/material/useMediaQuery/index";
    export * from "@mui/material/useMediaQuery/index";
    export { default as useScrollTrigger } from "@mui/material/useScrollTrigger/index";
    export * from "@mui/material/useScrollTrigger/index";
    export { default as Zoom } from "@mui/material/Zoom/index";
    export * from "@mui/material/Zoom/index";
    export { default as useAutocomplete } from "@mui/material/useAutocomplete/index";
    export * from "@mui/material/useAutocomplete/index";
    export { default as GlobalStyles } from "@mui/material/GlobalStyles/index";
    export * from "@mui/material/GlobalStyles/index";
    /**
     * @deprecated will be removed in v5.beta, please use StyledEngineProvider from @mui/material/styles instead
     */
    export { StyledEngineProvider } from "@mui/material/styles/index";
    export { default as unstable_composeClasses } from "@mui/core/composeClasses/index";
    export { default as generateUtilityClass } from "@mui/core/generateUtilityClass/index";
    export * from "@mui/core/generateUtilityClass/index";
    export { default as generateUtilityClasses } from "@mui/core/generateUtilityClasses/index";
}
declare module "@mui/index" {
    export namespace SDK {
        const Button: import("@mui/material/index").ExtendButtonBase<import("@mui/material/Button/index").ButtonTypeMap<{}, "button">>;
    }
}
declare module "@mui/base/utils/appendOwnerState" {
    import React from 'react';
    /**
     * Appends the ownerState object to the props, merging with the existing one if necessary.
     *
     * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node, `ownerState` are not applied.
     * @param existingProps Props of the element.
     * @param ownerState
     */
    type T = () => <TExistingProps extends Record<string, any>, TOwnerState extends {}>(elementType: React.ElementType, existingProps: TExistingProps | undefined, ownerState: TOwnerState) => TExistingProps & {
        ownerState?: TOwnerState;
    };
    export default T;
}
declare module "@mui/base/utils/areArraysEqual" {
    type ItemComparer<T> = (a: T, b: T) => boolean;
    export type areArraysEqual<T> = (array1: T[], array2: T[], itemComparer?: ItemComparer<T>) => boolean;
    export default areArraysEqual;
    export {};
}
declare module "@mui/base/utils/types" {
    import React from 'react';
    export type EventHandlers = Record<string, React.EventHandler<any>>;
    export type WithOptionalOwnerState<T extends {
        ownerState: unknown;
    }> = Omit<T, 'ownerState'> & Partial<Pick<T, 'ownerState'>>;
}
declare module "@mui/base/utils/extractEventHandlers" {
    import { EventHandlers } from "@mui/base/utils/types";
    /**
     * Extracts event handlers from a given object.
     * A prop is considered an event handler if it is a function and its name starts with `on`.
     *
     * @param object An object to extract event handlers from.
     * @param excludeKeys An array of keys to exclude from the returned object.
     */
    export type extractEventHandlers = (object: Record<string, any> | undefined, excludeKeys?: string[]) => EventHandlers;
    export default extractEventHandlers;
}
declare module "@mui/base/utils/isHostComponent" {
    import React from 'react';
    /**
     * Determines if a given element is a DOM element name (i.e. not a React component).
     */
    function isHostComponent(element: React.ElementType): boolean;
    export default isHostComponent;
}
declare module "@mui/base/utils/index" {
    export { default as appendOwnerState } from "@mui/base/utils/appendOwnerState";
    export { default as areArraysEqual } from "@mui/base/utils/areArraysEqual";
    export { default as extractEventHandlers } from "@mui/base/utils/extractEventHandlers";
    export { default as isHostComponent } from "@mui/base/utils/isHostComponent";
    export * from "@mui/base/utils/types";
}
declare module "@mui/base/AutocompleteUnstyled/useAutocomplete" {
    import * as React from 'react';
    export interface CreateFilterOptionsConfig<T> {
        ignoreAccents?: boolean;
        ignoreCase?: boolean;
        limit?: number;
        matchFrom?: 'any' | 'start';
        stringify?: (option: T) => string;
        trim?: boolean;
    }
    export interface FilterOptionsState<T> {
        inputValue: string;
        getOptionLabel: (option: T) => string;
    }
    export interface AutocompleteGroupedOption<T = string> {
        key: number;
        index: number;
        group: string;
        options: T[];
    }
    export function createFilterOptions<T>(config?: CreateFilterOptionsConfig<T>): (options: T[], state: FilterOptionsState<T>) => T[];
    export type AutocompleteFreeSoloValueMapping<FreeSolo> = FreeSolo extends true ? string : never;
    export type AutocompleteValue<T, Multiple, DisableClearable, FreeSolo> = Multiple extends undefined | false ? DisableClearable extends true ? NonNullable<T | AutocompleteFreeSoloValueMapping<FreeSolo>> : T | null | AutocompleteFreeSoloValueMapping<FreeSolo> : Array<T | AutocompleteFreeSoloValueMapping<FreeSolo>>;
    export interface UseAutocompleteProps<T, Multiple extends boolean | undefined, DisableClearable extends boolean | undefined, FreeSolo extends boolean | undefined> {
        /**
         * If `true`, the portion of the selected suggestion that has not been typed by the user,
         * known as the completion string, appears inline after the input cursor in the textbox.
         * The inline completion string is visually highlighted and has a selected state.
         * @default false
         */
        autoComplete?: boolean;
        /**
         * If `true`, the first option is automatically highlighted.
         * @default false
         */
        autoHighlight?: boolean;
        /**
         * If `true`, the selected option becomes the value of the input
         * when the Autocomplete loses focus unless the user chooses
         * a different option or changes the character string in the input.
         * @default false
         */
        autoSelect?: boolean;
        /**
         * Control if the input should be blurred when an option is selected:
         *
         * - `false` the input is not blurred.
         * - `true` the input is always blurred.
         * - `touch` the input is blurred after a touch event.
         * - `mouse` the input is blurred after a mouse event.
         * @default false
         */
        blurOnSelect?: 'touch' | 'mouse' | true | false;
        /**
         * If `true`, the input's text is cleared on blur if no value is selected.
         *
         * Set to `true` if you want to help the user enter a new value.
         * Set to `false` if you want to help the user resume their search.
         * @default !props.freeSolo
         */
        clearOnBlur?: boolean;
        /**
         * If `true`, clear all values when the user presses escape and the popup is closed.
         * @default false
         */
        clearOnEscape?: boolean;
        /**
         * The component name that is using this hook. Used for warnings.
         */
        componentName?: string;
        /**
         * If `true`, the input can't be cleared.
         * @default false
         */
        disableClearable?: DisableClearable;
        /**
         * If `true`, the popup won't close when a value is selected.
         * @default false
         */
        disableCloseOnSelect?: boolean;
        /**
         * If `true`, will allow focus on disabled items.
         * @default false
         */
        disabledItemsFocusable?: boolean;
        /**
         * If `true`, the list box in the popup will not wrap focus.
         * @default false
         */
        disableListWrap?: boolean;
        /**
         * A filter function that determines the options that are eligible.
         *
         * @param {T[]} options The options to render.
         * @param {object} state The state of the component.
         * @returns {T[]}
         */
        filterOptions?: (options: T[], state: FilterOptionsState<T>) => T[];
        /**
         * If `true`, hide the selected options from the list box.
         * @default false
         */
        filterSelectedOptions?: boolean;
        /**
         * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
         * @default false
         */
        freeSolo?: FreeSolo;
        /**
         * Used to determine the disabled state for a given option.
         *
         * @param {T} option The option to test.
         * @returns {boolean}
         */
        getOptionDisabled?: (option: T) => boolean;
        /**
         * Used to determine the string value for a given option.
         * It's used to fill the input (and the list box options if `renderOption` is not provided).
         *
         * @param {T} option
         * @returns {string}
         * @default (option) => option.label ?? option
         */
        getOptionLabel?: (option: T) => string;
        /**
         * Used to determine if the option represents the given value.
         * Uses strict equality by default.
         * ⚠️ Both arguments need to be handled, an option can only match with one value.
         *
         * @param {T} option The option to test.
         * @param {T} value The value to test against.
         * @returns {boolean}
         */
        isOptionEqualToValue?: (option: T, value: T) => boolean;
        /**
         * If provided, the options will be grouped under the returned string.
         * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
         *
         * @param {T} options The options to group.
         * @returns {string}
         */
        groupBy?: (option: T) => string;
        /**
         * If `true`, the component handles the "Home" and "End" keys when the popup is open.
         * It should move focus to the first option and last option, respectively.
         * @default !props.freeSolo
         */
        handleHomeEndKeys?: boolean;
        /**
         * This prop is used to help implement the accessibility logic.
         * If you don't provide an id it will fall back to a randomly generated one.
         */
        id?: string;
        /**
         * If `true`, the highlight can move to the input.
         * @default false
         */
        includeInputInList?: boolean;
        /**
         * The input value.
         */
        inputValue?: string;
        /**
         * Callback fired when the popup requests to be closed.
         * Use in controlled mode (see open).
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
         */
        onClose?: (event: React.SyntheticEvent, reason: AutocompleteCloseReason) => void;
        /**
         * Callback fired when the input value changes.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {string} value The new value of the text input.
         * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.
         */
        onInputChange?: (event: React.SyntheticEvent, value: string, reason: AutocompleteInputChangeReason) => void;
        /**
         * Callback fired when the popup requests to be opened.
         * Use in controlled mode (see open).
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         */
        onOpen?: (event: React.SyntheticEvent) => void;
        /**
         * Callback fired when the highlight option changes.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {T} option The highlighted option.
         * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`.
         */
        onHighlightChange?: (event: React.SyntheticEvent, option: T | null, reason: AutocompleteHighlightChangeReason) => void;
        /**
         * If `true`, the component is shown.
         */
        open?: boolean;
        /**
         * If `true`, the popup will open on input focus.
         * @default false
         */
        openOnFocus?: boolean;
        /**
         * Array of options.
         */
        options: ReadonlyArray<T>;
        /**
         * If `true`, the input's text is selected on focus.
         * It helps the user clear the selected value.
         * @default !props.freeSolo
         */
        selectOnFocus?: boolean;
        /**
         * If `true`, `value` must be an array and the menu will support multiple selections.
         * @default false
         */
        multiple?: Multiple;
        /**
         * The value of the autocomplete.
         *
         * The value must have reference equality with the option in order to be selected.
         * You can customize the equality behavior with the `isOptionEqualToValue` prop.
         */
        value?: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>;
        /**
         * The default value. Use when the component is not controlled.
         * @default props.multiple ? [] : null
         */
        defaultValue?: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>;
        /**
         * Callback fired when the value changes.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {T|T[]} value The new value of the component.
         * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
         * @param {string} [details]
         */
        onChange?: (event: React.SyntheticEvent, value: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<T>) => void;
    }
    export type AutocompleteHighlightChangeReason = 'keyboard' | 'mouse' | 'auto';
    export type AutocompleteChangeReason = 'createOption' | 'selectOption' | 'removeOption' | 'clear' | 'blur';
    export interface AutocompleteChangeDetails<T = string> {
        option: T;
    }
    export type AutocompleteCloseReason = 'createOption' | 'toggleInput' | 'escape' | 'selectOption' | 'removeOption' | 'blur';
    export type AutocompleteInputChangeReason = 'input' | 'reset' | 'clear';
    export type AutocompleteGetTagProps = ({ index }: {
        index: number;
    }) => {
        key: number;
        'data-tag-index': number;
        tabIndex: -1;
        onDelete: (event: any) => void;
    };
    export type useAutocomplete = <T, Multiple extends boolean | undefined = undefined, DisableClearable extends boolean | undefined = undefined, FreeSolo extends boolean | undefined = undefined>(props: UseAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) => {
        getRootProps: () => React.HTMLAttributes<HTMLDivElement>;
        getInputProps: () => React.HTMLAttributes<HTMLInputElement>;
        getInputLabelProps: () => Omit<React.HTMLAttributes<HTMLLabelElement>, 'color'>;
        getClearProps: () => React.HTMLAttributes<HTMLDivElement>;
        getPopupIndicatorProps: () => React.HTMLAttributes<HTMLDivElement>;
        getTagProps: AutocompleteGetTagProps;
        getListboxProps: () => React.HTMLAttributes<HTMLUListElement>;
        getOptionProps: ({ option, index, }: {
            option: T;
            index: number;
        }) => React.HTMLAttributes<HTMLLIElement>;
        id: string;
        inputValue: string;
        value: AutocompleteValue<T, Multiple, DisableClearable, FreeSolo>;
        dirty: boolean;
        popupOpen: boolean;
        focused: boolean;
        anchorEl: null | HTMLElement;
        setAnchorEl: () => void;
        focusedTag: number;
        /**
         * The options to render. It's either `T[]` or `AutocompleteGroupedOption<T>[]` if the groupBy prop is provided.
         */
        groupedOptions: T[] | Array<AutocompleteGroupedOption<T>>;
    };
    export default useAutocomplete;
}
declare module "@mui/base/AutocompleteUnstyled/index" {
    export { default as useAutocomplete } from "@mui/base/AutocompleteUnstyled/useAutocomplete";
    export * from "@mui/base/AutocompleteUnstyled/useAutocomplete";
}
declare module "@mui/base/BackdropUnstyled/backdropUnstyledClasses" {
    export interface BackdropUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `invisible={true}`. */
        invisible: string;
    }
    export type BackdropUnstyledClassKey = keyof BackdropUnstyledClasses;
    export function getBackdropUtilityClass(slot: string): string;
    const backdropUnstyledClasses: BackdropUnstyledClasses;
    export default backdropUnstyledClasses;
}
declare module "@mui/base/BackdropUnstyled/BackdropUnstyled" {
    import * as React from 'react';
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { BackdropUnstyledClasses } from "@mui/base/BackdropUnstyled/backdropUnstyledClasses";
    export interface BackdropUnstyledComponentsPropsOverrides {
    }
    export interface BackdropUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children?: React.ReactNode;
            /**
             * The components used for each slot inside the Backdrop.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Backdrop.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLDivElement> & BackdropUnstyledComponentsPropsOverrides;
            };
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BackdropUnstyledClasses>;
            /**
             * If `true`, the backdrop is invisible.
             * It can be used when rendering a popover or a custom select component.
             * @default false
             */
            invisible?: boolean;
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from BackdropUnstyled.
     */
    export interface ExtendBackdropUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & BackdropUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendBackdropUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendBackdropUnstyledTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Backdrop](https://mui.com/components/backdrop/)
     *
     * API:
     *
     * - [BackdropUnstyled API](https://mui.com/api/backdrop-unstyled/)
     */
    const BackdropUnstyled: OverridableComponent<BackdropUnstyledTypeMap>;
    export type BackdropUnstyledProps<D extends React.ElementType = BackdropUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<BackdropUnstyledTypeMap<P, D>, D>;
    export default BackdropUnstyled;
}
declare module "@mui/base/BackdropUnstyled/index" {
    export { default } from "@mui/base/BackdropUnstyled/BackdropUnstyled";
    export * from "@mui/base/BackdropUnstyled/BackdropUnstyled";
    export { default as backdropUnstyledClasses } from "@mui/base/BackdropUnstyled/backdropUnstyledClasses";
    export * from "@mui/base/BackdropUnstyled/backdropUnstyledClasses";
}
declare module "@mui/base/BadgeUnstyled/badgeUnstyledClasses" {
    export interface BadgeUnstyledClasses {
        /** Class name applied to the root element. */
        root: string;
        /** Class name applied to the badge `span` element. */
        badge: string;
        /** Class name applied to the badge `span` element if `variant="dot"`. */
        dot: string;
        /** Class name applied to the badge `span` element if `variant="standard"`. */
        standard: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'right' }}`. */
        anchorOriginTopRight: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'right' }}`. */
        anchorOriginBottomRight: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'top', 'left' }}`. */
        anchorOriginTopLeft: string;
        /** Class name applied to the badge `span` element if `anchorOrigin={{ 'bottom', 'left' }}`. */
        anchorOriginBottomLeft: string;
        /** State class applied to the badge `span` element if `invisible={true}`. */
        invisible: string;
    }
    export type BadgeUnstyledClassKey = keyof BadgeUnstyledClasses;
    export function getBadgeUtilityClass(slot: string): string;
    const badgeUnstyledClasses: BadgeUnstyledClasses;
    export default badgeUnstyledClasses;
}
declare module "@mui/base/BadgeUnstyled/BadgeUnstyledProps" {
    import * as React from 'react';
    import { OverrideProps, OverridableTypeMap } from "@mui/types/index";
    import { BadgeUnstyledClasses } from "@mui/base/BadgeUnstyled/badgeUnstyledClasses";
    export interface BadgeOrigin {
        vertical: 'top' | 'bottom';
        horizontal: 'left' | 'right';
    }
    export interface BadgeUnstyledComponentsPropsOverrides {
    }
    export interface BadgeUnstyledTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & {
            /**
             * The anchor of the badge.
             * @default {
             *   vertical: 'top',
             *   horizontal: 'right',
             * }
             */
            anchorOrigin?: BadgeOrigin;
            /**
             * The components used for each slot inside the Badge.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
                Badge?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Badge.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLSpanElement> & BadgeUnstyledComponentsPropsOverrides;
                badge?: React.HTMLAttributes<HTMLSpanElement> & BadgeUnstyledComponentsPropsOverrides;
            };
            /**
             * The content rendered within the badge.
             */
            badgeContent?: React.ReactNode;
            /**
             * The badge will be added relative to this node.
             */
            children?: React.ReactNode;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<BadgeUnstyledClasses>;
            /**
             * If `true`, the badge is invisible.
             * @default false
             */
            invisible?: boolean;
            /**
             * Max count to show.
             * @default 99
             */
            max?: number;
            /**
             * Controls whether the badge is hidden when `badgeContent` is zero.
             * @default false
             */
            showZero?: boolean;
            /**
             * The variant to use.
             * @default 'standard'
             */
            variant?: string;
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from BadgeUnstyled.
     */
    export interface ExtendBadgeUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & BadgeUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    type BadgeUnstyledProps<D extends React.ElementType = BadgeUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<BadgeUnstyledTypeMap<P, D>, D>;
    export default BadgeUnstyledProps;
}
declare module "@mui/base/BadgeUnstyled/BadgeUnstyled" {
    import { OverridableComponent, OverridableTypeMap } from "@mui/types/index";
    import { ExtendBadgeUnstyledTypeMap, BadgeUnstyledTypeMap } from "@mui/base/BadgeUnstyled/BadgeUnstyledProps";
    export type ExtendBadgeUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendBadgeUnstyledTypeMap<M>>;
    /**
     *
     * Demos:
     *
     * - [Badges](https://mui.com/components/badges/)
     *
     * API:
     *
     * - [BadgeUnstyled API](https://mui.com/api/badge-unstyled/)
     */
    const BadgeUnstyled: OverridableComponent<BadgeUnstyledTypeMap>;
    export default BadgeUnstyled;
}
declare module "@mui/base/BadgeUnstyled/useBadge" {
    import * as React from 'react';
    import BadgeUnstyledProps from "@mui/base/BadgeUnstyled/BadgeUnstyledProps";
    export interface UseBadgeProps {
        anchorOrigin: BadgeUnstyledProps['anchorOrigin'];
        badgeContent: BadgeUnstyledProps['badgeContent'];
        invisible: BadgeUnstyledProps['invisible'];
        max: BadgeUnstyledProps['max'];
        showZero: BadgeUnstyledProps['showZero'];
        variant: BadgeUnstyledProps['variant'];
    }
    export type useBadge = (props: UseBadgeProps) => {
        anchorOrigin: import("@mui/base/BadgeUnstyled/BadgeUnstyledProps").BadgeOrigin;
        badgeContent: React.ReactNode;
        invisible: boolean;
        max: number;
        variant: string;
        displayValue: React.ReactNode;
    };
    export default useBadge;
}
declare module "@mui/base/BadgeUnstyled/index" {
    export { default } from "@mui/base/BadgeUnstyled/BadgeUnstyled";
    export * from "@mui/base/BadgeUnstyled/BadgeUnstyled";
    export { default as useBadge } from "@mui/base/BadgeUnstyled/useBadge";
    export * from "@mui/base/BadgeUnstyled/useBadge";
    export { default as BadgeUnstyledProps } from "@mui/base/BadgeUnstyled/BadgeUnstyledProps";
    export * from "@mui/base/BadgeUnstyled/BadgeUnstyledProps";
    export { default as badgeUnstyledClasses } from "@mui/base/BadgeUnstyled/badgeUnstyledClasses";
    export * from "@mui/base/BadgeUnstyled/badgeUnstyledClasses";
}
declare module "@mui/base/ButtonUnstyled/useButton.types" {
    import * as React from 'react';
    interface UseButtonRootSlotOwnProps {
        'aria-disabled'?: React.AriaAttributes['aria-disabled'];
        disabled?: boolean;
        tabIndex: number;
        type?: React.ButtonHTMLAttributes<HTMLButtonElement>['type'];
        role?: React.AriaRole;
        onBlur: React.FocusEventHandler;
        onFocus: React.FocusEventHandler;
        onKeyDown: React.KeyboardEventHandler;
        onKeyUp: React.KeyboardEventHandler;
        onMouseDown: React.MouseEventHandler;
        onMouseLeave: React.MouseEventHandler;
        onMouseUp: React.MouseEventHandler;
        ref: React.Ref<any>;
    }
    export type UseButtonRootSlotProps<TOther = {}> = Omit<TOther, keyof UseButtonRootSlotOwnProps> & UseButtonRootSlotOwnProps;
    export interface UseButtonParameters {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * @default 'button'
         */
        component?: React.ElementType;
        /**
         * If `true`, the component is disabled.
         * @default false
         */
        disabled?: boolean;
        href?: string;
        onFocusVisible?: React.FocusEventHandler;
        ref?: React.Ref<any>;
        tabIndex?: NonNullable<React.HTMLAttributes<any>['tabIndex']>;
        to?: string;
        /**
         * Type attribute applied when the `component` is `button`.
         * @default 'button'
         */
        type?: React.ButtonHTMLAttributes<HTMLButtonElement>['type'];
    }
    export {};
}
declare module "@mui/base/ButtonUnstyled/ButtonUnstyled.types" {
    import { OverrideProps } from "@mui/types/index";
    import React from 'react';
    import { UseButtonParameters, UseButtonRootSlotProps } from "@mui/base/ButtonUnstyled/useButton.types";
    export interface ButtonUnstyledActions {
        focusVisible(): void;
    }
    export interface ButtonUnstyledComponentsPropsOverrides {
    }
    export interface ButtonUnstyledOwnProps extends Omit<UseButtonParameters, 'ref'> {
        /**
         * A ref for imperative actions. It currently only supports `focusVisible()` action.
         */
        action?: React.Ref<ButtonUnstyledActions>;
        children?: React.ReactNode;
        className?: string;
        /**
         * The components used for each slot inside the Button.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Button.
         * @default {}
         */
        componentsProps?: {
            root?: React.ButtonHTMLAttributes<HTMLButtonElement> & ButtonUnstyledComponentsPropsOverrides;
        };
    }
    export type ButtonUnstyledProps<D extends React.ElementType = ButtonUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<ButtonUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export interface ButtonUnstyledTypeMap<P = {}, D extends React.ElementType = 'button'> {
        props: P & ButtonUnstyledOwnProps;
        defaultComponent: D;
    }
    export type ButtonUnstyledOwnerState = ButtonUnstyledOwnProps & {
        active: boolean;
        focusVisible: boolean;
    };
    export type ButtonUnstyledRootSlotProps = UseButtonRootSlotProps & {
        ownerState: ButtonUnstyledOwnerState;
        className: string;
        children?: React.ReactNode;
    };
}
declare module "@mui/base/ButtonUnstyled/ButtonUnstyled" {
    import * as React from 'react';
    import { ButtonUnstyledOwnProps } from "@mui/base/ButtonUnstyled/ButtonUnstyled.types";
    export interface ButtonUnstyledOwnerState extends ButtonUnstyledOwnProps {
        focusVisible: boolean;
        active: boolean;
    }
    /**
     * The foundation for building custom-styled buttons.
     *
     * Demos:
     *
     * - [Buttons](https://mui.com/components/buttons/)
     *
     * API:
     *
     * - [ButtonUnstyled API](https://mui.com/api/button-unstyled/)
     */
    const ButtonUnstyled: React.ForwardRefExoticComponent<Pick<ButtonUnstyledOwnProps & Omit<any, keyof ButtonUnstyledOwnProps> & {
        component?: React.ElementType<any> | undefined;
    }, string | number | symbol> & React.RefAttributes<any>>;
    export default ButtonUnstyled;
}
declare module "@mui/base/ButtonUnstyled/buttonUnstyledClasses" {
    export interface ButtonUnstyledClasses {
        root: string;
        active: string;
        disabled: string;
        focusVisible: string;
    }
    export type ButtonUnstyledClassKey = keyof ButtonUnstyledClasses;
    export function getButtonUnstyledUtilityClass(slot: string): string;
    const buttonUnstyledClasses: ButtonUnstyledClasses;
    export default buttonUnstyledClasses;
}
declare module "@mui/base/ButtonUnstyled/useButton" {
    import * as React from 'react';
    import { UseButtonParameters, UseButtonRootSlotProps } from "@mui/base/ButtonUnstyled/useButton.types";
    import { EventHandlers } from "@mui/base/utils/types";
    export type useButton = (parameters: UseButtonParameters) => {
        getRootProps: <TOther extends EventHandlers = {}>(otherHandlers?: TOther) => UseButtonRootSlotProps<TOther>;
        focusVisible: boolean;
        setFocusVisible: React.Dispatch<React.SetStateAction<boolean>>;
        disabled: boolean;
        active: boolean;
    };
    export default useButton;
}
declare module "@mui/base/ButtonUnstyled/index" {
    export { default } from "@mui/base/ButtonUnstyled/ButtonUnstyled";
    export { default as buttonUnstyledClasses, getButtonUnstyledUtilityClass, } from "@mui/base/ButtonUnstyled/buttonUnstyledClasses";
    export * from "@mui/base/ButtonUnstyled/ButtonUnstyled.types";
    export { default as useButton } from "@mui/base/ButtonUnstyled/useButton";
    export * from "@mui/base/ButtonUnstyled/useButton.types";
}
declare module "@mui/base/ClickAwayListener/ClickAwayListener" {
    import * as React from 'react';
    type ClickAwayMouseEventHandler = 'onClick' | 'onMouseDown' | 'onMouseUp';
    type ClickAwayTouchEventHandler = 'onTouchStart' | 'onTouchEnd';
    export interface ClickAwayListenerProps {
        /**
         * The wrapped element.
         */
        children: React.ReactElement;
        /**
         * If `true`, the React tree is ignored and only the DOM tree is considered.
         * This prop changes how portaled elements are handled.
         * @default false
         */
        disableReactTree?: boolean;
        /**
         * The mouse event to listen to. You can disable the listener by providing `false`.
         * @default 'onClick'
         */
        mouseEvent?: ClickAwayMouseEventHandler | false;
        /**
         * Callback fired when a "click away" event is detected.
         */
        onClickAway: (event: MouseEvent | TouchEvent) => void;
        /**
         * The touch event to listen to. You can disable the listener by providing `false`.
         * @default 'onTouchEnd'
         */
        touchEvent?: ClickAwayTouchEventHandler | false;
    }
    /**
     * Listen for click events that occur somewhere in the document, outside of the element itself.
     * For instance, if you need to hide a menu when people click anywhere else on your page.
     *
     * Demos:
     *
     * - [Click Away Listener](https://mui.com/components/click-away-listener/)
     * - [Menus](https://mui.com/components/menus/)
     *
     * API:
     *
     * - [ClickAwayListener API](https://mui.com/api/click-away-listener/)
     */
    function ClickAwayListener(props: ClickAwayListenerProps): JSX.Element;
    namespace ClickAwayListener {
        var propTypes: any;
    }
    export default ClickAwayListener;
}
declare module "@mui/base/ClickAwayListener/index" {
    export { default } from "@mui/base/ClickAwayListener/ClickAwayListener";
    export * from "@mui/base/ClickAwayListener/ClickAwayListener";
}
declare module "@mui/base/composeClasses/composeClasses" {
    export type composeClasses = <ClassKey extends string>(slots: Record<ClassKey, ReadonlyArray<string | false | undefined | null>>, getUtilityClass: (slot: string) => string, classes: Record<string, string> | undefined) => Record<ClassKey, string>;
    export default composeClasses;
}
declare module "@mui/base/composeClasses/index" {
    export { default } from "@mui/base/composeClasses/composeClasses";
}
declare module "@mui/base/generateUtilityClass/generateUtilityClass" {
    export type GlobalStateSlot = 'active' | 'checked' | 'completed' | 'disabled' | 'error' | 'expanded' | 'focused' | 'focusVisible' | 'required' | 'selected';
    export type generateUtilityClass = (componentName: string, slot: string) => string;
    export default generateUtilityClass;
}
declare module "@mui/base/generateUtilityClass/ClassNameGenerator" {
    export interface ClassNameGenerator {
        configure(generator: (componentName: string) => string): void;
        generate(componentName: string): string;
        reset(): void;
    }
    export default ClassNameGenerator;
}
declare module "@mui/base/generateUtilityClass/index" {
    export { default } from "@mui/base/generateUtilityClass/generateUtilityClass";
    export * from "@mui/base/generateUtilityClass/generateUtilityClass";
    export { default as unstable_ClassNameGenerator } from "@mui/base/generateUtilityClass/ClassNameGenerator";
}
declare module "@mui/base/generateUtilityClasses/generateUtilityClasses" {
    export type generateUtilityClasses = <T extends string>(componentName: string, slots: T[]) => Record<T, string>;
    export default generateUtilityClasses;
}
declare module "@mui/base/generateUtilityClasses/index" {
    export { default } from "@mui/base/generateUtilityClasses/generateUtilityClasses";
}
declare module "@mui/base/FormControlUnstyled/FormControlUnstyledProps" {
    import { OverrideProps } from "@mui/types/index";
    import * as React from 'react';
    export type NativeFormControlElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;
    export interface FormControlUnstyledComponentsPropsOverrides {
    }
    export interface FormControlUnstyledOwnProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Class name applied to the root element.
         */
        className?: string;
        /**
         * The components used for each slot inside the FormControl.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        componentsProps?: {
            root?: React.HTMLAttributes<HTMLDivElement> & FormControlUnstyledComponentsPropsOverrides;
        };
        defaultValue?: unknown;
        /**
         * If `true`, the label, input and helper text should be displayed in a disabled state.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the label is displayed in an error state.
         * @default false
         */
        error?: boolean;
        /**
         * Extra properties to be placed on the FormControlContext.
         * @default {}
         */
        extraContextProperties?: object;
        /**
         * If `true`, the component is displayed in focused state.
         * @default false
         */
        focused?: boolean;
        onChange?: React.ChangeEventHandler<NativeFormControlElement>;
        /**
         * If `true`, the label will indicate that the `input` is required.
         * @default false
         */
        required?: boolean;
        value?: unknown;
    }
    export interface FormControlUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & FormControlUnstyledOwnProps;
        defaultComponent: D;
    }
    type FormControlUnstyledProps<D extends React.ElementType = FormControlUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<FormControlUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default FormControlUnstyledProps;
}
declare module "@mui/base/FormControlUnstyled/FormControlUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import FormControlUnstyledProps, { FormControlUnstyledOwnProps, FormControlUnstyledTypeMap } from "@mui/base/FormControlUnstyled/FormControlUnstyledProps";
    type NonOptionalOwnerState = 'disabled' | 'error' | 'focused' | 'required';
    export type FormControlUnstyledOwnerState = Omit<FormControlUnstyledOwnProps, NonOptionalOwnerState> & Required<Pick<FormControlUnstyledProps, NonOptionalOwnerState>> & {
        filled: boolean;
    };
    /**
     * Provides context such as filled/focused/error/required for form inputs.
     * Relying on the context provides high flexibility and ensures that the state always stays
     * consistent across the children of the `FormControl`.
     * This context is used by the following components:
     *
     * *   FormLabel
     * *   FormHelperText
     * *   Input
     * *   InputLabel
     *
     * You can find one composition example below and more going to [the demos](https://mui.com/components/text-fields/#components).
     *
     * ```jsx
     * <FormControl>
     *   <InputLabel htmlFor="my-input">Email address</InputLabel>
     *   <Input id="my-input" aria-describedby="my-helper-text" />
     *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
     * </FormControl>
     * ```
     *
     * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.
     * For instance, only one input can be focused at the same time, the state shouldn't be shared.
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [FormControlUnstyled API](https://mui.com/api/form-control-unstyled/)
     */
    const FormControlUnstyled: OverridableComponent<FormControlUnstyledTypeMap<{}, "div">>;
    export default FormControlUnstyled;
}
declare module "@mui/base/FormControlUnstyled/FormControlContext" {
    import * as React from 'react';
    import FormControlUnstyledProps from "@mui/base/FormControlUnstyled/FormControlUnstyledProps";
    type ContextFromPropsKey = 'disabled' | 'error' | 'onChange' | 'required' | 'value';
    export interface FormControlUnstyledState extends Pick<FormControlUnstyledProps, ContextFromPropsKey> {
        filled: boolean;
        focused: boolean;
        onBlur: () => void;
        onFocus: () => void;
        registerEffect: () => void;
    }
    /**
     * @ignore - internal component.
     */
    const FormControlUnstyledContext: React.Context<FormControlUnstyledState | undefined>;
    export default FormControlUnstyledContext;
}
declare module "@mui/base/FormControlUnstyled/formControlUnstyledClasses" {
    export interface FormControlUnstyledClasses {
        /** Class applied to the root element. */
        root: string;
        /** Class applied to the root element if `disabled={true}`. */
        disabled: string;
    }
    export type FormControlUnstyledClassKey = keyof FormControlUnstyledClasses;
    export function getFormControlUnstyledUtilityClasses(slot: string): string;
    const formControlUnstyledClasses: FormControlUnstyledClasses;
    export default formControlUnstyledClasses;
}
declare module "@mui/base/FormControlUnstyled/useFormControl" {
    export type useFormControlUnstyled = () => import("@mui/base/FormControlUnstyled/FormControlContext").FormControlUnstyledState | undefined;
    export default useFormControlUnstyled;
}
declare module "@mui/base/FormControlUnstyled/index" {
    export { default } from "@mui/base/FormControlUnstyled/FormControlUnstyled";
    export { default as FormControlUnstyledContext } from "@mui/base/FormControlUnstyled/FormControlContext";
    export * from "@mui/base/FormControlUnstyled/FormControlContext";
    export type { default as FormControlUnstyledProps } from "@mui/base/FormControlUnstyled/FormControlUnstyledProps";
    export { default as formControlUnstyledClasses } from "@mui/base/FormControlUnstyled/formControlUnstyledClasses";
    export * from "@mui/base/FormControlUnstyled/formControlUnstyledClasses";
    export { default as useFormControlUnstyled } from "@mui/base/FormControlUnstyled/useFormControl";
}
declare module "@mui/base/InputUnstyled/InputUnstyledProps" {
    import React from 'react';
    import { OverrideProps } from "@mui/types/index";
    import { FormControlUnstyledState } from "@mui/base/FormControlUnstyled/FormControlContext";
    export interface InputOwnerState extends Omit<InputUnstyledProps, 'component' | 'components' | 'componentsProps'> {
        formControl: FormControlUnstyledState;
        focused: boolean;
    }
    export interface UseInputProps {
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: unknown;
        /**
         * If `true`, the component is disabled.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        disabled?: boolean;
        /**
         * If `true`, the `input` will indicate an error.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        error?: boolean;
        onBlur?: React.FocusEventHandler;
        onClick?: React.MouseEventHandler;
        onChange?: React.ChangeEventHandler<HTMLInputElement>;
        onFocus?: React.FocusEventHandler;
        /**
         * If `true`, the `input` element is required.
         * The prop defaults to the value (`false`) inherited from the parent FormControl component.
         */
        required?: boolean;
        value?: unknown;
    }
    export interface InputUnstyledOwnProps extends UseInputProps {
        'aria-describedby'?: string;
        'aria-label'?: string;
        'aria-labelledby'?: string;
        /**
         * This prop helps users to fill forms faster, especially on mobile devices.
         * The name can be confusing, as it's more like an autofill.
         * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
         */
        autoComplete?: string;
        /**
         * If `true`, the `input` element is focused during the first mount.
         */
        autoFocus?: boolean;
        /**
         * Class name applied to the root element.
         */
        className?: string;
        /**
         * The components used for each slot inside the InputBase.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Input?: React.ElementType;
            Textarea?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & {
                ownerState: InputOwnerState;
            };
            input?: React.ComponentPropsWithRef<'input'> & {
                ownerState: InputOwnerState;
            };
        };
        /**
         * Trailing adornment for this input.
         */
        endAdornment?: React.ReactNode;
        /**
         * The id of the `input` element.
         */
        id?: string;
        /**
         * If `true`, a `textarea` element is rendered.
         * @default false
         */
        multiline?: boolean;
        /**
         * Name attribute of the `input` element.
         */
        name?: string;
        onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>;
        onKeyUp?: React.KeyboardEventHandler<HTMLInputElement>;
        /**
         * The short hint displayed in the `input` before the user enters a value.
         */
        placeholder?: string;
        /**
         * It prevents the user from changing the value of the field
         * (not from interacting with the field).
         */
        readOnly?: boolean;
        /**
         * Number of rows to display when multiline option is set to true.
         */
        rows?: number;
        /**
         * Leading adornment for this input.
         */
        startAdornment?: React.ReactNode;
        /**
         * Minimum number of rows to display when multiline option is set to true.
         */
        minRows?: number;
        /**
         * Maximum number of rows to display when multiline option is set to true.
         */
        maxRows?: number;
        /**
         * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
         * @default 'text'
         */
        type?: string;
        /**
         * The value of the `input` element, required for a controlled component.
         */
        value?: unknown;
    }
    export interface InputUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & InputUnstyledOwnProps;
        defaultComponent: D;
    }
    type InputUnstyledProps<D extends React.ElementType = InputUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<InputUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default InputUnstyledProps;
}
declare module "@mui/base/InputUnstyled/InputUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { InputUnstyledTypeMap } from "@mui/base/InputUnstyled/InputUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Text Fields](https://mui.com/components/text-fields/)
     *
     * API:
     *
     * - [InputUnstyled API](https://mui.com/api/input-unstyled/)
     */
    const InputUnstyled: OverridableComponent<InputUnstyledTypeMap<{}, "div">>;
    export default InputUnstyled;
}
declare module "@mui/base/InputUnstyled/useInput" {
    import * as React from 'react';
    import { UseInputProps } from "@mui/base/InputUnstyled/InputUnstyledProps";
    export type useInput = (props: UseInputProps, inputRef?: React.Ref<HTMLInputElement>) => {
        disabled: boolean;
        error: boolean;
        focused: boolean;
        formControlContext: import("@mui/base/index").FormControlUnstyledState | undefined;
        getInputProps: (externalProps?: Record<string, unknown> | undefined) => {
            'aria-invalid': true | undefined;
            defaultValue: string | number | readonly string[] | undefined;
            ref: React.Ref<any>;
            value: string | number | readonly string[] | undefined;
            required: boolean;
            disabled: boolean;
        };
        getRootProps: (externalProps?: Record<string, unknown> | undefined) => {
            onClick: (event: React.MouseEvent<HTMLInputElement>) => void;
        };
        required: boolean;
        value: unknown;
    };
    export default useInput;
}
declare module "@mui/base/InputUnstyled/inputUnstyledClasses" {
    export interface InputUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the component is a descendant of `FormControl`. */
        formControl: string;
        /** Styles applied to the root element if `startAdornment` is provided. */
        adornedStart: string;
        /** Styles applied to the root element if `endAdornment` is provided. */
        adornedEnd: string;
        /** Styles applied to the root element if the component is focused. */
        focused: string;
        /** Styles applied to the root element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root element if `error={true}`. */
        error: string;
        /** Styles applied to the root element if `multiline={true}`. */
        multiline: string;
        /** Styles applied to the input element. */
        input: string;
        /** Styles applied to the input element if `multiline={true}`. */
        inputMultiline: string;
        /** Styles applied to the input element if `type="search"`. */
        inputTypeSearch: string;
    }
    export type InputUnstyledClassKey = keyof InputUnstyledClasses;
    export function getInputUnstyledUtilityClass(slot: string): string;
    const inputBaseClasses: InputUnstyledClasses;
    export default inputBaseClasses;
}
declare module "@mui/base/InputUnstyled/index" {
    export { default } from "@mui/base/InputUnstyled/InputUnstyled";
    export type { default as InputUnstyledProps } from "@mui/base/InputUnstyled/InputUnstyledProps";
    export * from "@mui/base/InputUnstyled/InputUnstyledProps";
    export { default as useInput } from "@mui/base/InputUnstyled/useInput";
    export { default as inputUnstyledClasses } from "@mui/base/InputUnstyled/inputUnstyledClasses";
    export * from "@mui/base/InputUnstyled/inputUnstyledClasses";
}
declare module "@mui/base/Portal/Portal" {
    import * as React from 'react';
    export interface PortalProps {
        /**
         * The children to render into the `container`.
         */
        children?: React.ReactNode;
        /**
         * An HTML element or function that returns one.
         * The `container` will have the portal children appended to it.
         *
         * By default, it uses the body of the top-level document object,
         * so it's simply `document.body` most of the time.
         */
        container?: Element | (() => Element | null) | null;
        /**
         * The `children` will be under the DOM hierarchy of the parent component.
         * @default false
         */
        disablePortal?: boolean;
    }
    /**
     * Portals provide a first-class way to render children into a DOM node
     * that exists outside the DOM hierarchy of the parent component.
     *
     * Demos:
     *
     * - [Portal](https://mui.com/components/portal/)
     *
     * API:
     *
     * - [Portal API](https://mui.com/api/portal/)
     */
    export type Portal = (props: PortalProps) => JSX.Element;
    export default Portal;
}
declare module "@mui/base/Portal/index" {
    export { default } from "@mui/base/Portal/Portal";
    export * from "@mui/base/Portal/Portal";
}
declare module "@mui/base/ModalUnstyled/modalUnstyledClasses" {
    export interface ModalUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if the `Modal` has exited. */
        hidden: string;
    }
    export type ModalUnstyledClassKey = keyof ModalUnstyledClasses;
    export function getModalUtilityClass(slot: string): string;
    const modalUnstyledClasses: ModalUnstyledClasses;
    export default modalUnstyledClasses;
}
declare module "@mui/base/ModalUnstyled/ModalUnstyled" {
    import * as React from 'react';
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { BackdropUnstyledProps } from "@mui/base/BackdropUnstyled/index";
    import { PortalProps } from "@mui/base/Portal/index";
    import { ModalUnstyledClasses } from "@mui/base/ModalUnstyled/modalUnstyledClasses";
    export interface ModalUnstyledComponentsPropsOverrides {
    }
    export interface ModalUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * A backdrop component. This prop enables custom backdrop rendering.
             */
            BackdropComponent?: React.ElementType;
            /**
             * Props applied to the [`BackdropUnstyled`](/api/backdrop-unstyled/) element.
             */
            BackdropProps?: Partial<BackdropUnstyledProps>;
            /**
             * A single child content element.
             */
            children: React.ReactElement;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ModalUnstyledClasses>;
            /**
             * When set to true the Modal waits until a nested Transition is completed before closing.
             * @default false
             */
            closeAfterTransition?: boolean;
            /**
             * The components used for each slot inside the Modal.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Modal.
             * @default {}
             */
            componentsProps?: {
                root?: React.HTMLAttributes<HTMLDivElement> & ModalUnstyledComponentsPropsOverrides;
            };
            /**
             * An HTML element or function that returns one.
             * The `container` will have the portal children appended to it.
             *
             * By default, it uses the body of the top-level document object,
             * so it's simply `document.body` most of the time.
             */
            container?: PortalProps['container'];
            /**
             * If `true`, the modal will not automatically shift focus to itself when it opens, and
             * replace it to the last focused element when it closes.
             * This also works correctly with any modal children that have the `disableAutoFocus` prop.
             *
             * Generally this should never be set to `true` as it makes the modal less
             * accessible to assistive technologies, like screen readers.
             * @default false
             */
            disableAutoFocus?: boolean;
            /**
             * If `true`, the modal will not prevent focus from leaving the modal while open.
             *
             * Generally this should never be set to `true` as it makes the modal less
             * accessible to assistive technologies, like screen readers.
             * @default false
             */
            disableEnforceFocus?: boolean;
            /**
             * If `true`, hitting escape will not fire the `onClose` callback.
             * @default false
             */
            disableEscapeKeyDown?: boolean;
            /**
             * The `children` will be under the DOM hierarchy of the parent component.
             * @default false
             */
            disablePortal?: PortalProps['disablePortal'];
            /**
             * If `true`, the modal will not restore focus to previously focused element once
             * modal is hidden or unmounted.
             * @default false
             */
            disableRestoreFocus?: boolean;
            /**
             * Disable the scroll lock behavior.
             * @default false
             */
            disableScrollLock?: boolean;
            /**
             * If `true`, the backdrop is not rendered.
             * @default false
             */
            hideBackdrop?: boolean;
            /**
             * Always keep the children in the DOM.
             * This prop can be useful in SEO situation or
             * when you want to maximize the responsiveness of the Modal.
             * @default false
             */
            keepMounted?: boolean;
            /**
             * Callback fired when the backdrop is clicked.
             */
            onBackdropClick?: React.ReactEventHandler<{}>;
            /**
             * Callback fired when the component requests to be closed.
             * The `reason` parameter can optionally be used to control the response to `onClose`.
             *
             * @param {object} event The event source of the callback.
             * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
             */
            onClose?: {
                bivarianceHack(event: {}, reason: 'backdropClick' | 'escapeKeyDown'): void;
            }['bivarianceHack'];
            /**
             * If `true`, the component is shown.
             */
            open: boolean;
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from ModalUnstyled.
     */
    export interface ExtendModalUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & ModalUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendModalUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendModalUnstyledTypeMap<M>>;
    /**
     * Modal is a lower-level construct that is leveraged by the following components:
     *
     * *   [Dialog](https://mui.com/api/dialog/)
     * *   [Drawer](https://mui.com/api/drawer/)
     * *   [Menu](https://mui.com/api/menu/)
     * *   [Popover](https://mui.com/api/popover/)
     *
     * If you are creating a modal dialog, you probably want to use the [Dialog](https://mui.com/api/dialog/) component
     * rather than directly using Modal.
     *
     * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
     *
     * Demos:
     *
     * - [Modal](https://mui.com/components/modal/)
     *
     * API:
     *
     * - [ModalUnstyled API](https://mui.com/api/modal-unstyled/)
     */
    const ModalUnstyled: OverridableComponent<ModalUnstyledTypeMap>;
    export type ModalUnstyledProps<D extends React.ElementType = ModalUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<ModalUnstyledTypeMap<P, D>, D>;
    export default ModalUnstyled;
}
declare module "@mui/base/ModalUnstyled/ModalManager" {
    export interface ManagedModalProps {
        disableScrollLock?: boolean;
    }
    export function ariaHidden(element: Element, show: boolean): void;
    interface Modal {
        mount: Element;
        modalRef: Element;
    }
    /**
     * @ignore - do not document.
     *
     * Proper state management for containers and the modals in those containers.
     * Simplified, but inspired by react-overlay's ModalManager class.
     * Used by the Modal to ensure proper styling of containers.
     */
    export interface ModalManager {
        constructor(): any;
        add(modal: Modal, container: HTMLElement): number;
        mount(modal: Modal, props: ManagedModalProps): void;
        remove(modal: Modal): number;
        isTopModal(modal: Modal): boolean;
    }
    export default ModalManager;
    export {};
}
declare module "@mui/base/ModalUnstyled/index" {
    export { default } from "@mui/base/ModalUnstyled/ModalUnstyled";
    export * from "@mui/base/ModalUnstyled/ModalUnstyled";
    export { default as ModalManager } from "@mui/base/ModalUnstyled/ModalManager";
    export * from "@mui/base/ModalUnstyled/ModalManager";
    export { default as modalUnstyledClasses } from "@mui/base/ModalUnstyled/modalUnstyledClasses";
    export * from "@mui/base/ModalUnstyled/modalUnstyledClasses";
}
declare module "@mui/base/PopperUnstyled/PopperUnstyled" {
    import React from 'react';
    import { Instance, VirtualElement, Options, OptionsGeneric } from '@popperjs/core';
    import { PortalProps } from "@mui/base/Portal/index";
    export type PopperPlacementType = Options['placement'];
    export interface PopperUnstyledProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'> {
        ref?: React.Ref<HTMLDivElement>;
        /**
         * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
         * or a function that returns either.
         * It's used to set the position of the popper.
         * The return value will passed as the reference object of the Popper instance.
         */
        anchorEl?: null | VirtualElement | (() => VirtualElement);
        /**
         * Popper render function or node.
         */
        children?: React.ReactNode | ((props: {
            placement: PopperPlacementType;
            TransitionProps?: {
                in: boolean;
                onEnter: () => {};
                onExited: () => {};
            };
        }) => React.ReactNode);
        /**
         * An HTML element or function that returns one.
         * The `container` will have the portal children appended to it.
         *
         * By default, it uses the body of the top-level document object,
         * so it's simply `document.body` most of the time.
         */
        container?: PortalProps['container'];
        /**
         * Direction of the text.
         * @default 'ltr'
         */
        direction?: 'ltr' | 'rtl';
        /**
         * The `children` will be under the DOM hierarchy of the parent component.
         * @default false
         */
        disablePortal?: PortalProps['disablePortal'];
        /**
         * Always keep the children in the DOM.
         * This prop can be useful in SEO situation or
         * when you want to maximize the responsiveness of the Popper.
         * @default false
         */
        keepMounted?: boolean;
        /**
         * Popper.js is based on a "plugin-like" architecture,
         * most of its features are fully encapsulated "modifiers".
         *
         * A modifier is a function that is called each time Popper.js needs to
         * compute the position of the popper.
         * For this reason, modifiers should be very performant to avoid bottlenecks.
         * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
         */
        modifiers?: Options['modifiers'];
        /**
         * If `true`, the component is shown.
         */
        open: boolean;
        /**
         * Popper placement.
         * @default 'bottom'
         */
        placement?: PopperPlacementType;
        /**
         * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
         * @default {}
         */
        popperOptions?: Partial<OptionsGeneric<any>>;
        /**
         * A ref that points to the used popper instance.
         */
        popperRef?: React.Ref<Instance>;
        /**
         * Help supporting a react-transition-group/Transition component.
         * @default false
         */
        transition?: boolean;
    }
    /**
     * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v2/) for positioning.
     *
     * Demos:
     *
     * - [Popper](https://mui.com/components/popper/)
     *
     * API:
     *
     * - [PopperUnstyled API](https://mui.com/api/popper-unstyled/)
     */
    export type PopperUnstyled = (props: PopperUnstyledProps) => JSX.Element;
    export default PopperUnstyled;
}
declare module "@mui/base/PopperUnstyled/index" {
    export { default } from "@mui/base/PopperUnstyled/PopperUnstyled";
    export * from "@mui/base/PopperUnstyled/PopperUnstyled";
}
declare module "@mui/base/ListboxUnstyled/useListbox.types" {
    import * as React from 'react';
    type UseListboxStrictPropsRequiredKeys = 'isOptionDisabled' | 'disableListWrap' | 'disabledItemsFocusable' | 'optionComparer' | 'multiple';
    export type UseListboxStrictProps<TOption> = Omit<UseListboxParameters<TOption>, UseListboxStrictPropsRequiredKeys> & Required<Pick<UseListboxParameters<TOption>, UseListboxStrictPropsRequiredKeys>>;
    enum ActionTypes {
        blur = "blur",
        focus = "focus",
        keyDown = "keyDown",
        optionClick = "optionClick",
        setControlledValue = "setControlledValue",
        optionsChange = "optionsChange"
    }
    export { ActionTypes };
    interface OptionClickAction<TOption> {
        type: ActionTypes.optionClick;
        option: TOption;
        event: React.MouseEvent;
        props: UseListboxStrictProps<TOption>;
    }
    interface FocusAction<TOption> {
        type: ActionTypes.focus;
        event: React.FocusEvent;
        props: UseListboxStrictProps<TOption>;
    }
    interface BlurAction<TOption> {
        type: ActionTypes.blur;
        event: React.FocusEvent;
        props: UseListboxStrictProps<TOption>;
    }
    interface KeyDownAction<TOption> {
        type: ActionTypes.keyDown;
        event: React.KeyboardEvent;
        props: UseListboxStrictProps<TOption>;
    }
    interface SetControlledValueAction<TOption> {
        type: ActionTypes.setControlledValue;
        value: TOption | TOption[] | null;
        props: UseListboxStrictProps<TOption>;
    }
    interface OptionsChangeAction<TOption> {
        type: ActionTypes.optionsChange;
        options: TOption[];
        previousOptions: TOption[];
        props: UseListboxStrictProps<TOption>;
    }
    export type ListboxAction<TOption> = OptionClickAction<TOption> | FocusAction<TOption> | BlurAction<TOption> | KeyDownAction<TOption> | SetControlledValueAction<TOption> | OptionsChangeAction<TOption>;
    export interface ListboxState<TOption> {
        highlightedIndex: number;
        selectedValue: TOption | TOption[] | null;
    }
    export type ListboxReducer<TOption> = (state: ListboxState<TOption>, action: ListboxAction<TOption>) => ListboxState<TOption>;
    interface UseListboxCommonProps<TOption> {
        /**
         * If `true`, it will be possible to highlight disabled options.
         * @default false
         */
        disabledItemsFocusable?: boolean;
        /**
         * If `true`, the highlight will not wrap around the list if arrow keys are used.
         * @default false
         */
        disableListWrap?: boolean;
        /**
         * Ref of the listbox DOM element.
         */
        listboxRef?: React.Ref<any>;
        /**
         * Id attribute of the listbox.
         */
        id?: string;
        /**
         * A function that determines if a particular option is disabled.
         * @default () => false
         */
        isOptionDisabled?: (option: TOption, index: number) => boolean;
        /**
         * Callback fired when the highlighted option changes.
         */
        onHighlightChange?: (option: TOption | null) => void;
        /**
         * A function that tests equality between two options.
         * @default (a, b) => a === b
         */
        optionComparer?: (optionA: TOption, optionB: TOption) => boolean;
        /**
         * A function that generates the id attribute of individual options.
         */
        optionIdGenerator?: (option: TOption, index: number) => string;
        /**
         * Array of options to be rendered in the list.
         */
        options: TOption[];
        /**
         * Custom state reducer function. It calculates the new state (highlighted and selected options)
         * based on the previous one and the performed action.
         */
        stateReducer?: ListboxReducer<TOption>;
    }
    interface UseSingleSelectListboxParameters<TOption> extends UseListboxCommonProps<TOption> {
        /**
         * The default selected value. Use when the component is not controlled.
         */
        defaultValue?: TOption | null;
        /**
         * If `true`, the component will allow to select multiple options.
         * @default false
         */
        multiple?: false;
        /**
         * The selected value. Use when the component is controlled.
         */
        value?: TOption | null;
        /**
         * Callback fired when the value changes.
         */
        onChange?: (value: TOption) => void;
    }
    interface UseMultiSelectListboxParameters<TOption> extends UseListboxCommonProps<TOption> {
        /**
         * The default selected value. Use when the component is not controlled.
         */
        defaultValue?: TOption[];
        /**
         * If `true`, the component will allow to select multiple options.
         * @default false
         */
        multiple: true;
        /**
         * The selected value. Use when the component is controlled.
         */
        value?: TOption[];
        /**
         * Callback fired when the value changes.
         */
        onChange?: (value: TOption[]) => void;
    }
    export type UseListboxParameters<TOption> = UseSingleSelectListboxParameters<TOption> | UseMultiSelectListboxParameters<TOption>;
    export interface OptionState {
        disabled: boolean;
        highlighted: boolean;
        selected: boolean;
    }
    interface UseListboxRootSlotOwnProps {
        'aria-activedescendant'?: React.AriaAttributes['aria-activedescendant'];
        id?: string;
        onBlur: React.FocusEventHandler;
        onKeyDown: React.KeyboardEventHandler;
        role: React.AriaRole;
        tabIndex: number;
        ref: React.Ref<any>;
    }
    export type UseListboxRootSlotProps<TOther = {}> = Omit<TOther, keyof UseListboxRootSlotOwnProps> & UseListboxRootSlotOwnProps;
    interface UseListboxOptionSlotOwnProps {
        'aria-disabled': React.AriaAttributes['aria-disabled'];
        'aria-selected': React.AriaAttributes['aria-selected'];
        id?: string;
        onClick: React.MouseEventHandler;
        role: React.AriaRole;
    }
    export type UseListboxOptionSlotProps<TOther = {}> = Omit<TOther, keyof UseListboxOptionSlotOwnProps> & UseListboxOptionSlotOwnProps;
}
declare module "@mui/base/ListboxUnstyled/useListbox" {
    import { UseListboxParameters, OptionState, UseListboxOptionSlotProps, UseListboxRootSlotProps } from "@mui/base/ListboxUnstyled/useListbox.types";
    import { EventHandlers } from "@mui/base/utils/types";
    export type useListbox<TOption> = (props: UseListboxParameters<TOption>) => {
        getRootProps: <TOther extends EventHandlers = {}>(otherHandlers?: TOther) => UseListboxRootSlotProps<TOther>;
        getOptionProps: <TOther_1 extends EventHandlers = {}>(option: TOption, otherHandlers?: TOther_1) => UseListboxOptionSlotProps<TOther_1>;
        getOptionState: (option: TOption) => OptionState;
        selectedOption: TOption | TOption[] | null;
        highlightedOption: NonNullable<TOption> | null;
    };
    export default useListbox;
}
declare module "@mui/base/ListboxUnstyled/defaultListboxReducer" {
    import { ListboxState, ListboxAction } from "@mui/base/ListboxUnstyled/useListbox.types";
    export type defaultListboxReducer<TOption> = (state: Readonly<ListboxState<TOption>>, action: ListboxAction<TOption>) => Readonly<ListboxState<TOption>>;
    export default defaultListboxReducer;
}
declare module "@mui/base/ListboxUnstyled/index" {
    export { default as useListbox } from "@mui/base/ListboxUnstyled/useListbox";
    export { default as defaultListboxReducer } from "@mui/base/ListboxUnstyled/defaultListboxReducer";
    export * from "@mui/base/ListboxUnstyled/useListbox.types";
}
declare module "@mui/base/SelectUnstyled/useSelect.types" {
    import React from 'react';
    import { UseButtonRootSlotProps } from "@mui/base/ButtonUnstyled/index";
    import { OptionState, UseListboxOptionSlotProps, UseListboxRootSlotProps } from "@mui/base/ListboxUnstyled/index";
    import { EventHandlers } from "@mui/base/utils/types";
    export interface SelectOption<TValue> {
        value: TValue;
        label: React.ReactNode;
        disabled?: boolean;
    }
    export interface SelectOptionGroup<TValue> {
        options: SelectChild<TValue>[];
        label: React.ReactNode;
        disabled?: boolean;
    }
    export type SelectChild<TValue> = SelectOption<TValue> | SelectOptionGroup<TValue>;
    export function isOptionGroup<TValue>(child: SelectChild<TValue>): child is SelectOptionGroup<TValue>;
    interface UseSelectCommonProps<TValue> {
        buttonComponent?: React.ElementType;
        buttonRef?: React.Ref<Element>;
        disabled?: boolean;
        listboxId?: string;
        listboxRef?: React.Ref<Element>;
        onOpenChange?: (open: boolean) => void;
        open?: boolean;
        options: SelectOption<TValue>[];
    }
    export interface UseSelectSingleParameters<TValue> extends UseSelectCommonProps<TValue> {
        defaultValue?: TValue | null;
        multiple?: false;
        onChange?: (value: TValue | null) => void;
        value?: TValue | null;
    }
    export interface UseSelectMultiParameters<TValue> extends UseSelectCommonProps<TValue> {
        defaultValue?: TValue[];
        multiple: true;
        onChange?: (value: TValue[]) => void;
        value?: TValue[];
    }
    export type UseSelectParameters<TValue> = UseSelectSingleParameters<TValue> | UseSelectMultiParameters<TValue>;
    interface UseSelectButtonSlotEventHandlers {
        onClick: React.MouseEventHandler;
        onKeyDown: React.KeyboardEventHandler;
        onMouseDown: React.MouseEventHandler<HTMLElement>;
    }
    export type UseSelectButtonSlotProps<TOther = {}> = UseButtonRootSlotProps<Omit<TOther, keyof UseSelectButtonSlotEventHandlers> & UseSelectButtonSlotEventHandlers> & {
        'aria-expanded': React.AriaAttributes['aria-expanded'];
        'aria-haspopup': React.AriaAttributes['aria-haspopup'];
    };
    interface UseSelectListboxSlotEventHandlers {
        onBlur: React.FocusEventHandler;
        onKeyUp: React.KeyboardEventHandler;
    }
    export type UseSelectListboxSlotProps<TOther = {}> = UseListboxRootSlotProps<Omit<TOther, keyof UseSelectListboxSlotEventHandlers> & UseSelectListboxSlotEventHandlers>;
    interface UseSelectOptionSlotEventHandlers {
        onClick: React.MouseEventHandler;
    }
    export type UseSelectOptionSlotProps<TOther = {}> = UseListboxOptionSlotProps<Omit<TOther, keyof UseSelectOptionSlotEventHandlers> & UseSelectOptionSlotEventHandlers>;
    interface UseSelectCommonResult<TValue> {
        buttonActive: boolean;
        buttonFocusVisible: boolean;
        disabled: boolean;
        getButtonProps: <TOther extends EventHandlers = {}>(otherHandlers?: TOther) => UseSelectButtonSlotProps<TOther>;
        getListboxProps: <TOther extends EventHandlers = {}>(otherHandlers?: TOther) => UseSelectListboxSlotProps<TOther>;
        getOptionProps: <TOther extends EventHandlers = {}>(option: SelectOption<TValue>, otherHandlers?: TOther) => UseSelectOptionSlotProps<TOther>;
        getOptionState: (option: SelectOption<TValue>) => OptionState;
        open: boolean;
    }
    export interface UseSelectSingleResult<TValue> extends UseSelectCommonResult<TValue> {
        value: TValue | null;
    }
    export interface UseSelectMultiResult<TValue> extends UseSelectCommonResult<TValue> {
        value: TValue[];
    }
    export {};
}
declare module "@mui/base/SelectUnstyled/SelectUnstyled.types" {
    import * as React from 'react';
    import { SelectOption, UseSelectButtonSlotProps, UseSelectListboxSlotProps } from "@mui/base/SelectUnstyled/useSelect.types";
    import PopperUnstyled, { PopperUnstyledProps } from "@mui/base/PopperUnstyled/index";
    export interface SelectUnstyledComponentsPropsOverrides {
    }
    export interface SelectUnstyledCommonProps {
        /**
         * If `true`, the select element is focused during the first mount
         * @default false
         */
        autoFocus?: boolean;
        children?: React.ReactNode;
        className?: string;
        component?: React.ElementType;
        /**
         * If `true`, the select is disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, the select will be initially open.
         * @default false
         */
        defaultListboxOpen?: boolean;
        /**
         * Controls the open state of the select's listbox.
         * @default undefined
         */
        listboxOpen?: boolean;
        /**
         * Callback fired when the component requests to be opened.
         * Use in controlled mode (see listboxOpen).
         */
        onListboxOpenChange?: (isOpen: boolean) => void;
    }
    export interface SelectUnstyledProps<TValue extends {}> extends SelectUnstyledCommonProps {
        /**
         * The components used for each slot inside the Select.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Listbox?: React.ElementType;
            Popper?: React.ComponentType<SelectUnstyledPopperSlotProps<TValue>>;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'button'> & SelectUnstyledComponentsPropsOverrides;
            listbox?: React.ComponentPropsWithRef<'ul'> & SelectUnstyledComponentsPropsOverrides;
            popper?: Partial<React.ComponentPropsWithRef<PopperUnstyled>> & SelectUnstyledComponentsPropsOverrides;
        };
        /**
         * The default selected value. Use when the component is not controlled.
         */
        defaultValue?: TValue | null;
        /**
         * Callback fired when an option is selected.
         */
        onChange?: (value: TValue | null) => void;
        /**
         * Function that customizes the rendering of the selected value.
         */
        renderValue?: (option: SelectOption<TValue> | null) => React.ReactNode;
        /**
         * The selected value.
         * Set to `null` to deselect all options.
         */
        value?: TValue | null;
    }
    export interface SelectUnstyledOwnerState<TValue> extends SelectUnstyledProps<TValue> {
        active: boolean;
        disabled: boolean;
        focusVisible: boolean;
        open: boolean;
    }
    export type SelectUnstyledRootSlotProps<TValue> = UseSelectButtonSlotProps & {
        className: string;
        children?: React.ReactNode;
        ownerState: SelectUnstyledOwnerState<TValue>;
    };
    export type SelectUnstyledListboxSlotProps<TValue> = UseSelectListboxSlotProps & {
        className: string;
        children?: React.ReactNode;
        ownerState: SelectUnstyledOwnerState<TValue>;
    };
    export type SelectUnstyledPopperSlotProps<TValue> = {
        anchorEl: PopperUnstyledProps['anchorEl'];
        children?: React.ReactNode;
        className: string | undefined;
        disablePortal: PopperUnstyledProps['disablePortal'];
        open: boolean;
        ownerState: SelectUnstyledOwnerState<TValue>;
        placement: PopperUnstyledProps['placement'];
    };
}
declare module "@mui/base/SelectUnstyled/SelectUnstyled" {
    import * as React from 'react';
    import { SelectUnstyledProps } from "@mui/base/SelectUnstyled/SelectUnstyled.types";
    const _default: <TValue extends {}>(props: SelectUnstyledProps<TValue> & React.RefAttributes<HTMLElement>) => JSX.Element | null;
    /**
     * The foundation for building custom-styled select components.
     *
     * Demos:
     *
     * - [Selects](https://mui.com/components/selects/)
     *
     * API:
     *
     * - [SelectUnstyled API](https://mui.com/api/select-unstyled/)
     */
    export default _default;
}
declare module "@mui/base/SelectUnstyled/SelectUnstyledContext" {
    import React from 'react';
    import { OptionState } from "@mui/base/ListboxUnstyled/index";
    import { SelectOption } from "@mui/base/SelectUnstyled/useSelect.types";
    export interface SelectUnstyledContextType {
        getOptionState: (value: SelectOption<any>) => OptionState;
        getOptionProps: (option: SelectOption<any>) => Record<string, any>;
    }
    export const SelectUnstyledContext: React.Context<SelectUnstyledContextType | undefined>;
}
declare module "@mui/base/SelectUnstyled/selectUnstyledClasses" {
    export interface SelectUnstyledClasses {
        root: string;
        button: string;
        listbox: string;
        popper: string;
        active: string;
        expanded: string;
        disabled: string;
        focusVisible: string;
    }
    export type SelectUnstyledClassKey = keyof SelectUnstyledClasses;
    export function getSelectUnstyledUtilityClass(slot: string): string;
    const selectUnstyledClasses: SelectUnstyledClasses;
    export default selectUnstyledClasses;
}
declare module "@mui/base/SelectUnstyled/useSelect" {
    import { UseSelectMultiParameters, UseSelectMultiResult, UseSelectSingleParameters, UseSelectSingleResult } from "@mui/base/SelectUnstyled/useSelect.types";
    function useSelect<TValue>(props: UseSelectSingleParameters<TValue>): UseSelectSingleResult<TValue>;
    function useSelect<TValue>(props: UseSelectMultiParameters<TValue>): UseSelectMultiResult<TValue>;
    export default useSelect;
}
declare module "@mui/base/SelectUnstyled/index" {
    export { default } from "@mui/base/SelectUnstyled/SelectUnstyled";
    export * from "@mui/base/SelectUnstyled/SelectUnstyledContext";
    export { default as selectUnstyledClasses } from "@mui/base/SelectUnstyled/selectUnstyledClasses";
    export * from "@mui/base/SelectUnstyled/selectUnstyledClasses";
    export * from "@mui/base/SelectUnstyled/SelectUnstyled.types";
    export { default as useSelect } from "@mui/base/SelectUnstyled/useSelect";
    export * from "@mui/base/SelectUnstyled/useSelect.types";
}
declare module "@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.types" {
    import * as React from 'react';
    import PopperUnstyled, { PopperUnstyledProps } from "@mui/base/PopperUnstyled/index";
    import { SelectOption, SelectUnstyledCommonProps, UseSelectButtonSlotProps, UseSelectListboxSlotProps } from "@mui/base/SelectUnstyled/index";
    export interface MultiSelectUnstyledComponentsPropsOverrides {
    }
    export interface MultiSelectUnstyledProps<TValue extends {}> extends SelectUnstyledCommonProps {
        /**
         * The components used for each slot inside the Select.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Listbox?: React.ElementType;
            Popper?: React.ComponentType<MultiSelectUnstyledPopperSlotProps<TValue>>;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'button'> & MultiSelectUnstyledComponentsPropsOverrides;
            listbox?: React.ComponentPropsWithRef<'ul'> & MultiSelectUnstyledComponentsPropsOverrides;
            popper?: Partial<React.ComponentPropsWithRef<PopperUnstyled>> & MultiSelectUnstyledComponentsPropsOverrides;
        };
        /**
         * The default selected values. Use when the component is not controlled.
         * @default []
         */
        defaultValue?: TValue[];
        /**
         * Callback fired when an option is selected.
         */
        onChange?: (value: TValue[]) => void;
        /**
         * Function that customizes the rendering of the selected values.
         */
        renderValue?: (option: SelectOption<TValue>[]) => React.ReactNode;
        /**
         * The selected values.
         * Set to an empty array to deselect all options.
         */
        value?: TValue[];
    }
    export interface MultiSelectUnstyledOwnerState<TValue> extends MultiSelectUnstyledProps<TValue> {
        active: boolean;
        disabled: boolean;
        open: boolean;
        focusVisible: boolean;
    }
    export type MultiSelectUnstyledRootSlotProps<TValue> = UseSelectButtonSlotProps & {
        className: string;
        children?: React.ReactNode;
        ownerState: MultiSelectUnstyledOwnerState<TValue>;
    };
    export type MultiSelectUnstyledListboxSlotProps<TValue> = UseSelectListboxSlotProps & {
        className: string;
        children?: React.ReactNode;
        ownerState: MultiSelectUnstyledOwnerState<TValue>;
    };
    export type MultiSelectUnstyledPopperSlotProps<TValue> = {
        anchorEl: PopperUnstyledProps['anchorEl'];
        children?: React.ReactNode;
        className: string | undefined;
        disablePortal: PopperUnstyledProps['disablePortal'];
        open: boolean;
        ownerState: MultiSelectUnstyledOwnerState<TValue>;
        placement: PopperUnstyledProps['placement'];
    };
}
declare module "@mui/base/MultiSelectUnstyled/MultiSelectUnstyled" {
    import * as React from 'react';
    import { MultiSelectUnstyledProps } from "@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.types";
    const _default: <TValue extends {}>(props: MultiSelectUnstyledProps<TValue> & React.RefAttributes<HTMLElement>) => JSX.Element | null;
    /**
     * The foundation for building custom-styled multi-selection select components.
     *
     * Demos:
     *
     * - [Selects](https://mui.com/components/selects/)
     *
     * API:
     *
     * - [MultiSelectUnstyled API](https://mui.com/api/multi-select-unstyled/)
     */
    export default _default;
}
declare module "@mui/base/MultiSelectUnstyled/index" {
    export { default } from "@mui/base/MultiSelectUnstyled/MultiSelectUnstyled";
    export * from "@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.types";
}
declare module "@mui/base/NoSsr/NoSsr" {
    import * as React from 'react';
    export interface NoSsrProps {
        /**
         * You can wrap a node.
         */
        children?: React.ReactNode;
        /**
         * If `true`, the component will not only prevent server-side rendering.
         * It will also defer the rendering of the children into a different screen frame.
         * @default false
         */
        defer?: boolean;
        /**
         * The fallback content to display.
         * @default null
         */
        fallback?: React.ReactNode;
    }
    /**
     * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
     *
     * This component can be useful in a variety of situations:
     *
     * *   Escape hatch for broken dependencies not supporting SSR.
     * *   Improve the time-to-first paint on the client by only rendering above the fold.
     * *   Reduce the rendering time on the server.
     * *   Under too heavy server load, you can turn on service degradation.
     *
     * Demos:
     *
     * - [No Ssr](https://mui.com/components/no-ssr/)
     *
     * API:
     *
     * - [NoSsr API](https://mui.com/api/no-ssr/)
     */
    export type NoSsr = (props: NoSsrProps) => JSX.Element;
    export default NoSsr;
}
declare module "@mui/base/NoSsr/index" {
    export { default } from "@mui/base/NoSsr/NoSsr";
    export * from "@mui/base/NoSsr/NoSsr";
}
declare module "@mui/base/OptionGroupUnstyled/OptionGroupUnstyledProps" {
    import React from 'react';
    export interface OptionGroupUnstyledComponentsPropsOverrides {
    }
    export default interface OptionGroupUnstyledProps {
        /**
         * The human-readable description of the group.
         */
        label?: React.ReactNode;
        className?: string;
        children?: React.ReactNode;
        /**
         * If `true` all the options in the group will be disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to components.Root.
         * If both are provided, the component is used.
         */
        component?: React.ElementType;
        /**
         * The components used for each slot inside the OptionGroupUnstyled.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Label?: React.ElementType;
            List?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'li'> & OptionGroupUnstyledComponentsPropsOverrides;
            label?: React.ComponentPropsWithRef<'span'> & OptionGroupUnstyledComponentsPropsOverrides;
            list?: React.ComponentPropsWithRef<'ul'> & OptionGroupUnstyledComponentsPropsOverrides;
        };
    }
}
declare module "@mui/base/OptionGroupUnstyled/OptionGroupUnstyled" {
    import React from 'react';
    import OptionGroupUnstyledProps from "@mui/base/OptionGroupUnstyled/OptionGroupUnstyledProps";
    /**
     * An unstyled option group to be used within a SelectUnstyled.
     *
     * Demos:
     *
     * - [Selects](https://mui.com/components/selects/)
     *
     * API:
     *
     * - [OptionGroupUnstyled API](https://mui.com/api/option-group-unstyled/)
     */
    const OptionGroupUnstyled: React.ForwardRefExoticComponent<OptionGroupUnstyledProps & React.RefAttributes<HTMLLIElement>>;
    export default OptionGroupUnstyled;
}
declare module "@mui/base/OptionGroupUnstyled/optionGroupUnstyledClasses" {
    export interface OptionGroupUnstyledClasses {
        root: string;
        label: string;
        list: string;
    }
    export type OptionGroupUnstyledClassKey = keyof OptionGroupUnstyledClasses;
    export function getOptionGroupUnstyledUtilityClass(slot: string): string;
    const optionGroupUnstyledClasses: OptionGroupUnstyledClasses;
    export default optionGroupUnstyledClasses;
}
declare module "@mui/base/OptionGroupUnstyled/index" {
    export { default } from "@mui/base/OptionGroupUnstyled/OptionGroupUnstyled";
    export type { default as OptionGroupUnstyledProps } from "@mui/base/OptionGroupUnstyled/OptionGroupUnstyledProps";
    export * from "@mui/base/OptionGroupUnstyled/OptionGroupUnstyledProps";
    export { default as optionGroupUnstyledClasses } from "@mui/base/OptionGroupUnstyled/optionGroupUnstyledClasses";
    export * from "@mui/base/OptionGroupUnstyled/optionGroupUnstyledClasses";
}
declare module "@mui/base/OptionUnstyled/OptionUnstyledProps" {
    import React from 'react';
    import { OptionState } from "@mui/base/ListboxUnstyled/index";
    export interface OptionUnstyledComponentsPropsOverrides {
    }
    export default interface OptionUnstyledProps<TValue> {
        /**
         * The value of the option.
         */
        value: TValue;
        children?: React.ReactNode;
        /**
         * If `true`, the option will be disabled.
         * @default false
         */
        disabled?: boolean;
        className?: string;
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to components.Root.
         * If both are provided, the component is used.
         */
        component?: React.ElementType;
        /**
         * The components used for each slot inside the OptionUnstyled.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Input.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'li'> & OptionUnstyledComponentsPropsOverrides;
        };
    }
    export type OptionUnstyledOwnerState<TValue> = OptionUnstyledProps<TValue> & OptionState;
}
declare module "@mui/base/OptionUnstyled/OptionUnstyled" {
    import React from 'react';
    import OptionUnstyledProps from "@mui/base/OptionUnstyled/OptionUnstyledProps";
    const _default: <TValue>(props: OptionUnstyledProps<TValue> & React.RefAttributes<HTMLElement>) => JSX.Element | null;
    /**
     * An unstyled option to be used within a SelectUnstyled.
     *
     * Demos:
     *
     * - [Selects](https://mui.com/components/selects/)
     *
     * API:
     *
     * - [OptionUnstyled API](https://mui.com/api/option-unstyled/)
     */
    export default _default;
}
declare module "@mui/base/OptionUnstyled/optionUnstyledClasses" {
    export interface OptionUnstyledClasses {
        root: string;
        disabled: string;
        selected: string;
        highlighted: string;
    }
    export type OptionUnstyledClassKey = keyof OptionUnstyledClasses;
    export function getOptionUnstyledUtilityClass(slot: string): string;
    const optionUnstyledClasses: OptionUnstyledClasses;
    export default optionUnstyledClasses;
}
declare module "@mui/base/OptionUnstyled/index" {
    export { default } from "@mui/base/OptionUnstyled/OptionUnstyled";
    export type { default as OptionUnstyledProps } from "@mui/base/OptionUnstyled/OptionUnstyledProps";
    export * from "@mui/base/OptionUnstyled/OptionUnstyledProps";
    export { default as optionUnstyledClasses } from "@mui/base/OptionUnstyled/optionUnstyledClasses";
    export * from "@mui/base/OptionUnstyled/optionUnstyledClasses";
}
declare module "@mui/base/SliderUnstyled/sliderUnstyledClasses" {
    export interface SliderUnstyledClasses {
        /** Class name applied to the root element. */
        root: string;
        /** Class name applied to the root element if `marks` is provided with at least one label. */
        marked: string;
        /** Class name applied to the root element if `orientation="vertical"`. */
        vertical: string;
        /** State class applied to the root and thumb element if `disabled={true}`. */
        disabled: string;
        /** State class applied to the root if a thumb is being dragged. */
        dragging: string;
        /** Class name applied to the rail element. */
        rail: string;
        /** Class name applied to the track element. */
        track: string;
        /** Class name applied to the root element if `track={false}`. */
        trackFalse: string;
        /** Class name applied to the root element if `track="inverted"`. */
        trackInverted: string;
        /** Class name applied to the thumb element. */
        thumb: string;
        /** State class applied to the thumb element if it's active. */
        active: string;
        /** State class applied to the thumb element if keyboard focused. */
        focusVisible: string;
        /** Class name applied to the thumb label element. */
        valueLabel: string;
        /** Class name applied to the thumb label element if it's open. */
        valueLabelOpen: string;
        /** Class name applied to the thumb label's circle element. */
        valueLabelCircle: string;
        /** Class name applied to the thumb label's label element. */
        valueLabelLabel: string;
        /** Class name applied to the mark element. */
        mark: string;
        /** Class name applied to the mark element if active (depending on the value). */
        markActive: string;
        /** Class name applied to the mark label element. */
        markLabel: string;
        /** Class name applied to the mark label element if active (depending on the value). */
        markLabelActive: string;
    }
    export type SliderUnstyledClassKey = keyof SliderUnstyledClasses;
    export function getSliderUtilityClass(slot: string): string;
    const sliderUnstyledClasses: SliderUnstyledClasses;
    export default sliderUnstyledClasses;
}
declare module "@mui/base/SliderUnstyled/SliderValueLabelUnstyled" {
    import * as React from 'react';
    export interface ValueLabelUnstyledProps {
        className?: string;
        style?: React.CSSProperties;
        /**
         * The components used for each slot inside the ValueLabel.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The value of the slider.
         * For ranged sliders, provide an array with two values.
         */
        value?: number | number[];
        /**
         * Controls when the value label is displayed:
         *
         * - `auto` the value label will display when the thumb is hovered or focused.
         * - `on` will display persistently.
         * - `off` will never display.
         * @default 'off'
         */
        valueLabelDisplay?: 'on' | 'auto' | 'off';
    }
    export type SliderValueLabelUnstyled = (props: ValueLabelUnstyledProps) => JSX.Element;
    export default SliderValueLabelUnstyled;
}
declare module "@mui/base/SliderUnstyled/SliderUnstyledProps" {
    import React from 'react';
    import { OverridableComponent, OverridableTypeMap, OverrideProps } from "@mui/types/index";
    import { SliderUnstyledClasses } from "@mui/base/SliderUnstyled/sliderUnstyledClasses";
    import SliderValueLabelUnstyled from "@mui/base/SliderUnstyled/SliderValueLabelUnstyled";
    export interface SliderOwnerStateOverrides {
    }
    export interface Mark {
        value: number;
        label?: React.ReactNode;
    }
    export interface ValueLabelProps extends React.HTMLAttributes<HTMLSpanElement> {
        children: React.ReactElement;
        index: number;
        open: boolean;
        value: number;
    }
    export interface SliderUnstyledComponentsPropsOverrides {
    }
    export interface SliderUnstyledTypeMap<P = {}, D extends React.ElementType = 'span'> {
        props: P & {
            /**
             * The label of the slider.
             */
            'aria-label'?: string;
            /**
             * The id of the element containing a label for the slider.
             */
            'aria-labelledby'?: string;
            /**
             * A string value that provides a user-friendly name for the current value of the slider.
             */
            'aria-valuetext'?: string;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<SliderUnstyledClasses>;
            /**
             * The components used for each slot inside the Slider.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
                Track?: React.ElementType;
                Rail?: React.ElementType;
                Thumb?: React.ElementType;
                Mark?: React.ElementType;
                MarkLabel?: React.ElementType;
                ValueLabel?: React.ElementType;
                Input?: React.ElementType;
            };
            /**
             * The props used for each slot inside the Slider.
             * @default {}
             */
            componentsProps?: {
                root?: React.ComponentPropsWithRef<'span'> & SliderUnstyledComponentsPropsOverrides;
                track?: React.ComponentPropsWithRef<'span'> & SliderUnstyledComponentsPropsOverrides;
                rail?: React.ComponentPropsWithRef<'span'> & SliderUnstyledComponentsPropsOverrides;
                thumb?: React.ComponentPropsWithRef<'span'> & SliderUnstyledComponentsPropsOverrides;
                mark?: React.ComponentPropsWithRef<'span'> & SliderUnstyledComponentsPropsOverrides;
                markLabel?: React.ComponentPropsWithRef<'span'> & SliderUnstyledComponentsPropsOverrides;
                valueLabel?: React.ComponentPropsWithRef<SliderValueLabelUnstyled> & SliderUnstyledComponentsPropsOverrides;
                input?: React.ComponentPropsWithRef<'input'> & SliderUnstyledComponentsPropsOverrides;
            };
            /**
             * The default value. Use when the component is not controlled.
             */
            defaultValue?: number | number[];
            /**
             * If `true`, the component is disabled.
             * @default false
             */
            disabled?: boolean;
            /**
             * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
             * @default false
             */
            disableSwap?: boolean;
            /**
             * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
             * This is important for screen reader users.
             * @param {number} index The thumb label's index to format.
             * @returns {string}
             */
            getAriaLabel?: (index: number) => string;
            /**
             * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
             * This is important for screen reader users.
             * @param {number} value The thumb label's value to format.
             * @param {number} index The thumb label's index to format.
             * @returns {string}
             */
            getAriaValueText?: (value: number, index: number) => string;
            /**
             * Indicates whether the theme context has rtl direction. It is set automatically.
             * @default false
             */
            isRtl?: boolean;
            /**
             * Marks indicate predetermined values to which the user can move the slider.
             * If `true` the marks are spaced according the value of the `step` prop.
             * If an array, it should contain objects with `value` and an optional `label` keys.
             * @default false
             */
            marks?: boolean | Mark[];
            /**
             * The maximum allowed value of the slider.
             * Should not be equal to min.
             * @default 100
             */
            max?: number;
            /**
             * The minimum allowed value of the slider.
             * Should not be equal to max.
             * @default 0
             */
            min?: number;
            /**
             * Name attribute of the hidden `input` element.
             */
            name?: string;
            /**
             * Callback function that is fired when the slider's value changed.
             *
             * @param {Event} event The event source of the callback.
             * You can pull out the new value by accessing `event.target.value` (any).
             * **Warning**: This is a generic event not a change event.
             * @param {number | number[]} value The new value.
             * @param {number} activeThumb Index of the currently moved thumb.
             */
            onChange?: (event: Event, value: number | number[], activeThumb: number) => void;
            /**
             * Callback function that is fired when the `mouseup` is triggered.
             *
             * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
             * @param {number | number[]} value The new value.
             */
            onChangeCommitted?: (event: React.SyntheticEvent | Event, value: number | number[]) => void;
            /**
             * The component orientation.
             * @default 'horizontal'
             */
            orientation?: 'horizontal' | 'vertical';
            /**
             * A transformation function, to change the scale of the slider.
             * @default (x) => x
             */
            scale?: (value: number) => number;
            /**
             * The granularity with which the slider can step through values. (A "discrete" slider.)
             * The `min` prop serves as the origin for the valid values.
             * We recommend (max - min) to be evenly divisible by the step.
             *
             * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
             * @default 1
             */
            step?: number | null;
            /**
             * Tab index attribute of the hidden `input` element.
             */
            tabIndex?: number;
            /**
             * The track presentation:
             *
             * - `normal` the track will render a bar representing the slider value.
             * - `inverted` the track will render a bar representing the remaining slider value.
             * - `false` the track will render without a bar.
             * @default 'normal'
             */
            track?: 'normal' | false | 'inverted';
            /**
             * The value of the slider.
             * For ranged sliders, provide an array with two values.
             */
            value?: number | number[];
            /**
             * Controls when the value label is displayed:
             *
             * - `auto` the value label will display when the thumb is hovered or focused.
             * - `on` will display persistently.
             * - `off` will never display.
             * @default 'off'
             */
            valueLabelDisplay?: 'on' | 'auto' | 'off';
            /**
             * The format function the value label's value.
             *
             * When a function is provided, it should have the following signature:
             *
             * - {number} value The value label's value to format
             * - {number} index The value label's index to format
             * @default (x) => x
             */
            valueLabelFormat?: string | ((value: number, index: number) => React.ReactNode);
        };
        defaultComponent: D;
    }
    /**
     * Utility to create component types that inherit props from SliderUnstyled.
     */
    export interface ExtendSliderUnstyledTypeMap<M extends OverridableTypeMap> {
        props: M['props'] & SliderUnstyledTypeMap['props'];
        defaultComponent: M['defaultComponent'];
    }
    export type ExtendSliderUnstyled<M extends OverridableTypeMap> = OverridableComponent<ExtendSliderUnstyledTypeMap<M>>;
    type SliderUnstyledProps<D extends React.ElementType = SliderUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<SliderUnstyledTypeMap<P, D>, D>;
    export default SliderUnstyledProps;
}
declare module "@mui/base/SliderUnstyled/SliderUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { SliderUnstyledTypeMap } from "@mui/base/SliderUnstyled/SliderUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Slider](https://mui.com/components/slider/)
     *
     * API:
     *
     * - [SliderUnstyled API](https://mui.com/api/slider-unstyled/)
     */
    const SliderUnstyled: OverridableComponent<SliderUnstyledTypeMap>;
    export default SliderUnstyled;
}
declare module "@mui/base/SliderUnstyled/useSlider" {
    import * as React from 'react';
    import SliderUnstyledProps from "@mui/base/SliderUnstyled/SliderUnstyledProps";
    export interface UseSliderProps {
        ref: React.Ref<any>;
        'aria-labelledby'?: SliderUnstyledProps['aria-labelledby'];
        defaultValue?: SliderUnstyledProps['defaultValue'];
        disabled?: SliderUnstyledProps['disabled'];
        disableSwap?: SliderUnstyledProps['disableSwap'];
        isRtl?: SliderUnstyledProps['isRtl'];
        marks?: SliderUnstyledProps['marks'];
        max?: SliderUnstyledProps['max'];
        min?: SliderUnstyledProps['min'];
        name?: SliderUnstyledProps['name'];
        onChange?: SliderUnstyledProps['onChange'];
        onChangeCommitted?: SliderUnstyledProps['onChangeCommitted'];
        orientation?: SliderUnstyledProps['orientation'];
        scale?: SliderUnstyledProps['scale'];
        step?: SliderUnstyledProps['step'];
        tabIndex?: SliderUnstyledProps['tabIndex'];
        value?: SliderUnstyledProps['value'];
    }
    export function valueToPercent(value: number, min: number, max: number): number;
    export const Identity: (x: any) => any;
    export type useSlider = (props: UseSliderProps) => {
        axis: string;
        axisProps: {
            horizontal: {
                offset: (percent: number) => {
                    left: string;
                };
                leap: (percent: number) => {
                    width: string;
                };
            };
            'horizontal-reverse': {
                offset: (percent: number) => {
                    right: string;
                };
                leap: (percent: number) => {
                    width: string;
                };
            };
            vertical: {
                offset: (percent: number) => {
                    bottom: string;
                };
                leap: (percent: number) => {
                    height: string;
                };
            };
        };
        getRootProps: (otherHandlers?: Record<string, (event: any) => void> | undefined) => {
            ref: React.Ref<unknown>;
        };
        getHiddenInputProps: (otherHandlers?: Record<string, (event: any) => void> | undefined) => {
            style: {
                direction: string;
                width: string;
                height: string;
                accentColor?: import("csstype").Property.AccentColor | undefined;
                alignContent?: import("csstype").Property.AlignContent | undefined;
                alignItems?: import("csstype").Property.AlignItems | undefined;
                alignSelf?: import("csstype").Property.AlignSelf | undefined;
                alignTracks?: import("csstype").Property.AlignTracks | undefined;
                animationDelay?: import("csstype").Property.AnimationDelay<string & {}> | undefined;
                animationDirection?: import("csstype").Property.AnimationDirection | undefined;
                animationDuration?: import("csstype").Property.AnimationDuration<string & {}> | undefined;
                animationFillMode?: import("csstype").Property.AnimationFillMode | undefined;
                animationIterationCount?: import("csstype").Property.AnimationIterationCount | undefined;
                animationName?: import("csstype").Property.AnimationName | undefined;
                animationPlayState?: import("csstype").Property.AnimationPlayState | undefined;
                animationTimingFunction?: import("csstype").Property.AnimationTimingFunction | undefined;
                appearance?: import("csstype").Property.Appearance | undefined;
                aspectRatio?: import("csstype").Property.AspectRatio | undefined;
                backdropFilter?: import("csstype").Property.BackdropFilter | undefined;
                backfaceVisibility?: import("csstype").Property.BackfaceVisibility | undefined;
                backgroundAttachment?: import("csstype").Property.BackgroundAttachment | undefined;
                backgroundBlendMode?: import("csstype").Property.BackgroundBlendMode | undefined;
                backgroundClip?: import("csstype").Property.BackgroundClip | undefined;
                backgroundColor?: import("csstype").Property.BackgroundColor | undefined;
                backgroundImage?: import("csstype").Property.BackgroundImage | undefined;
                backgroundOrigin?: import("csstype").Property.BackgroundOrigin | undefined;
                backgroundPositionX?: import("csstype").Property.BackgroundPositionX<string | number> | undefined;
                backgroundPositionY?: import("csstype").Property.BackgroundPositionY<string | number> | undefined;
                backgroundRepeat?: import("csstype").Property.BackgroundRepeat | undefined;
                backgroundSize?: import("csstype").Property.BackgroundSize<string | number> | undefined;
                blockOverflow?: import("csstype").Property.BlockOverflow | undefined;
                blockSize?: import("csstype").Property.BlockSize<string | number> | undefined;
                borderBlockColor?: import("csstype").Property.BorderBlockColor | undefined;
                borderBlockEndColor?: import("csstype").Property.BorderBlockEndColor | undefined;
                borderBlockEndStyle?: import("csstype").Property.BorderBlockEndStyle | undefined;
                borderBlockEndWidth?: import("csstype").Property.BorderBlockEndWidth<string | number> | undefined;
                borderBlockStartColor?: import("csstype").Property.BorderBlockStartColor | undefined;
                borderBlockStartStyle?: import("csstype").Property.BorderBlockStartStyle | undefined;
                borderBlockStartWidth?: import("csstype").Property.BorderBlockStartWidth<string | number> | undefined;
                borderBlockStyle?: import("csstype").Property.BorderBlockStyle | undefined;
                borderBlockWidth?: import("csstype").Property.BorderBlockWidth<string | number> | undefined;
                borderBottomColor?: import("csstype").Property.BorderBottomColor | undefined;
                borderBottomLeftRadius?: import("csstype").Property.BorderBottomLeftRadius<string | number> | undefined;
                borderBottomRightRadius?: import("csstype").Property.BorderBottomRightRadius<string | number> | undefined;
                borderBottomStyle?: import("csstype").Property.BorderBottomStyle | undefined;
                borderBottomWidth?: import("csstype").Property.BorderBottomWidth<string | number> | undefined;
                borderCollapse?: import("csstype").Property.BorderCollapse | undefined;
                borderEndEndRadius?: import("csstype").Property.BorderEndEndRadius<string | number> | undefined;
                borderEndStartRadius?: import("csstype").Property.BorderEndStartRadius<string | number> | undefined;
                borderImageOutset?: import("csstype").Property.BorderImageOutset<string | number> | undefined;
                borderImageRepeat?: import("csstype").Property.BorderImageRepeat | undefined;
                borderImageSlice?: import("csstype").Property.BorderImageSlice | undefined;
                borderImageSource?: import("csstype").Property.BorderImageSource | undefined;
                borderImageWidth?: import("csstype").Property.BorderImageWidth<string | number> | undefined;
                borderInlineColor?: import("csstype").Property.BorderInlineColor | undefined;
                borderInlineEndColor?: import("csstype").Property.BorderInlineEndColor | undefined;
                borderInlineEndStyle?: import("csstype").Property.BorderInlineEndStyle | undefined;
                borderInlineEndWidth?: import("csstype").Property.BorderInlineEndWidth<string | number> | undefined;
                borderInlineStartColor?: import("csstype").Property.BorderInlineStartColor | undefined;
                borderInlineStartStyle?: import("csstype").Property.BorderInlineStartStyle | undefined;
                borderInlineStartWidth?: import("csstype").Property.BorderInlineStartWidth<string | number> | undefined;
                borderInlineStyle?: import("csstype").Property.BorderInlineStyle | undefined;
                borderInlineWidth?: import("csstype").Property.BorderInlineWidth<string | number> | undefined;
                borderLeftColor?: import("csstype").Property.BorderLeftColor | undefined;
                borderLeftStyle?: import("csstype").Property.BorderLeftStyle | undefined;
                borderLeftWidth?: import("csstype").Property.BorderLeftWidth<string | number> | undefined;
                borderRightColor?: import("csstype").Property.BorderRightColor | undefined;
                borderRightStyle?: import("csstype").Property.BorderRightStyle | undefined;
                borderRightWidth?: import("csstype").Property.BorderRightWidth<string | number> | undefined;
                borderSpacing?: import("csstype").Property.BorderSpacing<string | number> | undefined;
                borderStartEndRadius?: import("csstype").Property.BorderStartEndRadius<string | number> | undefined;
                borderStartStartRadius?: import("csstype").Property.BorderStartStartRadius<string | number> | undefined;
                borderTopColor?: import("csstype").Property.BorderTopColor | undefined;
                borderTopLeftRadius?: import("csstype").Property.BorderTopLeftRadius<string | number> | undefined;
                borderTopRightRadius?: import("csstype").Property.BorderTopRightRadius<string | number> | undefined;
                borderTopStyle?: import("csstype").Property.BorderTopStyle | undefined;
                borderTopWidth?: import("csstype").Property.BorderTopWidth<string | number> | undefined;
                bottom?: import("csstype").Property.Bottom<string | number> | undefined;
                boxDecorationBreak?: import("csstype").Property.BoxDecorationBreak | undefined;
                boxShadow?: import("csstype").Property.BoxShadow | undefined;
                boxSizing?: import("csstype").Property.BoxSizing | undefined;
                breakAfter?: import("csstype").Property.BreakAfter | undefined;
                breakBefore?: import("csstype").Property.BreakBefore | undefined;
                breakInside?: import("csstype").Property.BreakInside | undefined;
                captionSide?: import("csstype").Property.CaptionSide | undefined;
                caretColor?: import("csstype").Property.CaretColor | undefined;
                clear?: import("csstype").Property.Clear | undefined;
                clipPath?: import("csstype").Property.ClipPath | undefined;
                color?: import("csstype").Property.Color | undefined;
                colorAdjust?: import("csstype").Property.Color | undefined;
                colorScheme?: import("csstype").Property.ColorScheme | undefined;
                columnCount?: import("csstype").Property.ColumnCount | undefined;
                columnFill?: import("csstype").Property.ColumnFill | undefined;
                columnGap?: import("csstype").Property.ColumnGap<string | number> | undefined;
                columnRuleColor?: import("csstype").Property.ColumnRuleColor | undefined;
                columnRuleStyle?: import("csstype").Property.ColumnRuleStyle | undefined;
                columnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number> | undefined;
                columnSpan?: import("csstype").Property.ColumnSpan | undefined;
                columnWidth?: import("csstype").Property.ColumnWidth<string | number> | undefined;
                contain?: import("csstype").Property.Contain | undefined;
                content?: import("csstype").Property.Content | undefined;
                contentVisibility?: import("csstype").Property.ContentVisibility | undefined;
                counterIncrement?: import("csstype").Property.CounterIncrement | undefined;
                counterReset?: import("csstype").Property.CounterReset | undefined;
                counterSet?: import("csstype").Property.CounterSet | undefined;
                cursor?: import("csstype").Property.Cursor | undefined;
                display?: import("csstype").Property.Display | undefined;
                emptyCells?: import("csstype").Property.EmptyCells | undefined;
                filter?: import("csstype").Property.Filter | undefined;
                flexBasis?: import("csstype").Property.FlexBasis<string | number> | undefined;
                flexDirection?: import("csstype").Property.FlexDirection | undefined;
                flexGrow?: import("csstype").Property.FlexGrow | undefined;
                flexShrink?: import("csstype").Property.FlexShrink | undefined;
                flexWrap?: import("csstype").Property.FlexWrap | undefined;
                float?: import("csstype").Property.Float | undefined;
                fontFamily?: import("csstype").Property.FontFamily | undefined;
                fontFeatureSettings?: import("csstype").Property.FontFeatureSettings | undefined;
                fontKerning?: import("csstype").Property.FontKerning | undefined;
                fontLanguageOverride?: import("csstype").Property.FontLanguageOverride | undefined;
                fontOpticalSizing?: import("csstype").Property.FontOpticalSizing | undefined;
                fontSize?: import("csstype").Property.FontSize<string | number> | undefined;
                fontSizeAdjust?: import("csstype").Property.FontSizeAdjust | undefined;
                fontSmooth?: import("csstype").Property.FontSmooth<string | number> | undefined;
                fontStretch?: import("csstype").Property.FontStretch | undefined;
                fontStyle?: import("csstype").Property.FontStyle | undefined;
                fontSynthesis?: import("csstype").Property.FontSynthesis | undefined;
                fontVariant?: import("csstype").Property.FontVariant | undefined;
                fontVariantCaps?: import("csstype").Property.FontVariantCaps | undefined;
                fontVariantEastAsian?: import("csstype").Property.FontVariantEastAsian | undefined;
                fontVariantLigatures?: import("csstype").Property.FontVariantLigatures | undefined;
                fontVariantNumeric?: import("csstype").Property.FontVariantNumeric | undefined;
                fontVariantPosition?: import("csstype").Property.FontVariantPosition | undefined;
                fontVariationSettings?: import("csstype").Property.FontVariationSettings | undefined;
                fontWeight?: import("csstype").Property.FontWeight | undefined;
                forcedColorAdjust?: import("csstype").Property.ForcedColorAdjust | undefined;
                gridAutoColumns?: import("csstype").Property.GridAutoColumns<string | number> | undefined;
                gridAutoFlow?: import("csstype").Property.GridAutoFlow | undefined;
                gridAutoRows?: import("csstype").Property.GridAutoRows<string | number> | undefined;
                gridColumnEnd?: import("csstype").Property.GridColumnEnd | undefined;
                gridColumnStart?: import("csstype").Property.GridColumnStart | undefined;
                gridRowEnd?: import("csstype").Property.GridRowEnd | undefined;
                gridRowStart?: import("csstype").Property.GridRowStart | undefined;
                gridTemplateAreas?: import("csstype").Property.GridTemplateAreas | undefined;
                gridTemplateColumns?: import("csstype").Property.GridTemplateColumns<string | number> | undefined;
                gridTemplateRows?: import("csstype").Property.GridTemplateRows<string | number> | undefined;
                hangingPunctuation?: import("csstype").Property.HangingPunctuation | undefined;
                hyphens?: import("csstype").Property.Hyphens | undefined;
                imageOrientation?: import("csstype").Property.ImageOrientation | undefined;
                imageRendering?: import("csstype").Property.ImageRendering | undefined;
                imageResolution?: import("csstype").Property.ImageResolution | undefined;
                initialLetter?: import("csstype").Property.InitialLetter | undefined;
                inlineSize?: import("csstype").Property.InlineSize<string | number> | undefined;
                inset?: import("csstype").Property.Inset<string | number> | undefined;
                insetBlock?: import("csstype").Property.InsetBlock<string | number> | undefined;
                insetBlockEnd?: import("csstype").Property.InsetBlockEnd<string | number> | undefined;
                insetBlockStart?: import("csstype").Property.InsetBlockStart<string | number> | undefined;
                insetInline?: import("csstype").Property.InsetInline<string | number> | undefined;
                insetInlineEnd?: import("csstype").Property.InsetInlineEnd<string | number> | undefined;
                insetInlineStart?: import("csstype").Property.InsetInlineStart<string | number> | undefined;
                isolation?: import("csstype").Property.Isolation | undefined;
                justifyContent?: import("csstype").Property.JustifyContent | undefined;
                justifyItems?: import("csstype").Property.JustifyItems | undefined;
                justifySelf?: import("csstype").Property.JustifySelf | undefined;
                justifyTracks?: import("csstype").Property.JustifyTracks | undefined;
                left?: import("csstype").Property.Left<string | number> | undefined;
                letterSpacing?: import("csstype").Property.LetterSpacing<string | number> | undefined;
                lineBreak?: import("csstype").Property.LineBreak | undefined;
                lineHeight?: import("csstype").Property.LineHeight<string | number> | undefined;
                lineHeightStep?: import("csstype").Property.LineHeightStep<string | number> | undefined;
                listStyleImage?: import("csstype").Property.ListStyleImage | undefined;
                listStylePosition?: import("csstype").Property.ListStylePosition | undefined;
                listStyleType?: import("csstype").Property.ListStyleType | undefined;
                marginBlock?: import("csstype").Property.MarginBlock<string | number> | undefined;
                marginBlockEnd?: import("csstype").Property.MarginBlockEnd<string | number> | undefined;
                marginBlockStart?: import("csstype").Property.MarginBlockStart<string | number> | undefined;
                marginBottom?: import("csstype").Property.MarginBottom<string | number> | undefined;
                marginInline?: import("csstype").Property.MarginInline<string | number> | undefined;
                marginInlineEnd?: import("csstype").Property.MarginInlineEnd<string | number> | undefined;
                marginInlineStart?: import("csstype").Property.MarginInlineStart<string | number> | undefined;
                marginLeft?: import("csstype").Property.MarginLeft<string | number> | undefined;
                marginRight?: import("csstype").Property.MarginRight<string | number> | undefined;
                marginTop?: import("csstype").Property.MarginTop<string | number> | undefined;
                maskBorderMode?: import("csstype").Property.MaskBorderMode | undefined;
                maskBorderOutset?: import("csstype").Property.MaskBorderOutset<string | number> | undefined;
                maskBorderRepeat?: import("csstype").Property.MaskBorderRepeat | undefined;
                maskBorderSlice?: import("csstype").Property.MaskBorderSlice | undefined;
                maskBorderSource?: import("csstype").Property.MaskBorderSource | undefined;
                maskBorderWidth?: import("csstype").Property.MaskBorderWidth<string | number> | undefined;
                maskClip?: import("csstype").Property.MaskClip | undefined;
                maskComposite?: import("csstype").Property.MaskComposite | undefined;
                maskImage?: import("csstype").Property.MaskImage | undefined;
                maskMode?: import("csstype").Property.MaskMode | undefined;
                maskOrigin?: import("csstype").Property.MaskOrigin | undefined;
                maskPosition?: import("csstype").Property.MaskPosition<string | number> | undefined;
                maskRepeat?: import("csstype").Property.MaskRepeat | undefined;
                maskSize?: import("csstype").Property.MaskSize<string | number> | undefined;
                maskType?: import("csstype").Property.MaskType | undefined;
                mathStyle?: import("csstype").Property.MathStyle | undefined;
                maxBlockSize?: import("csstype").Property.MaxBlockSize<string | number> | undefined;
                maxHeight?: import("csstype").Property.MaxHeight<string | number> | undefined;
                maxInlineSize?: import("csstype").Property.MaxInlineSize<string | number> | undefined;
                maxLines?: import("csstype").Property.MaxLines | undefined;
                maxWidth?: import("csstype").Property.MaxWidth<string | number> | undefined;
                minBlockSize?: import("csstype").Property.MinBlockSize<string | number> | undefined;
                minHeight?: import("csstype").Property.MinHeight<string | number> | undefined;
                minInlineSize?: import("csstype").Property.MinInlineSize<string | number> | undefined;
                minWidth?: import("csstype").Property.MinWidth<string | number> | undefined;
                mixBlendMode?: import("csstype").Property.MixBlendMode | undefined;
                motionDistance?: import("csstype").Property.OffsetDistance<string | number> | undefined;
                motionPath?: import("csstype").Property.OffsetPath | undefined;
                motionRotation?: import("csstype").Property.OffsetRotate | undefined;
                objectFit?: import("csstype").Property.ObjectFit | undefined;
                objectPosition?: import("csstype").Property.ObjectPosition<string | number> | undefined;
                offsetAnchor?: import("csstype").Property.OffsetAnchor<string | number> | undefined;
                offsetDistance?: import("csstype").Property.OffsetDistance<string | number> | undefined;
                offsetPath?: import("csstype").Property.OffsetPath | undefined;
                offsetRotate?: import("csstype").Property.OffsetRotate | undefined;
                offsetRotation?: import("csstype").Property.OffsetRotate | undefined;
                opacity?: import("csstype").Property.Opacity | undefined;
                order?: import("csstype").Property.Order | undefined;
                orphans?: import("csstype").Property.Orphans | undefined;
                outlineColor?: import("csstype").Property.OutlineColor | undefined;
                outlineOffset?: import("csstype").Property.OutlineOffset<string | number> | undefined;
                outlineStyle?: import("csstype").Property.OutlineStyle | undefined;
                outlineWidth?: import("csstype").Property.OutlineWidth<string | number> | undefined;
                overflowAnchor?: import("csstype").Property.OverflowAnchor | undefined;
                overflowBlock?: import("csstype").Property.OverflowBlock | undefined;
                overflowClipBox?: import("csstype").Property.OverflowClipBox | undefined;
                overflowClipMargin?: import("csstype").Property.OverflowClipMargin<string | number> | undefined;
                overflowInline?: import("csstype").Property.OverflowInline | undefined;
                overflowWrap?: import("csstype").Property.OverflowWrap | undefined;
                overflowX?: import("csstype").Property.OverflowX | undefined;
                overflowY?: import("csstype").Property.OverflowY | undefined;
                overscrollBehaviorBlock?: import("csstype").Property.OverscrollBehaviorBlock | undefined;
                overscrollBehaviorInline?: import("csstype").Property.OverscrollBehaviorInline | undefined;
                overscrollBehaviorX?: import("csstype").Property.OverscrollBehaviorX | undefined;
                overscrollBehaviorY?: import("csstype").Property.OverscrollBehaviorY | undefined;
                paddingBlock?: import("csstype").Property.PaddingBlock<string | number> | undefined;
                paddingBlockEnd?: import("csstype").Property.PaddingBlockEnd<string | number> | undefined;
                paddingBlockStart?: import("csstype").Property.PaddingBlockStart<string | number> | undefined;
                paddingBottom?: import("csstype").Property.PaddingBottom<string | number> | undefined;
                paddingInline?: import("csstype").Property.PaddingInline<string | number> | undefined;
                paddingInlineEnd?: import("csstype").Property.PaddingInlineEnd<string | number> | undefined;
                paddingInlineStart?: import("csstype").Property.PaddingInlineStart<string | number> | undefined;
                paddingLeft?: import("csstype").Property.PaddingLeft<string | number> | undefined;
                paddingRight?: import("csstype").Property.PaddingRight<string | number> | undefined;
                paddingTop?: import("csstype").Property.PaddingTop<string | number> | undefined;
                pageBreakAfter?: import("csstype").Property.PageBreakAfter | undefined;
                pageBreakBefore?: import("csstype").Property.PageBreakBefore | undefined;
                pageBreakInside?: import("csstype").Property.PageBreakInside | undefined;
                paintOrder?: import("csstype").Property.PaintOrder | undefined;
                perspective?: import("csstype").Property.Perspective<string | number> | undefined;
                perspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number> | undefined;
                placeContent?: import("csstype").Property.PlaceContent | undefined;
                pointerEvents?: import("csstype").Property.PointerEvents | undefined;
                position?: import("csstype").Property.Position | undefined;
                quotes?: import("csstype").Property.Quotes | undefined;
                resize?: import("csstype").Property.Resize | undefined;
                right?: import("csstype").Property.Right<string | number> | undefined;
                rotate?: import("csstype").Property.Rotate | undefined;
                rowGap?: import("csstype").Property.RowGap<string | number> | undefined;
                rubyAlign?: import("csstype").Property.RubyAlign | undefined;
                rubyMerge?: import("csstype").Property.RubyMerge | undefined;
                rubyPosition?: import("csstype").Property.RubyPosition | undefined;
                scale?: import("csstype").Property.Scale | undefined;
                scrollBehavior?: import("csstype").Property.ScrollBehavior | undefined;
                scrollMargin?: import("csstype").Property.ScrollMargin<string | number> | undefined;
                scrollMarginBlock?: import("csstype").Property.ScrollMarginBlock<string | number> | undefined;
                scrollMarginBlockEnd?: import("csstype").Property.ScrollMarginBlockEnd<string | number> | undefined;
                scrollMarginBlockStart?: import("csstype").Property.ScrollMarginBlockStart<string | number> | undefined;
                scrollMarginBottom?: import("csstype").Property.ScrollMarginBottom<string | number> | undefined;
                scrollMarginInline?: import("csstype").Property.ScrollMarginInline<string | number> | undefined;
                scrollMarginInlineEnd?: import("csstype").Property.ScrollMarginInlineEnd<string | number> | undefined;
                scrollMarginInlineStart?: import("csstype").Property.ScrollMarginInlineStart<string | number> | undefined;
                scrollMarginLeft?: import("csstype").Property.ScrollMarginLeft<string | number> | undefined;
                scrollMarginRight?: import("csstype").Property.ScrollMarginRight<string | number> | undefined;
                scrollMarginTop?: import("csstype").Property.ScrollMarginTop<string | number> | undefined;
                scrollPadding?: import("csstype").Property.ScrollPadding<string | number> | undefined;
                scrollPaddingBlock?: import("csstype").Property.ScrollPaddingBlock<string | number> | undefined;
                scrollPaddingBlockEnd?: import("csstype").Property.ScrollPaddingBlockEnd<string | number> | undefined;
                scrollPaddingBlockStart?: import("csstype").Property.ScrollPaddingBlockStart<string | number> | undefined;
                scrollPaddingBottom?: import("csstype").Property.ScrollPaddingBottom<string | number> | undefined;
                scrollPaddingInline?: import("csstype").Property.ScrollPaddingInline<string | number> | undefined;
                scrollPaddingInlineEnd?: import("csstype").Property.ScrollPaddingInlineEnd<string | number> | undefined;
                scrollPaddingInlineStart?: import("csstype").Property.ScrollPaddingInlineStart<string | number> | undefined;
                scrollPaddingLeft?: import("csstype").Property.ScrollPaddingLeft<string | number> | undefined;
                scrollPaddingRight?: import("csstype").Property.ScrollPaddingRight<string | number> | undefined;
                scrollPaddingTop?: import("csstype").Property.ScrollPaddingTop<string | number> | undefined;
                scrollSnapAlign?: import("csstype").Property.ScrollSnapAlign | undefined;
                scrollSnapMargin?: import("csstype").Property.ScrollMargin<string | number> | undefined;
                scrollSnapMarginBottom?: import("csstype").Property.ScrollMarginBottom<string | number> | undefined;
                scrollSnapMarginLeft?: import("csstype").Property.ScrollMarginLeft<string | number> | undefined;
                scrollSnapMarginRight?: import("csstype").Property.ScrollMarginRight<string | number> | undefined;
                scrollSnapMarginTop?: import("csstype").Property.ScrollMarginTop<string | number> | undefined;
                scrollSnapStop?: import("csstype").Property.ScrollSnapStop | undefined;
                scrollSnapType?: import("csstype").Property.ScrollSnapType | undefined;
                scrollbarColor?: import("csstype").Property.ScrollbarColor | undefined;
                scrollbarGutter?: import("csstype").Property.ScrollbarGutter | undefined;
                scrollbarWidth?: import("csstype").Property.ScrollbarWidth | undefined;
                shapeImageThreshold?: import("csstype").Property.ShapeImageThreshold | undefined;
                shapeMargin?: import("csstype").Property.ShapeMargin<string | number> | undefined;
                shapeOutside?: import("csstype").Property.ShapeOutside | undefined;
                tabSize?: import("csstype").Property.TabSize<string | number> | undefined;
                tableLayout?: import("csstype").Property.TableLayout | undefined;
                textAlign?: import("csstype").Property.TextAlign | undefined;
                textAlignLast?: import("csstype").Property.TextAlignLast | undefined;
                textCombineUpright?: import("csstype").Property.TextCombineUpright | undefined;
                textDecorationColor?: import("csstype").Property.TextDecorationColor | undefined;
                textDecorationLine?: import("csstype").Property.TextDecorationLine | undefined;
                textDecorationSkip?: import("csstype").Property.TextDecorationSkip | undefined;
                textDecorationSkipInk?: import("csstype").Property.TextDecorationSkipInk | undefined;
                textDecorationStyle?: import("csstype").Property.TextDecorationStyle | undefined;
                textDecorationThickness?: import("csstype").Property.TextDecorationThickness<string | number> | undefined;
                textDecorationWidth?: import("csstype").Property.TextDecorationThickness<string | number> | undefined;
                textEmphasisColor?: import("csstype").Property.TextEmphasisColor | undefined;
                textEmphasisPosition?: import("csstype").Property.TextEmphasisPosition | undefined;
                textEmphasisStyle?: import("csstype").Property.TextEmphasisStyle | undefined;
                textIndent?: import("csstype").Property.TextIndent<string | number> | undefined;
                textJustify?: import("csstype").Property.TextJustify | undefined;
                textOrientation?: import("csstype").Property.TextOrientation | undefined;
                textOverflow?: import("csstype").Property.TextOverflow | undefined;
                textRendering?: import("csstype").Property.TextRendering | undefined;
                textShadow?: import("csstype").Property.TextShadow | undefined;
                textSizeAdjust?: import("csstype").Property.TextSizeAdjust | undefined;
                textTransform?: import("csstype").Property.TextTransform | undefined;
                textUnderlineOffset?: import("csstype").Property.TextUnderlineOffset<string | number> | undefined;
                textUnderlinePosition?: import("csstype").Property.TextUnderlinePosition | undefined;
                top?: import("csstype").Property.Top<string | number> | undefined;
                touchAction?: import("csstype").Property.TouchAction | undefined;
                transform?: import("csstype").Property.Transform | undefined;
                transformBox?: import("csstype").Property.TransformBox | undefined;
                transformOrigin?: import("csstype").Property.TransformOrigin<string | number> | undefined;
                transformStyle?: import("csstype").Property.TransformStyle | undefined;
                transitionDelay?: import("csstype").Property.TransitionDelay<string & {}> | undefined;
                transitionDuration?: import("csstype").Property.TransitionDuration<string & {}> | undefined;
                transitionProperty?: import("csstype").Property.TransitionProperty | undefined;
                transitionTimingFunction?: import("csstype").Property.TransitionTimingFunction | undefined;
                translate?: import("csstype").Property.Translate<string | number> | undefined;
                unicodeBidi?: import("csstype").Property.UnicodeBidi | undefined;
                userSelect?: import("csstype").Property.UserSelect | undefined;
                verticalAlign?: import("csstype").Property.VerticalAlign<string | number> | undefined;
                visibility?: import("csstype").Property.Visibility | undefined;
                whiteSpace?: import("csstype").Property.WhiteSpace | undefined;
                widows?: import("csstype").Property.Widows | undefined;
                willChange?: import("csstype").Property.WillChange | undefined;
                wordBreak?: import("csstype").Property.WordBreak | undefined;
                wordSpacing?: import("csstype").Property.WordSpacing<string | number> | undefined;
                wordWrap?: import("csstype").Property.WordWrap | undefined;
                writingMode?: import("csstype").Property.WritingMode | undefined;
                zIndex?: import("csstype").Property.ZIndex | undefined;
                zoom?: import("csstype").Property.Zoom | undefined;
                all?: import("csstype").Globals | undefined;
                animation?: import("csstype").Property.Animation<string & {}> | undefined;
                background?: import("csstype").Property.Background<string | number> | undefined;
                backgroundPosition?: import("csstype").Property.BackgroundPosition<string | number> | undefined;
                border?: import("csstype").Property.Border<string | number> | undefined;
                borderBlock?: import("csstype").Property.BorderBlock<string | number> | undefined;
                borderBlockEnd?: import("csstype").Property.BorderBlockEnd<string | number> | undefined;
                borderBlockStart?: import("csstype").Property.BorderBlockStart<string | number> | undefined;
                borderBottom?: import("csstype").Property.BorderBottom<string | number> | undefined;
                borderColor?: import("csstype").Property.BorderColor | undefined;
                borderImage?: import("csstype").Property.BorderImage | undefined;
                borderInline?: import("csstype").Property.BorderInline<string | number> | undefined;
                borderInlineEnd?: import("csstype").Property.BorderInlineEnd<string | number> | undefined;
                borderInlineStart?: import("csstype").Property.BorderInlineStart<string | number> | undefined;
                borderLeft?: import("csstype").Property.BorderLeft<string | number> | undefined;
                borderRadius?: import("csstype").Property.BorderRadius<string | number> | undefined;
                borderRight?: import("csstype").Property.BorderRight<string | number> | undefined;
                borderStyle?: import("csstype").Property.BorderStyle | undefined;
                borderTop?: import("csstype").Property.BorderTop<string | number> | undefined;
                borderWidth?: import("csstype").Property.BorderWidth<string | number> | undefined;
                columnRule?: import("csstype").Property.ColumnRule<string | number> | undefined;
                columns?: import("csstype").Property.Columns<string | number> | undefined;
                flex?: import("csstype").Property.Flex<string | number> | undefined;
                flexFlow?: import("csstype").Property.FlexFlow | undefined;
                font?: import("csstype").Property.Font | undefined;
                gap?: import("csstype").Property.Gap<string | number> | undefined;
                grid?: import("csstype").Property.Grid | undefined;
                gridArea?: import("csstype").Property.GridArea | undefined;
                gridColumn?: import("csstype").Property.GridColumn | undefined;
                gridRow?: import("csstype").Property.GridRow | undefined;
                gridTemplate?: import("csstype").Property.GridTemplate | undefined;
                lineClamp?: import("csstype").Property.LineClamp | undefined;
                listStyle?: import("csstype").Property.ListStyle | undefined;
                margin?: import("csstype").Property.Margin<string | number> | undefined;
                mask?: import("csstype").Property.Mask<string | number> | undefined;
                maskBorder?: import("csstype").Property.MaskBorder | undefined;
                motion?: import("csstype").Property.Offset<string | number> | undefined;
                offset?: import("csstype").Property.Offset<string | number> | undefined;
                outline?: import("csstype").Property.Outline<string | number> | undefined;
                overflow?: import("csstype").Property.Overflow | undefined;
                overscrollBehavior?: import("csstype").Property.OverscrollBehavior | undefined;
                padding?: import("csstype").Property.Padding<string | number> | undefined;
                placeItems?: import("csstype").Property.PlaceItems | undefined;
                placeSelf?: import("csstype").Property.PlaceSelf | undefined;
                textDecoration?: import("csstype").Property.TextDecoration<string | number> | undefined;
                textEmphasis?: import("csstype").Property.TextEmphasis | undefined;
                transition?: import("csstype").Property.Transition<string & {}> | undefined;
                MozAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}> | undefined;
                MozAnimationDirection?: import("csstype").Property.AnimationDirection | undefined;
                MozAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}> | undefined;
                MozAnimationFillMode?: import("csstype").Property.AnimationFillMode | undefined;
                MozAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | undefined;
                MozAnimationName?: import("csstype").Property.AnimationName | undefined;
                MozAnimationPlayState?: import("csstype").Property.AnimationPlayState | undefined;
                MozAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction | undefined;
                MozAppearance?: import("csstype").Property.MozAppearance | undefined;
                MozBackfaceVisibility?: import("csstype").Property.BackfaceVisibility | undefined;
                MozBorderBottomColors?: import("csstype").Property.MozBorderBottomColors | undefined;
                MozBorderEndColor?: import("csstype").Property.BorderInlineEndColor | undefined;
                MozBorderEndStyle?: import("csstype").Property.BorderInlineEndStyle | undefined;
                MozBorderEndWidth?: import("csstype").Property.BorderInlineEndWidth<string | number> | undefined;
                MozBorderLeftColors?: import("csstype").Property.MozBorderLeftColors | undefined;
                MozBorderRightColors?: import("csstype").Property.MozBorderRightColors | undefined;
                MozBorderStartColor?: import("csstype").Property.BorderInlineStartColor | undefined;
                MozBorderStartStyle?: import("csstype").Property.BorderInlineStartStyle | undefined;
                MozBorderTopColors?: import("csstype").Property.MozBorderTopColors | undefined;
                MozBoxSizing?: import("csstype").Property.BoxSizing | undefined;
                MozColumnCount?: import("csstype").Property.ColumnCount | undefined;
                MozColumnFill?: import("csstype").Property.ColumnFill | undefined;
                MozColumnGap?: import("csstype").Property.ColumnGap<string | number> | undefined;
                MozColumnRuleColor?: import("csstype").Property.ColumnRuleColor | undefined;
                MozColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle | undefined;
                MozColumnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number> | undefined;
                MozColumnWidth?: import("csstype").Property.ColumnWidth<string | number> | undefined;
                MozContextProperties?: import("csstype").Property.MozContextProperties | undefined;
                MozFontFeatureSettings?: import("csstype").Property.FontFeatureSettings | undefined;
                MozFontLanguageOverride?: import("csstype").Property.FontLanguageOverride | undefined;
                MozHyphens?: import("csstype").Property.Hyphens | undefined;
                MozImageRegion?: import("csstype").Property.MozImageRegion | undefined;
                MozMarginEnd?: import("csstype").Property.MarginInlineEnd<string | number> | undefined;
                MozMarginStart?: import("csstype").Property.MarginInlineStart<string | number> | undefined;
                MozOrient?: import("csstype").Property.MozOrient | undefined;
                MozOsxFontSmoothing?: import("csstype").Property.FontSmooth<string | number> | undefined;
                MozPaddingEnd?: import("csstype").Property.PaddingInlineEnd<string | number> | undefined;
                MozPaddingStart?: import("csstype").Property.PaddingInlineStart<string | number> | undefined;
                MozPerspective?: import("csstype").Property.Perspective<string | number> | undefined;
                MozPerspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number> | undefined;
                MozStackSizing?: import("csstype").Property.MozStackSizing | undefined;
                MozTabSize?: import("csstype").Property.TabSize<string | number> | undefined;
                MozTextBlink?: import("csstype").Property.MozTextBlink | undefined;
                MozTextSizeAdjust?: import("csstype").Property.TextSizeAdjust | undefined;
                MozTransformOrigin?: import("csstype").Property.TransformOrigin<string | number> | undefined;
                MozTransformStyle?: import("csstype").Property.TransformStyle | undefined;
                MozTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}> | undefined;
                MozTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}> | undefined;
                MozTransitionProperty?: import("csstype").Property.TransitionProperty | undefined;
                MozTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction | undefined;
                MozUserFocus?: import("csstype").Property.MozUserFocus | undefined;
                MozUserModify?: import("csstype").Property.MozUserModify | undefined;
                MozUserSelect?: import("csstype").Property.UserSelect | undefined;
                MozWindowDragging?: import("csstype").Property.MozWindowDragging | undefined;
                MozWindowShadow?: import("csstype").Property.MozWindowShadow | undefined;
                msAccelerator?: import("csstype").Property.MsAccelerator | undefined;
                msAlignSelf?: import("csstype").Property.AlignSelf | undefined;
                msBlockProgression?: import("csstype").Property.MsBlockProgression | undefined;
                msContentZoomChaining?: import("csstype").Property.MsContentZoomChaining | undefined;
                msContentZoomLimitMax?: import("csstype").Property.MsContentZoomLimitMax | undefined;
                msContentZoomLimitMin?: import("csstype").Property.MsContentZoomLimitMin | undefined;
                msContentZoomSnapPoints?: import("csstype").Property.MsContentZoomSnapPoints | undefined;
                msContentZoomSnapType?: import("csstype").Property.MsContentZoomSnapType | undefined;
                msContentZooming?: import("csstype").Property.MsContentZooming | undefined;
                msFilter?: import("csstype").Property.MsFilter | undefined;
                msFlexDirection?: import("csstype").Property.FlexDirection | undefined;
                msFlexPositive?: import("csstype").Property.FlexGrow | undefined;
                msFlowFrom?: import("csstype").Property.MsFlowFrom | undefined;
                msFlowInto?: import("csstype").Property.MsFlowInto | undefined;
                msGridColumns?: import("csstype").Property.MsGridColumns<string | number> | undefined;
                msGridRows?: import("csstype").Property.MsGridRows<string | number> | undefined;
                msHighContrastAdjust?: import("csstype").Property.MsHighContrastAdjust | undefined;
                msHyphenateLimitChars?: import("csstype").Property.MsHyphenateLimitChars | undefined;
                msHyphenateLimitLines?: import("csstype").Property.MsHyphenateLimitLines | undefined;
                msHyphenateLimitZone?: import("csstype").Property.MsHyphenateLimitZone<string | number> | undefined;
                msHyphens?: import("csstype").Property.Hyphens | undefined;
                msImeAlign?: import("csstype").Property.MsImeAlign | undefined;
                msJustifySelf?: import("csstype").Property.JustifySelf | undefined;
                msLineBreak?: import("csstype").Property.LineBreak | undefined;
                msOrder?: import("csstype").Property.Order | undefined;
                msOverflowStyle?: import("csstype").Property.MsOverflowStyle | undefined;
                msOverflowX?: import("csstype").Property.OverflowX | undefined;
                msOverflowY?: import("csstype").Property.OverflowY | undefined;
                msScrollChaining?: import("csstype").Property.MsScrollChaining | undefined;
                msScrollLimitXMax?: import("csstype").Property.MsScrollLimitXMax<string | number> | undefined;
                msScrollLimitXMin?: import("csstype").Property.MsScrollLimitXMin<string | number> | undefined;
                msScrollLimitYMax?: import("csstype").Property.MsScrollLimitYMax<string | number> | undefined;
                msScrollLimitYMin?: import("csstype").Property.MsScrollLimitYMin<string | number> | undefined;
                msScrollRails?: import("csstype").Property.MsScrollRails | undefined;
                msScrollSnapPointsX?: import("csstype").Property.MsScrollSnapPointsX | undefined;
                msScrollSnapPointsY?: import("csstype").Property.MsScrollSnapPointsY | undefined;
                msScrollSnapType?: import("csstype").Property.MsScrollSnapType | undefined;
                msScrollTranslation?: import("csstype").Property.MsScrollTranslation | undefined;
                msScrollbar3dlightColor?: import("csstype").Property.MsScrollbar3dlightColor | undefined;
                msScrollbarArrowColor?: import("csstype").Property.MsScrollbarArrowColor | undefined;
                msScrollbarBaseColor?: import("csstype").Property.MsScrollbarBaseColor | undefined;
                msScrollbarDarkshadowColor?: import("csstype").Property.MsScrollbarDarkshadowColor | undefined;
                msScrollbarFaceColor?: import("csstype").Property.MsScrollbarFaceColor | undefined;
                msScrollbarHighlightColor?: import("csstype").Property.MsScrollbarHighlightColor | undefined;
                msScrollbarShadowColor?: import("csstype").Property.MsScrollbarShadowColor | undefined;
                msTextAutospace?: import("csstype").Property.MsTextAutospace | undefined;
                msTextCombineHorizontal?: import("csstype").Property.TextCombineUpright | undefined;
                msTextOverflow?: import("csstype").Property.TextOverflow | undefined;
                msTouchAction?: import("csstype").Property.TouchAction | undefined;
                msTouchSelect?: import("csstype").Property.MsTouchSelect | undefined;
                msTransform?: import("csstype").Property.Transform | undefined;
                msTransformOrigin?: import("csstype").Property.TransformOrigin<string | number> | undefined;
                msTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}> | undefined;
                msTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}> | undefined;
                msTransitionProperty?: import("csstype").Property.TransitionProperty | undefined;
                msTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction | undefined;
                msUserSelect?: import("csstype").Property.MsUserSelect | undefined;
                msWordBreak?: import("csstype").Property.WordBreak | undefined;
                msWrapFlow?: import("csstype").Property.MsWrapFlow | undefined;
                msWrapMargin?: import("csstype").Property.MsWrapMargin<string | number> | undefined;
                msWrapThrough?: import("csstype").Property.MsWrapThrough | undefined;
                msWritingMode?: import("csstype").Property.WritingMode | undefined;
                WebkitAlignContent?: import("csstype").Property.AlignContent | undefined;
                WebkitAlignItems?: import("csstype").Property.AlignItems | undefined;
                WebkitAlignSelf?: import("csstype").Property.AlignSelf | undefined;
                WebkitAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}> | undefined;
                WebkitAnimationDirection?: import("csstype").Property.AnimationDirection | undefined;
                WebkitAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}> | undefined;
                WebkitAnimationFillMode?: import("csstype").Property.AnimationFillMode | undefined;
                WebkitAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | undefined;
                WebkitAnimationName?: import("csstype").Property.AnimationName | undefined;
                WebkitAnimationPlayState?: import("csstype").Property.AnimationPlayState | undefined;
                WebkitAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction | undefined;
                WebkitAppearance?: import("csstype").Property.WebkitAppearance | undefined;
                WebkitBackdropFilter?: import("csstype").Property.BackdropFilter | undefined;
                WebkitBackfaceVisibility?: import("csstype").Property.BackfaceVisibility | undefined;
                WebkitBackgroundClip?: import("csstype").Property.BackgroundClip | undefined;
                WebkitBackgroundOrigin?: import("csstype").Property.BackgroundOrigin | undefined;
                WebkitBackgroundSize?: import("csstype").Property.BackgroundSize<string | number> | undefined;
                WebkitBorderBeforeColor?: import("csstype").Property.WebkitBorderBeforeColor | undefined;
                WebkitBorderBeforeStyle?: import("csstype").Property.WebkitBorderBeforeStyle | undefined;
                WebkitBorderBeforeWidth?: import("csstype").Property.WebkitBorderBeforeWidth<string | number> | undefined;
                WebkitBorderBottomLeftRadius?: import("csstype").Property.BorderBottomLeftRadius<string | number> | undefined;
                WebkitBorderBottomRightRadius?: import("csstype").Property.BorderBottomRightRadius<string | number> | undefined;
                WebkitBorderImageSlice?: import("csstype").Property.BorderImageSlice | undefined;
                WebkitBorderTopLeftRadius?: import("csstype").Property.BorderTopLeftRadius<string | number> | undefined;
                WebkitBorderTopRightRadius?: import("csstype").Property.BorderTopRightRadius<string | number> | undefined;
                WebkitBoxDecorationBreak?: import("csstype").Property.BoxDecorationBreak | undefined;
                WebkitBoxReflect?: import("csstype").Property.WebkitBoxReflect<string | number> | undefined;
                WebkitBoxShadow?: import("csstype").Property.BoxShadow | undefined;
                WebkitBoxSizing?: import("csstype").Property.BoxSizing | undefined;
                WebkitClipPath?: import("csstype").Property.ClipPath | undefined;
                WebkitColumnCount?: import("csstype").Property.ColumnCount | undefined;
                WebkitColumnFill?: import("csstype").Property.ColumnFill | undefined;
                WebkitColumnGap?: import("csstype").Property.ColumnGap<string | number> | undefined;
                WebkitColumnRuleColor?: import("csstype").Property.ColumnRuleColor | undefined;
                WebkitColumnRuleStyle?: import("csstype").Property.ColumnRuleStyle | undefined;
                WebkitColumnRuleWidth?: import("csstype").Property.ColumnRuleWidth<string | number> | undefined;
                WebkitColumnSpan?: import("csstype").Property.ColumnSpan | undefined;
                WebkitColumnWidth?: import("csstype").Property.ColumnWidth<string | number> | undefined;
                WebkitFilter?: import("csstype").Property.Filter | undefined;
                WebkitFlexBasis?: import("csstype").Property.FlexBasis<string | number> | undefined;
                WebkitFlexDirection?: import("csstype").Property.FlexDirection | undefined;
                WebkitFlexGrow?: import("csstype").Property.FlexGrow | undefined;
                WebkitFlexShrink?: import("csstype").Property.FlexShrink | undefined;
                WebkitFlexWrap?: import("csstype").Property.FlexWrap | undefined;
                WebkitFontFeatureSettings?: import("csstype").Property.FontFeatureSettings | undefined;
                WebkitFontKerning?: import("csstype").Property.FontKerning | undefined;
                WebkitFontSmoothing?: import("csstype").Property.FontSmooth<string | number> | undefined;
                WebkitFontVariantLigatures?: import("csstype").Property.FontVariantLigatures | undefined;
                WebkitHyphens?: import("csstype").Property.Hyphens | undefined;
                WebkitInitialLetter?: import("csstype").Property.InitialLetter | undefined;
                WebkitJustifyContent?: import("csstype").Property.JustifyContent | undefined;
                WebkitLineBreak?: import("csstype").Property.LineBreak | undefined;
                WebkitLineClamp?: import("csstype").Property.WebkitLineClamp | undefined;
                WebkitMarginEnd?: import("csstype").Property.MarginInlineEnd<string | number> | undefined;
                WebkitMarginStart?: import("csstype").Property.MarginInlineStart<string | number> | undefined;
                WebkitMaskAttachment?: import("csstype").Property.WebkitMaskAttachment | undefined;
                WebkitMaskBoxImageOutset?: import("csstype").Property.MaskBorderOutset<string | number> | undefined;
                WebkitMaskBoxImageRepeat?: import("csstype").Property.MaskBorderRepeat | undefined;
                WebkitMaskBoxImageSlice?: import("csstype").Property.MaskBorderSlice | undefined;
                WebkitMaskBoxImageSource?: import("csstype").Property.MaskBorderSource | undefined;
                WebkitMaskBoxImageWidth?: import("csstype").Property.MaskBorderWidth<string | number> | undefined;
                WebkitMaskClip?: import("csstype").Property.WebkitMaskClip | undefined;
                WebkitMaskComposite?: import("csstype").Property.WebkitMaskComposite | undefined;
                WebkitMaskImage?: import("csstype").Property.WebkitMaskImage | undefined;
                WebkitMaskOrigin?: import("csstype").Property.WebkitMaskOrigin | undefined;
                WebkitMaskPosition?: import("csstype").Property.WebkitMaskPosition<string | number> | undefined;
                WebkitMaskPositionX?: import("csstype").Property.WebkitMaskPositionX<string | number> | undefined;
                WebkitMaskPositionY?: import("csstype").Property.WebkitMaskPositionY<string | number> | undefined;
                WebkitMaskRepeat?: import("csstype").Property.WebkitMaskRepeat | undefined;
                WebkitMaskRepeatX?: import("csstype").Property.WebkitMaskRepeatX | undefined;
                WebkitMaskRepeatY?: import("csstype").Property.WebkitMaskRepeatY | undefined;
                WebkitMaskSize?: import("csstype").Property.WebkitMaskSize<string | number> | undefined;
                WebkitMaxInlineSize?: import("csstype").Property.MaxInlineSize<string | number> | undefined;
                WebkitOrder?: import("csstype").Property.Order | undefined;
                WebkitOverflowScrolling?: import("csstype").Property.WebkitOverflowScrolling | undefined;
                WebkitPaddingEnd?: import("csstype").Property.PaddingInlineEnd<string | number> | undefined;
                WebkitPaddingStart?: import("csstype").Property.PaddingInlineStart<string | number> | undefined;
                WebkitPerspective?: import("csstype").Property.Perspective<string | number> | undefined;
                WebkitPerspectiveOrigin?: import("csstype").Property.PerspectiveOrigin<string | number> | undefined;
                WebkitPrintColorAdjust?: import("csstype").Property.Color | undefined;
                WebkitRubyPosition?: import("csstype").Property.RubyPosition | undefined;
                WebkitScrollSnapType?: import("csstype").Property.ScrollSnapType | undefined;
                WebkitShapeMargin?: import("csstype").Property.ShapeMargin<string | number> | undefined;
                WebkitTapHighlightColor?: import("csstype").Property.WebkitTapHighlightColor | undefined;
                WebkitTextCombine?: import("csstype").Property.TextCombineUpright | undefined;
                WebkitTextDecorationColor?: import("csstype").Property.TextDecorationColor | undefined;
                WebkitTextDecorationLine?: import("csstype").Property.TextDecorationLine | undefined;
                WebkitTextDecorationSkip?: import("csstype").Property.TextDecorationSkip | undefined;
                WebkitTextDecorationStyle?: import("csstype").Property.TextDecorationStyle | undefined;
                WebkitTextEmphasisColor?: import("csstype").Property.TextEmphasisColor | undefined;
                WebkitTextEmphasisPosition?: import("csstype").Property.TextEmphasisPosition | undefined;
                WebkitTextEmphasisStyle?: import("csstype").Property.TextEmphasisStyle | undefined;
                WebkitTextFillColor?: import("csstype").Property.WebkitTextFillColor | undefined;
                WebkitTextOrientation?: import("csstype").Property.TextOrientation | undefined;
                WebkitTextSizeAdjust?: import("csstype").Property.TextSizeAdjust | undefined;
                WebkitTextStrokeColor?: import("csstype").Property.WebkitTextStrokeColor | undefined;
                WebkitTextStrokeWidth?: import("csstype").Property.WebkitTextStrokeWidth<string | number> | undefined;
                WebkitTextUnderlinePosition?: import("csstype").Property.TextUnderlinePosition | undefined;
                WebkitTouchCallout?: import("csstype").Property.WebkitTouchCallout | undefined;
                WebkitTransform?: import("csstype").Property.Transform | undefined;
                WebkitTransformOrigin?: import("csstype").Property.TransformOrigin<string | number> | undefined;
                WebkitTransformStyle?: import("csstype").Property.TransformStyle | undefined;
                WebkitTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}> | undefined;
                WebkitTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}> | undefined;
                WebkitTransitionProperty?: import("csstype").Property.TransitionProperty | undefined;
                WebkitTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction | undefined;
                WebkitUserModify?: import("csstype").Property.WebkitUserModify | undefined;
                WebkitUserSelect?: import("csstype").Property.UserSelect | undefined;
                WebkitWritingMode?: import("csstype").Property.WritingMode | undefined;
                MozAnimation?: import("csstype").Property.Animation<string & {}> | undefined;
                MozBorderImage?: import("csstype").Property.BorderImage | undefined;
                MozColumnRule?: import("csstype").Property.ColumnRule<string | number> | undefined;
                MozColumns?: import("csstype").Property.Columns<string | number> | undefined;
                MozTransition?: import("csstype").Property.Transition<string & {}> | undefined;
                msContentZoomLimit?: import("csstype").Property.MsContentZoomLimit | undefined;
                msContentZoomSnap?: import("csstype").Property.MsContentZoomSnap | undefined;
                msFlex?: import("csstype").Property.Flex<string | number> | undefined;
                msScrollLimit?: import("csstype").Property.MsScrollLimit | undefined;
                msScrollSnapX?: import("csstype").Property.MsScrollSnapX | undefined;
                msScrollSnapY?: import("csstype").Property.MsScrollSnapY | undefined;
                msTransition?: import("csstype").Property.Transition<string & {}> | undefined;
                WebkitAnimation?: import("csstype").Property.Animation<string & {}> | undefined;
                WebkitBorderBefore?: import("csstype").Property.WebkitBorderBefore<string | number> | undefined;
                WebkitBorderImage?: import("csstype").Property.BorderImage | undefined;
                WebkitBorderRadius?: import("csstype").Property.BorderRadius<string | number> | undefined;
                WebkitColumnRule?: import("csstype").Property.ColumnRule<string | number> | undefined;
                WebkitColumns?: import("csstype").Property.Columns<string | number> | undefined;
                WebkitFlex?: import("csstype").Property.Flex<string | number> | undefined;
                WebkitFlexFlow?: import("csstype").Property.FlexFlow | undefined;
                WebkitMask?: import("csstype").Property.WebkitMask<string | number> | undefined;
                WebkitMaskBoxImage?: import("csstype").Property.MaskBorder | undefined;
                WebkitTextEmphasis?: import("csstype").Property.TextEmphasis | undefined;
                WebkitTextStroke?: import("csstype").Property.WebkitTextStroke<string | number> | undefined;
                WebkitTransition?: import("csstype").Property.Transition<string & {}> | undefined;
                azimuth?: import("csstype").Property.Azimuth | undefined;
                boxAlign?: import("csstype").Property.BoxAlign | undefined;
                boxDirection?: import("csstype").Property.BoxDirection | undefined;
                boxFlex?: import("csstype").Property.BoxFlex | undefined;
                boxFlexGroup?: import("csstype").Property.BoxFlexGroup | undefined;
                boxLines?: import("csstype").Property.BoxLines | undefined;
                boxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup | undefined;
                boxOrient?: import("csstype").Property.BoxOrient | undefined;
                boxPack?: import("csstype").Property.BoxPack | undefined;
                clip?: import("csstype").Property.Clip | undefined;
                fontVariantAlternates?: import("csstype").Property.FontVariantAlternates | undefined;
                gridColumnGap?: import("csstype").Property.GridColumnGap<string | number> | undefined;
                gridGap?: import("csstype").Property.GridGap<string | number> | undefined;
                gridRowGap?: import("csstype").Property.GridRowGap<string | number> | undefined;
                imeMode?: import("csstype").Property.ImeMode | undefined;
                offsetBlock?: import("csstype").Property.InsetBlock<string | number> | undefined;
                offsetBlockEnd?: import("csstype").Property.InsetBlockEnd<string | number> | undefined;
                offsetBlockStart?: import("csstype").Property.InsetBlockStart<string | number> | undefined;
                offsetInline?: import("csstype").Property.InsetInline<string | number> | undefined;
                offsetInlineEnd?: import("csstype").Property.InsetInlineEnd<string | number> | undefined;
                offsetInlineStart?: import("csstype").Property.InsetInlineStart<string | number> | undefined;
                scrollSnapCoordinate?: import("csstype").Property.ScrollSnapCoordinate<string | number> | undefined;
                scrollSnapDestination?: import("csstype").Property.ScrollSnapDestination<string | number> | undefined;
                scrollSnapPointsX?: import("csstype").Property.ScrollSnapPointsX | undefined;
                scrollSnapPointsY?: import("csstype").Property.ScrollSnapPointsY | undefined;
                scrollSnapTypeX?: import("csstype").Property.ScrollSnapTypeX | undefined;
                scrollSnapTypeY?: import("csstype").Property.ScrollSnapTypeY | undefined;
                scrollbarTrackColor?: import("csstype").Property.MsScrollbarTrackColor | undefined;
                KhtmlBoxAlign?: import("csstype").Property.BoxAlign | undefined;
                KhtmlBoxDirection?: import("csstype").Property.BoxDirection | undefined;
                KhtmlBoxFlex?: import("csstype").Property.BoxFlex | undefined;
                KhtmlBoxFlexGroup?: import("csstype").Property.BoxFlexGroup | undefined;
                KhtmlBoxLines?: import("csstype").Property.BoxLines | undefined;
                KhtmlBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup | undefined;
                KhtmlBoxOrient?: import("csstype").Property.BoxOrient | undefined;
                KhtmlBoxPack?: import("csstype").Property.BoxPack | undefined;
                KhtmlLineBreak?: import("csstype").Property.LineBreak | undefined;
                KhtmlOpacity?: import("csstype").Property.Opacity | undefined;
                KhtmlUserSelect?: import("csstype").Property.UserSelect | undefined;
                MozBackgroundClip?: import("csstype").Property.BackgroundClip | undefined;
                MozBackgroundInlinePolicy?: import("csstype").Property.BoxDecorationBreak | undefined;
                MozBackgroundOrigin?: import("csstype").Property.BackgroundOrigin | undefined;
                MozBackgroundSize?: import("csstype").Property.BackgroundSize<string | number> | undefined;
                MozBinding?: import("csstype").Property.MozBinding | undefined;
                MozBorderRadius?: import("csstype").Property.BorderRadius<string | number> | undefined;
                MozBorderRadiusBottomleft?: import("csstype").Property.BorderBottomLeftRadius<string | number> | undefined;
                MozBorderRadiusBottomright?: import("csstype").Property.BorderBottomRightRadius<string | number> | undefined;
                MozBorderRadiusTopleft?: import("csstype").Property.BorderTopLeftRadius<string | number> | undefined;
                MozBorderRadiusTopright?: import("csstype").Property.BorderTopRightRadius<string | number> | undefined;
                MozBoxAlign?: import("csstype").Property.BoxAlign | undefined;
                MozBoxDirection?: import("csstype").Property.BoxDirection | undefined;
                MozBoxFlex?: import("csstype").Property.BoxFlex | undefined;
                MozBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup | undefined;
                MozBoxOrient?: import("csstype").Property.BoxOrient | undefined;
                MozBoxPack?: import("csstype").Property.BoxPack | undefined;
                MozBoxShadow?: import("csstype").Property.BoxShadow | undefined;
                MozFloatEdge?: import("csstype").Property.MozFloatEdge | undefined;
                MozForceBrokenImageIcon?: import("csstype").Property.MozForceBrokenImageIcon | undefined;
                MozOpacity?: import("csstype").Property.Opacity | undefined;
                MozOutline?: import("csstype").Property.Outline<string | number> | undefined;
                MozOutlineColor?: import("csstype").Property.OutlineColor | undefined;
                MozOutlineRadius?: import("csstype").Property.MozOutlineRadius<string | number> | undefined;
                MozOutlineRadiusBottomleft?: import("csstype").Property.MozOutlineRadiusBottomleft<string | number> | undefined;
                MozOutlineRadiusBottomright?: import("csstype").Property.MozOutlineRadiusBottomright<string | number> | undefined;
                MozOutlineRadiusTopleft?: import("csstype").Property.MozOutlineRadiusTopleft<string | number> | undefined;
                MozOutlineRadiusTopright?: import("csstype").Property.MozOutlineRadiusTopright<string | number> | undefined;
                MozOutlineStyle?: import("csstype").Property.OutlineStyle | undefined;
                MozOutlineWidth?: import("csstype").Property.OutlineWidth<string | number> | undefined;
                MozTextAlignLast?: import("csstype").Property.TextAlignLast | undefined;
                MozTextDecorationColor?: import("csstype").Property.TextDecorationColor | undefined;
                MozTextDecorationLine?: import("csstype").Property.TextDecorationLine | undefined;
                MozTextDecorationStyle?: import("csstype").Property.TextDecorationStyle | undefined;
                MozUserInput?: import("csstype").Property.MozUserInput | undefined;
                msImeMode?: import("csstype").Property.ImeMode | undefined;
                msScrollbarTrackColor?: import("csstype").Property.MsScrollbarTrackColor | undefined;
                OAnimation?: import("csstype").Property.Animation<string & {}> | undefined;
                OAnimationDelay?: import("csstype").Property.AnimationDelay<string & {}> | undefined;
                OAnimationDirection?: import("csstype").Property.AnimationDirection | undefined;
                OAnimationDuration?: import("csstype").Property.AnimationDuration<string & {}> | undefined;
                OAnimationFillMode?: import("csstype").Property.AnimationFillMode | undefined;
                OAnimationIterationCount?: import("csstype").Property.AnimationIterationCount | undefined;
                OAnimationName?: import("csstype").Property.AnimationName | undefined;
                OAnimationPlayState?: import("csstype").Property.AnimationPlayState | undefined;
                OAnimationTimingFunction?: import("csstype").Property.AnimationTimingFunction | undefined;
                OBackgroundSize?: import("csstype").Property.BackgroundSize<string | number> | undefined;
                OBorderImage?: import("csstype").Property.BorderImage | undefined;
                OObjectFit?: import("csstype").Property.ObjectFit | undefined;
                OObjectPosition?: import("csstype").Property.ObjectPosition<string | number> | undefined;
                OTabSize?: import("csstype").Property.TabSize<string | number> | undefined;
                OTextOverflow?: import("csstype").Property.TextOverflow | undefined;
                OTransform?: import("csstype").Property.Transform | undefined;
                OTransformOrigin?: import("csstype").Property.TransformOrigin<string | number> | undefined;
                OTransition?: import("csstype").Property.Transition<string & {}> | undefined;
                OTransitionDelay?: import("csstype").Property.TransitionDelay<string & {}> | undefined;
                OTransitionDuration?: import("csstype").Property.TransitionDuration<string & {}> | undefined;
                OTransitionProperty?: import("csstype").Property.TransitionProperty | undefined;
                OTransitionTimingFunction?: import("csstype").Property.TransitionTimingFunction | undefined;
                WebkitBoxAlign?: import("csstype").Property.BoxAlign | undefined;
                WebkitBoxDirection?: import("csstype").Property.BoxDirection | undefined;
                WebkitBoxFlex?: import("csstype").Property.BoxFlex | undefined;
                WebkitBoxFlexGroup?: import("csstype").Property.BoxFlexGroup | undefined;
                WebkitBoxLines?: import("csstype").Property.BoxLines | undefined;
                WebkitBoxOrdinalGroup?: import("csstype").Property.BoxOrdinalGroup | undefined;
                WebkitBoxOrient?: import("csstype").Property.BoxOrient | undefined;
                WebkitBoxPack?: import("csstype").Property.BoxPack | undefined;
                WebkitScrollSnapPointsX?: import("csstype").Property.ScrollSnapPointsX | undefined;
                WebkitScrollSnapPointsY?: import("csstype").Property.ScrollSnapPointsY | undefined;
                alignmentBaseline?: import("csstype").Property.AlignmentBaseline | undefined;
                baselineShift?: import("csstype").Property.BaselineShift<string | number> | undefined;
                clipRule?: import("csstype").Property.ClipRule | undefined;
                colorInterpolation?: import("csstype").Property.ColorInterpolation | undefined;
                colorRendering?: import("csstype").Property.ColorRendering | undefined;
                dominantBaseline?: import("csstype").Property.DominantBaseline | undefined;
                fill?: import("csstype").Property.Fill | undefined;
                fillOpacity?: import("csstype").Property.FillOpacity | undefined;
                fillRule?: import("csstype").Property.FillRule | undefined;
                floodColor?: import("csstype").Property.FloodColor | undefined;
                floodOpacity?: import("csstype").Property.FloodOpacity | undefined;
                glyphOrientationVertical?: import("csstype").Property.GlyphOrientationVertical | undefined;
                lightingColor?: import("csstype").Property.LightingColor | undefined;
                marker?: import("csstype").Property.Marker | undefined;
                markerEnd?: import("csstype").Property.MarkerEnd | undefined;
                markerMid?: import("csstype").Property.MarkerMid | undefined;
                markerStart?: import("csstype").Property.MarkerStart | undefined;
                shapeRendering?: import("csstype").Property.ShapeRendering | undefined;
                stopColor?: import("csstype").Property.StopColor | undefined;
                stopOpacity?: import("csstype").Property.StopOpacity | undefined;
                stroke?: import("csstype").Property.Stroke | undefined;
                strokeDasharray?: import("csstype").Property.StrokeDasharray<string | number> | undefined;
                strokeDashoffset?: import("csstype").Property.StrokeDashoffset<string | number> | undefined;
                strokeLinecap?: import("csstype").Property.StrokeLinecap | undefined;
                strokeLinejoin?: import("csstype").Property.StrokeLinejoin | undefined;
                strokeMiterlimit?: import("csstype").Property.StrokeMiterlimit | undefined;
                strokeOpacity?: import("csstype").Property.StrokeOpacity | undefined;
                strokeWidth?: import("csstype").Property.StrokeWidth<string | number> | undefined;
                textAnchor?: import("csstype").Property.TextAnchor | undefined;
                vectorEffect?: import("csstype").Property.VectorEffect | undefined;
            };
            tabIndex: number | undefined;
            'aria-labelledby': string | undefined;
            'aria-orientation': "horizontal" | "vertical";
            'aria-valuemax': any;
            'aria-valuemin': any;
            name: string | undefined;
            type: string;
            min: number | undefined;
            max: number | undefined;
            step: number | null | undefined;
            disabled: boolean;
        };
        getThumbProps: (otherHandlers?: Record<string, (event: any) => void> | undefined) => {
            [x: string]: (event: any) => void;
        };
        dragging: boolean;
        marks: true | {
            value: number;
        }[];
        values: number[];
        active: number;
        focusVisible: number;
        open: number;
        range: boolean;
        trackOffset: number;
        trackLeap: number;
    };
    export default useSlider;
}
declare module "@mui/base/SliderUnstyled/index" {
    export { default } from "@mui/base/SliderUnstyled/SliderUnstyled";
    export * from "@mui/base/SliderUnstyled/SliderUnstyled";
    export { default as SliderValueLabelUnstyled } from "@mui/base/SliderUnstyled/SliderValueLabelUnstyled";
    export * from "@mui/base/SliderUnstyled/SliderValueLabelUnstyled";
    export { default as useSlider } from "@mui/base/SliderUnstyled/useSlider";
    export * from "@mui/base/SliderUnstyled/useSlider";
    export { default as SliderUnstyledProps } from "@mui/base/SliderUnstyled/SliderUnstyledProps";
    export * from "@mui/base/SliderUnstyled/SliderUnstyledProps";
    export { default as sliderUnstyledClasses } from "@mui/base/SliderUnstyled/sliderUnstyledClasses";
    export * from "@mui/base/SliderUnstyled/sliderUnstyledClasses";
}
declare module "@mui/base/SwitchUnstyled/useSwitch" {
    import * as React from 'react';
    export interface SwitchState {
        checked: Readonly<boolean>;
        disabled: Readonly<boolean>;
        readOnly: Readonly<boolean>;
        focusVisible: Readonly<boolean>;
    }
    export interface UseSwitchResult extends SwitchState {
        /**
         * Returns props for an HTML `input` element that is a part of a Switch.
         */
        getInputProps: (otherProps?: React.HTMLAttributes<HTMLInputElement>) => SwitchInputProps;
    }
    /**
     * Props used by an HTML `input` element that is a part of a Switch.
     */
    export interface SwitchInputProps {
        checked?: boolean;
        defaultChecked?: boolean;
        disabled?: boolean;
        onBlur: React.FocusEventHandler;
        onChange: React.ChangeEventHandler<HTMLInputElement>;
        onFocus: React.FocusEventHandler;
        readOnly?: boolean;
        ref: React.Ref<any>;
        required?: boolean;
    }
    export interface UseSwitchProps {
        /**
         * If `true`, the component is checked.
         */
        checked?: boolean;
        /**
         * The default checked state. Use when the component is not controlled.
         */
        defaultChecked?: boolean;
        /**
         * If `true`, the component is disabled.
         */
        disabled?: boolean;
        onBlur?: React.FocusEventHandler;
        /**
         * Callback fired when the state is changed.
         *
         * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
         * You can pull out the new value by accessing `event.target.value` (string).
         * You can pull out the new checked state by accessing `event.target.checked` (boolean).
         */
        onChange?: React.ChangeEventHandler<HTMLInputElement>;
        onFocus?: React.FocusEventHandler;
        onFocusVisible?: React.FocusEventHandler;
        /**
         * If `true`, the component is read only.
         */
        readOnly?: boolean;
        /**
         * If `true`, the `input` element is required.
         */
        required?: boolean;
    }
    /**
     * The basic building block for creating custom switches.
     *
     * Demos:
     *
     * - [Switches](https://mui.com/components/switches/)
     */
    export type useSwitch = (props: UseSwitchProps) => UseSwitchResult;
    export default UseSwitchResult;
}
declare module "@mui/base/SwitchUnstyled/SwitchUnstyled" {
    import * as React from 'react';
    import { UseSwitchProps } from "@mui/base/SwitchUnstyled/useSwitch";
    export interface SwitchUnstyledComponentsPropsOverrides {
    }
    export interface SwitchUnstyledProps extends UseSwitchProps {
        /**
         * Class name applied to the root element.
         */
        className?: string;
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: React.ElementType;
        /**
         * The components used for each slot inside the Switch.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            Thumb?: React.ElementType;
            Input?: React.ElementType;
            Track?: React.ElementType | null;
        };
        /**
         * The props used for each slot inside the Switch.
         * @default {}
         */
        componentsProps?: {
            root?: React.HTMLAttributes<HTMLSpanElement> & SwitchUnstyledComponentsPropsOverrides;
            thumb?: React.HTMLAttributes<HTMLSpanElement> & SwitchUnstyledComponentsPropsOverrides;
            input?: React.InputHTMLAttributes<HTMLInputElement> & SwitchUnstyledComponentsPropsOverrides;
            track?: React.HTMLAttributes<HTMLSpanElement> & SwitchUnstyledComponentsPropsOverrides;
        };
    }
    /**
     * The foundation for building custom-styled switches.
     *
     * Demos:
     *
     * - [Switches](https://mui.com/components/switches/)
     *
     * API:
     *
     * - [SwitchUnstyled API](https://mui.com/api/switch-unstyled/)
     */
    const SwitchUnstyled: React.ForwardRefExoticComponent<SwitchUnstyledProps & React.RefAttributes<any>>;
    export default SwitchUnstyled;
}
declare module "@mui/base/SwitchUnstyled/switchUnstyledClasses" {
    export interface SwitchUnstyledClasses {
        /** Class applied to the root element. */
        root: string;
        /** Class applied to the internal input element */
        input: string;
        /** Class applied to the track element */
        track: string;
        /** Class applied to the thumb element */
        thumb: string;
        /** Class applied to the root element if the switch is checked */
        checked: string;
        /** Class applied to the root element if the switch is disabled */
        disabled: string;
        /** Class applied to the root element if the switch has visible focus */
        focusVisible: string;
        /** Class applied to the root element if the switch is read-only */
        readOnly: string;
    }
    export type SwitchUnstyledClassKey = keyof SwitchUnstyledClasses;
    export function getSwitchUnstyledUtilityClass(slot: string): string;
    const switchUnstyledClasses: SwitchUnstyledClasses;
    export default switchUnstyledClasses;
}
declare module "@mui/base/SwitchUnstyled/index" {
    export { default } from "@mui/base/SwitchUnstyled/SwitchUnstyled";
    export * from "@mui/base/SwitchUnstyled/SwitchUnstyled";
    export { default as useSwitch } from "@mui/base/SwitchUnstyled/useSwitch";
    export * from "@mui/base/SwitchUnstyled/useSwitch";
    export { default as switchUnstyledClasses } from "@mui/base/SwitchUnstyled/switchUnstyledClasses";
    export * from "@mui/base/SwitchUnstyled/switchUnstyledClasses";
}
declare module "@mui/base/TabPanelUnstyled/TabPanelUnstyledProps" {
    import React from 'react';
    import { OverrideProps } from "@mui/types/index";
    interface TabPanelUnstyledComponentsPropsOverrides {
    }
    export interface TabPanelUnstyledOwnProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        className?: string;
        /**
         * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.
         */
        value: number | string;
        /**
         * The components used for each slot inside the TabPanel.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The props used for each slot inside the TabPanel.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & TabPanelUnstyledComponentsPropsOverrides;
        };
    }
    export interface TabPanelUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & TabPanelUnstyledOwnProps;
        defaultComponent: D;
    }
    type TabPanelUnstyledProps<D extends React.ElementType = TabPanelUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<TabPanelUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default TabPanelUnstyledProps;
}
declare module "@mui/base/TabPanelUnstyled/TabPanelUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { TabPanelUnstyledTypeMap } from "@mui/base/TabPanelUnstyled/TabPanelUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabPanelUnstyled API](https://mui.com/api/tab-panel-unstyled/)
     */
    const TabPanelUnstyled: OverridableComponent<TabPanelUnstyledTypeMap<{}, "div">>;
    export default TabPanelUnstyled;
}
declare module "@mui/base/TabPanelUnstyled/tabPanelUnstyledClasses" {
    export interface TabPanelUnstyledClasses {
        root: string;
        hidden: string;
    }
    export type TabPanelUnstyledClassKey = keyof TabPanelUnstyledClasses;
    export function getTabPanelUnstyledUtilityClass(slot: string): string;
    const tabPanelUnstyledClasses: TabPanelUnstyledClasses;
    export default tabPanelUnstyledClasses;
}
declare module "@mui/base/TabPanelUnstyled/useTabPanel" {
    export interface UseTabPanelProps {
        /**
         * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.
         */
        value: number | string;
    }
    const useTabPanel: (props: UseTabPanelProps) => {
        hidden: boolean;
        getRootProps: () => {
            'aria-labelledby': string | null;
            hidden: boolean;
            id: string | null;
        };
    };
    export default useTabPanel;
}
declare module "@mui/base/TabPanelUnstyled/index" {
    export { default } from "@mui/base/TabPanelUnstyled/TabPanelUnstyled";
    export { default as tabPanelUnstyledClasses } from "@mui/base/TabPanelUnstyled/tabPanelUnstyledClasses";
    export * from "@mui/base/TabPanelUnstyled/tabPanelUnstyledClasses";
    export type { default as TabPanelUnstyledProps } from "@mui/base/TabPanelUnstyled/TabPanelUnstyledProps";
    export { default as useTabPanel } from "@mui/base/TabPanelUnstyled/useTabPanel";
    export * from "@mui/base/TabPanelUnstyled/useTabPanel";
}
declare module "@mui/base/TabsListUnstyled/TabsListUnstyledProps" {
    import React from 'react';
    import { OverrideProps } from "@mui/types/index";
    interface TabsListUnstyledComponentsPropsOverrides {
    }
    export interface TabsListUnstyledOwnProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        className?: string;
        /**
         * The components used for each slot inside the TabsList.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The props used for each slot inside the TabsList.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & TabsListUnstyledComponentsPropsOverrides;
        };
    }
    export interface TabsListUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & TabsListUnstyledOwnProps;
        defaultComponent: D;
    }
    type TabsListUnstyledProps<D extends React.ElementType = TabsListUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<TabsListUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default TabsListUnstyledProps;
}
declare module "@mui/base/TabsListUnstyled/TabsListUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { TabsListUnstyledTypeMap } from "@mui/base/TabsListUnstyled/TabsListUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabsListUnstyled API](https://mui.com/api/tabs-list-unstyled/)
     */
    const TabsListUnstyled: OverridableComponent<TabsListUnstyledTypeMap<{}, "div">>;
    export default TabsListUnstyled;
}
declare module "@mui/base/TabsListUnstyled/tabsListUnstyledClasses" {
    export interface TabsListUnstyledClasses {
        root: string;
        horizontal: string;
        vertical: string;
    }
    export type TabsListUnstyledClassKey = keyof TabsListUnstyledClasses;
    export function getTabsListUnstyledUtilityClass(slot: string): string;
    const tabsListUnstyledClasses: TabsListUnstyledClasses;
    export default tabsListUnstyledClasses;
}
declare module "@mui/base/TabsListUnstyled/useTabsList" {
    import * as React from 'react';
    export interface UseTabsListProps {
        'aria-label'?: string;
        'aria-labelledby'?: string;
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        ref: React.Ref<unknown>;
    }
    const useTabsList: (props: UseTabsListProps) => {
        isRtl: boolean;
        orientation: "horizontal" | "vertical";
        value: string | number | false;
        processChildren: () => React.ReactElement<any, string | React.JSXElementConstructor<any>>[] | null | undefined;
        getRootProps: (otherHandlers?: Record<string, (event: any) => void> | undefined) => {
            'aria-label': string | undefined;
            'aria-labelledby': string | undefined;
            'aria-orientation': string | null;
            role: string;
            ref: React.Ref<unknown>;
        };
    };
    export default useTabsList;
}
declare module "@mui/base/TabsListUnstyled/index" {
    export { default } from "@mui/base/TabsListUnstyled/TabsListUnstyled";
    export { default as tabsListUnstyledClasses } from "@mui/base/TabsListUnstyled/tabsListUnstyledClasses";
    export * from "@mui/base/TabsListUnstyled/tabsListUnstyledClasses";
    export type { default as TabsListUnstyledProps } from "@mui/base/TabsListUnstyled/TabsListUnstyledProps";
    export { default as useTabsList } from "@mui/base/TabsListUnstyled/useTabsList";
    export * from "@mui/base/TabsListUnstyled/useTabsList";
}
declare module "@mui/base/TabsUnstyled/TabsUnstyledProps" {
    import React from 'react';
    import { OverrideProps } from "@mui/types/index";
    interface TabsUnstyledComponentsPropsOverrides {
    }
    export interface TabsUnstyledOwnProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * The value of the currently selected `Tab`.
         * If you don't want any selected `Tab`, you can set this prop to `false`.
         */
        value?: string | number | false;
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: string | number | false;
        /**
         * The component orientation (layout flow direction).
         * @default 'horizontal'
         */
        orientation?: 'horizontal' | 'vertical';
        /**
         * The direction of the text.
         * @default 'ltr'
         */
        direction?: 'ltr' | 'rtl';
        className?: string;
        /**
         * The components used for each slot inside the Tabs.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Tabs.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & TabsUnstyledComponentsPropsOverrides;
        };
        /**
         * Callback invoked when new value is being set.
         */
        onChange?: (event: React.SyntheticEvent, value: number | string) => void;
        /**
         * If `true` the selected tab changes on focus. Otherwise it only
         * changes on activation.
         */
        selectionFollowsFocus?: boolean;
    }
    export interface TabsUnstyledTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & TabsUnstyledOwnProps;
        defaultComponent: D;
    }
    type TabsUnstyledProps<D extends React.ElementType = TabsUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<TabsUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default TabsUnstyledProps;
}
declare module "@mui/base/TabsUnstyled/TabsUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { TabsUnstyledTypeMap } from "@mui/base/TabsUnstyled/TabsUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabsUnstyled API](https://mui.com/api/tabs-unstyled/)
     */
    const TabsUnstyled: OverridableComponent<TabsUnstyledTypeMap<{}, "div">>;
    export default TabsUnstyled;
}
declare module "@mui/base/TabsUnstyled/TabsContext" {
    import * as React from 'react';
    export interface TabsContextValue {
        /**
         * Id used as a prefix for the current Tabs.
         */
        idPrefix: string | undefined;
        /**
         * The currently selected tab's value.
         */
        value: number | string | false;
        /**
         * Callback for setting new value.
         */
        onSelected: (event: React.SyntheticEvent, value: number | string | false) => void;
        /**
         * The component orientation (layout flow direction).
         */
        orientation?: 'horizontal' | 'vertical';
        /**
         * The direction of the text.
         */
        direction?: 'ltr' | 'rtl';
        /**
         * If `true` the selected tab changes on focus. Otherwise it only
         * changes on activation.
         */
        selectionFollowsFocus?: boolean;
    }
    /**
     * @ignore - internal component.
     */
    const Context: React.Context<TabsContextValue | null>;
    /**
     * @returns {unknown}
     */
    export function useTabContext(): TabsContextValue | null;
    export function getPanelId(context: TabsContextValue, value: number | string | false): string | null;
    export function getTabId(context: TabsContextValue, value: number | string | false): string | null;
    export default Context;
}
declare module "@mui/base/TabsUnstyled/tabsUnstyledClasses" {
    export interface TabsUnstyledClasses {
        root: string;
        horizontal: string;
        vertical: string;
    }
    export type TabsUnstyledClassKey = keyof TabsUnstyledClasses;
    export function getTabsUnstyledUtilityClass(slot: string): string;
    const tabsUnstyledClasses: TabsUnstyledClasses;
    export default tabsUnstyledClasses;
}
declare module "@mui/base/TabsUnstyled/useTabs" {
    import * as React from 'react';
    export interface UseTabsProps {
        /**
         * The value of the currently selected `Tab`.
         * If you don't want any selected `Tab`, you can set this prop to `false`.
         */
        value?: string | number | false;
        /**
         * The default value. Use when the component is not controlled.
         */
        defaultValue?: string | number | false;
        /**
         * The component orientation (layout flow direction).
         * @default 'horizontal'
         */
        orientation?: 'horizontal' | 'vertical';
        /**
         * The direction of the text.
         * @default 'ltr'
         */
        direction?: 'ltr' | 'rtl';
        /**
         * Callback invoked when new value is being set.
         */
        onChange?: (event: React.SyntheticEvent, value: number | string) => void;
        /**
         * If `true` the selected tab changes on focus. Otherwise it only
         * changes on activation.
         */
        selectionFollowsFocus?: boolean;
    }
    const useTabs: (props: UseTabsProps) => {
        getRootProps: () => {};
        tabsContextValue: {
            idPrefix: string | undefined;
            value: string | number | false;
            onSelected: (e: any, newValue: any) => void;
            orientation: "horizontal" | "vertical" | undefined;
            direction: "ltr" | "rtl" | undefined;
            selectionFollowsFocus: boolean | undefined;
        };
    };
    export default useTabs;
}
declare module "@mui/base/TabsUnstyled/index" {
    export { default } from "@mui/base/TabsUnstyled/TabsUnstyled";
    export { default as TabsContext } from "@mui/base/TabsUnstyled/TabsContext";
    export * from "@mui/base/TabsUnstyled/TabsContext";
    export { default as tabsUnstyledClasses } from "@mui/base/TabsUnstyled/tabsUnstyledClasses";
    export * from "@mui/base/TabsUnstyled/tabsUnstyledClasses";
    export type { default as TabsUnstyledProps } from "@mui/base/TabsUnstyled/TabsUnstyledProps";
    export { default as useTabs } from "@mui/base/TabsUnstyled/useTabs";
    export * from "@mui/base/TabsUnstyled/useTabs";
}
declare module "@mui/base/TabUnstyled/TabUnstyledProps" {
    import React from 'react';
    import { OverrideProps } from "@mui/types/index";
    import { ButtonUnstyledOwnProps } from "@mui/base/ButtonUnstyled/index";
    interface TabUnstyledComponentsPropsOverrides {
    }
    export interface TabUnstyledOwnProps extends Omit<ButtonUnstyledOwnProps, 'onChange' | 'components' | 'componentsProps'> {
        /**
         * You can provide your own value. Otherwise, we fall back to the child position index.
         */
        value?: number | string;
        /**
         * Callback invoked when new value is being set.
         */
        onChange?: (event: React.SyntheticEvent, value: number | string) => void;
        /**
         * The components used for each slot inside the Tab.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
        };
        /**
         * The props used for each slot inside the Tab.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & TabUnstyledComponentsPropsOverrides;
        };
    }
    type TabUnstyledProps<D extends React.ElementType = TabUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<TabUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export interface TabUnstyledTypeMap<P = {}, D extends React.ElementType = 'button'> {
        props: P & TabUnstyledOwnProps;
        defaultComponent: D;
    }
    export default TabUnstyledProps;
}
declare module "@mui/base/TabUnstyled/TabUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { TabUnstyledTypeMap } from "@mui/base/TabUnstyled/TabUnstyledProps";
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabUnstyled API](https://mui.com/api/tab-unstyled/)
     */
    const TabUnstyled: OverridableComponent<TabUnstyledTypeMap<{}, "button">>;
    export default TabUnstyled;
}
declare module "@mui/base/TabUnstyled/tabUnstyledClasses" {
    export interface TabUnstyledClasses {
        root: string;
        selected: string;
        disabled: string;
    }
    export type TabUnstyledClassKey = keyof TabUnstyledClasses;
    export function getTabUnstyledUtilityClass(slot: string): string;
    const tabUnstyledClasses: TabUnstyledClasses;
    export default tabUnstyledClasses;
}
declare module "@mui/base/TabUnstyled/useTab" {
    import React from 'react';
    export interface UseTabProps {
        /**
         * You can provide your own value. Otherwise, we fall back to the child position index.
         */
        value?: number | string;
        /**
         * Callback invoked when new value is being set.
         */
        onChange?: (event: React.SyntheticEvent, value: number | string) => void;
        onClick?: React.MouseEventHandler;
        disabled?: boolean;
        onFocus?: React.FocusEventHandler;
        ref: React.Ref<any>;
    }
    const useTab: (props: UseTabProps) => {
        selected: boolean;
        focusVisible: boolean;
        setFocusVisible: import("react").Dispatch<import("react").SetStateAction<boolean>>;
        disabled: boolean;
        active: boolean;
        getRootProps: (otherHandlers?: Record<string, (event: any) => void> | undefined) => {
            role: string;
            'aria-controls': string | null;
            id: string | null;
            'aria-selected': boolean;
            disabled: boolean;
            onClick: (event: React.MouseEvent<Element, MouseEvent>) => void;
            'aria-disabled'?: (boolean | "false" | "true") | undefined;
            tabIndex: number;
            type?: "button" | "reset" | "submit" | undefined;
            onBlur: import("react").FocusEventHandler<Element>;
            onFocus: import("react").FocusEventHandler<Element>;
            onKeyDown: import("react").KeyboardEventHandler<Element>;
            onKeyUp: import("react").KeyboardEventHandler<Element>;
            onMouseDown: import("react").MouseEventHandler<Element>;
            onMouseLeave: import("react").MouseEventHandler<Element>;
            onMouseUp: import("react").MouseEventHandler<Element>;
            ref: import("react").Ref<any>;
        };
    };
    export default useTab;
}
declare module "@mui/base/TabUnstyled/index" {
    export { default } from "@mui/base/TabUnstyled/TabUnstyled";
    export { default as tabUnstyledClasses } from "@mui/base/TabUnstyled/tabUnstyledClasses";
    export * from "@mui/base/TabUnstyled/tabUnstyledClasses";
    export type { default as TabUnstyledProps } from "@mui/base/TabUnstyled/TabUnstyledProps";
    export { default as useTab } from "@mui/base/TabUnstyled/useTab";
    export * from "@mui/base/TabUnstyled/useTab";
}
declare module "@mui/base/TextareaAutosize/TextareaAutosize" {
    import * as React from 'react';
    export interface TextareaAutosizeProps extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, 'children' | 'rows'> {
        ref?: React.Ref<HTMLTextAreaElement>;
        /**
         * Maximum number of rows to display.
         */
        maxRows?: string | number;
        /**
         * Minimum number of rows to display.
         * @default 1
         */
        minRows?: string | number;
    }
    /**
     *
     * Demos:
     *
     * - [Textarea Autosize](https://mui.com/components/textarea-autosize/)
     *
     * API:
     *
     * - [TextareaAutosize API](https://mui.com/api/textarea-autosize/)
     */
    export type TextareaAutosize = (props: TextareaAutosizeProps) => JSX.Element;
    export default TextareaAutosize;
}
declare module "@mui/base/TextareaAutosize/index" {
    export { default } from "@mui/base/TextareaAutosize/TextareaAutosize";
    export * from "@mui/base/TextareaAutosize/TextareaAutosize";
}
declare module "@mui/base/Unstable_TrapFocus/Unstable_TrapFocus" {
    import * as React from 'react';
    export interface TrapFocusProps {
        /**
         * If `true`, focus is locked.
         */
        open: boolean;
        /**
         * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
         * For instance, you can provide the "tabbable" npm dependency.
         * @param {HTMLElement} root
         */
        getTabbable?: (root: HTMLElement) => string[];
        /**
         * This prop extends the `open` prop.
         * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
         * This prop should be memoized.
         * It can be used to support multiple trap focus mounted at the same time.
         * @default function defaultIsEnabled() {
         *   return true;
         * }
         */
        isEnabled?: () => boolean;
        /**
         * A single child content element.
         */
        children: React.ReactElement<any, any>;
        /**
         * If `true`, the trap focus will not automatically shift focus to itself when it opens, and
         * replace it to the last focused element when it closes.
         * This also works correctly with any trap focus children that have the `disableAutoFocus` prop.
         *
         * Generally this should never be set to `true` as it makes the trap focus less
         * accessible to assistive technologies, like screen readers.
         * @default false
         */
        disableAutoFocus?: boolean;
        /**
         * If `true`, the trap focus will not prevent focus from leaving the trap focus while open.
         *
         * Generally this should never be set to `true` as it makes the trap focus less
         * accessible to assistive technologies, like screen readers.
         * @default false
         */
        disableEnforceFocus?: boolean;
        /**
         * If `true`, the trap focus will not restore focus to previously focused element once
         * trap focus is hidden or unmounted.
         * @default false
         */
        disableRestoreFocus?: boolean;
    }
    /**
     * Utility component that locks focus inside the component.
     *
     * Demos:
     *
     * - [Trap Focus](https://mui.com/components/trap-focus/)
     *
     * API:
     *
     * - [Unstable_TrapFocus API](https://mui.com/api/unstable-trap-focus/)
     */
    export type Unstable_TrapFocus = (props: TrapFocusProps) => JSX.Element;
    export default Unstable_TrapFocus;
}
declare module "@mui/base/Unstable_TrapFocus/index" {
    export { default } from "@mui/base/Unstable_TrapFocus/Unstable_TrapFocus";
    export * from "@mui/base/Unstable_TrapFocus/Unstable_TrapFocus";
}
declare module "@mui/base/index" {
    export * from "@mui/base/utils/index";
    export * from "@mui/base/AutocompleteUnstyled/index";
    export { default as BackdropUnstyled } from "@mui/base/BackdropUnstyled/index";
    export * from "@mui/base/BackdropUnstyled/index";
    export { default as BadgeUnstyled } from "@mui/base/BadgeUnstyled/index";
    export * from "@mui/base/BadgeUnstyled/index";
    export { default as ButtonUnstyled } from "@mui/base/ButtonUnstyled/index";
    export * from "@mui/base/ButtonUnstyled/index";
    export { default as ClickAwayListener } from "@mui/base/ClickAwayListener/index";
    export * from "@mui/base/ClickAwayListener/index";
    export { default as unstable_composeClasses } from "@mui/base/composeClasses/index";
    export * from "@mui/base/composeClasses/index";
    export { default as generateUtilityClass } from "@mui/base/generateUtilityClass/index";
    export * from "@mui/base/generateUtilityClass/index";
    export { default as generateUtilityClasses } from "@mui/base/generateUtilityClasses/index";
    export * from "@mui/base/generateUtilityClasses/index";
    export { default as FormControlUnstyled } from "@mui/base/FormControlUnstyled/index";
    export * from "@mui/base/FormControlUnstyled/index";
    export { default as InputUnstyled } from "@mui/base/InputUnstyled/index";
    export * from "@mui/base/InputUnstyled/index";
    export { default as ModalUnstyled } from "@mui/base/ModalUnstyled/index";
    export * from "@mui/base/ModalUnstyled/index";
    export { default as MultiSelectUnstyled } from "@mui/base/MultiSelectUnstyled/index";
    export * from "@mui/base/MultiSelectUnstyled/index";
    export { default as NoSsr } from "@mui/base/NoSsr/index";
    export { default as OptionGroupUnstyled } from "@mui/base/OptionGroupUnstyled/index";
    export * from "@mui/base/OptionGroupUnstyled/index";
    export { default as OptionUnstyled } from "@mui/base/OptionUnstyled/index";
    export * from "@mui/base/OptionUnstyled/index";
    export { default as PopperUnstyled } from "@mui/base/PopperUnstyled/index";
    export * from "@mui/base/PopperUnstyled/index";
    export { default as Portal } from "@mui/base/Portal/index";
    export * from "@mui/base/Portal/index";
    export { default as SelectUnstyled } from "@mui/base/SelectUnstyled/index";
    export * from "@mui/base/SelectUnstyled/index";
    export { default as SliderUnstyled } from "@mui/base/SliderUnstyled/index";
    export * from "@mui/base/SliderUnstyled/index";
    export { default as SwitchUnstyled } from "@mui/base/SwitchUnstyled/index";
    export * from "@mui/base/SwitchUnstyled/index";
    export { default as TabPanelUnstyled } from "@mui/base/TabPanelUnstyled/index";
    export * from "@mui/base/TabPanelUnstyled/index";
    export { default as TabsListUnstyled } from "@mui/base/TabsListUnstyled/index";
    export * from "@mui/base/TabsListUnstyled/index";
    export { default as TabsUnstyled } from "@mui/base/TabsUnstyled/index";
    export * from "@mui/base/TabsUnstyled/index";
    export { default as TabUnstyled } from "@mui/base/TabUnstyled/index";
    export * from "@mui/base/TabUnstyled/index";
    export { default as TextareaAutosize } from "@mui/base/TextareaAutosize/index";
    export * from "@mui/base/TextareaAutosize/index";
    export { default as Unstable_TrapFocus } from "@mui/base/Unstable_TrapFocus/index";
    export * from "@mui/base/Unstable_TrapFocus/index";
}
declare module "@mui/base/ListboxUnstyled/useControllableReducer" {
    import { ListboxAction, ListboxReducer, ListboxState, UseListboxStrictProps } from "@mui/base/ListboxUnstyled/useListbox.types";
    export type useControllableReducer = <TOption>(internalReducer: ListboxReducer<TOption>, externalReducer: ListboxReducer<TOption> | undefined, props: UseListboxStrictProps<TOption>) => [ListboxState<TOption>, (action: ListboxAction<TOption>) => void];
    export default useControllableReducer;
}
declare module "@mui/base/SelectUnstyled/utils" {
    import React from 'react';
    import { SelectChild, SelectOption } from "@mui/base/SelectUnstyled/useSelect.types";
    export function areOptionsEqual<TValue>(option1: SelectOption<TValue>, option2: SelectOption<TValue>): boolean;
    export function getOptionsFromChildren<TValue>(children: React.ReactNode): SelectChild<TValue>[];
    export function flattenOptionGroups<TValue>(groupedOptions: SelectChild<TValue>[], isGroupDisabled?: boolean): SelectOption<TValue>[];
}
declare module "@mui/base/TablePaginationUnstyled/TablePaginationActionsUnstyledProps" {
    import * as React from 'react';
    import { OverrideProps } from "@mui/types/index";
    export interface TablePaginationActionsUnstyledComponentsPropsOverrides {
    }
    interface TablePaginationActionsUnstyledOwnProps extends React.HTMLAttributes<HTMLDivElement> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: {};
        count: number;
        /**
         * The components used for each slot inside the TablePagination.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            Root?: React.ElementType;
            FirstButton?: React.ElementType;
            LastButton?: React.ElementType;
            NextButton?: React.ElementType;
            BackButton?: React.ElementType;
            FirstPageIcon?: React.ElementType;
            LastPageIcon?: React.ElementType;
            NextPageIcon?: React.ElementType;
            BackPageIcon?: React.ElementType;
        };
        /**
         * The props used for each slot inside the TablePagination.
         * @default {}
         */
        componentsProps?: {
            root?: React.ComponentPropsWithRef<'div'> & TablePaginationActionsUnstyledComponentsPropsOverrides;
            firstButton?: React.ComponentPropsWithRef<'button'> & TablePaginationActionsUnstyledComponentsPropsOverrides;
            lastButton?: React.ComponentPropsWithRef<'button'> & TablePaginationActionsUnstyledComponentsPropsOverrides;
            nextButton?: React.ComponentPropsWithRef<'button'> & TablePaginationActionsUnstyledComponentsPropsOverrides;
            backButton?: React.ComponentPropsWithRef<'button'> & TablePaginationActionsUnstyledComponentsPropsOverrides;
        };
        /**
         * Direction of the text.
         * @default 'ltr'
         */
        direction?: 'ltr' | 'rtl';
        /**
         * Accepts a function which returns a string value that provides a user-friendly name for the current page.
         * This is important for screen reader users.
         *
         * For localization purposes, you can use the provided [translations](/guides/localization/).
         * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
         * @returns {string}
         */
        getItemAriaLabel: (type: 'first' | 'last' | 'next' | 'previous', page: number) => string;
        onPageChange: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;
        page: number;
        rowsPerPage: number;
        showFirstButton: boolean;
        showLastButton: boolean;
    }
    type TablePaginationActionsUnstyledProps<D extends React.ElementType = TablePaginationActionsUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<TablePaginationActionsUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export interface TablePaginationActionsUnstyledTypeMap<P = {}, D extends React.ElementType = 'button'> {
        props: P & TablePaginationActionsUnstyledOwnProps;
        defaultComponent: D;
    }
    export default TablePaginationActionsUnstyledProps;
}
declare module "@mui/base/TablePaginationUnstyled/TablePaginationActionsUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { TablePaginationActionsUnstyledTypeMap } from "@mui/base/TablePaginationUnstyled/TablePaginationActionsUnstyledProps";
    /**
     * @ignore - internal component.
     */
    const TablePaginationActionsUnstyled: OverridableComponent<TablePaginationActionsUnstyledTypeMap<{}, "button">>;
    export default TablePaginationActionsUnstyled;
}
declare module "@mui/base/TablePaginationUnstyled/tablePaginationUnstyledClasses" {
    export interface TablePaginationUnstyledClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the Toolbar component. */
        toolbar: string;
        /** Styles applied to the spacer element. */
        spacer: string;
        /** Styles applied to the select label Typography element. */
        selectLabel: string;
        /** Styles applied to the Select component `root` element. */
        selectRoot: string;
        /** Styles applied to the Select component `select` class. */
        select: string;
        /** Styles applied to the Select component `icon` class. */
        selectIcon: string;
        /** Styles applied to the Select component `root` element. */
        input: string;
        /** Styles applied to the MenuItem component. */
        menuItem: string;
        /** Styles applied to the displayed rows Typography element. */
        displayedRows: string;
        /** Styles applied to the internal `TablePaginationUnstyledActions` component. */
        actions: string;
    }
    export type TablePaginationUnstyledClassKey = keyof TablePaginationUnstyledClasses;
    export function getTablePaginationUnstyledUtilityClass(slot: string): string;
    const tablePaginationClasses: TablePaginationUnstyledClasses;
    export default tablePaginationClasses;
}
declare module "@mui/base/TablePaginationUnstyled/TablePaginationUnstyledProps" {
    import * as React from 'react';
    import { OverrideProps } from "@mui/types/index";
    import { TablePaginationUnstyledClasses } from "@mui/base/TablePaginationUnstyled/tablePaginationUnstyledClasses";
    export interface LabelDisplayedRowsArgs {
        from: number;
        to: number;
        count: number;
        page: number;
    }
    export type ItemAriaLabelType = 'first' | 'last' | 'next' | 'previous';
    export interface TablePaginationUnstyledComponentsPropsOverrides {
    }
    export interface TablePaginationUnstyledTypeMap<P = {}, D extends React.ElementType = 'td'> {
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<TablePaginationUnstyledClasses>;
            /**
             * @ignore
             */
            colSpan?: number;
            /**
             * The components used for each slot inside the TablePagination.
             * Either a string to use a HTML element or a component.
             * @default {}
             */
            components?: {
                Root?: React.ElementType;
                Actions?: React.ElementType;
                Select?: React.ElementType;
                SelectLabel?: React.ElementType;
                MenuItem?: React.ElementType;
                DisplayedRows?: React.ElementType;
                Toolbar?: React.ElementType;
                Spacer?: React.ElementType;
            };
            /**
             * The props used for each slot inside the TablePagination.
             * @default {}
             */
            componentsProps?: {
                root?: React.ComponentPropsWithRef<'div'> & TablePaginationUnstyledComponentsPropsOverrides;
                actions?: React.ComponentPropsWithRef<'div'> & TablePaginationUnstyledComponentsPropsOverrides;
                select?: React.ComponentPropsWithRef<'select'> & TablePaginationUnstyledComponentsPropsOverrides;
                selectLabel?: React.ComponentPropsWithRef<'p'> & TablePaginationUnstyledComponentsPropsOverrides;
                menuItem?: React.ComponentPropsWithRef<'option'> & TablePaginationUnstyledComponentsPropsOverrides;
                displayedRows?: React.ComponentPropsWithRef<'p'> & TablePaginationUnstyledComponentsPropsOverrides;
                toolbar?: React.ComponentPropsWithRef<'div'> & TablePaginationUnstyledComponentsPropsOverrides;
                spacer?: React.ComponentPropsWithRef<'div'> & TablePaginationUnstyledComponentsPropsOverrides;
            };
            /**
             * The total number of rows.
             *
             * To enable server side pagination for an unknown number of items, provide -1.
             */
            count: number;
            /**
             * Accepts a function which returns a string value that provides a user-friendly name for the current page.
             * This is important for screen reader users.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').
             * @returns {string}
             * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {
             *   return `Go to ${type} page`;
             * }
             */
            getItemAriaLabel?: (type: ItemAriaLabelType) => string;
            /**
             * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`
             * object.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {
             *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
             * }
             */
            labelDisplayedRows?: (paginationInfo: LabelDisplayedRowsArgs) => React.ReactNode;
            /**
             * Customize the rows per page label.
             *
             * For localization purposes, you can use the provided [translations](/guides/localization/).
             * @default 'Rows per page:'
             */
            labelRowsPerPage?: React.ReactNode;
            /**
             * Callback fired when the page is changed.
             *
             * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.
             * @param {number} page The page selected.
             */
            onPageChange: (event: React.MouseEvent<HTMLButtonElement> | null, page: number) => void;
            /**
             * Callback fired when the number of rows per page is changed.
             *
             * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
             */
            onRowsPerPageChange?: React.ChangeEventHandler<HTMLTextAreaElement | HTMLInputElement>;
            /**
             * The zero-based index of the current page.
             */
            page: number;
            /**
             * The number of rows per page.
             *
             * Set -1 to display all the rows.
             */
            rowsPerPage: number;
            /**
             * Customizes the options of the rows per page select field. If less than two options are
             * available, no select field will be displayed.
             * Use -1 for the value with a custom label to show all the rows.
             * @default [10, 25, 50, 100]
             */
            rowsPerPageOptions?: Array<number | {
                value: number;
                label: string;
            }>;
        };
        defaultComponent: D;
    }
    type TablePaginationUnstyledProps<D extends React.ElementType = TablePaginationUnstyledTypeMap['defaultComponent'], P = {}> = OverrideProps<TablePaginationUnstyledTypeMap<P, D>, D> & {
        /**
         * The component used for the Root slot.
         * Either a string to use a HTML element or a component.
         * This is equivalent to `components.Root`. If both are provided, the `component` is used.
         */
        component?: D;
    };
    export default TablePaginationUnstyledProps;
}
declare module "@mui/base/TablePaginationUnstyled/TablePaginationUnstyled" {
    import { OverridableComponent } from "@mui/types/index";
    import { TablePaginationUnstyledTypeMap } from "@mui/base/TablePaginationUnstyled/TablePaginationUnstyledProps";
    /**
     * A pagination for tables.
     *
     * Demos:
     *
     * - [Tables](https://mui.com/components/tables/)
     *
     * API:
     *
     * - [TablePaginationUnstyled API](https://mui.com/api/table-pagination-unstyled/)
     */
    const TablePaginationUnstyled: OverridableComponent<TablePaginationUnstyledTypeMap<{}, "td">>;
    export default TablePaginationUnstyled;
}
declare module "@mui/base/TablePaginationUnstyled/index" {
    export { default } from "@mui/base/TablePaginationUnstyled/TablePaginationUnstyled";
    export type { default as TablePaginationUnstyledProps } from "@mui/base/TablePaginationUnstyled/TablePaginationUnstyledProps";
    export * from "@mui/base/TablePaginationUnstyled/TablePaginationUnstyledProps";
    export type { default as TablePaginationActionsUnstyledProps } from "@mui/base/TablePaginationUnstyled/TablePaginationActionsUnstyledProps";
    export { default as tablePaginationUnstyledClasses } from "@mui/base/TablePaginationUnstyled/tablePaginationUnstyledClasses";
    export * from "@mui/base/TablePaginationUnstyled/tablePaginationUnstyledClasses";
}
declare module "@mui/icons-material/Abc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AbcOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AbcRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AbcSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AbcTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AcUnit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AcUnitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AcUnitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AcUnitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AcUnitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarms" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessAlarmsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTime" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessTimeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Accessibility" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityNew" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityNewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityNewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityNewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityNewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibilityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Accessible" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleForward" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleForwardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleForwardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleForwardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleForwardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccessibleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalance" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceWallet" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceWalletOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceWalletRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceWalletSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBalanceWalletTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBoxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBoxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBoxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountBoxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountTree" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountTreeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountTreeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountTreeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AccountTreeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdUnits" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdUnitsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdUnitsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdUnitsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdUnitsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Adb" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdbOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdbRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdbSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdbTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Add" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAPhoto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAPhotoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAPhotoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAPhotoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAPhotoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlarm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlarmOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlarmRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlarmSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlarmTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBoxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBoxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBoxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBoxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBusiness" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBusinessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBusinessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBusinessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddBusinessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddComment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCommentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCommentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCommentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddCommentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddIcCall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddIcCallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddIcCallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddIcCallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddIcCallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLink" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLinkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLinkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLinkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLinkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddLocationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddModerator" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddModeratorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddModeratorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddModeratorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddModeratorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddPhotoAlternate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddPhotoAlternateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddPhotoAlternateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddPhotoAlternateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddPhotoAlternateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddReaction" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddReactionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddReactionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddReactionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddReactionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddRoad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddRoadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddRoadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddRoadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddRoadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddShoppingCart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddShoppingCartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddShoppingCartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddShoppingCartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddShoppingCartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddTask" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddTaskOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddTaskRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddTaskSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddTaskTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToDrive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToDriveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToDriveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToDriveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToDriveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToHomeScreen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToHomeScreenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToHomeScreenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToHomeScreenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToHomeScreenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToPhotos" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToPhotosOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToPhotosRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToPhotosSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToPhotosTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToQueue" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToQueueOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToQueueRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToQueueSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddToQueueTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Addchart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddchartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddchartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddchartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AddchartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdfScanner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdfScannerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdfScannerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdfScannerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdfScannerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Adjust" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdjustOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdjustRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdjustSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdjustTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdminPanelSettings" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdminPanelSettingsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdminPanelSettingsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdminPanelSettingsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AdminPanelSettingsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Agriculture" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AgricultureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AgricultureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AgricultureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AgricultureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Air" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatAngled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatAngledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatAngledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatAngledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatAngledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatFlatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatIndividualSuite" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatIndividualSuiteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatIndividualSuiteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatIndividualSuiteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatIndividualSuiteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomExtra" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomExtraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomExtraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomExtraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomExtraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomNormal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomNormalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomNormalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomNormalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomNormalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomReduced" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomReducedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomReducedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomReducedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatLegroomReducedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineExtra" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineExtraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineExtraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineExtraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineExtraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineNormal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineNormalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineNormalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineNormalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineSeatReclineNormalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineStops" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineStopsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineStopsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineStopsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlineStopsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Airlines" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlinesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlinesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlinesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirlinesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplaneTicket" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplaneTicketOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplaneTicketRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplaneTicketSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplaneTicketTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeActive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeActiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeActiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeActiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeActiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeInactive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeInactiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeInactiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeInactiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplanemodeInactiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Airplay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirplayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirportShuttle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirportShuttleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirportShuttleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirportShuttleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AirportShuttleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Alarm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlarmTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Album" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlbumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlbumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlbumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlbumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignHorizontalRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalBottom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalBottomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalBottomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalBottomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalBottomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalTop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalTopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalTopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalTopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlignVerticalTopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInbox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInboxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInboxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInboxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInboxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInclusive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInclusiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInclusiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInclusiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllInclusiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllOut" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllOutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllOutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllOutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AllOutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AltRoute" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AltRouteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AltRouteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AltRouteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AltRouteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlternateEmail" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlternateEmailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlternateEmailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlternateEmailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AlternateEmailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Analytics" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnalyticsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnalyticsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnalyticsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnalyticsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Anchor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnchorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnchorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnchorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnchorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Android" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AndroidOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AndroidRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AndroidSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AndroidTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Animation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnimationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnimationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnimationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnimationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Announcement" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnnouncementOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnnouncementRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnnouncementSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AnnouncementTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Aod" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Apartment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApartmentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApartmentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApartmentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApartmentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Api" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppBlocking" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppBlockingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppBlockingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppBlockingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppBlockingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppRegistration" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppRegistrationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppRegistrationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppRegistrationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppRegistrationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppSettingsAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppSettingsAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppSettingsAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppSettingsAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppSettingsAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppShortcut" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppShortcutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppShortcutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppShortcutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppShortcutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Apple" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Approval" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApprovalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApprovalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApprovalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ApprovalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Apps" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsOutage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsOutageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsOutageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsOutageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsOutageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AppsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Architecture" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchitectureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchitectureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchitectureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchitectureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Archive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArchiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIos" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosNew" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosNewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosNewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosNewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosNewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackIosTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowBackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowCircleUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDownward" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDownwardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDownwardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDownwardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDownwardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowDropUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForward" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardIos" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardIosOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardIosRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardIosSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardIosTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowForwardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowUpward" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowUpwardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowUpwardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowUpwardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArrowUpwardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArtTrack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArtTrackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArtTrackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArtTrackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArtTrackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Article" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArticleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArticleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArticleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ArticleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AspectRatio" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AspectRatioOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AspectRatioRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AspectRatioSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AspectRatioTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Assessment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssessmentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssessmentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssessmentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssessmentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Assignment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentInd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentIndOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentIndRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentIndSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentIndTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentLate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentLateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentLateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentLateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentLateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturned" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentReturnedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentTurnedIn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentTurnedInOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentTurnedInRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentTurnedInSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentTurnedInTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssignmentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Assistant" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantDirection" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantDirectionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantDirectionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantDirectionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantDirectionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantPhoto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantPhotoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantPhotoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantPhotoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantPhotoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssistantTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssuredWorkload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssuredWorkloadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssuredWorkloadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssuredWorkloadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AssuredWorkloadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Atm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AtmOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AtmRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AtmSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AtmTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachEmail" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachEmailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachEmailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachEmailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachEmailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachFile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachFileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachFileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachFileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachFileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachMoney" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachMoneyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachMoneyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachMoneySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachMoneyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Attachment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachmentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachmentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachmentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttachmentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Attractions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttractionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttractionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttractionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttractionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Attribution" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttributionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttributionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttributionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AttributionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudioFile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudioFileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudioFileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudioFileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudioFileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Audiotrack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudiotrackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudiotrackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudiotrackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AudiotrackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesome" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMosaic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMosaicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMosaicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMosaicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMosaicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMotion" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMotionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMotionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMotionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeMotionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoAwesomeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoDelete" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoDeleteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoDeleteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoDeleteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoDeleteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixHigh" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixHighOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixHighRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixHighSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixHighTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixNormal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixNormalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixNormalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixNormalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixNormalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoFixOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoGraph" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoGraphOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoGraphRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoGraphSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoGraphTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoStories" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoStoriesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoStoriesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoStoriesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutoStoriesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutofpsSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutofpsSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutofpsSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutofpsSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutofpsSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Autorenew" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutorenewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutorenewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutorenewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AutorenewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AvTimer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AvTimerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AvTimerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AvTimerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/AvTimerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BabyChangingStation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BabyChangingStationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BabyChangingStationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BabyChangingStationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BabyChangingStationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Backpack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackpackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackpackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackpackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackpackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Backspace" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackspaceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackspaceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackspaceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackspaceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Backup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupTable" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupTableOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupTableRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupTableSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupTableTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BackupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Badge" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BadgeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BadgeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BadgeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BadgeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BakeryDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BakeryDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BakeryDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BakeryDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BakeryDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Balance" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalanceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalanceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalanceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalanceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Balcony" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalconyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalconyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalconySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BalconyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Ballot" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BallotOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BallotRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BallotSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BallotTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BarChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BarChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BarChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BarChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BarChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatchPrediction" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatchPredictionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatchPredictionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatchPredictionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatchPredictionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bathroom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathroomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathroomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathroomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathroomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bathtub" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathtubOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathtubRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathtubSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BathtubTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery20" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery20Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery20Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery20Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery20TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery30" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery30Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery30Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery30Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery30TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery50" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery50Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery50Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery50Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery50TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery60" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery60Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery60Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery60Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery60TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery80" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery80Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery80Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery80Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery80TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery90" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery90Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery90Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery90Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Battery90TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging20" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging20Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging20Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging20Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging20TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging30" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging30Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging30Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging30Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging30TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging50" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging50Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging50Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging50Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging50TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging60" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging60Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging60Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging60Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging60TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging80" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging80Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging80Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging80Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging80TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging90" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging90Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging90Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging90Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryCharging90TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryChargingFull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryChargingFullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryChargingFullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryChargingFullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryChargingFullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryFull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryFullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryFullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryFullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryFullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatterySaver" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatterySaverOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatterySaverRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatterySaverSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatterySaverTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryStd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryStdOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryStdRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryStdSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryStdTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryUnknown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryUnknownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryUnknownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryUnknownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BatteryUnknownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeachAccess" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeachAccessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeachAccessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeachAccessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeachAccessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomBaby" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomBabyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomBabyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomBabySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomBabyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomChild" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomChildOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomChildRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomChildSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomChildTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomParent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomParentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomParentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomParentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedroomParentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bedtime" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BedtimeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Beenhere" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeenhereOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeenhereRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeenhereSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BeenhereTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bento" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BentoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BentoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BentoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BentoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BikeScooter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BikeScooterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BikeScooterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BikeScooterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BikeScooterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Biotech" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BiotechOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BiotechRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BiotechSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BiotechTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Blender" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlenderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlenderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlenderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlenderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Block" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bloodtype" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BloodtypeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BloodtypeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BloodtypeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BloodtypeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bluetooth" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothAudio" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothAudioOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothAudioRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothAudioSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothAudioTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothConnected" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothConnectedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothConnectedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothConnectedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothConnectedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDrive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDriveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDriveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDriveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothDriveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothSearching" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothSearchingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothSearchingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothSearchingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothSearchingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BluetoothTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurCircular" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurCircularOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurCircularRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurCircularSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurCircularTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurLinear" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurLinearOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurLinearRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurLinearSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurLinearTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BlurOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bolt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Book" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookOnline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookOnlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookOnlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookOnlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookOnlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bookmark" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAdded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkAddedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkBorder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkBorderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkBorderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkBorderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkBorderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkRemove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkRemoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkRemoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkRemoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkRemoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bookmarks" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarksOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarksRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarksSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BookmarksTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderBottom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderBottomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderBottomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderBottomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderBottomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderClear" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderClearOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderClearRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderClearSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderClearTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderColor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderColorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderColorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderColorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderColorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderHorizontal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderHorizontalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderHorizontalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderHorizontalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderHorizontalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderInner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderInnerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderInnerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderInnerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderInnerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderOuter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderOuterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderOuterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderOuterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderOuterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderStyle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderStyleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderStyleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderStyleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderStyleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderTop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderTopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderTopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderTopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderTopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderVertical" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderVerticalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderVerticalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderVerticalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BorderVerticalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Boy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BoyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrandingWatermark" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrandingWatermarkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrandingWatermarkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrandingWatermarkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrandingWatermarkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BreakfastDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BreakfastDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BreakfastDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BreakfastDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BreakfastDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness1" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness1Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness1Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness1Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness1TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness3" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness3Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness3Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness3Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness3TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness4" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness4Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness4Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness4Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness4TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness5" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness5Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness5Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness5Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness5TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness6" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness6Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness6Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness6Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness6TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness7" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness7Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness7Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness7Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brightness7TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessAuto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessAutoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessAutoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessAutoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessAutoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessHigh" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessHighOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessHighRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessHighSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessHighTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessLow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessLowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessLowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessLowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessLowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessMedium" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessMediumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessMediumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessMediumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrightnessMediumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrokenImage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrokenImageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrokenImageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrokenImageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrokenImageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserNotSupported" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserNotSupportedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserNotSupportedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserNotSupportedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserNotSupportedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserUpdated" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserUpdatedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserUpdatedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserUpdatedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrowserUpdatedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrunchDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrunchDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrunchDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrunchDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrunchDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Brush" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrushOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrushRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrushSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BrushTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BubbleChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BubbleChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BubbleChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BubbleChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BubbleChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BugReport" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BugReportOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BugReportRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BugReportSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BugReportTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Build" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BuildTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Bungalow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BungalowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BungalowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BungalowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BungalowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BurstMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BurstModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BurstModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BurstModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BurstModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Business" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/BusinessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cabin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CabinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CabinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CabinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CabinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cable" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CableOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CableRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CableSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CableTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cached" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CachedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CachedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CachedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CachedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cake" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CakeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CakeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CakeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CakeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Calculate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalculateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalculateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalculateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalculateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarToday" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarTodayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarTodayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarTodaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarTodayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewDay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewDayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewDayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewDaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewDayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewMonth" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewMonthOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewMonthRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewMonthSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewMonthTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewWeek" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewWeekOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewWeekRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewWeekSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CalendarViewWeekTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Call" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallEnd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallEndOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallEndRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallEndSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallEndTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMade" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMadeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMadeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMadeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMadeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMerge" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMergeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMergeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMergeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMergeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedOutgoing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedOutgoingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedOutgoingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedOutgoingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedOutgoingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallMissedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallReceived" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallReceivedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallReceivedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallReceivedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallReceivedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallSplit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallSplitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallSplitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallSplitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallSplitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallToAction" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallToActionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallToActionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallToActionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallToActionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Camera" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraEnhance" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraEnhanceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraEnhanceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraEnhanceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraEnhanceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraFront" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraFrontOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraFrontRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraFrontSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraFrontTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraIndoor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraIndoorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraIndoorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraIndoorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraIndoorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraOutdoor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraOutdoorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraOutdoorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraOutdoorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraOutdoorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRear" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRearOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRearRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRearSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRearTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRoll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRollOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRollRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRollSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRollTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cameraswitch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraswitchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraswitchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraswitchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CameraswitchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Campaign" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CampaignOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CampaignRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CampaignSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CampaignTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cancel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelPresentation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelPresentationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelPresentationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelPresentationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelPresentationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelScheduleSend" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelScheduleSendOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelScheduleSendRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelScheduleSendSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelScheduleSendTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CancelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CandlestickChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CandlestickChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CandlestickChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CandlestickChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CandlestickChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRental" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRentalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRentalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRentalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRentalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRepair" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRepairOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRepairRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRepairSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarRepairTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardGiftcard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardGiftcardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardGiftcardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardGiftcardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardGiftcardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardMembership" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardMembershipOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardMembershipRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardMembershipSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardMembershipTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardTravel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardTravelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardTravelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardTravelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CardTravelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Carpenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarpenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarpenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarpenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CarpenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cases" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Casino" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasinoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasinoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasinoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CasinoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cast" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastConnected" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastConnectedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastConnectedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastConnectedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastConnectedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastForEducation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastForEducationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastForEducationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastForEducationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastForEducationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Castle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CastleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CatchingPokemon" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CatchingPokemonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CatchingPokemonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CatchingPokemonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CatchingPokemonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Category" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CategoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CategoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CategorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CategoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Celebration" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CelebrationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CelebrationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CelebrationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CelebrationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellTower" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellTowerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellTowerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellTowerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellTowerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellWifi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellWifiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellWifiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellWifiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CellWifiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusStrong" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusStrongOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusStrongRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusStrongSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusStrongTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusWeak" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusWeakOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusWeakRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusWeakSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CenterFocusWeakTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Chair" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChairTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Chalet" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChaletOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChaletRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChaletSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChaletTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeHistory" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeHistoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeHistoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeHistorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChangeHistoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChargingStation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChargingStationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChargingStationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChargingStationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChargingStationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Chat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubble" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatBubbleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Check" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxOutlineBlank" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxOutlineBlankOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxOutlineBlankRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxOutlineBlankSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxOutlineBlankTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckBoxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Checkroom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckroomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckroomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckroomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CheckroomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChevronRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildCare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildCareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildCareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildCareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildCareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildFriendly" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildFriendlyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildFriendlyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildFriendlySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChildFriendlyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChromeReaderMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChromeReaderModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChromeReaderModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChromeReaderModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChromeReaderModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Church" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChurchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChurchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChurchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ChurchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Circle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleNotifications" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleNotificationsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleNotificationsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleNotificationsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleNotificationsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Class" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClassOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClassRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClassSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClassTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleanHands" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleanHandsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleanHandsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleanHandsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleanHandsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleaningServices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleaningServicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleaningServicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleaningServicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CleaningServicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Clear" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClearTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Close" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseFullscreen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseFullscreenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseFullscreenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseFullscreenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseFullscreenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaption" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ClosedCaptionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cloud" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDownload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDownloadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDownloadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDownloadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudDownloadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudQueue" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudQueueOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudQueueRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudQueueSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudQueueTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudSync" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudSyncOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudSyncRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudSyncSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudSyncTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudUpload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudUploadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudUploadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudUploadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CloudUploadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Co2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Co2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Co2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Co2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Co2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoPresent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoPresentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoPresentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoPresentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoPresentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Code" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CodeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Coffee" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeMaker" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeMakerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeMakerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeMakerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeMakerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoffeeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Collections" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsBookmark" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsBookmarkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsBookmarkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsBookmarkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsBookmarkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CollectionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorLens" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorLensOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorLensRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorLensSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorLensTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Colorize" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorizeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorizeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorizeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ColorizeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Comment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentBank" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentBankOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentBankRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentBankSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentBankTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentsDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentsDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentsDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentsDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommentsDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Commit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Commute" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommuteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommuteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommuteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CommuteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Compare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareArrows" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareArrowsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareArrowsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareArrowsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareArrowsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompassCalibration" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompassCalibrationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompassCalibrationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompassCalibrationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompassCalibrationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Compress" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompressOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompressRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompressSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CompressTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Computer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ComputerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ComputerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ComputerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ComputerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConfirmationNumber" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConfirmationNumberOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConfirmationNumberRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConfirmationNumberSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConfirmationNumberTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectWithoutContact" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectWithoutContactOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectWithoutContactRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectWithoutContactSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectWithoutContactTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectedTv" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectedTvOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectedTvRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectedTvSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectedTvTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectingAirports" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectingAirportsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectingAirportsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectingAirportsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConnectingAirportsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Construction" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConstructionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConstructionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConstructionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ConstructionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactMail" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactMailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactMailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactMailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactMailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPhone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPhoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPhoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPhoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactPhoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactSupport" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactSupportOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactSupportRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactSupportSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactSupportTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Contactless" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactlessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactlessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactlessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactlessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Contacts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContactsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCopy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCopyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCopyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCopySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCopyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCut" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentCutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPaste" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteGo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteGoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteGoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteGoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteGoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteSearch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteSearchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteSearchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteSearchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteSearchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContentPasteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Contrast" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContrastOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContrastRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContrastSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ContrastTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlCamera" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlCameraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlCameraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlCameraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlCameraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPoint" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointDuplicate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointDuplicateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointDuplicateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointDuplicateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointDuplicateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ControlPointTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cookie" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CookieOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CookieRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CookieSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CookieTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Copyright" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyrightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyrightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyrightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CopyrightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Coronavirus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoronavirusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoronavirusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoronavirusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CoronavirusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CorporateFare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CorporateFareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CorporateFareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CorporateFareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CorporateFareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Cottage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CottageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CottageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CottageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CottageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Countertops" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CountertopsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CountertopsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CountertopsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CountertopsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Create" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateNewFolder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateNewFolderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateNewFolderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateNewFolderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateNewFolderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditCardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditScore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditScoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditScoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditScoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CreditScoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crib" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CribOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CribRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CribSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CribTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop169" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop169Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop169Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop169Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop169TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop32" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop32Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop32Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop32Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop32TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop54" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop54Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop54Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop54Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop54TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop75" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop75Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop75Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop75Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Crop75TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropDin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropDinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropDinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropDinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropDinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropFree" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropFreeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropFreeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropFreeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropFreeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropLandscape" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropLandscapeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropLandscapeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropLandscapeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropLandscapeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropOriginal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropOriginalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropOriginalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropOriginalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropOriginalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropPortrait" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropPortraitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropPortraitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropPortraitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropPortraitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropRotate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropRotateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropRotateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropRotateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropRotateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropSquare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropSquareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropSquareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropSquareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropSquareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CropTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Css" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CssOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CssRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CssSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CssTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyExchange" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyExchangeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyExchangeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyExchangeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyExchangeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyFranc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyFrancOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyFrancRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyFrancSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyFrancTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyLira" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyLiraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyLiraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyLiraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyLiraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyPound" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyPoundOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyPoundRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyPoundSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyPoundTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRuble" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRubleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRubleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRubleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRubleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRupee" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRupeeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRupeeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRupeeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyRupeeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYuan" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYuanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYuanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYuanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/CurrencyYuanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dangerous" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DangerousOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DangerousRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DangerousSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DangerousTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DarkMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DarkModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DarkModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DarkModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DarkModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dashboard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardCustomize" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardCustomizeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardCustomizeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardCustomizeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardCustomizeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DashboardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataArray" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataArrayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataArrayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataArraySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataArrayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataObject" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataObjectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataObjectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataObjectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataObjectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataSaverOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataThresholding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataThresholdingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataThresholdingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataThresholdingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataThresholdingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataUsage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataUsageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataUsageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataUsageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DataUsageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DateRange" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DateRangeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DateRangeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DateRangeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DateRangeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Deblur" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeblurOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeblurRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeblurSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeblurTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Deck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dehaze" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DehazeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DehazeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DehazeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DehazeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Delete" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteForever" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteForeverOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteForeverRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteForeverSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteForeverTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteSweep" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteSweepOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteSweepRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteSweepSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteSweepTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeleteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeliveryDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeliveryDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeliveryDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeliveryDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeliveryDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityLarge" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityLargeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityLargeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityLargeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityLargeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityMedium" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityMediumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityMediumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityMediumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensityMediumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensitySmall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensitySmallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensitySmallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensitySmallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DensitySmallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DepartureBoard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DepartureBoardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DepartureBoardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DepartureBoardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DepartureBoardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Description" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DescriptionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DescriptionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DescriptionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DescriptionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Deselect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeselectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeselectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeselectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeselectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesignServices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesignServicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesignServicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesignServicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesignServicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopAccessDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopAccessDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopAccessDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopAccessDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopAccessDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopMac" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopMacOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopMacRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopMacSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopMacTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopWindows" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopWindowsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopWindowsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopWindowsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DesktopWindowsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Details" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DetailsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DetailsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DetailsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DetailsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperBoardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeveloperModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceHub" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceHubOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceHubRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceHubSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceHubTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceThermostat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceThermostatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceThermostatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceThermostatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceThermostatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceUnknown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceUnknownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceUnknownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceUnknownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DeviceUnknownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Devices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesOther" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesOtherOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesOtherRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesOtherSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesOtherTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DevicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialerSip" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialerSipOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialerSipRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialerSipSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialerSipTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dialpad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialpadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialpadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialpadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DialpadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Diamond" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiamondOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiamondRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiamondSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiamondTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Difference" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DifferenceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DifferenceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DifferenceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DifferenceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DinnerDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DinnerDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DinnerDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DinnerDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DinnerDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Directions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBike" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBikeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBikeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBikeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBikeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBoatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsBusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsCarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailway" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRailwayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRun" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRunOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRunRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRunSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsRunTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubway" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsSubwayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTransitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsWalk" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsWalkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsWalkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsWalkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirectionsWalkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirtyLens" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirtyLensOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirtyLensRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirtyLensSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DirtyLensTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisabledByDefault" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisabledByDefaultOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisabledByDefaultRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisabledByDefaultSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisabledByDefaultTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiscFull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiscFullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiscFullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiscFullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DiscFullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisplaySettings" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisplaySettingsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisplaySettingsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisplaySettingsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DisplaySettingsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dns" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DnsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DnsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DnsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DnsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturb" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoDisturbTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturb" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnTotalSilence" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnTotalSilenceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnTotalSilenceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnTotalSilenceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnTotalSilenceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotDisturbTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotStep" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotStepOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotStepRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotStepSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotStepTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotTouch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotTouchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotTouchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotTouchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoNotTouchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DocumentScanner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DocumentScannerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DocumentScannerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DocumentScannerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DocumentScannerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Domain" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainVerification" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainVerificationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainVerificationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainVerificationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DomainVerificationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Done" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutLarge" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutLargeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutLargeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutLargeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutLargeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutSmall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutSmallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutSmallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutSmallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DonutSmallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorBack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorBackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorBackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorBackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorBackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorFront" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorFrontOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorFrontRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorFrontSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorFrontTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorSliding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorSlidingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorSlidingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorSlidingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorSlidingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Doorbell" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorbellOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorbellRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorbellSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoorbellTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoubleArrow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoubleArrowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoubleArrowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoubleArrowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DoubleArrowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownhillSkiing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownhillSkiingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownhillSkiingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownhillSkiingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownhillSkiingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Download" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadDone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadDoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadDoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadDoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadDoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadForOffline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadForOfflineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadForOfflineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadForOfflineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadForOfflineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Downloading" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DownloadingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Drafts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DraftsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DraftsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DraftsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DraftsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragHandle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragHandleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragHandleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragHandleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragHandleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragIndicator" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragIndicatorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragIndicatorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragIndicatorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DragIndicatorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveEta" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveEtaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveEtaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveEtaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveEtaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileMove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileMoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileMoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileMoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileMoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileRenameOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileRenameOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileRenameOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileRenameOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFileRenameOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFolderUpload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFolderUploadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFolderUploadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFolderUploadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DriveFolderUploadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dry" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryCleaning" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryCleaningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryCleaningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryCleaningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryCleaningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DrySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Duo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DuoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DuoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DuoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DuoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Dvr" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DvrOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DvrRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DvrSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DvrTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFeed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFeedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFeedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFeedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFeedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicForm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFormOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFormRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFormSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/DynamicFormTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Earbuds" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsBattery" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsBatteryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsBatteryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsBatterySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsBatteryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EarbudsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/East" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EastOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EastRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EastSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EastTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorHigh" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorHighOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorHighRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorHighSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorHighTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorLow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorLowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorLowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorLowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EdgesensorLowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Edit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditAttributes" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditAttributesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditAttributesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditAttributesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditAttributesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditLocationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditNotifications" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditNotificationsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditNotificationsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditNotificationsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditNotificationsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditRoad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditRoadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditRoadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditRoadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditRoadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EditTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Egg" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EggTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EighteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EighteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EighteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EighteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EighteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EightteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Eject" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EjectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EjectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EjectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EjectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Elderly" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyWoman" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyWomanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyWomanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyWomanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElderlyWomanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricBike" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricBikeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricBikeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricBikeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricBikeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricCar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricCarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricCarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricCarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricCarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricMoped" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricMopedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricMopedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricMopedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricMopedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricRickshaw" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricRickshawOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricRickshawRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricRickshawSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricRickshawTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricScooter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricScooterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricScooterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricScooterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricScooterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricalServices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricalServicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricalServicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricalServicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElectricalServicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Elevator" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevatorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevatorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevatorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevatorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ElevenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Email" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEmotions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEmotionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEmotionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEmotionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEmotionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEvents" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEventsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEventsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEventsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiEventsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFlags" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFlagsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFlagsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFlagsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFlagsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFoodBeverage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFoodBeverageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFoodBeverageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFoodBeverageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiFoodBeverageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiNature" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiNatureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiNatureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiNatureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiNatureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiObjects" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiObjectsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiObjectsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiObjectsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiObjectsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiPeople" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiPeopleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiPeopleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiPeopleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiPeopleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiSymbols" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiSymbolsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiSymbolsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiSymbolsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiSymbolsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiTransportation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiTransportationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiTransportationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiTransportationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EmojiTransportationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Engineering" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EngineeringOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EngineeringRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EngineeringSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EngineeringTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EnhancedEncryption" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EnhancedEncryptionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EnhancedEncryptionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EnhancedEncryptionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EnhancedEncryptionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Equalizer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EqualizerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EqualizerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EqualizerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EqualizerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Error" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ErrorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Escalator" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorWarning" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorWarningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorWarningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorWarningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EscalatorWarningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Euro" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroSymbol" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroSymbolOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroSymbolRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroSymbolSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroSymbolTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EuroTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EvStation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EvStationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EvStationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EvStationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EvStationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Event" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventAvailable" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventAvailableOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventAvailableRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventAvailableSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventAvailableTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventBusy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventBusyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventBusyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventBusySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventBusyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventNote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventNoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventNoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventNoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventNoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventRepeat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventRepeatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventRepeatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventRepeatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventRepeatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventSeat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventSeatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventSeatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventSeatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventSeatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/EventTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExitToApp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExitToAppOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExitToAppRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExitToAppSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExitToAppTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Expand" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandCircleDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandCircleDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandCircleDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandCircleDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandCircleDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandLess" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandLessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandLessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandLessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandLessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandMore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandMoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandMoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandMoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandMoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExpandTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Explicit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExplicitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExplicitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExplicitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExplicitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Explore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExploreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Exposure" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExposureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExposureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExposureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExposureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Extension" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ExtensionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Face" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingNatural" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingNaturalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingNaturalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingNaturalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingNaturalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRetouchingOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Facebook" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FacebookOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FacebookRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FacebookSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FacebookTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactCheck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactCheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactCheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactCheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactCheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Factory" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FactoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FamilyRestroom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FamilyRestroomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FamilyRestroomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FamilyRestroomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FamilyRestroomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastForward" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastForwardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastForwardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastForwardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastForwardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastRewind" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastRewindOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastRewindRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastRewindSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastRewindTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fastfood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastfoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastfoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastfoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FastfoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Favorite" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteBorder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteBorderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteBorderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteBorderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteBorderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FavoriteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fax" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FaxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedPlayList" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedPlayListOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedPlayListRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedPlayListSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedPlayListTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedVideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedVideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedVideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedVideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeaturedVideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Feed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Feedback" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedbackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedbackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedbackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FeedbackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Female" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FemaleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FemaleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FemaleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FemaleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fence" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FenceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FenceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FenceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FenceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Festival" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FestivalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FestivalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FestivalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FestivalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberDvr" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberDvrOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberDvrRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberDvrSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberDvrTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberManualRecord" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberManualRecordOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberManualRecordRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberManualRecordSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberManualRecordTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberNew" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberNewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberNewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberNewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberNewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberPin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberPinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberPinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberPinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberPinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberSmartRecord" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberSmartRecordOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberSmartRecordRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberSmartRecordSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiberSmartRecordTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FifteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FifteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FifteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FifteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FifteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileCopy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileCopyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileCopyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileCopySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileCopyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadDone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadDoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadDoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadDoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadDoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileDownloadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileOpen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileOpenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileOpenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileOpenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileOpenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilePresent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilePresentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilePresentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilePresentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilePresentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileUpload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileUploadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileUploadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileUploadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FileUploadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter1" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter1Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter1Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter1Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter1TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter3" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter3Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter3Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter3Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter3TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter4" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter4Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter4Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter4Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter4TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter5" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter5Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter5Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter5Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter5TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter6" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter6Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter6Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter6Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter6TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter7" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter7Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter7Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter7Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter7TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter8" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter8Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter8Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter8Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter8TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9Plus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9PlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9PlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9PlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9PlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Filter9TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterBAndW" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterBAndWOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterBAndWRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterBAndWSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterBAndWTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterCenterFocus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterCenterFocusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterCenterFocusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterCenterFocusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterCenterFocusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterDrama" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterDramaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterDramaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterDramaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterDramaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterFrames" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterFramesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterFramesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterFramesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterFramesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterHdr" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterHdrOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterHdrRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterHdrSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterHdrTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterList" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterListTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterNone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterNoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterNoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterNoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterNoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterTiltShift" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterTiltShiftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterTiltShiftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterTiltShiftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterTiltShiftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterVintage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterVintageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterVintageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterVintageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FilterVintageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindInPage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindInPageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindInPageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindInPageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindInPageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindReplace" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindReplaceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindReplaceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindReplaceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FindReplaceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fingerprint" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FingerprintOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FingerprintRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FingerprintSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FingerprintTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireExtinguisher" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireExtinguisherOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireExtinguisherRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireExtinguisherSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireExtinguisherTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fireplace" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireplaceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireplaceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireplaceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FireplaceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FirstPage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FirstPageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FirstPageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FirstPageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FirstPageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitScreen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitScreenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitScreenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitScreenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitScreenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fitbit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitbitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitbitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitbitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitbitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitnessCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitnessCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitnessCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitnessCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FitnessCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveG" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveGOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveGRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveGSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveGTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FiveMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FivteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FivteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FivteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FivteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FivteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flag" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlagTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flaky" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlakyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlakyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlakySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlakyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashAuto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashAutoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashAutoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashAutoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashAutoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlashlightOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flatware" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlatwareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlatwareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlatwareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlatwareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightClass" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightClassOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightClassRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightClassSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightClassTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightLand" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightLandOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightLandRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightLandSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightLandTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightTakeoff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightTakeoffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightTakeoffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightTakeoffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightTakeoffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flip" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraAndroid" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraAndroidOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraAndroidRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraAndroidSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraAndroidTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraIos" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraIosOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraIosRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraIosSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipCameraIosTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToBack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToBackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToBackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToBackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToBackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToFront" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToFrontOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToFrontRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToFrontSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipToFrontTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlipTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Flourescent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlourescentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlourescentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlourescentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlourescentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlutterDash" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlutterDashOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlutterDashRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlutterDashSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FlutterDashTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdBad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdBadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdBadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdBadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdBadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdGood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdGoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdGoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdGoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FmdGoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Folder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderDelete" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderDeleteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderDeleteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderDeleteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderDeleteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOpen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOpenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOpenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOpenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOpenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderShared" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSharedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSharedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSharedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSharedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSpecial" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSpecialOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSpecialRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSpecialSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderSpecialTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderZip" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderZipOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderZipRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderZipSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FolderZipTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FollowTheSigns" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FollowTheSignsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FollowTheSignsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FollowTheSignsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FollowTheSignsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FontDownloadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoodBank" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoodBankOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoodBankRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoodBankSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoodBankTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forest" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForestOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForestRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForestSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForestTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForkRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignJustify" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignJustifyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignJustifyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignJustifySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignJustifyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatAlignRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatBold" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatBoldOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatBoldRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatBoldSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatBoldTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatClear" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatClearOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatClearRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatClearSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatClearTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorFill" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorFillOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorFillRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorFillSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorFillTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorReset" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorResetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorResetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorResetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorResetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorText" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorTextOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorTextRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorTextSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatColorTextTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentDecrease" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentDecreaseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentDecreaseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentDecreaseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentDecreaseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentIncrease" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentIncreaseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentIncreaseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentIncreaseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatIndentIncreaseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatItalic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatItalicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatItalicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatItalicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatItalicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatLineSpacing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatLineSpacingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatLineSpacingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatLineSpacingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatLineSpacingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListBulleted" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListBulletedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListBulletedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListBulletedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListBulletedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumbered" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedRtl" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedRtlOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedRtlRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedRtlSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedRtlTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatListNumberedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatOverline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatOverlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatOverlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatOverlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatOverlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatPaint" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatPaintOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatPaintRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatPaintSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatPaintTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatQuote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatQuoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatQuoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatQuoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatQuoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatShapes" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatShapesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatShapesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatShapesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatShapesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatSize" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatSizeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatSizeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatSizeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatSizeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatStrikethrough" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatStrikethroughOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatStrikethroughRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatStrikethroughSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatStrikethroughTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionLToR" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionLToROutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionLToRRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionLToRSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionLToRTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionRToL" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionRToLOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionRToLRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionRToLSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatTextdirectionRToLTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatUnderlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatUnderlinedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatUnderlinedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatUnderlinedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FormatUnderlinedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fort" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FortOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FortRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FortSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FortTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forum" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward10" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward10Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward10Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward10Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward10TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward30" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward30Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward30Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward30Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward30TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward5" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward5Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward5Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward5Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Forward5TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardToInbox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardToInboxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardToInboxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardToInboxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardToInboxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ForwardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Foundation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoundationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoundationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoundationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FoundationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGPlusMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGPlusMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGPlusMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGPlusMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourGPlusMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FourteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FreeBreakfast" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FreeBreakfastOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FreeBreakfastRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FreeBreakfastSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FreeBreakfastTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Fullscreen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenExit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenExitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenExitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenExitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenExitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FullscreenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Functions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FunctionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FunctionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FunctionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/FunctionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GTranslate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GTranslateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GTranslateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GTranslateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GTranslateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Gamepad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamepadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamepadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamepadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamepadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Games" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GamesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Garage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GarageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GarageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GarageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GarageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Gavel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GavelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GavelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GavelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GavelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Gesture" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GestureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GestureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GestureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GestureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GetApp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GetAppOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GetAppRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GetAppSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GetAppTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Gif" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifBox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifBoxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifBoxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifBoxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifBoxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GifTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Girl" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GirlOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GirlRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GirlSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GirlTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GitHub" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Gite" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GiteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GiteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GiteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GiteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GolfCourse" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GolfCourseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GolfCourseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GolfCourseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GolfCourseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Google" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppBad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppBadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppBadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppBadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppBadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppGood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppGoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppGoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppGoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppGoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppMaybe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppMaybeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppMaybeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppMaybeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GppMaybeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsFixed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsFixedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsFixedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsFixedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsFixedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsNotFixed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsNotFixedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsNotFixedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsNotFixedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsNotFixedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GpsOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grade" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Gradient" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradientOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradientRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradientSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradientTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grading" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GradingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grain" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrainOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrainRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrainSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrainTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GraphicEq" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GraphicEqOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GraphicEqRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GraphicEqSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GraphicEqTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grass" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrassOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrassRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrassSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GrassTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid3x3" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid3x3Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid3x3Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid3x3Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid3x3TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid4x4" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid4x4Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid4x4Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid4x4Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Grid4x4TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridGoldenratio" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridGoldenratioOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridGoldenratioRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridGoldenratioSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridGoldenratioTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridView" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridViewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridViewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridViewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GridViewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Group" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupRemove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupRemoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupRemoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupRemoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupRemoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupWork" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupWorkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupWorkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupWorkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupWorkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Groups" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/GroupsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HPlusMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HPlusMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HPlusMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HPlusMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HPlusMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hail" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Handyman" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HandymanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HandymanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HandymanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HandymanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hardware" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HardwareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HardwareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HardwareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HardwareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAuto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrAutoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrEnhancedSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrEnhancedSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrEnhancedSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrEnhancedSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrEnhancedSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrStrong" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrStrongOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrStrongRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrStrongSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrStrongTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrWeak" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrWeakOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrWeakRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrWeakSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HdrWeakTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Headphones" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesBattery" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesBatteryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesBatteryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesBatterySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesBatteryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadphonesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Headset" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetMic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetMicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetMicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetMicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetMicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeadsetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Healing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealthAndSafety" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealthAndSafetyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealthAndSafetyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealthAndSafetySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HealthAndSafetyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hearing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HearingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeartBroken" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeartBrokenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeartBrokenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeartBrokenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeartBrokenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Height" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HeightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Help" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HelpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hevc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HevcOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HevcRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HevcSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HevcTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hexagon" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HexagonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HexagonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HexagonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HexagonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideImage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideImageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideImageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideImageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideImageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideSource" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideSourceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideSourceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideSourceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HideSourceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighQuality" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighQualityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighQualityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighQualitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighQualityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Highlight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HighlightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hiking" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HikingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HikingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HikingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HikingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/History" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryEdu" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryEduOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryEduRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryEduSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryEduTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryToggleOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryToggleOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryToggleOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryToggleOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryToggleOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HistoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hls" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HlsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HolidayVillage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HolidayVillageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HolidayVillageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HolidayVillageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HolidayVillageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Home" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMax" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMaxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMaxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMaxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMaxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMini" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMiniOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMiniRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMiniSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeMiniTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeRepairService" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeRepairServiceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeRepairServiceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeRepairServiceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeRepairServiceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeWork" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeWorkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeWorkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeWorkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HomeWorkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalRule" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalRuleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalRuleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalRuleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalRuleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalSplit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalSplitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalSplitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalSplitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HorizontalSplitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotTub" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotTubOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotTubRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotTubSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotTubTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hotel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HotelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassBottom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassBottomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassBottomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassBottomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassBottomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassEmpty" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassEmptyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassEmptyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassEmptySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassEmptyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassFull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassFullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassFullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassFullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassFullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassTop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassTopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassTopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassTopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HourglassTopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/House" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseSiding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseSidingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseSidingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseSidingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseSidingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Houseboat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseboatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseboatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseboatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HouseboatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToReg" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToRegOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToRegRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToRegSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToRegTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToVote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToVoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToVoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToVoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HowToVoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Html" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HtmlOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HtmlRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HtmlSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HtmlTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Http" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Https" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HttpsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hub" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HubOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HubRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HubSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HubTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Hvac" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HvacOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HvacRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HvacSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/HvacTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IceSkating" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IceSkatingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IceSkatingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IceSkatingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IceSkatingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Icecream" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IcecreamOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IcecreamRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IcecreamSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IcecreamTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Image" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageAspectRatio" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageAspectRatioOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageAspectRatioRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageAspectRatioSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageAspectRatioTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageNotSupported" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageNotSupportedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageNotSupportedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageNotSupportedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageNotSupportedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageSearch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageSearchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageSearchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageSearchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageSearchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImagesearchRoller" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImagesearchRollerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImagesearchRollerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImagesearchRollerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImagesearchRollerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportContacts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportContactsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportContactsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportContactsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportContactsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportExport" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportExportOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportExportRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportExportSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportExportTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportantDevices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportantDevicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportantDevicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportantDevicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ImportantDevicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inbox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InboxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InboxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InboxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InboxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IndeterminateCheckBox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IndeterminateCheckBoxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IndeterminateCheckBoxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IndeterminateCheckBoxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IndeterminateCheckBoxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Info" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InfoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InfoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InfoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InfoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Input" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InputOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InputRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InputSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InputTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartOutlinedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartOutlinedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartOutlinedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartOutlinedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertComment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertCommentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertCommentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertCommentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertCommentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertDriveFile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertDriveFileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertDriveFileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertDriveFileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertDriveFileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertEmoticon" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertEmoticonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertEmoticonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertEmoticonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertEmoticonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertInvitation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertInvitationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertInvitationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertInvitationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertInvitationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertLink" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertLinkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertLinkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertLinkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertLinkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPageBreak" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPageBreakOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPageBreakRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPageBreakSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPageBreakTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPhoto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPhotoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPhotoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPhotoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsertPhotoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Insights" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsightsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsightsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsightsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InsightsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Instagram" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallDesktop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallDesktopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallDesktopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallDesktopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallDesktopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallMobile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallMobileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallMobileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallMobileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InstallMobileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IntegrationInstructions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IntegrationInstructionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IntegrationInstructionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IntegrationInstructionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IntegrationInstructionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Interests" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterestsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterestsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterestsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterestsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterpreterMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterpreterModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterpreterModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterpreterModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InterpreterModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inventory" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inventory2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inventory2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inventory2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inventory2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Inventory2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InventoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InventoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InventorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InventoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColors" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/InvertColorsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IosShare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IosShareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IosShareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IosShareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IosShareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Iron" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IronOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IronRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IronSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IronTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Iso" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IsoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IsoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IsoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/IsoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Javascript" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JavascriptOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JavascriptRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JavascriptSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JavascriptTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinFull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinFullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinFullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinFullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinFullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinInner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinInnerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinInnerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinInnerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinInnerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/JoinRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Kayaking" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KayakingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KayakingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KayakingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KayakingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KebabDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KebabDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KebabDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KebabDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KebabDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Key" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Keyboard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardArrowUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardBackspace" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardBackspaceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardBackspaceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardBackspaceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardBackspaceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCapslock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCapslockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCapslockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCapslockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCapslockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCommandKey" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCommandKeyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCommandKeyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCommandKeySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardCommandKeyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardControlKey" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardControlKeyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardControlKeyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardControlKeySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardControlKeyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardDoubleArrowUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardHide" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardHideOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardHideRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardHideSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardHideTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardOptionKey" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardOptionKeyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardOptionKeyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardOptionKeySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardOptionKeyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardReturn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardReturnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardReturnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardReturnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardReturnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardTab" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardTabOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardTabRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardTabSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardTabTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardVoice" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardVoiceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardVoiceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardVoiceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KeyboardVoiceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KingBed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KingBedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KingBedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KingBedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KingBedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Kitchen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitchenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitchenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitchenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitchenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Kitesurfing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitesurfingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitesurfingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitesurfingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/KitesurfingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Label" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelImportant" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelImportantOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelImportantRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelImportantSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelImportantTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LabelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Lan" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Landscape" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LandscapeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LandscapeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LandscapeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LandscapeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Language" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanguageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanguageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanguageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LanguageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Laptop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopChromebook" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopChromebookOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopChromebookRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopChromebookSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopChromebookTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopMac" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopMacOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopMacRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopMacSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopMacTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopWindows" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopWindowsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopWindowsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopWindowsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaptopWindowsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LastPage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LastPageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LastPageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LastPageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LastPageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Launch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaunchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaunchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaunchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LaunchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Layers" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersClear" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersClearOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersClearRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersClearSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersClearTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LayersTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Leaderboard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeaderboardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeaderboardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeaderboardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeaderboardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakRemove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakRemoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakRemoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakRemoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LeakRemoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LegendToggle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LegendToggleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LegendToggleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LegendToggleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LegendToggleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Lens" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensBlur" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensBlurOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensBlurRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensBlurSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensBlurTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LensTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddCheck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddCheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddCheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddCheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddCheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryBooks" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryBooksOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryBooksRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryBooksSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryBooksTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryMusic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryMusicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryMusicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryMusicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LibraryMusicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Light" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Lightbulb" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightbulbOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightbulbRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightbulbSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LightbulbTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineAxis" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineAxisOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineAxisRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineAxisSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineAxisTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineStyle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineStyleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineStyleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineStyleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineStyleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineWeight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineWeightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineWeightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineWeightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LineWeightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinearScale" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinearScaleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinearScaleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinearScaleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinearScaleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Link" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkedCamera" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkedCameraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkedCameraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkedCameraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkedCameraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LinkedIn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Liquor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiquorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiquorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiquorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiquorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/List" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ListTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveHelp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveHelpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveHelpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveHelpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveHelpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveTv" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveTvOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveTvRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveTvSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LiveTvTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Living" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LivingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LivingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LivingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LivingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalActivity" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalActivityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalActivityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalActivitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalActivityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAirport" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAirportOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAirportRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAirportSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAirportTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAtm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAtmOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAtmRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAtmSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalAtmTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalBar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalBarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalBarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalBarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalBarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCafe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCafeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCafeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCafeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCafeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCarWash" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCarWashOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCarWashRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCarWashSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalCarWashTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalConvenienceStore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalConvenienceStoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalConvenienceStoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalConvenienceStoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalConvenienceStoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDrink" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDrinkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDrinkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDrinkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalDrinkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFireDepartment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFireDepartmentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFireDepartmentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFireDepartmentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFireDepartmentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFlorist" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFloristOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFloristRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFloristSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalFloristTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGasStation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGasStationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGasStationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGasStationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGasStationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGroceryStore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGroceryStoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGroceryStoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGroceryStoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalGroceryStoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHospital" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHospitalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHospitalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHospitalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHospitalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHotel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHotelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHotelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHotelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalHotelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLaundryService" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLaundryServiceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLaundryServiceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLaundryServiceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLaundryServiceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLibrary" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLibraryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLibraryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLibrarySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalLibraryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMovies" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMoviesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMoviesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMoviesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalMoviesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalOffer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalOfferOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalOfferRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalOfferSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalOfferTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalParking" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalParkingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalParkingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalParkingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalParkingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPharmacy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPharmacyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPharmacyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPharmacySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPharmacyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPhone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPhoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPhoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPhoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPhoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPizza" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPizzaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPizzaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPizzaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPizzaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPlay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPlayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPlayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPlaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPlayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPolice" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPoliceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPoliceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPoliceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPoliceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPostOffice" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPostOfficeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPostOfficeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPostOfficeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPostOfficeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPrintshop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPrintshopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPrintshopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPrintshopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalPrintshopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalSee" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalSeeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalSeeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalSeeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalSeeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalShipping" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalShippingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalShippingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalShippingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalShippingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalTaxi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalTaxiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalTaxiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalTaxiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocalTaxiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationCity" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationCityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationCityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationCitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationCityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationSearching" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationSearchingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationSearchingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationSearchingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LocationSearchingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Lock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockClock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockClockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockClockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockClockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockClockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockOpen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockOpenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockOpenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockOpenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockOpenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockReset" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockResetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockResetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockResetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockResetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Login" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoginOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoginRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoginSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoginTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoDev" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoDevOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoDevRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoDevSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoDevTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Logout" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LogoutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks3" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks3Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks3Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks3Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks3TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks4" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks4Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks4Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks4Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks4TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks5" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks5Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks5Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks5Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks5TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks6" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks6Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks6Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks6Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Looks6TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksOne" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksOneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksOneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksOneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksOneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksTwo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksTwoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksTwoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksTwoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LooksTwoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Loop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Loupe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoupeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoupeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoupeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoupeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LowPriority" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LowPriorityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LowPriorityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LowPrioritySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LowPriorityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Loyalty" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoyaltyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoyaltyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoyaltySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LoyaltyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LteMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LteMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LteMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LteMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LteMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LtePlusMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LtePlusMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LtePlusMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LtePlusMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LtePlusMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Luggage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LuggageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LuggageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LuggageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LuggageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LunchDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LunchDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LunchDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LunchDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/LunchDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mail" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Male" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Man" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageAccounts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageAccountsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageAccountsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageAccountsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageAccountsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageSearch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageSearchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageSearchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageSearchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ManageSearchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Map" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsHomeWork" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsHomeWorkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsHomeWorkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsHomeWorkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsHomeWorkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsUgc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsUgcOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsUgcRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsUgcSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MapsUgcTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Margin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarginOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarginRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarginSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarginTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkAsUnread" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkAsUnreadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkAsUnreadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkAsUnreadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkAsUnreadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatRead" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatReadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatReadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatReadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatReadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatUnread" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatUnreadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatUnreadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatUnreadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkChatUnreadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailRead" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailReadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailReadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailReadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailReadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailUnread" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailUnreadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailUnreadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailUnreadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkEmailUnreadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkUnreadChatAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkUnreadChatAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkUnreadChatAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkUnreadChatAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkUnreadChatAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Markunread" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadMailbox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadMailboxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadMailboxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadMailboxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadMailboxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MarkunreadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Masks" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MasksOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MasksRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MasksSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MasksTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Maximize" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaximizeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaximizeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaximizeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MaximizeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediaBluetoothOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mediation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MediationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicalServices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicalServicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicalServicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicalServicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicalServicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Medication" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationLiquid" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationLiquidOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationLiquidRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationLiquidSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationLiquidTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MedicationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MeetingRoom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MeetingRoomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MeetingRoomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MeetingRoomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MeetingRoomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Memory" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MemoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MemoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MemorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MemoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Menu" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuBook" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuBookOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuBookRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuBookSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuBookTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuOpen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuOpenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuOpenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuOpenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuOpenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MenuTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Merge" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeType" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeTypeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeTypeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeTypeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MergeTypeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Message" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MessageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MessageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MessageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MessageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicExternalOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicNone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicNoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicNoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicNoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicNoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Microwave" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicrowaveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicrowaveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicrowaveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MicrowaveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MilitaryTech" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MilitaryTechOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MilitaryTechRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MilitaryTechSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MilitaryTechTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Minimize" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MinimizeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MinimizeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MinimizeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MinimizeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MiscellaneousServices" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MiscellaneousServicesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MiscellaneousServicesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MiscellaneousServicesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MiscellaneousServicesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MissedVideoCall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MissedVideoCallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MissedVideoCallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MissedVideoCallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MissedVideoCallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mms" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MmsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MmsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MmsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MmsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileFriendly" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileFriendlyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileFriendlyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileFriendlySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileFriendlyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileScreenShare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileScreenShareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileScreenShareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileScreenShareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobileScreenShareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobiledataOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobiledataOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobiledataOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobiledataOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MobiledataOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeComment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeCommentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeCommentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeCommentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeCommentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEdit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeEditTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeNight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeNightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeNightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeNightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeNightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeOfTravel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeOfTravelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeOfTravelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeOfTravelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeOfTravelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeStandby" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeStandbyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeStandbyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeStandbySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeStandbyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModelTraining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModelTrainingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModelTrainingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModelTrainingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ModelTrainingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonetizationOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonetizationOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonetizationOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonetizationOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonetizationOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Money" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffCsred" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffCsredOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffCsredRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffCsredSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffCsredTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoneyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Monitor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorHeart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorHeartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorHeartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorHeartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorHeartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorWeight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorWeightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorWeightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorWeightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonitorWeightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonochromePhotos" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonochromePhotosOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonochromePhotosRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonochromePhotosSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MonochromePhotosTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodBad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodBadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodBadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodBadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodBadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Moped" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MopedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MopedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MopedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MopedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/More" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreHoriz" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreHorizOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreHorizRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreHorizSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreHorizTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreTime" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreTimeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreTimeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreTimeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreTimeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreVert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreVertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreVertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreVertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoreVertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mosque" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MosqueOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MosqueRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MosqueSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MosqueTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosAuto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosAutoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosAutoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosAutoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosAutoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MotionPhotosOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mouse" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MouseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MouseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MouseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MouseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveToInbox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveToInboxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveToInboxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveToInboxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveToInboxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MoveUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Movie" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieCreation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieCreationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieCreationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieCreationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieCreationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieFilter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieFilterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieFilterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieFilterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieFilterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovieTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Moving" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MovingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Mp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultilineChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultilineChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultilineChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultilineChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultilineChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultipleStop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultipleStopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultipleStopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultipleStopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MultipleStopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Museum" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MuseumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MuseumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MuseumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MuseumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicNote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicNoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicNoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicNoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicNoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicVideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicVideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicVideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicVideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MusicVideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MyLocation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MyLocationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MyLocationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MyLocationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/MyLocationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Nat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Nature" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NaturePeople" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NaturePeopleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NaturePeopleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NaturePeopleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NaturePeopleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NatureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateBefore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateBeforeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateBeforeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateBeforeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateBeforeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateNext" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateNextOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateNextRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateNextSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigateNextTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Navigation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NavigationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearMeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyError" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyErrorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyErrorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyErrorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyErrorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NearbyOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCell" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCellOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCellRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCellSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCellTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCheck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkCheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkLocked" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkLockedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkLockedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkLockedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkLockedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkWifi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkWifiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkWifiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkWifiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NetworkWifiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewReleases" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewReleasesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewReleasesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewReleasesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewReleasesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Newspaper" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewspaperOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewspaperRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewspaperSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NewspaperTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextPlan" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextPlanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextPlanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextPlanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextPlanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextWeek" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextWeekOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextWeekRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextWeekSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NextWeekTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Nfc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NfcOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NfcRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NfcSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NfcTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightShelter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightShelterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightShelterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightShelterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightShelterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Nightlife" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlifeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlifeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlifeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlifeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Nightlight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightRound" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightRoundOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightRoundRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightRoundSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightRoundTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightlightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightsStay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightsStayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightsStayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightsStaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NightsStayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NineteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoAccounts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoAccountsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoAccountsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoAccountsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoAccountsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoBackpack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoBackpackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoBackpackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoBackpackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoBackpackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoCell" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoCellOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoCellRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoCellSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoCellTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoDrinks" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoDrinksOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoDrinksRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoDrinksSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoDrinksTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryption" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionGmailerrorred" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionGmailerrorredOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionGmailerrorredRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionGmailerrorredSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionGmailerrorredTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoEncryptionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFlash" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFlashOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFlashRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFlashSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFlashTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoFoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoLuggage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoLuggageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoLuggageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoLuggageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoLuggageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMeals" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMealsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMealsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMealsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMealsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMeetingRoom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMeetingRoomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMeetingRoomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMeetingRoomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoMeetingRoomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoPhotography" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoPhotographyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoPhotographyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoPhotographySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoPhotographyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoSim" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoSimOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoSimRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoSimSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoSimTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoStroller" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoStrollerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoStrollerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoStrollerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoStrollerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoTransfer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoTransferOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoTransferRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoTransferSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoTransferTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NordicWalking" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NordicWalkingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NordicWalkingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NordicWalkingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NordicWalkingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/North" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthEast" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthEastOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthEastRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthEastSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthEastTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthWest" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthWestOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthWestRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthWestSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NorthWestTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotAccessible" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotAccessibleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotAccessibleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotAccessibleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotAccessibleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotInterested" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotInterestedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotInterestedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotInterestedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotInterestedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotListedLocation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotListedLocationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotListedLocationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotListedLocationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotListedLocationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotStarted" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotStartedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotStartedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotStartedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotStartedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Note" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Notes" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationImportant" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationImportantOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationImportantRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationImportantSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationImportantTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Notifications" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsActive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsActiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsActiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsActiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsActiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsNone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsNoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsNoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsNoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsNoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsPaused" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsPausedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsPausedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsPausedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsPausedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NotificationsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Numbers" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NumbersOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NumbersRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NumbersSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/NumbersTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineBolt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineBoltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineBoltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineBoltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineBoltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflinePin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflinePinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflinePinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflinePinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflinePinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineShare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineShareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineShareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineShareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OfflineShareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OndemandVideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OndemandVideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OndemandVideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OndemandVideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OndemandVideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKk" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OneKkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OnlinePrediction" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OnlinePredictionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OnlinePredictionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OnlinePredictionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OnlinePredictionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Opacity" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpacityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpacityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpacitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpacityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInBrowser" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInBrowserOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInBrowserRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInBrowserSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInBrowserTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInFull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInFullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInFullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInFullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInFullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNew" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenInNewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenWith" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenWithOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenWithRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenWithSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OpenWithTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OtherHouses" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OtherHousesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OtherHousesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OtherHousesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OtherHousesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Outbound" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboundOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboundRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboundSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboundTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Outbox" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboxOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboxRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboxSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutboxTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutdoorGrill" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutdoorGrillOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutdoorGrillRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutdoorGrillSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutdoorGrillTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Outlet" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutletOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutletRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutletSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutletTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutlinedFlag" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutlinedFlagOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutlinedFlagRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutlinedFlagSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/OutlinedFlagTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Padding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaddingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaddingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaddingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaddingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pages" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PagesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PagesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PagesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PagesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pageview" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PageviewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PageviewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PageviewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PageviewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Paid" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaidOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaidRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaidSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaidTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Palette" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaletteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaletteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaletteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaletteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanTool" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanToolTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Panorama" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaFishEye" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaFishEyeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaFishEyeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaFishEyeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaFishEyeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaHorizontalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphere" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaPhotosphereTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVertical" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaVerticalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PanoramaWideAngleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Paragliding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParaglidingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParaglidingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParaglidingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParaglidingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Park" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ParkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PartyMode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PartyModeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PartyModeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PartyModeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PartyModeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Password" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PasswordOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PasswordRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PasswordSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PasswordTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pattern" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PatternOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PatternRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PatternSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PatternTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pause" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PausePresentation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PausePresentationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PausePresentationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PausePresentationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PausePresentationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PauseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Payment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Payments" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PaymentsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PedalBike" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PedalBikeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PedalBikeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PedalBikeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PedalBikeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pending" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingActions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingActionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingActionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingActionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingActionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PendingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pentagon" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PentagonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PentagonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PentagonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PentagonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/People" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PeopleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Percent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PercentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PercentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PercentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PercentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermCameraMic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermCameraMicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermCameraMicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermCameraMicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermCameraMicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermContactCalendar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermContactCalendarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermContactCalendarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermContactCalendarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermContactCalendarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDataSetting" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDataSettingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDataSettingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDataSettingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDataSettingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDeviceInformation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDeviceInformationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDeviceInformationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDeviceInformationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermDeviceInformationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermIdentity" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermIdentityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermIdentityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermIdentitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermIdentityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermMedia" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermMediaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermMediaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermMediaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermMediaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermPhoneMsg" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermPhoneMsgOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermPhoneMsgRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermPhoneMsgSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermPhoneMsgTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermScanWifi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermScanWifiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermScanWifiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermScanWifiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PermScanWifiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Person" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAlt1" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAlt1Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAlt1Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAlt1Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAlt1TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonPinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveAlt1" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveAlt1Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveAlt1Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveAlt1Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveAlt1TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRemoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonSearch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonSearchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonSearchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonSearchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonSearchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonalVideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonalVideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonalVideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonalVideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PersonalVideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControl" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlRodent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlRodentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlRodentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlRodentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlRodentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PestControlTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pets" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PetsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PetsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PetsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PetsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Phishing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhishingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhishingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhishingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhishingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Phone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneAndroid" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneAndroidOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneAndroidRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneAndroidSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneAndroidTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneBluetoothSpeaker" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneBluetoothSpeakerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneBluetoothSpeakerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneBluetoothSpeakerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneBluetoothSpeakerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneCallback" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneCallbackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneCallbackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneCallbackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneCallbackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneEnabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneEnabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneEnabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneEnabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneEnabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneForwarded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneForwardedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneForwardedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneForwardedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneForwardedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneInTalk" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneInTalkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneInTalkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneInTalkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneInTalkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneIphone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneIphoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneIphoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneIphoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneIphoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneLocked" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneLockedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneLockedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneLockedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneLockedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneMissed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneMissedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneMissedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneMissedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneMissedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonePaused" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonePausedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonePausedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonePausedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonePausedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Phonelink" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkErase" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkEraseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkEraseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkEraseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkEraseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkRing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkRingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkRingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkRingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkRingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkSetup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkSetupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkSetupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkSetupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkSetupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhonelinkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Photo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoAlbum" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoAlbumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoAlbumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoAlbumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoAlbumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCamera" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraBack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraBackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraBackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraBackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraBackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraFront" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraFrontOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraFrontRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraFrontSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraFrontTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoCameraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoFilter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoFilterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoFilterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoFilterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoFilterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoLibrary" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoLibraryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoLibraryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoLibrarySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoLibraryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectActual" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectActualOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectActualRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectActualSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectActualTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectLarge" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectLargeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectLargeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectLargeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectLargeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectSmall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectSmallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectSmallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectSmallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoSizeSelectSmallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhotoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Php" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PhpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Piano" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PianoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureAsPdf" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureAsPdfOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureAsPdfRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureAsPdfSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureAsPdfTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPicture" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PictureInPictureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PieChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinDrop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinDropOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinDropRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinDropSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinDropTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pinch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PinchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pinterest" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PivotTableChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PivotTableChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PivotTableChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PivotTableChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PivotTableChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pix" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PixOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PixRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PixSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PixTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Place" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Plagiarism" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlagiarismOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlagiarismRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlagiarismSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlagiarismTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayArrow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayArrowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayArrowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayArrowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayArrowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledWhite" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledWhiteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledWhiteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledWhiteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleFilledWhiteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayForWork" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayForWorkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayForWorkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayForWorkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayForWorkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayLesson" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayLessonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayLessonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayLessonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlayLessonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistPlay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistPlayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistPlayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistPlaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistPlayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistRemove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistRemoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistRemoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistRemoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlaylistRemoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Plumbing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlumbingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlumbingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlumbingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlumbingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlusOne" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlusOneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlusOneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlusOneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PlusOneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Podcasts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PodcastsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PodcastsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PodcastsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PodcastsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PointOfSale" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PointOfSaleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PointOfSaleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PointOfSaleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PointOfSaleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Policy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolicyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolicyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolicySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolicyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Poll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PollOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PollRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PollSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PollTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Polyline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolylineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolylineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolylineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PolylineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Pool" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PoolOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PoolRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PoolSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PoolTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortableWifiOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortableWifiOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortableWifiOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortableWifiOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortableWifiOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Portrait" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortraitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortraitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortraitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PortraitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PostAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PostAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PostAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PostAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PostAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Power" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerInput" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerInputOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerInputRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerInputSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerInputTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerSettingsNew" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerSettingsNewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerSettingsNewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerSettingsNewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerSettingsNewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PowerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrecisionManufacturing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrecisionManufacturingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrecisionManufacturingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrecisionManufacturingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrecisionManufacturingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PregnantWoman" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PregnantWomanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PregnantWomanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PregnantWomanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PregnantWomanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PresentToAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PresentToAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PresentToAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PresentToAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PresentToAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Preview" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PreviewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PreviewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PreviewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PreviewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceChange" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceChangeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceChangeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceChangeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceChangeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceCheck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceCheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceCheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceCheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriceCheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Print" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrintTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriorityHigh" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriorityHighOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriorityHighRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriorityHighSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PriorityHighTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrivacyTip" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrivacyTipOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrivacyTipRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrivacyTipSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PrivacyTipTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ProductionQuantityLimits" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ProductionQuantityLimitsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ProductionQuantityLimitsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ProductionQuantityLimitsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ProductionQuantityLimitsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Psychology" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PsychologyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PsychologyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PsychologySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PsychologyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Public" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Publish" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishedWithChanges" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishedWithChangesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishedWithChangesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishedWithChangesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PublishedWithChangesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PunchClock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PunchClockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PunchClockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PunchClockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PunchClockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PushPin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PushPinOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PushPinRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PushPinSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/PushPinTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCode" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCode2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCode2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCode2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCode2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCode2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeScanner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeScannerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeScannerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeScannerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeScannerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QrCodeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryBuilder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryBuilderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryBuilderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryBuilderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryBuilderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryStats" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryStatsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryStatsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryStatsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueryStatsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionAnswer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionAnswerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionAnswerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionAnswerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionAnswerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionMark" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionMarkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionMarkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionMarkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuestionMarkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Queue" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueMusic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueMusicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueMusicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueMusicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueMusicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueuePlayNext" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueuePlayNextOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueuePlayNextRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueuePlayNextSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueuePlayNextTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QueueTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Quickreply" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuickreplyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuickreplyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuickreplySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuickreplyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Quiz" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuizOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuizRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuizSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/QuizTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Radar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Radio" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonChecked" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonCheckedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonCheckedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonCheckedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonCheckedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonUnchecked" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonUncheckedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonUncheckedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonUncheckedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioButtonUncheckedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RadioTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RailwayAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RailwayAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RailwayAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RailwayAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RailwayAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RamenDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RamenDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RamenDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RamenDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RamenDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RampRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RateReview" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RateReviewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RateReviewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RateReviewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RateReviewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RawOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReadMore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReadMoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReadMoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReadMoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReadMoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Receipt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptLong" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptLongOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptLongRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptLongSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptLongTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReceiptTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecentActors" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecentActorsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecentActorsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecentActorsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecentActorsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Recommend" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecommendOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecommendRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecommendSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecommendTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecordVoiceOver" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecordVoiceOverOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecordVoiceOverRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecordVoiceOverSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RecordVoiceOverTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rectangle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RectangleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RectangleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RectangleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RectangleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Reddit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Redeem" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedeemOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedeemRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedeemSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedeemTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Redo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RedoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReduceCapacity" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReduceCapacityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReduceCapacityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReduceCapacitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReduceCapacityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Refresh" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RefreshOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RefreshRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RefreshSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RefreshTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RememberMe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RememberMeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RememberMeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RememberMeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RememberMeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Remove" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveDone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveDoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveDoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveDoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveDoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveFromQueue" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveFromQueueOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveFromQueueRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveFromQueueSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveFromQueueTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveModerator" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveModeratorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveModeratorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveModeratorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveModeratorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveRedEye" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveRedEyeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveRedEyeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveRedEyeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveRedEyeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveShoppingCart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveShoppingCartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveShoppingCartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveShoppingCartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveShoppingCartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RemoveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Reorder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReorderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReorderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReorderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReorderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Repeat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOne" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RepeatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay10" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay10Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay10Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay10Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay10TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay30" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay30Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay30Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay30Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay30TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay5" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay5Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay5Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay5Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Replay5TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayCircleFilled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayCircleFilledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayCircleFilledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayCircleFilledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayCircleFilledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Reply" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReplyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Report" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportGmailerrorred" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportGmailerrorredOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportGmailerrorredRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportGmailerrorredSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportGmailerrorredTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportProblem" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportProblemOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportProblemRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportProblemSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportProblemTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReportTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestPage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestPageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestPageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestPageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestPageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestQuote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestQuoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestQuoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestQuoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RequestQuoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ResetTv" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ResetTvOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ResetTvRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ResetTvSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ResetTvTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestartAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestartAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestartAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestartAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestartAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Restaurant" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantMenu" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantMenuOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantMenuRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantMenuSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantMenuTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestaurantTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Restore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreFromTrash" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreFromTrashOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreFromTrashRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreFromTrashSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreFromTrashTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestorePage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestorePageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestorePageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestorePageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestorePageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RestoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Reviews" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReviewsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReviewsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReviewsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ReviewsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RiceBowl" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RiceBowlOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RiceBowlRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RiceBowlSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RiceBowlTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RingVolume" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RingVolumeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RingVolumeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RingVolumeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RingVolumeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rocket" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketLaunch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketLaunchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketLaunchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketLaunchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketLaunchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RocketTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Roofing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoofingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoofingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoofingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoofingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Room" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomPreferences" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomPreferencesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomPreferencesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomPreferencesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomPreferencesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomService" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomServiceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomServiceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomServiceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomServiceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCcw" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCcwOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCcwRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCcwSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCcwTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCw" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCwOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCwRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCwSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rotate90DegreesCwTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RotateRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundaboutRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundedCorner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundedCornerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundedCornerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundedCornerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RoundedCornerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Route" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Router" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RouterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rowing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RowingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RowingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RowingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RowingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RssFeed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RssFeedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RssFeedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RssFeedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RssFeedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rsvp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RsvpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RsvpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RsvpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RsvpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rtt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RttOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RttRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RttSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RttTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Rule" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleFolder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleFolderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleFolderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleFolderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleFolderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RuleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunningWithErrors" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunningWithErrorsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunningWithErrorsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunningWithErrorsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RunningWithErrorsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RvHookup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RvHookupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RvHookupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RvHookupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/RvHookupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SafetyDivider" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SafetyDividerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SafetyDividerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SafetyDividerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SafetyDividerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sailing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SailingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SailingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SailingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SailingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sanitizer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SanitizerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SanitizerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SanitizerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SanitizerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Satellite" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SatelliteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Save" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAs" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveAsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SaveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavedSearch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavedSearchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavedSearchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavedSearchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavedSearchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Savings" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavingsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavingsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavingsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SavingsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Scale" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScaleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScaleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScaleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScaleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Scanner" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScannerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScannerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScannerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScannerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScatterPlot" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScatterPlotOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScatterPlotRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScatterPlotSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScatterPlotTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Schedule" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleSend" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleSendOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleSendRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleSendSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleSendTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScheduleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Schema" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchemaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchemaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchemaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchemaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/School" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchoolOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchoolRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchoolSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SchoolTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Science" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScienceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScienceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScienceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScienceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Score" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockLandscape" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockLandscapeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockLandscapeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockLandscapeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockLandscapeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockPortrait" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockPortraitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockPortraitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockPortraitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockPortraitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockRotation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockRotationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockRotationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockRotationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenLockRotationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenRotation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenRotationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenRotationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenRotationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenRotationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenSearchDesktop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenSearchDesktopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenSearchDesktopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenSearchDesktopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenSearchDesktopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenShare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenShareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenShareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenShareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenShareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Screenshot" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenshotOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenshotRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenshotSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ScreenshotTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdCardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdStorage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdStorageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdStorageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdStorageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdStorageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SdTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Search" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SearchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Security" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecuritySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateGood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateGoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateGoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateGoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateGoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateWarning" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateWarningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateWarningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateWarningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SecurityUpdateWarningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Segment" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SegmentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SegmentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SegmentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SegmentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelectAll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelectAllOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelectAllRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelectAllSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelectAllTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelfImprovement" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelfImprovementOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelfImprovementRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelfImprovementSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SelfImprovementTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sell" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SellOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SellRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SellSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SellTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Send" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendAndArchive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendAndArchiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendAndArchiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendAndArchiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendAndArchiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendTimeExtension" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendTimeExtensionOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendTimeExtensionRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendTimeExtensionSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendTimeExtensionTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendToMobile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendToMobileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendToMobileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendToMobileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendToMobileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SendTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorDoor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorDoorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorDoorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorDoorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorDoorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorWindow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorWindowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorWindowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorWindowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorWindowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sensors" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SensorsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentDissatisfied" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentDissatisfiedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentDissatisfiedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentDissatisfiedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentDissatisfiedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentNeutral" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentNeutralOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentNeutralRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentNeutralSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentNeutralTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfied" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentSatisfiedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVeryDissatisfied" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVeryDissatisfiedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVeryDissatisfiedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVeryDissatisfiedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVeryDissatisfiedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVerySatisfied" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVerySatisfiedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVerySatisfiedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVerySatisfiedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SentimentVerySatisfiedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SetMeal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SetMealOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SetMealRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SetMealSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SetMealTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Settings" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsAccessibility" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsAccessibilityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsAccessibilityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsAccessibilitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsAccessibilityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsApplications" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsApplicationsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsApplicationsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsApplicationsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsApplicationsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBackupRestore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBackupRestoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBackupRestoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBackupRestoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBackupRestoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBluetooth" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBluetoothOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBluetoothRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBluetoothSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBluetoothTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBrightness" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBrightnessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBrightnessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBrightnessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsBrightnessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsCell" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsCellOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsCellRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsCellSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsCellTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsEthernet" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsEthernetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsEthernetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsEthernetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsEthernetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputAntenna" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputAntennaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputAntennaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputAntennaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputAntennaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputComponent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputComponentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputComponentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputComponentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputComponentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputComposite" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputCompositeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputCompositeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputCompositeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputCompositeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputHdmi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputHdmiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputHdmiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputHdmiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputHdmiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputSvideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputSvideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputSvideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputSvideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsInputSvideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsOverscan" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsOverscanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsOverscanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsOverscanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsOverscanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPhone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPhoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPhoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPhoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPhoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPower" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPowerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPowerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPowerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsPowerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsRemote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsRemoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsRemoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsRemoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsRemoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSuggest" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSuggestOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSuggestRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSuggestSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSuggestTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSystemDaydream" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSystemDaydreamOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSystemDaydreamRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSystemDaydreamSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsSystemDaydreamTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsVoice" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsVoiceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsVoiceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsVoiceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SettingsVoiceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SevenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SeventeenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SeventeenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SeventeenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SeventeenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SeventeenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Share" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareLocation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareLocationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareLocationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareLocationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareLocationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shield" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldMoon" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldMoonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldMoonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldMoonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldMoonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShieldTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shop2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shop2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shop2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shop2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shop2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopTwo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopTwoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopTwoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopTwoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShopTwoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBag" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBagOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBagRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBagSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBagTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBasket" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBasketOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBasketRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBasketSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingBasketTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartCheckout" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartCheckoutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartCheckoutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartCheckoutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartCheckoutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShoppingCartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortText" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortTextOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortTextRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortTextSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortTextTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shortcut" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortcutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortcutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortcutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShortcutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shower" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShowerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Shuffle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShuffleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShutterSpeed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShutterSpeedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShutterSpeedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShutterSpeedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ShutterSpeedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sick" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SickOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SickRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SickSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SickTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular0Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular0BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular0BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular0BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular0BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular1Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular1BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular1BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular1BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular1BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular2Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular2BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular2BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular2BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular2BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular3Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular3BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular3BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular3BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular3BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular4Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular4BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular4BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular4BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellular4BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet0Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet0BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet0BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet0BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet0BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet1Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet1BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet1BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet1BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet1BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet2Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet2BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet2BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet2BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet2BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet3Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet3BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet3BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet3BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet3BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet4Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet4BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet4BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet4BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularConnectedNoInternet4BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNoSim" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNoSimOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNoSimRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNoSimSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNoSimTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNodata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNodataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNodataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNodataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNodataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularNullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalCellularOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi0Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi0BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi0BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi0BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi0BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi1BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi2BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi3BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifi4BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiBad" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiBadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiBadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiBadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiBadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiConnectedNoInternet4" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiConnectedNoInternet4Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiConnectedNoInternet4Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiConnectedNoInternet4Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiConnectedNoInternet4TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbar4Bar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbar4BarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbar4BarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbar4BarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbar4BarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarConnectedNoInternet4" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarConnectedNoInternet4Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarConnectedNoInternet4Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarConnectedNoInternet4Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarConnectedNoInternet4TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarNull" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarNullOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarNullRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarNullSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignalWifiStatusbarNullTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Signpost" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignpostOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignpostRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignpostSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SignpostTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardDownload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardDownloadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardDownloadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardDownloadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardDownloadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SimCardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SingleBed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SingleBedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SingleBedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SingleBedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SingleBedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sip" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SipOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SipRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SipSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SipTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFps" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SixtyFpsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Skateboarding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkateboardingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkateboardingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkateboardingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkateboardingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipNext" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipNextOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipNextRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipNextSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipNextTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipPrevious" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipPreviousOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipPreviousRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipPreviousSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SkipPreviousTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sledding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SleddingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SleddingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SleddingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SleddingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Slideshow" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlideshowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlideshowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlideshowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlideshowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlowMotionVideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlowMotionVideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlowMotionVideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlowMotionVideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SlowMotionVideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartButton" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartButtonOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartButtonRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartButtonSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartButtonTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartDisplay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartDisplayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartDisplayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartDisplaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartDisplayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartScreen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartScreenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartScreenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartScreenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartScreenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartToy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartToyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartToyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartToySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartToyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Smartphone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartphoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartphoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartphoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmartphoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokeFree" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokeFreeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokeFreeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokeFreeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokeFreeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokingRooms" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokingRoomsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokingRoomsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokingRoomsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmokingRoomsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sms" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsFailed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsFailedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsFailedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsFailedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsFailedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SmsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnippetFolder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnippetFolderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnippetFolderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnippetFolderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnippetFolderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Snooze" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnoozeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnoozeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnoozeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnoozeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Snowboarding" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowboardingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowboardingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowboardingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowboardingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Snowmobile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowmobileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowmobileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowmobileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowmobileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Snowshoeing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowshoeingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowshoeingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowshoeingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SnowshoeingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Soap" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoapOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoapRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoapSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoapTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SocialDistance" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SocialDistanceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SocialDistanceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SocialDistanceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SocialDistanceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sort" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortByAlpha" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortByAlphaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortByAlphaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortByAlphaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortByAlphaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SortTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoupKitchen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoupKitchenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoupKitchenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoupKitchenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SoupKitchenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Source" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SourceOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SourceRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SourceSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SourceTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/South" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthAmerica" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthAmericaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthAmericaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthAmericaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthAmericaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthEast" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthEastOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthEastRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthEastSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthEastTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthWest" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthWestOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthWestRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthWestSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SouthWestTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Spa" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaceBar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaceBarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaceBarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaceBarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpaceBarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Speaker" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerGroup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerGroupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerGroupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerGroupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerGroupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotes" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerNotesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerPhone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerPhoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerPhoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerPhoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerPhoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeakerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Speed" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpeedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Spellcheck" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpellcheckOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpellcheckRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpellcheckSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpellcheckTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Splitscreen" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SplitscreenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SplitscreenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SplitscreenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SplitscreenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Spoke" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpokeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpokeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpokeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SpokeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sports" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBaseball" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBaseballOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBaseballRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBaseballSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBaseballTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBasketball" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBasketballOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBasketballRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBasketballSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsBasketballTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsCricket" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsCricketOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsCricketRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsCricketSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsCricketTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsEsports" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsEsportsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsEsportsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsEsportsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsEsportsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsFootball" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsFootballOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsFootballRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsFootballSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsFootballTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsGolf" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsGolfOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsGolfRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsGolfSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsGolfTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHandball" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHandballOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHandballRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHandballSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHandballTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHockey" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHockeyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHockeyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHockeySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsHockeyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsKabaddi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsKabaddiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsKabaddiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsKabaddiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsKabaddiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMartialArts" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMartialArtsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMartialArtsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMartialArtsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMartialArtsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMma" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMmaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMmaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMmaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMmaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMotorsports" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMotorsportsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMotorsportsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMotorsportsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsMotorsportsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsRugby" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsRugbyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsRugbyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsRugbySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsRugbyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsScore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsScoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsScoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsScoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsScoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsSoccer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsSoccerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsSoccerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsSoccerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsSoccerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsTennis" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsTennisOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsTennisRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsTennisSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsTennisTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsVolleyball" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsVolleyballOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsVolleyballRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsVolleyballSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SportsVolleyballTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Square" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareFoot" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareFootOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareFootRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareFootSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareFootTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SquareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SsidChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SsidChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SsidChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SsidChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SsidChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedBarChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedBarChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedBarChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedBarChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedBarChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedLineChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedLineChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedLineChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedLineChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StackedLineChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Stadium" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StadiumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StadiumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StadiumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StadiumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Stairs" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StairsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StairsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StairsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StairsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Star" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorder" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderPurple500" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderPurple500Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderPurple500Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderPurple500Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderPurple500TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarBorderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarHalf" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarHalfOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarHalfRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarHalfSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarHalfTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarPurple500" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarPurple500Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarPurple500Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarPurple500Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarPurple500TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarRate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarRateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarRateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarRateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarRateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Stars" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StarsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Start" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentLandscape" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentLandscapeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentLandscapeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentLandscapeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentLandscapeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentPortrait" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentPortraitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentPortraitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentPortraitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayCurrentPortraitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryLandscape" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryLandscapeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryLandscapeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryLandscapeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryLandscapeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryPortrait" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryPortraitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryPortraitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryPortraitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StayPrimaryPortraitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StickyNote2" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StickyNote2Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StickyNote2Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StickyNote2Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StickyNote2TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Stop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopScreenShare" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopScreenShareOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopScreenShareRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopScreenShareSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopScreenShareTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Storage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Store" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreMallDirectory" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreMallDirectoryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreMallDirectoryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreMallDirectorySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreMallDirectoryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Storefront" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorefrontOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorefrontRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorefrontSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StorefrontTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Storm" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StormOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StormRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StormSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StormTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Straight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Straighten" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StraightenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Stream" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreamOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreamRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreamSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreamTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Streetview" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreetviewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreetviewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreetviewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StreetviewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrikethroughS" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrikethroughSOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrikethroughSRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrikethroughSSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrikethroughSTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Stroller" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrollerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrollerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrollerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StrollerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Style" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StyleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StyleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StyleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/StyleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubdirectoryArrowRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Subject" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubjectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubjectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubjectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubjectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Subscript" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Subscriptions" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptionsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptionsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptionsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubscriptionsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Subtitles" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubtitlesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Subway" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubwayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubwayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubwaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SubwayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Summarize" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SummarizeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SummarizeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SummarizeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SummarizeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Superscript" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SuperscriptOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SuperscriptRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SuperscriptSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SuperscriptTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisedUserCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisedUserCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisedUserCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisedUserCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisedUserCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisorAccount" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisorAccountOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisorAccountRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisorAccountSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupervisorAccountTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Support" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportAgent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportAgentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportAgentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportAgentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportAgentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SupportTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Surfing" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurfingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurfingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurfingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurfingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurroundSound" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurroundSoundOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurroundSoundRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurroundSoundSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SurroundSoundTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapCalls" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapCallsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapCallsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapCallsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapCallsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHoriz" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizontalCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizontalCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizontalCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizontalCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapHorizontalCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVerticalCircle" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVerticalCircleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVerticalCircleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVerticalCircleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwapVerticalCircleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Swipe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeVertical" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeVerticalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeVerticalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeVerticalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwipeVerticalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcut" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutAdd" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutAddOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutAddRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutAddSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutAddTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccessShortcutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccount" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccountOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccountRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccountSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchAccountTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchCamera" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchCameraOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchCameraRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchCameraSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchCameraTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchVideo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchVideoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchVideoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchVideoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SwitchVideoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Synagogue" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SynagogueOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SynagogueRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SynagogueSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SynagogueTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Sync" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncProblem" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncProblemOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncProblemRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncProblemSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncProblemTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SyncTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateGood" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateGoodOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateGoodRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateGoodSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateGoodTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateWarning" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateWarningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateWarningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateWarningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemSecurityUpdateWarningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/SystemUpdateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tab" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabUnselected" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabUnselectedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabUnselectedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabUnselectedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabUnselectedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableBar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableBarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableBarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableBarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableBarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRestaurant" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRestaurantOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRestaurantRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRestaurantSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRestaurantTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRows" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRowsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRowsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRowsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableRowsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableView" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableViewOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableViewRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableViewSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TableViewTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tablet" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletAndroid" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletAndroidOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletAndroidRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletAndroidSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletAndroidTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletMac" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletMacOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletMacRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletMacSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletMacTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TabletTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tag" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagFaces" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagFacesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagFacesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagFacesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagFacesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TagTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TakeoutDining" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TakeoutDiningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TakeoutDiningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TakeoutDiningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TakeoutDiningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapAndPlay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapAndPlayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapAndPlayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapAndPlaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapAndPlayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tapas" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapasOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapasRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapasSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TapasTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Task" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaskTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaxiAlert" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaxiAlertOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaxiAlertRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaxiAlertSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TaxiAlertTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Telegram" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleBuddhist" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleBuddhistOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleBuddhistRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleBuddhistSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleBuddhistTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleHindu" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleHinduOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleHinduRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleHinduSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TempleHinduTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Terminal" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerminalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerminalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerminalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerminalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Terrain" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerrainOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerrainRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerrainSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TerrainTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextDecrease" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextDecreaseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextDecreaseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextDecreaseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextDecreaseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFields" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFieldsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFieldsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFieldsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFieldsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFormat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFormatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFormatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFormatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextFormatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextIncrease" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextIncreaseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextIncreaseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextIncreaseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextIncreaseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateVertical" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateVerticalOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateVerticalRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateVerticalSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotateVerticalTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngledown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngledownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngledownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngledownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngledownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngleup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngleupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngleupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngleupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationAngleupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationNone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationNoneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationNoneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationNoneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextRotationNoneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextSnippet" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextSnippetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextSnippetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextSnippetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextSnippetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Textsms" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextsmsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextsmsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextsmsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextsmsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Texture" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextureOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextureRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextureSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TextureTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheaterComedy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheaterComedyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheaterComedyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheaterComedySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheaterComedyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Theaters" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheatersOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheatersRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheatersSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TheatersTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Thermostat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatAuto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatAutoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatAutoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatAutoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatAutoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThermostatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirteenMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirteenMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirteenMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirteenMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirteenMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFps" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsSelect" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsSelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsSelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsSelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsSelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThirtyFpsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeDRotation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeDRotationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeDRotationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeDRotationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeDRotationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeGMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeGMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeGMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeGMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeGMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeP" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreePOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreePRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreePSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreePTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeSixty" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeSixtyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeSixtyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeSixtySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThreeSixtyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownOffAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownOffAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownOffAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownOffAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownOffAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpOffAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpOffAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpOffAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpOffAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpOffAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbsUpDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbsUpDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbsUpDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbsUpDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ThumbsUpDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimeToLeave" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimeToLeaveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimeToLeaveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimeToLeaveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimeToLeaveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timelapse" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelapseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelapseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelapseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelapseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timeline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimelineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10Select" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10SelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10SelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10SelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10SelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer10TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3Select" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3SelectOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3SelectRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3SelectSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3SelectTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Timer3TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimesOneMobiledata" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimesOneMobiledataOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimesOneMobiledataRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimesOneMobiledataSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TimesOneMobiledataTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TipsAndUpdates" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TipsAndUpdatesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TipsAndUpdatesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TipsAndUpdatesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TipsAndUpdatesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Title" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TitleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TitleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TitleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TitleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Toc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TocOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TocRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TocSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TocTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Today" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TodayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TodayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TodaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TodayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToggleOnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Token" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TokenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TokenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TokenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TokenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Toll" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TollOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TollRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TollSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TollTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tonality" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TonalityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TonalityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TonalitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TonalityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Topic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TopicOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TopicRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TopicSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TopicTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TouchApp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TouchAppOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TouchAppRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TouchAppSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TouchAppTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tour" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TourOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TourRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TourSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TourTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Toys" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToysOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToysRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToysSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ToysTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrackChanges" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrackChangesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrackChangesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrackChangesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrackChangesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Traffic" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrafficOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrafficRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrafficSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrafficTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Train" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrainOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrainRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrainSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrainTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tram" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TramOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TramRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TramSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TramTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransferWithinAStation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransferWithinAStationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransferWithinAStationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransferWithinAStationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransferWithinAStationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Transform" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransformOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransformRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransformSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransformTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Transgender" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransgenderOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransgenderRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransgenderSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransgenderTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransitEnterexit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransitEnterexitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransitEnterexitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransitEnterexitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TransitEnterexitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Translate" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TranslateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TranslateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TranslateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TranslateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TravelExplore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TravelExploreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TravelExploreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TravelExploreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TravelExploreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingFlat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingFlatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingFlatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingFlatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingFlatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrendingUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TripOrigin" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TripOriginOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TripOriginRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TripOriginSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TripOriginTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Try" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TrySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tty" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TtyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TtyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TtySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TtyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tune" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TuneOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TuneRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TuneSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TuneTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tungsten" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TungstenOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TungstenRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TungstenSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TungstenTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSharpRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnSlightRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedIn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInNot" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInNotOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInNotRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInNotSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInNotTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TurnedInTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Tv" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TvTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwelveMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwelveMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwelveMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwelveMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwelveMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyFourMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyFourMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyFourMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyFourMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyFourMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyOneMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyOneMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyOneMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyOneMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyOneMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyThreeMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyThreeMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyThreeMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyThreeMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyThreeMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyTwoMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyTwoMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyTwoMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyTwoMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyTwoMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyZeroMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyZeroMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyZeroMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyZeroMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwentyZeroMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Twitter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoK" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKPlus" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKPlusOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKPlusRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKPlusSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKPlusTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoKTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoMp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoMpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoMpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoMpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoMpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoWheeler" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoWheelerOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoWheelerRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoWheelerSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/TwoWheelerTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnLeft" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnLeftOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnLeftRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnLeftSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnLeftTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnRight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnRightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnRightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnRightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UTurnRightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Umbrella" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UmbrellaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UmbrellaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UmbrellaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UmbrellaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Unarchive" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnarchiveOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnarchiveRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnarchiveSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnarchiveTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Undo" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UndoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UndoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UndoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UndoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldLess" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldLessOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldLessRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldLessSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldLessTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldMore" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldMoreOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldMoreRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldMoreSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnfoldMoreTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Unpublished" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnpublishedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnpublishedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnpublishedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnpublishedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Unsubscribe" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnsubscribeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnsubscribeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnsubscribeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UnsubscribeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Upcoming" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpcomingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpcomingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpcomingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpcomingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Update" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateDisabled" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateDisabledOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateDisabledRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateDisabledSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateDisabledTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpdateTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Upgrade" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpgradeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpgradeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpgradeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UpgradeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Upload" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadFile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadFileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadFileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadFileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadFileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UploadTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Usb" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/UsbTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Vaccines" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VaccinesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VaccinesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VaccinesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VaccinesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Verified" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedUser" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedUserOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedUserRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedUserSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerifiedUserTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignBottom" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignBottomOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignBottomRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignBottomSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignBottomTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignCenter" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignCenterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignCenterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignCenterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignCenterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignTop" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignTopOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignTopRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignTopSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalAlignTopTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalSplit" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalSplitOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalSplitRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalSplitSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VerticalSplitTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Vibration" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VibrationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VibrationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VibrationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VibrationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCall" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCallOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCallRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCallSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCallTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraBack" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraBackOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraBackRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraBackSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraBackTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraFront" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraFrontOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraFrontRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraFrontSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoCameraFrontTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoFile" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoFileOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoFileRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoFileSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoFileTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLabel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLabelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLabelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLabelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLabelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLibrary" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLibraryOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLibraryRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLibrarySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoLibraryTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoSettings" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoSettingsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoSettingsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoSettingsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoSettingsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoStable" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoStableOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoStableRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoStableSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideoStableTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Videocam" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideocamTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAsset" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VideogameAssetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewAgenda" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewAgendaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewAgendaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewAgendaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewAgendaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewArray" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewArrayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewArrayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewArraySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewArrayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCarousel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCarouselOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCarouselRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCarouselSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCarouselTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewColumn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewColumnOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewColumnRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewColumnSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewColumnTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewComfyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompact" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactAlt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactAltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactAltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactAltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactAltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCompactTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCozy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCozyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCozyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCozySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewCozyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewDay" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewDayOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewDayRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewDaySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewDayTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewHeadline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewHeadlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewHeadlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewHeadlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewHeadlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewInAr" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewInArOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewInArRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewInArSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewInArTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewKanban" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewKanbanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewKanbanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewKanbanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewKanbanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewList" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewListOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewListRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewListSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewListTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewModule" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewModuleOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewModuleRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewModuleSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewModuleTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewQuilt" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewQuiltOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewQuiltRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewQuiltSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewQuiltTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewSidebar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewSidebarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewSidebarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewSidebarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewSidebarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewStream" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewStreamOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewStreamRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewStreamSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewStreamTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewTimeline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewTimelineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewTimelineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewTimelineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewTimelineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewWeek" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewWeekOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewWeekRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewWeekSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ViewWeekTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Vignette" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VignetteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VignetteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VignetteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VignetteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Villa" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VillaOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VillaRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VillaSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VillaTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Visibility" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilitySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VisibilityTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceChat" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceChatOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceChatRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceChatSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceChatTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceOverOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceOverOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceOverOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceOverOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoiceOverOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Voicemail" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoicemailOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoicemailRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoicemailSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VoicemailTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeDown" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeDownOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeDownRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeDownSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeDownTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeMute" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeMuteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeMuteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeMuteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeMuteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeUp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeUpOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeUpRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeUpSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolumeUpTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolunteerActivism" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolunteerActivismOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolunteerActivismRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolunteerActivismSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VolunteerActivismTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKey" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnKeyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VpnLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Vrpano" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VrpanoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VrpanoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VrpanoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/VrpanoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Wallpaper" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WallpaperOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WallpaperRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WallpaperSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WallpaperTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Warehouse" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarehouseOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarehouseRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarehouseSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarehouseTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Warning" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningAmber" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningAmberOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningAmberRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningAmberSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningAmberTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WarningTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Wash" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WashOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WashRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WashSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WashTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Watch" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchLater" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchLaterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchLaterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchLaterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchLaterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WatchTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Water" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterDamage" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterDamageOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterDamageRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterDamageSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterDamageTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterfallChart" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterfallChartOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterfallChartRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterfallChartSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WaterfallChartTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Waves" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WavesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WavesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WavesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WavesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbAuto" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbAutoOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbAutoRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbAutoSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbAutoTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbCloudy" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbCloudyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbCloudyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbCloudySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbCloudyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIncandescent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIncandescentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIncandescentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIncandescentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIncandescentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIridescent" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIridescentOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIridescentRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIridescentSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbIridescentTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbShade" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbShadeOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbShadeRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbShadeSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbShadeTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbSunny" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbSunnyOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbSunnyRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbSunnySharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbSunnyTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbTwilight" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbTwilightOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbTwilightRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbTwilightSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WbTwilightTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Wc" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WcOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WcRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WcSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WcTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Web" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAsset" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebAssetTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Webhook" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebhookOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebhookRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebhookSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WebhookTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Weekend" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WeekendOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WeekendRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WeekendSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WeekendTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/West" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WestOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WestRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WestSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WestTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatsApp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatsappOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatsappRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatsappSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatsappTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Whatshot" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatshotOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatshotRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatshotSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhatshotTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WheelchairPickup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WheelchairPickupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WheelchairPickupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WheelchairPickupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WheelchairPickupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhereToVote" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhereToVoteOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhereToVoteRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhereToVoteSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WhereToVoteTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Widgets" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WidgetsOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WidgetsRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WidgetsSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WidgetsTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Wifi" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCalling" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCalling3" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCalling3Outlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCalling3Rounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCalling3Sharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCalling3TwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCallingOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCallingRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCallingSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiCallingTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiChannel" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiChannelOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiChannelRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiChannelSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiChannelTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiFind" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiFindOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiFindRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiFindSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiFindTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiLock" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiLockOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiLockRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiLockSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiLockTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiPassword" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiPasswordOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiPasswordRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiPasswordSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiPasswordTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiProtectedSetup" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiProtectedSetupOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiProtectedSetupRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiProtectedSetupSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiProtectedSetupTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTethering" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringError" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorRoundedOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorRoundedRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorRoundedSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorRoundedTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringErrorTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTetheringTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WifiTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Window" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WindowOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WindowRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WindowSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WindowTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WineBar" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WineBarOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WineBarRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WineBarSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WineBarTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Woman" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WomanOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WomanRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WomanSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WomanTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Work" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOff" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOffOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOffRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOffSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOffTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOutline" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOutlineOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOutlineRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOutlineSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOutlineTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacePremium" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacePremiumOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacePremiumRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacePremiumSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacePremiumTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Workspaces" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacesOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacesRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacesSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WorkspacesTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrapText" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrapTextOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrapTextRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrapTextSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrapTextTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrongLocation" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrongLocationOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrongLocationRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrongLocationSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WrongLocationTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Wysiwyg" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WysiwygOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WysiwygRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WysiwygSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/WysiwygTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/Yard" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YardOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YardRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YardSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YardTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YouTube" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YoutubeSearchedFor" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YoutubeSearchedForOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YoutubeSearchedForRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YoutubeSearchedForSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/YoutubeSearchedForTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomIn" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInMap" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInMapOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInMapRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInMapSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInMapTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomInTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOut" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutMap" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutMapOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutMapRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutMapSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutMapTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutOutlined" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutRounded" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutSharp" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/ZoomOutTwoTone" {
    export { default } from "@mui/material/SvgIcon/index";
}
declare module "@mui/icons-material/index" {
    import SvgIcon from "@mui/material/SvgIcon/index";
    type SvgIconComponent = typeof SvgIcon;
    export const Abc: SvgIconComponent;
    export const AbcOutlined: SvgIconComponent;
    export const AbcRounded: SvgIconComponent;
    export const AbcSharp: SvgIconComponent;
    export const AbcTwoTone: SvgIconComponent;
    export const AccessAlarm: SvgIconComponent;
    export const AccessAlarmOutlined: SvgIconComponent;
    export const AccessAlarmRounded: SvgIconComponent;
    export const AccessAlarms: SvgIconComponent;
    export const AccessAlarmSharp: SvgIconComponent;
    export const AccessAlarmsOutlined: SvgIconComponent;
    export const AccessAlarmsRounded: SvgIconComponent;
    export const AccessAlarmsSharp: SvgIconComponent;
    export const AccessAlarmsTwoTone: SvgIconComponent;
    export const AccessAlarmTwoTone: SvgIconComponent;
    export const Accessibility: SvgIconComponent;
    export const AccessibilityNew: SvgIconComponent;
    export const AccessibilityNewOutlined: SvgIconComponent;
    export const AccessibilityNewRounded: SvgIconComponent;
    export const AccessibilityNewSharp: SvgIconComponent;
    export const AccessibilityNewTwoTone: SvgIconComponent;
    export const AccessibilityOutlined: SvgIconComponent;
    export const AccessibilityRounded: SvgIconComponent;
    export const AccessibilitySharp: SvgIconComponent;
    export const AccessibilityTwoTone: SvgIconComponent;
    export const Accessible: SvgIconComponent;
    export const AccessibleForward: SvgIconComponent;
    export const AccessibleForwardOutlined: SvgIconComponent;
    export const AccessibleForwardRounded: SvgIconComponent;
    export const AccessibleForwardSharp: SvgIconComponent;
    export const AccessibleForwardTwoTone: SvgIconComponent;
    export const AccessibleOutlined: SvgIconComponent;
    export const AccessibleRounded: SvgIconComponent;
    export const AccessibleSharp: SvgIconComponent;
    export const AccessibleTwoTone: SvgIconComponent;
    export const AccessTime: SvgIconComponent;
    export const AccessTimeFilled: SvgIconComponent;
    export const AccessTimeFilledOutlined: SvgIconComponent;
    export const AccessTimeFilledRounded: SvgIconComponent;
    export const AccessTimeFilledSharp: SvgIconComponent;
    export const AccessTimeFilledTwoTone: SvgIconComponent;
    export const AccessTimeOutlined: SvgIconComponent;
    export const AccessTimeRounded: SvgIconComponent;
    export const AccessTimeSharp: SvgIconComponent;
    export const AccessTimeTwoTone: SvgIconComponent;
    export const AccountBalance: SvgIconComponent;
    export const AccountBalanceOutlined: SvgIconComponent;
    export const AccountBalanceRounded: SvgIconComponent;
    export const AccountBalanceSharp: SvgIconComponent;
    export const AccountBalanceTwoTone: SvgIconComponent;
    export const AccountBalanceWallet: SvgIconComponent;
    export const AccountBalanceWalletOutlined: SvgIconComponent;
    export const AccountBalanceWalletRounded: SvgIconComponent;
    export const AccountBalanceWalletSharp: SvgIconComponent;
    export const AccountBalanceWalletTwoTone: SvgIconComponent;
    export const AccountBox: SvgIconComponent;
    export const AccountBoxOutlined: SvgIconComponent;
    export const AccountBoxRounded: SvgIconComponent;
    export const AccountBoxSharp: SvgIconComponent;
    export const AccountBoxTwoTone: SvgIconComponent;
    export const AccountCircle: SvgIconComponent;
    export const AccountCircleOutlined: SvgIconComponent;
    export const AccountCircleRounded: SvgIconComponent;
    export const AccountCircleSharp: SvgIconComponent;
    export const AccountCircleTwoTone: SvgIconComponent;
    export const AccountTree: SvgIconComponent;
    export const AccountTreeOutlined: SvgIconComponent;
    export const AccountTreeRounded: SvgIconComponent;
    export const AccountTreeSharp: SvgIconComponent;
    export const AccountTreeTwoTone: SvgIconComponent;
    export const AcUnit: SvgIconComponent;
    export const AcUnitOutlined: SvgIconComponent;
    export const AcUnitRounded: SvgIconComponent;
    export const AcUnitSharp: SvgIconComponent;
    export const AcUnitTwoTone: SvgIconComponent;
    export const Adb: SvgIconComponent;
    export const AdbOutlined: SvgIconComponent;
    export const AdbRounded: SvgIconComponent;
    export const AdbSharp: SvgIconComponent;
    export const AdbTwoTone: SvgIconComponent;
    export const Add: SvgIconComponent;
    export const AddAlarm: SvgIconComponent;
    export const AddAlarmOutlined: SvgIconComponent;
    export const AddAlarmRounded: SvgIconComponent;
    export const AddAlarmSharp: SvgIconComponent;
    export const AddAlarmTwoTone: SvgIconComponent;
    export const AddAlert: SvgIconComponent;
    export const AddAlertOutlined: SvgIconComponent;
    export const AddAlertRounded: SvgIconComponent;
    export const AddAlertSharp: SvgIconComponent;
    export const AddAlertTwoTone: SvgIconComponent;
    export const AddAPhoto: SvgIconComponent;
    export const AddAPhotoOutlined: SvgIconComponent;
    export const AddAPhotoRounded: SvgIconComponent;
    export const AddAPhotoSharp: SvgIconComponent;
    export const AddAPhotoTwoTone: SvgIconComponent;
    export const AddBox: SvgIconComponent;
    export const AddBoxOutlined: SvgIconComponent;
    export const AddBoxRounded: SvgIconComponent;
    export const AddBoxSharp: SvgIconComponent;
    export const AddBoxTwoTone: SvgIconComponent;
    export const AddBusiness: SvgIconComponent;
    export const AddBusinessOutlined: SvgIconComponent;
    export const AddBusinessRounded: SvgIconComponent;
    export const AddBusinessSharp: SvgIconComponent;
    export const AddBusinessTwoTone: SvgIconComponent;
    export const AddCard: SvgIconComponent;
    export const AddCardOutlined: SvgIconComponent;
    export const AddCardRounded: SvgIconComponent;
    export const AddCardSharp: SvgIconComponent;
    export const AddCardTwoTone: SvgIconComponent;
    export const Addchart: SvgIconComponent;
    export const AddchartOutlined: SvgIconComponent;
    export const AddchartRounded: SvgIconComponent;
    export const AddchartSharp: SvgIconComponent;
    export const AddchartTwoTone: SvgIconComponent;
    export const AddCircle: SvgIconComponent;
    export const AddCircleOutline: SvgIconComponent;
    export const AddCircleOutlined: SvgIconComponent;
    export const AddCircleOutlineOutlined: SvgIconComponent;
    export const AddCircleOutlineRounded: SvgIconComponent;
    export const AddCircleOutlineSharp: SvgIconComponent;
    export const AddCircleOutlineTwoTone: SvgIconComponent;
    export const AddCircleRounded: SvgIconComponent;
    export const AddCircleSharp: SvgIconComponent;
    export const AddCircleTwoTone: SvgIconComponent;
    export const AddComment: SvgIconComponent;
    export const AddCommentOutlined: SvgIconComponent;
    export const AddCommentRounded: SvgIconComponent;
    export const AddCommentSharp: SvgIconComponent;
    export const AddCommentTwoTone: SvgIconComponent;
    export const AddIcCall: SvgIconComponent;
    export const AddIcCallOutlined: SvgIconComponent;
    export const AddIcCallRounded: SvgIconComponent;
    export const AddIcCallSharp: SvgIconComponent;
    export const AddIcCallTwoTone: SvgIconComponent;
    export const AddLink: SvgIconComponent;
    export const AddLinkOutlined: SvgIconComponent;
    export const AddLinkRounded: SvgIconComponent;
    export const AddLinkSharp: SvgIconComponent;
    export const AddLinkTwoTone: SvgIconComponent;
    export const AddLocation: SvgIconComponent;
    export const AddLocationAlt: SvgIconComponent;
    export const AddLocationAltOutlined: SvgIconComponent;
    export const AddLocationAltRounded: SvgIconComponent;
    export const AddLocationAltSharp: SvgIconComponent;
    export const AddLocationAltTwoTone: SvgIconComponent;
    export const AddLocationOutlined: SvgIconComponent;
    export const AddLocationRounded: SvgIconComponent;
    export const AddLocationSharp: SvgIconComponent;
    export const AddLocationTwoTone: SvgIconComponent;
    export const AddModerator: SvgIconComponent;
    export const AddModeratorOutlined: SvgIconComponent;
    export const AddModeratorRounded: SvgIconComponent;
    export const AddModeratorSharp: SvgIconComponent;
    export const AddModeratorTwoTone: SvgIconComponent;
    export const AddOutlined: SvgIconComponent;
    export const AddPhotoAlternate: SvgIconComponent;
    export const AddPhotoAlternateOutlined: SvgIconComponent;
    export const AddPhotoAlternateRounded: SvgIconComponent;
    export const AddPhotoAlternateSharp: SvgIconComponent;
    export const AddPhotoAlternateTwoTone: SvgIconComponent;
    export const AddReaction: SvgIconComponent;
    export const AddReactionOutlined: SvgIconComponent;
    export const AddReactionRounded: SvgIconComponent;
    export const AddReactionSharp: SvgIconComponent;
    export const AddReactionTwoTone: SvgIconComponent;
    export const AddRoad: SvgIconComponent;
    export const AddRoadOutlined: SvgIconComponent;
    export const AddRoadRounded: SvgIconComponent;
    export const AddRoadSharp: SvgIconComponent;
    export const AddRoadTwoTone: SvgIconComponent;
    export const AddRounded: SvgIconComponent;
    export const AddSharp: SvgIconComponent;
    export const AddShoppingCart: SvgIconComponent;
    export const AddShoppingCartOutlined: SvgIconComponent;
    export const AddShoppingCartRounded: SvgIconComponent;
    export const AddShoppingCartSharp: SvgIconComponent;
    export const AddShoppingCartTwoTone: SvgIconComponent;
    export const AddTask: SvgIconComponent;
    export const AddTaskOutlined: SvgIconComponent;
    export const AddTaskRounded: SvgIconComponent;
    export const AddTaskSharp: SvgIconComponent;
    export const AddTaskTwoTone: SvgIconComponent;
    export const AddToDrive: SvgIconComponent;
    export const AddToDriveOutlined: SvgIconComponent;
    export const AddToDriveRounded: SvgIconComponent;
    export const AddToDriveSharp: SvgIconComponent;
    export const AddToDriveTwoTone: SvgIconComponent;
    export const AddToHomeScreen: SvgIconComponent;
    export const AddToHomeScreenOutlined: SvgIconComponent;
    export const AddToHomeScreenRounded: SvgIconComponent;
    export const AddToHomeScreenSharp: SvgIconComponent;
    export const AddToHomeScreenTwoTone: SvgIconComponent;
    export const AddToPhotos: SvgIconComponent;
    export const AddToPhotosOutlined: SvgIconComponent;
    export const AddToPhotosRounded: SvgIconComponent;
    export const AddToPhotosSharp: SvgIconComponent;
    export const AddToPhotosTwoTone: SvgIconComponent;
    export const AddToQueue: SvgIconComponent;
    export const AddToQueueOutlined: SvgIconComponent;
    export const AddToQueueRounded: SvgIconComponent;
    export const AddToQueueSharp: SvgIconComponent;
    export const AddToQueueTwoTone: SvgIconComponent;
    export const AddTwoTone: SvgIconComponent;
    export const AdfScanner: SvgIconComponent;
    export const AdfScannerOutlined: SvgIconComponent;
    export const AdfScannerRounded: SvgIconComponent;
    export const AdfScannerSharp: SvgIconComponent;
    export const AdfScannerTwoTone: SvgIconComponent;
    export const Adjust: SvgIconComponent;
    export const AdjustOutlined: SvgIconComponent;
    export const AdjustRounded: SvgIconComponent;
    export const AdjustSharp: SvgIconComponent;
    export const AdjustTwoTone: SvgIconComponent;
    export const AdminPanelSettings: SvgIconComponent;
    export const AdminPanelSettingsOutlined: SvgIconComponent;
    export const AdminPanelSettingsRounded: SvgIconComponent;
    export const AdminPanelSettingsSharp: SvgIconComponent;
    export const AdminPanelSettingsTwoTone: SvgIconComponent;
    export const AdUnits: SvgIconComponent;
    export const AdUnitsOutlined: SvgIconComponent;
    export const AdUnitsRounded: SvgIconComponent;
    export const AdUnitsSharp: SvgIconComponent;
    export const AdUnitsTwoTone: SvgIconComponent;
    export const Agriculture: SvgIconComponent;
    export const AgricultureOutlined: SvgIconComponent;
    export const AgricultureRounded: SvgIconComponent;
    export const AgricultureSharp: SvgIconComponent;
    export const AgricultureTwoTone: SvgIconComponent;
    export const Air: SvgIconComponent;
    export const Airlines: SvgIconComponent;
    export const AirlineSeatFlat: SvgIconComponent;
    export const AirlineSeatFlatAngled: SvgIconComponent;
    export const AirlineSeatFlatAngledOutlined: SvgIconComponent;
    export const AirlineSeatFlatAngledRounded: SvgIconComponent;
    export const AirlineSeatFlatAngledSharp: SvgIconComponent;
    export const AirlineSeatFlatAngledTwoTone: SvgIconComponent;
    export const AirlineSeatFlatOutlined: SvgIconComponent;
    export const AirlineSeatFlatRounded: SvgIconComponent;
    export const AirlineSeatFlatSharp: SvgIconComponent;
    export const AirlineSeatFlatTwoTone: SvgIconComponent;
    export const AirlineSeatIndividualSuite: SvgIconComponent;
    export const AirlineSeatIndividualSuiteOutlined: SvgIconComponent;
    export const AirlineSeatIndividualSuiteRounded: SvgIconComponent;
    export const AirlineSeatIndividualSuiteSharp: SvgIconComponent;
    export const AirlineSeatIndividualSuiteTwoTone: SvgIconComponent;
    export const AirlineSeatLegroomExtra: SvgIconComponent;
    export const AirlineSeatLegroomExtraOutlined: SvgIconComponent;
    export const AirlineSeatLegroomExtraRounded: SvgIconComponent;
    export const AirlineSeatLegroomExtraSharp: SvgIconComponent;
    export const AirlineSeatLegroomExtraTwoTone: SvgIconComponent;
    export const AirlineSeatLegroomNormal: SvgIconComponent;
    export const AirlineSeatLegroomNormalOutlined: SvgIconComponent;
    export const AirlineSeatLegroomNormalRounded: SvgIconComponent;
    export const AirlineSeatLegroomNormalSharp: SvgIconComponent;
    export const AirlineSeatLegroomNormalTwoTone: SvgIconComponent;
    export const AirlineSeatLegroomReduced: SvgIconComponent;
    export const AirlineSeatLegroomReducedOutlined: SvgIconComponent;
    export const AirlineSeatLegroomReducedRounded: SvgIconComponent;
    export const AirlineSeatLegroomReducedSharp: SvgIconComponent;
    export const AirlineSeatLegroomReducedTwoTone: SvgIconComponent;
    export const AirlineSeatReclineExtra: SvgIconComponent;
    export const AirlineSeatReclineExtraOutlined: SvgIconComponent;
    export const AirlineSeatReclineExtraRounded: SvgIconComponent;
    export const AirlineSeatReclineExtraSharp: SvgIconComponent;
    export const AirlineSeatReclineExtraTwoTone: SvgIconComponent;
    export const AirlineSeatReclineNormal: SvgIconComponent;
    export const AirlineSeatReclineNormalOutlined: SvgIconComponent;
    export const AirlineSeatReclineNormalRounded: SvgIconComponent;
    export const AirlineSeatReclineNormalSharp: SvgIconComponent;
    export const AirlineSeatReclineNormalTwoTone: SvgIconComponent;
    export const AirlinesOutlined: SvgIconComponent;
    export const AirlinesRounded: SvgIconComponent;
    export const AirlinesSharp: SvgIconComponent;
    export const AirlineStops: SvgIconComponent;
    export const AirlineStopsOutlined: SvgIconComponent;
    export const AirlineStopsRounded: SvgIconComponent;
    export const AirlineStopsSharp: SvgIconComponent;
    export const AirlineStopsTwoTone: SvgIconComponent;
    export const AirlinesTwoTone: SvgIconComponent;
    export const AirOutlined: SvgIconComponent;
    export const AirplanemodeActive: SvgIconComponent;
    export const AirplanemodeActiveOutlined: SvgIconComponent;
    export const AirplanemodeActiveRounded: SvgIconComponent;
    export const AirplanemodeActiveSharp: SvgIconComponent;
    export const AirplanemodeActiveTwoTone: SvgIconComponent;
    export const AirplanemodeInactive: SvgIconComponent;
    export const AirplanemodeInactiveOutlined: SvgIconComponent;
    export const AirplanemodeInactiveRounded: SvgIconComponent;
    export const AirplanemodeInactiveSharp: SvgIconComponent;
    export const AirplanemodeInactiveTwoTone: SvgIconComponent;
    export const AirplaneTicket: SvgIconComponent;
    export const AirplaneTicketOutlined: SvgIconComponent;
    export const AirplaneTicketRounded: SvgIconComponent;
    export const AirplaneTicketSharp: SvgIconComponent;
    export const AirplaneTicketTwoTone: SvgIconComponent;
    export const Airplay: SvgIconComponent;
    export const AirplayOutlined: SvgIconComponent;
    export const AirplayRounded: SvgIconComponent;
    export const AirplaySharp: SvgIconComponent;
    export const AirplayTwoTone: SvgIconComponent;
    export const AirportShuttle: SvgIconComponent;
    export const AirportShuttleOutlined: SvgIconComponent;
    export const AirportShuttleRounded: SvgIconComponent;
    export const AirportShuttleSharp: SvgIconComponent;
    export const AirportShuttleTwoTone: SvgIconComponent;
    export const AirRounded: SvgIconComponent;
    export const AirSharp: SvgIconComponent;
    export const AirTwoTone: SvgIconComponent;
    export const Alarm: SvgIconComponent;
    export const AlarmAdd: SvgIconComponent;
    export const AlarmAddOutlined: SvgIconComponent;
    export const AlarmAddRounded: SvgIconComponent;
    export const AlarmAddSharp: SvgIconComponent;
    export const AlarmAddTwoTone: SvgIconComponent;
    export const AlarmOff: SvgIconComponent;
    export const AlarmOffOutlined: SvgIconComponent;
    export const AlarmOffRounded: SvgIconComponent;
    export const AlarmOffSharp: SvgIconComponent;
    export const AlarmOffTwoTone: SvgIconComponent;
    export const AlarmOn: SvgIconComponent;
    export const AlarmOnOutlined: SvgIconComponent;
    export const AlarmOnRounded: SvgIconComponent;
    export const AlarmOnSharp: SvgIconComponent;
    export const AlarmOnTwoTone: SvgIconComponent;
    export const AlarmOutlined: SvgIconComponent;
    export const AlarmRounded: SvgIconComponent;
    export const AlarmSharp: SvgIconComponent;
    export const AlarmTwoTone: SvgIconComponent;
    export const Album: SvgIconComponent;
    export const AlbumOutlined: SvgIconComponent;
    export const AlbumRounded: SvgIconComponent;
    export const AlbumSharp: SvgIconComponent;
    export const AlbumTwoTone: SvgIconComponent;
    export const AlignHorizontalCenter: SvgIconComponent;
    export const AlignHorizontalCenterOutlined: SvgIconComponent;
    export const AlignHorizontalCenterRounded: SvgIconComponent;
    export const AlignHorizontalCenterSharp: SvgIconComponent;
    export const AlignHorizontalCenterTwoTone: SvgIconComponent;
    export const AlignHorizontalLeft: SvgIconComponent;
    export const AlignHorizontalLeftOutlined: SvgIconComponent;
    export const AlignHorizontalLeftRounded: SvgIconComponent;
    export const AlignHorizontalLeftSharp: SvgIconComponent;
    export const AlignHorizontalLeftTwoTone: SvgIconComponent;
    export const AlignHorizontalRight: SvgIconComponent;
    export const AlignHorizontalRightOutlined: SvgIconComponent;
    export const AlignHorizontalRightRounded: SvgIconComponent;
    export const AlignHorizontalRightSharp: SvgIconComponent;
    export const AlignHorizontalRightTwoTone: SvgIconComponent;
    export const AlignVerticalBottom: SvgIconComponent;
    export const AlignVerticalBottomOutlined: SvgIconComponent;
    export const AlignVerticalBottomRounded: SvgIconComponent;
    export const AlignVerticalBottomSharp: SvgIconComponent;
    export const AlignVerticalBottomTwoTone: SvgIconComponent;
    export const AlignVerticalCenter: SvgIconComponent;
    export const AlignVerticalCenterOutlined: SvgIconComponent;
    export const AlignVerticalCenterRounded: SvgIconComponent;
    export const AlignVerticalCenterSharp: SvgIconComponent;
    export const AlignVerticalCenterTwoTone: SvgIconComponent;
    export const AlignVerticalTop: SvgIconComponent;
    export const AlignVerticalTopOutlined: SvgIconComponent;
    export const AlignVerticalTopRounded: SvgIconComponent;
    export const AlignVerticalTopSharp: SvgIconComponent;
    export const AlignVerticalTopTwoTone: SvgIconComponent;
    export const AllInbox: SvgIconComponent;
    export const AllInboxOutlined: SvgIconComponent;
    export const AllInboxRounded: SvgIconComponent;
    export const AllInboxSharp: SvgIconComponent;
    export const AllInboxTwoTone: SvgIconComponent;
    export const AllInclusive: SvgIconComponent;
    export const AllInclusiveOutlined: SvgIconComponent;
    export const AllInclusiveRounded: SvgIconComponent;
    export const AllInclusiveSharp: SvgIconComponent;
    export const AllInclusiveTwoTone: SvgIconComponent;
    export const AllOut: SvgIconComponent;
    export const AllOutOutlined: SvgIconComponent;
    export const AllOutRounded: SvgIconComponent;
    export const AllOutSharp: SvgIconComponent;
    export const AllOutTwoTone: SvgIconComponent;
    export const AlternateEmail: SvgIconComponent;
    export const AlternateEmailOutlined: SvgIconComponent;
    export const AlternateEmailRounded: SvgIconComponent;
    export const AlternateEmailSharp: SvgIconComponent;
    export const AlternateEmailTwoTone: SvgIconComponent;
    export const AltRoute: SvgIconComponent;
    export const AltRouteOutlined: SvgIconComponent;
    export const AltRouteRounded: SvgIconComponent;
    export const AltRouteSharp: SvgIconComponent;
    export const AltRouteTwoTone: SvgIconComponent;
    export const Analytics: SvgIconComponent;
    export const AnalyticsOutlined: SvgIconComponent;
    export const AnalyticsRounded: SvgIconComponent;
    export const AnalyticsSharp: SvgIconComponent;
    export const AnalyticsTwoTone: SvgIconComponent;
    export const Anchor: SvgIconComponent;
    export const AnchorOutlined: SvgIconComponent;
    export const AnchorRounded: SvgIconComponent;
    export const AnchorSharp: SvgIconComponent;
    export const AnchorTwoTone: SvgIconComponent;
    export const Android: SvgIconComponent;
    export const AndroidOutlined: SvgIconComponent;
    export const AndroidRounded: SvgIconComponent;
    export const AndroidSharp: SvgIconComponent;
    export const AndroidTwoTone: SvgIconComponent;
    export const Animation: SvgIconComponent;
    export const AnimationOutlined: SvgIconComponent;
    export const AnimationRounded: SvgIconComponent;
    export const AnimationSharp: SvgIconComponent;
    export const AnimationTwoTone: SvgIconComponent;
    export const Announcement: SvgIconComponent;
    export const AnnouncementOutlined: SvgIconComponent;
    export const AnnouncementRounded: SvgIconComponent;
    export const AnnouncementSharp: SvgIconComponent;
    export const AnnouncementTwoTone: SvgIconComponent;
    export const Aod: SvgIconComponent;
    export const AodOutlined: SvgIconComponent;
    export const AodRounded: SvgIconComponent;
    export const AodSharp: SvgIconComponent;
    export const AodTwoTone: SvgIconComponent;
    export const Apartment: SvgIconComponent;
    export const ApartmentOutlined: SvgIconComponent;
    export const ApartmentRounded: SvgIconComponent;
    export const ApartmentSharp: SvgIconComponent;
    export const ApartmentTwoTone: SvgIconComponent;
    export const Api: SvgIconComponent;
    export const ApiOutlined: SvgIconComponent;
    export const ApiRounded: SvgIconComponent;
    export const ApiSharp: SvgIconComponent;
    export const ApiTwoTone: SvgIconComponent;
    export const AppBlocking: SvgIconComponent;
    export const AppBlockingOutlined: SvgIconComponent;
    export const AppBlockingRounded: SvgIconComponent;
    export const AppBlockingSharp: SvgIconComponent;
    export const AppBlockingTwoTone: SvgIconComponent;
    export const Apple: SvgIconComponent;
    export const AppRegistration: SvgIconComponent;
    export const AppRegistrationOutlined: SvgIconComponent;
    export const AppRegistrationRounded: SvgIconComponent;
    export const AppRegistrationSharp: SvgIconComponent;
    export const AppRegistrationTwoTone: SvgIconComponent;
    export const Approval: SvgIconComponent;
    export const ApprovalOutlined: SvgIconComponent;
    export const ApprovalRounded: SvgIconComponent;
    export const ApprovalSharp: SvgIconComponent;
    export const ApprovalTwoTone: SvgIconComponent;
    export const Apps: SvgIconComponent;
    export const AppSettingsAlt: SvgIconComponent;
    export const AppSettingsAltOutlined: SvgIconComponent;
    export const AppSettingsAltRounded: SvgIconComponent;
    export const AppSettingsAltSharp: SvgIconComponent;
    export const AppSettingsAltTwoTone: SvgIconComponent;
    export const AppShortcut: SvgIconComponent;
    export const AppShortcutOutlined: SvgIconComponent;
    export const AppShortcutRounded: SvgIconComponent;
    export const AppShortcutSharp: SvgIconComponent;
    export const AppShortcutTwoTone: SvgIconComponent;
    export const AppsOutage: SvgIconComponent;
    export const AppsOutageOutlined: SvgIconComponent;
    export const AppsOutageRounded: SvgIconComponent;
    export const AppsOutageSharp: SvgIconComponent;
    export const AppsOutageTwoTone: SvgIconComponent;
    export const AppsOutlined: SvgIconComponent;
    export const AppsRounded: SvgIconComponent;
    export const AppsSharp: SvgIconComponent;
    export const AppsTwoTone: SvgIconComponent;
    export const Architecture: SvgIconComponent;
    export const ArchitectureOutlined: SvgIconComponent;
    export const ArchitectureRounded: SvgIconComponent;
    export const ArchitectureSharp: SvgIconComponent;
    export const ArchitectureTwoTone: SvgIconComponent;
    export const Archive: SvgIconComponent;
    export const ArchiveOutlined: SvgIconComponent;
    export const ArchiveRounded: SvgIconComponent;
    export const ArchiveSharp: SvgIconComponent;
    export const ArchiveTwoTone: SvgIconComponent;
    export const ArrowBack: SvgIconComponent;
    export const ArrowBackIos: SvgIconComponent;
    export const ArrowBackIosNew: SvgIconComponent;
    export const ArrowBackIosNewOutlined: SvgIconComponent;
    export const ArrowBackIosNewRounded: SvgIconComponent;
    export const ArrowBackIosNewSharp: SvgIconComponent;
    export const ArrowBackIosNewTwoTone: SvgIconComponent;
    export const ArrowBackIosOutlined: SvgIconComponent;
    export const ArrowBackIosRounded: SvgIconComponent;
    export const ArrowBackIosSharp: SvgIconComponent;
    export const ArrowBackIosTwoTone: SvgIconComponent;
    export const ArrowBackOutlined: SvgIconComponent;
    export const ArrowBackRounded: SvgIconComponent;
    export const ArrowBackSharp: SvgIconComponent;
    export const ArrowBackTwoTone: SvgIconComponent;
    export const ArrowCircleDown: SvgIconComponent;
    export const ArrowCircleDownOutlined: SvgIconComponent;
    export const ArrowCircleDownRounded: SvgIconComponent;
    export const ArrowCircleDownSharp: SvgIconComponent;
    export const ArrowCircleDownTwoTone: SvgIconComponent;
    export const ArrowCircleLeft: SvgIconComponent;
    export const ArrowCircleLeftOutlined: SvgIconComponent;
    export const ArrowCircleLeftRounded: SvgIconComponent;
    export const ArrowCircleLeftSharp: SvgIconComponent;
    export const ArrowCircleLeftTwoTone: SvgIconComponent;
    export const ArrowCircleRight: SvgIconComponent;
    export const ArrowCircleRightOutlined: SvgIconComponent;
    export const ArrowCircleRightRounded: SvgIconComponent;
    export const ArrowCircleRightSharp: SvgIconComponent;
    export const ArrowCircleRightTwoTone: SvgIconComponent;
    export const ArrowCircleUp: SvgIconComponent;
    export const ArrowCircleUpOutlined: SvgIconComponent;
    export const ArrowCircleUpRounded: SvgIconComponent;
    export const ArrowCircleUpSharp: SvgIconComponent;
    export const ArrowCircleUpTwoTone: SvgIconComponent;
    export const ArrowDownward: SvgIconComponent;
    export const ArrowDownwardOutlined: SvgIconComponent;
    export const ArrowDownwardRounded: SvgIconComponent;
    export const ArrowDownwardSharp: SvgIconComponent;
    export const ArrowDownwardTwoTone: SvgIconComponent;
    export const ArrowDropDown: SvgIconComponent;
    export const ArrowDropDownCircle: SvgIconComponent;
    export const ArrowDropDownCircleOutlined: SvgIconComponent;
    export const ArrowDropDownCircleRounded: SvgIconComponent;
    export const ArrowDropDownCircleSharp: SvgIconComponent;
    export const ArrowDropDownCircleTwoTone: SvgIconComponent;
    export const ArrowDropDownOutlined: SvgIconComponent;
    export const ArrowDropDownRounded: SvgIconComponent;
    export const ArrowDropDownSharp: SvgIconComponent;
    export const ArrowDropDownTwoTone: SvgIconComponent;
    export const ArrowDropUp: SvgIconComponent;
    export const ArrowDropUpOutlined: SvgIconComponent;
    export const ArrowDropUpRounded: SvgIconComponent;
    export const ArrowDropUpSharp: SvgIconComponent;
    export const ArrowDropUpTwoTone: SvgIconComponent;
    export const ArrowForward: SvgIconComponent;
    export const ArrowForwardIos: SvgIconComponent;
    export const ArrowForwardIosOutlined: SvgIconComponent;
    export const ArrowForwardIosRounded: SvgIconComponent;
    export const ArrowForwardIosSharp: SvgIconComponent;
    export const ArrowForwardIosTwoTone: SvgIconComponent;
    export const ArrowForwardOutlined: SvgIconComponent;
    export const ArrowForwardRounded: SvgIconComponent;
    export const ArrowForwardSharp: SvgIconComponent;
    export const ArrowForwardTwoTone: SvgIconComponent;
    export const ArrowLeft: SvgIconComponent;
    export const ArrowLeftOutlined: SvgIconComponent;
    export const ArrowLeftRounded: SvgIconComponent;
    export const ArrowLeftSharp: SvgIconComponent;
    export const ArrowLeftTwoTone: SvgIconComponent;
    export const ArrowRight: SvgIconComponent;
    export const ArrowRightAlt: SvgIconComponent;
    export const ArrowRightAltOutlined: SvgIconComponent;
    export const ArrowRightAltRounded: SvgIconComponent;
    export const ArrowRightAltSharp: SvgIconComponent;
    export const ArrowRightAltTwoTone: SvgIconComponent;
    export const ArrowRightOutlined: SvgIconComponent;
    export const ArrowRightRounded: SvgIconComponent;
    export const ArrowRightSharp: SvgIconComponent;
    export const ArrowRightTwoTone: SvgIconComponent;
    export const ArrowUpward: SvgIconComponent;
    export const ArrowUpwardOutlined: SvgIconComponent;
    export const ArrowUpwardRounded: SvgIconComponent;
    export const ArrowUpwardSharp: SvgIconComponent;
    export const ArrowUpwardTwoTone: SvgIconComponent;
    export const Article: SvgIconComponent;
    export const ArticleOutlined: SvgIconComponent;
    export const ArticleRounded: SvgIconComponent;
    export const ArticleSharp: SvgIconComponent;
    export const ArticleTwoTone: SvgIconComponent;
    export const ArtTrack: SvgIconComponent;
    export const ArtTrackOutlined: SvgIconComponent;
    export const ArtTrackRounded: SvgIconComponent;
    export const ArtTrackSharp: SvgIconComponent;
    export const ArtTrackTwoTone: SvgIconComponent;
    export const AspectRatio: SvgIconComponent;
    export const AspectRatioOutlined: SvgIconComponent;
    export const AspectRatioRounded: SvgIconComponent;
    export const AspectRatioSharp: SvgIconComponent;
    export const AspectRatioTwoTone: SvgIconComponent;
    export const Assessment: SvgIconComponent;
    export const AssessmentOutlined: SvgIconComponent;
    export const AssessmentRounded: SvgIconComponent;
    export const AssessmentSharp: SvgIconComponent;
    export const AssessmentTwoTone: SvgIconComponent;
    export const Assignment: SvgIconComponent;
    export const AssignmentInd: SvgIconComponent;
    export const AssignmentIndOutlined: SvgIconComponent;
    export const AssignmentIndRounded: SvgIconComponent;
    export const AssignmentIndSharp: SvgIconComponent;
    export const AssignmentIndTwoTone: SvgIconComponent;
    export const AssignmentLate: SvgIconComponent;
    export const AssignmentLateOutlined: SvgIconComponent;
    export const AssignmentLateRounded: SvgIconComponent;
    export const AssignmentLateSharp: SvgIconComponent;
    export const AssignmentLateTwoTone: SvgIconComponent;
    export const AssignmentOutlined: SvgIconComponent;
    export const AssignmentReturn: SvgIconComponent;
    export const AssignmentReturned: SvgIconComponent;
    export const AssignmentReturnedOutlined: SvgIconComponent;
    export const AssignmentReturnedRounded: SvgIconComponent;
    export const AssignmentReturnedSharp: SvgIconComponent;
    export const AssignmentReturnedTwoTone: SvgIconComponent;
    export const AssignmentReturnOutlined: SvgIconComponent;
    export const AssignmentReturnRounded: SvgIconComponent;
    export const AssignmentReturnSharp: SvgIconComponent;
    export const AssignmentReturnTwoTone: SvgIconComponent;
    export const AssignmentRounded: SvgIconComponent;
    export const AssignmentSharp: SvgIconComponent;
    export const AssignmentTurnedIn: SvgIconComponent;
    export const AssignmentTurnedInOutlined: SvgIconComponent;
    export const AssignmentTurnedInRounded: SvgIconComponent;
    export const AssignmentTurnedInSharp: SvgIconComponent;
    export const AssignmentTurnedInTwoTone: SvgIconComponent;
    export const AssignmentTwoTone: SvgIconComponent;
    export const Assistant: SvgIconComponent;
    export const AssistantDirection: SvgIconComponent;
    export const AssistantDirectionOutlined: SvgIconComponent;
    export const AssistantDirectionRounded: SvgIconComponent;
    export const AssistantDirectionSharp: SvgIconComponent;
    export const AssistantDirectionTwoTone: SvgIconComponent;
    export const AssistantOutlined: SvgIconComponent;
    export const AssistantPhoto: SvgIconComponent;
    export const AssistantPhotoOutlined: SvgIconComponent;
    export const AssistantPhotoRounded: SvgIconComponent;
    export const AssistantPhotoSharp: SvgIconComponent;
    export const AssistantPhotoTwoTone: SvgIconComponent;
    export const AssistantRounded: SvgIconComponent;
    export const AssistantSharp: SvgIconComponent;
    export const AssistantTwoTone: SvgIconComponent;
    export const AssuredWorkload: SvgIconComponent;
    export const AssuredWorkloadOutlined: SvgIconComponent;
    export const AssuredWorkloadRounded: SvgIconComponent;
    export const AssuredWorkloadSharp: SvgIconComponent;
    export const AssuredWorkloadTwoTone: SvgIconComponent;
    export const Atm: SvgIconComponent;
    export const AtmOutlined: SvgIconComponent;
    export const AtmRounded: SvgIconComponent;
    export const AtmSharp: SvgIconComponent;
    export const AtmTwoTone: SvgIconComponent;
    export const AttachEmail: SvgIconComponent;
    export const AttachEmailOutlined: SvgIconComponent;
    export const AttachEmailRounded: SvgIconComponent;
    export const AttachEmailSharp: SvgIconComponent;
    export const AttachEmailTwoTone: SvgIconComponent;
    export const AttachFile: SvgIconComponent;
    export const AttachFileOutlined: SvgIconComponent;
    export const AttachFileRounded: SvgIconComponent;
    export const AttachFileSharp: SvgIconComponent;
    export const AttachFileTwoTone: SvgIconComponent;
    export const Attachment: SvgIconComponent;
    export const AttachmentOutlined: SvgIconComponent;
    export const AttachmentRounded: SvgIconComponent;
    export const AttachmentSharp: SvgIconComponent;
    export const AttachmentTwoTone: SvgIconComponent;
    export const AttachMoney: SvgIconComponent;
    export const AttachMoneyOutlined: SvgIconComponent;
    export const AttachMoneyRounded: SvgIconComponent;
    export const AttachMoneySharp: SvgIconComponent;
    export const AttachMoneyTwoTone: SvgIconComponent;
    export const Attractions: SvgIconComponent;
    export const AttractionsOutlined: SvgIconComponent;
    export const AttractionsRounded: SvgIconComponent;
    export const AttractionsSharp: SvgIconComponent;
    export const AttractionsTwoTone: SvgIconComponent;
    export const Attribution: SvgIconComponent;
    export const AttributionOutlined: SvgIconComponent;
    export const AttributionRounded: SvgIconComponent;
    export const AttributionSharp: SvgIconComponent;
    export const AttributionTwoTone: SvgIconComponent;
    export const AudioFile: SvgIconComponent;
    export const AudioFileOutlined: SvgIconComponent;
    export const AudioFileRounded: SvgIconComponent;
    export const AudioFileSharp: SvgIconComponent;
    export const AudioFileTwoTone: SvgIconComponent;
    export const Audiotrack: SvgIconComponent;
    export const AudiotrackOutlined: SvgIconComponent;
    export const AudiotrackRounded: SvgIconComponent;
    export const AudiotrackSharp: SvgIconComponent;
    export const AudiotrackTwoTone: SvgIconComponent;
    export const AutoAwesome: SvgIconComponent;
    export const AutoAwesomeMosaic: SvgIconComponent;
    export const AutoAwesomeMosaicOutlined: SvgIconComponent;
    export const AutoAwesomeMosaicRounded: SvgIconComponent;
    export const AutoAwesomeMosaicSharp: SvgIconComponent;
    export const AutoAwesomeMosaicTwoTone: SvgIconComponent;
    export const AutoAwesomeMotion: SvgIconComponent;
    export const AutoAwesomeMotionOutlined: SvgIconComponent;
    export const AutoAwesomeMotionRounded: SvgIconComponent;
    export const AutoAwesomeMotionSharp: SvgIconComponent;
    export const AutoAwesomeMotionTwoTone: SvgIconComponent;
    export const AutoAwesomeOutlined: SvgIconComponent;
    export const AutoAwesomeRounded: SvgIconComponent;
    export const AutoAwesomeSharp: SvgIconComponent;
    export const AutoAwesomeTwoTone: SvgIconComponent;
    export const AutoDelete: SvgIconComponent;
    export const AutoDeleteOutlined: SvgIconComponent;
    export const AutoDeleteRounded: SvgIconComponent;
    export const AutoDeleteSharp: SvgIconComponent;
    export const AutoDeleteTwoTone: SvgIconComponent;
    export const AutoFixHigh: SvgIconComponent;
    export const AutoFixHighOutlined: SvgIconComponent;
    export const AutoFixHighRounded: SvgIconComponent;
    export const AutoFixHighSharp: SvgIconComponent;
    export const AutoFixHighTwoTone: SvgIconComponent;
    export const AutoFixNormal: SvgIconComponent;
    export const AutoFixNormalOutlined: SvgIconComponent;
    export const AutoFixNormalRounded: SvgIconComponent;
    export const AutoFixNormalSharp: SvgIconComponent;
    export const AutoFixNormalTwoTone: SvgIconComponent;
    export const AutoFixOff: SvgIconComponent;
    export const AutoFixOffOutlined: SvgIconComponent;
    export const AutoFixOffRounded: SvgIconComponent;
    export const AutoFixOffSharp: SvgIconComponent;
    export const AutoFixOffTwoTone: SvgIconComponent;
    export const AutofpsSelect: SvgIconComponent;
    export const AutofpsSelectOutlined: SvgIconComponent;
    export const AutofpsSelectRounded: SvgIconComponent;
    export const AutofpsSelectSharp: SvgIconComponent;
    export const AutofpsSelectTwoTone: SvgIconComponent;
    export const AutoGraph: SvgIconComponent;
    export const AutoGraphOutlined: SvgIconComponent;
    export const AutoGraphRounded: SvgIconComponent;
    export const AutoGraphSharp: SvgIconComponent;
    export const AutoGraphTwoTone: SvgIconComponent;
    export const Autorenew: SvgIconComponent;
    export const AutorenewOutlined: SvgIconComponent;
    export const AutorenewRounded: SvgIconComponent;
    export const AutorenewSharp: SvgIconComponent;
    export const AutorenewTwoTone: SvgIconComponent;
    export const AutoStories: SvgIconComponent;
    export const AutoStoriesOutlined: SvgIconComponent;
    export const AutoStoriesRounded: SvgIconComponent;
    export const AutoStoriesSharp: SvgIconComponent;
    export const AutoStoriesTwoTone: SvgIconComponent;
    export const AvTimer: SvgIconComponent;
    export const AvTimerOutlined: SvgIconComponent;
    export const AvTimerRounded: SvgIconComponent;
    export const AvTimerSharp: SvgIconComponent;
    export const AvTimerTwoTone: SvgIconComponent;
    export const BabyChangingStation: SvgIconComponent;
    export const BabyChangingStationOutlined: SvgIconComponent;
    export const BabyChangingStationRounded: SvgIconComponent;
    export const BabyChangingStationSharp: SvgIconComponent;
    export const BabyChangingStationTwoTone: SvgIconComponent;
    export const Backpack: SvgIconComponent;
    export const BackpackOutlined: SvgIconComponent;
    export const BackpackRounded: SvgIconComponent;
    export const BackpackSharp: SvgIconComponent;
    export const BackpackTwoTone: SvgIconComponent;
    export const Backspace: SvgIconComponent;
    export const BackspaceOutlined: SvgIconComponent;
    export const BackspaceRounded: SvgIconComponent;
    export const BackspaceSharp: SvgIconComponent;
    export const BackspaceTwoTone: SvgIconComponent;
    export const Backup: SvgIconComponent;
    export const BackupOutlined: SvgIconComponent;
    export const BackupRounded: SvgIconComponent;
    export const BackupSharp: SvgIconComponent;
    export const BackupTable: SvgIconComponent;
    export const BackupTableOutlined: SvgIconComponent;
    export const BackupTableRounded: SvgIconComponent;
    export const BackupTableSharp: SvgIconComponent;
    export const BackupTableTwoTone: SvgIconComponent;
    export const BackupTwoTone: SvgIconComponent;
    export const Badge: SvgIconComponent;
    export const BadgeOutlined: SvgIconComponent;
    export const BadgeRounded: SvgIconComponent;
    export const BadgeSharp: SvgIconComponent;
    export const BadgeTwoTone: SvgIconComponent;
    export const BakeryDining: SvgIconComponent;
    export const BakeryDiningOutlined: SvgIconComponent;
    export const BakeryDiningRounded: SvgIconComponent;
    export const BakeryDiningSharp: SvgIconComponent;
    export const BakeryDiningTwoTone: SvgIconComponent;
    export const Balance: SvgIconComponent;
    export const BalanceOutlined: SvgIconComponent;
    export const BalanceRounded: SvgIconComponent;
    export const BalanceSharp: SvgIconComponent;
    export const BalanceTwoTone: SvgIconComponent;
    export const Balcony: SvgIconComponent;
    export const BalconyOutlined: SvgIconComponent;
    export const BalconyRounded: SvgIconComponent;
    export const BalconySharp: SvgIconComponent;
    export const BalconyTwoTone: SvgIconComponent;
    export const Ballot: SvgIconComponent;
    export const BallotOutlined: SvgIconComponent;
    export const BallotRounded: SvgIconComponent;
    export const BallotSharp: SvgIconComponent;
    export const BallotTwoTone: SvgIconComponent;
    export const BarChart: SvgIconComponent;
    export const BarChartOutlined: SvgIconComponent;
    export const BarChartRounded: SvgIconComponent;
    export const BarChartSharp: SvgIconComponent;
    export const BarChartTwoTone: SvgIconComponent;
    export const BatchPrediction: SvgIconComponent;
    export const BatchPredictionOutlined: SvgIconComponent;
    export const BatchPredictionRounded: SvgIconComponent;
    export const BatchPredictionSharp: SvgIconComponent;
    export const BatchPredictionTwoTone: SvgIconComponent;
    export const Bathroom: SvgIconComponent;
    export const BathroomOutlined: SvgIconComponent;
    export const BathroomRounded: SvgIconComponent;
    export const BathroomSharp: SvgIconComponent;
    export const BathroomTwoTone: SvgIconComponent;
    export const Bathtub: SvgIconComponent;
    export const BathtubOutlined: SvgIconComponent;
    export const BathtubRounded: SvgIconComponent;
    export const BathtubSharp: SvgIconComponent;
    export const BathtubTwoTone: SvgIconComponent;
    export const Battery20: SvgIconComponent;
    export const Battery20Outlined: SvgIconComponent;
    export const Battery20Rounded: SvgIconComponent;
    export const Battery20Sharp: SvgIconComponent;
    export const Battery20TwoTone: SvgIconComponent;
    export const Battery30: SvgIconComponent;
    export const Battery30Outlined: SvgIconComponent;
    export const Battery30Rounded: SvgIconComponent;
    export const Battery30Sharp: SvgIconComponent;
    export const Battery30TwoTone: SvgIconComponent;
    export const Battery50: SvgIconComponent;
    export const Battery50Outlined: SvgIconComponent;
    export const Battery50Rounded: SvgIconComponent;
    export const Battery50Sharp: SvgIconComponent;
    export const Battery50TwoTone: SvgIconComponent;
    export const Battery60: SvgIconComponent;
    export const Battery60Outlined: SvgIconComponent;
    export const Battery60Rounded: SvgIconComponent;
    export const Battery60Sharp: SvgIconComponent;
    export const Battery60TwoTone: SvgIconComponent;
    export const Battery80: SvgIconComponent;
    export const Battery80Outlined: SvgIconComponent;
    export const Battery80Rounded: SvgIconComponent;
    export const Battery80Sharp: SvgIconComponent;
    export const Battery80TwoTone: SvgIconComponent;
    export const Battery90: SvgIconComponent;
    export const Battery90Outlined: SvgIconComponent;
    export const Battery90Rounded: SvgIconComponent;
    export const Battery90Sharp: SvgIconComponent;
    export const Battery90TwoTone: SvgIconComponent;
    export const BatteryAlert: SvgIconComponent;
    export const BatteryAlertOutlined: SvgIconComponent;
    export const BatteryAlertRounded: SvgIconComponent;
    export const BatteryAlertSharp: SvgIconComponent;
    export const BatteryAlertTwoTone: SvgIconComponent;
    export const BatteryCharging20: SvgIconComponent;
    export const BatteryCharging20Outlined: SvgIconComponent;
    export const BatteryCharging20Rounded: SvgIconComponent;
    export const BatteryCharging20Sharp: SvgIconComponent;
    export const BatteryCharging20TwoTone: SvgIconComponent;
    export const BatteryCharging30: SvgIconComponent;
    export const BatteryCharging30Outlined: SvgIconComponent;
    export const BatteryCharging30Rounded: SvgIconComponent;
    export const BatteryCharging30Sharp: SvgIconComponent;
    export const BatteryCharging30TwoTone: SvgIconComponent;
    export const BatteryCharging50: SvgIconComponent;
    export const BatteryCharging50Outlined: SvgIconComponent;
    export const BatteryCharging50Rounded: SvgIconComponent;
    export const BatteryCharging50Sharp: SvgIconComponent;
    export const BatteryCharging50TwoTone: SvgIconComponent;
    export const BatteryCharging60: SvgIconComponent;
    export const BatteryCharging60Outlined: SvgIconComponent;
    export const BatteryCharging60Rounded: SvgIconComponent;
    export const BatteryCharging60Sharp: SvgIconComponent;
    export const BatteryCharging60TwoTone: SvgIconComponent;
    export const BatteryCharging80: SvgIconComponent;
    export const BatteryCharging80Outlined: SvgIconComponent;
    export const BatteryCharging80Rounded: SvgIconComponent;
    export const BatteryCharging80Sharp: SvgIconComponent;
    export const BatteryCharging80TwoTone: SvgIconComponent;
    export const BatteryCharging90: SvgIconComponent;
    export const BatteryCharging90Outlined: SvgIconComponent;
    export const BatteryCharging90Rounded: SvgIconComponent;
    export const BatteryCharging90Sharp: SvgIconComponent;
    export const BatteryCharging90TwoTone: SvgIconComponent;
    export const BatteryChargingFull: SvgIconComponent;
    export const BatteryChargingFullOutlined: SvgIconComponent;
    export const BatteryChargingFullRounded: SvgIconComponent;
    export const BatteryChargingFullSharp: SvgIconComponent;
    export const BatteryChargingFullTwoTone: SvgIconComponent;
    export const BatteryFull: SvgIconComponent;
    export const BatteryFullOutlined: SvgIconComponent;
    export const BatteryFullRounded: SvgIconComponent;
    export const BatteryFullSharp: SvgIconComponent;
    export const BatteryFullTwoTone: SvgIconComponent;
    export const BatterySaver: SvgIconComponent;
    export const BatterySaverOutlined: SvgIconComponent;
    export const BatterySaverRounded: SvgIconComponent;
    export const BatterySaverSharp: SvgIconComponent;
    export const BatterySaverTwoTone: SvgIconComponent;
    export const BatteryStd: SvgIconComponent;
    export const BatteryStdOutlined: SvgIconComponent;
    export const BatteryStdRounded: SvgIconComponent;
    export const BatteryStdSharp: SvgIconComponent;
    export const BatteryStdTwoTone: SvgIconComponent;
    export const BatteryUnknown: SvgIconComponent;
    export const BatteryUnknownOutlined: SvgIconComponent;
    export const BatteryUnknownRounded: SvgIconComponent;
    export const BatteryUnknownSharp: SvgIconComponent;
    export const BatteryUnknownTwoTone: SvgIconComponent;
    export const BeachAccess: SvgIconComponent;
    export const BeachAccessOutlined: SvgIconComponent;
    export const BeachAccessRounded: SvgIconComponent;
    export const BeachAccessSharp: SvgIconComponent;
    export const BeachAccessTwoTone: SvgIconComponent;
    export const Bed: SvgIconComponent;
    export const BedOutlined: SvgIconComponent;
    export const BedroomBaby: SvgIconComponent;
    export const BedroomBabyOutlined: SvgIconComponent;
    export const BedroomBabyRounded: SvgIconComponent;
    export const BedroomBabySharp: SvgIconComponent;
    export const BedroomBabyTwoTone: SvgIconComponent;
    export const BedroomChild: SvgIconComponent;
    export const BedroomChildOutlined: SvgIconComponent;
    export const BedroomChildRounded: SvgIconComponent;
    export const BedroomChildSharp: SvgIconComponent;
    export const BedroomChildTwoTone: SvgIconComponent;
    export const BedroomParent: SvgIconComponent;
    export const BedroomParentOutlined: SvgIconComponent;
    export const BedroomParentRounded: SvgIconComponent;
    export const BedroomParentSharp: SvgIconComponent;
    export const BedroomParentTwoTone: SvgIconComponent;
    export const BedRounded: SvgIconComponent;
    export const BedSharp: SvgIconComponent;
    export const Bedtime: SvgIconComponent;
    export const BedtimeOff: SvgIconComponent;
    export const BedtimeOffOutlined: SvgIconComponent;
    export const BedtimeOffRounded: SvgIconComponent;
    export const BedtimeOffSharp: SvgIconComponent;
    export const BedtimeOffTwoTone: SvgIconComponent;
    export const BedtimeOutlined: SvgIconComponent;
    export const BedtimeRounded: SvgIconComponent;
    export const BedtimeSharp: SvgIconComponent;
    export const BedtimeTwoTone: SvgIconComponent;
    export const BedTwoTone: SvgIconComponent;
    export const Beenhere: SvgIconComponent;
    export const BeenhereOutlined: SvgIconComponent;
    export const BeenhereRounded: SvgIconComponent;
    export const BeenhereSharp: SvgIconComponent;
    export const BeenhereTwoTone: SvgIconComponent;
    export const Bento: SvgIconComponent;
    export const BentoOutlined: SvgIconComponent;
    export const BentoRounded: SvgIconComponent;
    export const BentoSharp: SvgIconComponent;
    export const BentoTwoTone: SvgIconComponent;
    export const BikeScooter: SvgIconComponent;
    export const BikeScooterOutlined: SvgIconComponent;
    export const BikeScooterRounded: SvgIconComponent;
    export const BikeScooterSharp: SvgIconComponent;
    export const BikeScooterTwoTone: SvgIconComponent;
    export const Biotech: SvgIconComponent;
    export const BiotechOutlined: SvgIconComponent;
    export const BiotechRounded: SvgIconComponent;
    export const BiotechSharp: SvgIconComponent;
    export const BiotechTwoTone: SvgIconComponent;
    export const Blender: SvgIconComponent;
    export const BlenderOutlined: SvgIconComponent;
    export const BlenderRounded: SvgIconComponent;
    export const BlenderSharp: SvgIconComponent;
    export const BlenderTwoTone: SvgIconComponent;
    export const Block: SvgIconComponent;
    export const BlockOutlined: SvgIconComponent;
    export const BlockRounded: SvgIconComponent;
    export const BlockSharp: SvgIconComponent;
    export const BlockTwoTone: SvgIconComponent;
    export const Bloodtype: SvgIconComponent;
    export const BloodtypeOutlined: SvgIconComponent;
    export const BloodtypeRounded: SvgIconComponent;
    export const BloodtypeSharp: SvgIconComponent;
    export const BloodtypeTwoTone: SvgIconComponent;
    export const Bluetooth: SvgIconComponent;
    export const BluetoothAudio: SvgIconComponent;
    export const BluetoothAudioOutlined: SvgIconComponent;
    export const BluetoothAudioRounded: SvgIconComponent;
    export const BluetoothAudioSharp: SvgIconComponent;
    export const BluetoothAudioTwoTone: SvgIconComponent;
    export const BluetoothConnected: SvgIconComponent;
    export const BluetoothConnectedOutlined: SvgIconComponent;
    export const BluetoothConnectedRounded: SvgIconComponent;
    export const BluetoothConnectedSharp: SvgIconComponent;
    export const BluetoothConnectedTwoTone: SvgIconComponent;
    export const BluetoothDisabled: SvgIconComponent;
    export const BluetoothDisabledOutlined: SvgIconComponent;
    export const BluetoothDisabledRounded: SvgIconComponent;
    export const BluetoothDisabledSharp: SvgIconComponent;
    export const BluetoothDisabledTwoTone: SvgIconComponent;
    export const BluetoothDrive: SvgIconComponent;
    export const BluetoothDriveOutlined: SvgIconComponent;
    export const BluetoothDriveRounded: SvgIconComponent;
    export const BluetoothDriveSharp: SvgIconComponent;
    export const BluetoothDriveTwoTone: SvgIconComponent;
    export const BluetoothOutlined: SvgIconComponent;
    export const BluetoothRounded: SvgIconComponent;
    export const BluetoothSearching: SvgIconComponent;
    export const BluetoothSearchingOutlined: SvgIconComponent;
    export const BluetoothSearchingRounded: SvgIconComponent;
    export const BluetoothSearchingSharp: SvgIconComponent;
    export const BluetoothSearchingTwoTone: SvgIconComponent;
    export const BluetoothSharp: SvgIconComponent;
    export const BluetoothTwoTone: SvgIconComponent;
    export const BlurCircular: SvgIconComponent;
    export const BlurCircularOutlined: SvgIconComponent;
    export const BlurCircularRounded: SvgIconComponent;
    export const BlurCircularSharp: SvgIconComponent;
    export const BlurCircularTwoTone: SvgIconComponent;
    export const BlurLinear: SvgIconComponent;
    export const BlurLinearOutlined: SvgIconComponent;
    export const BlurLinearRounded: SvgIconComponent;
    export const BlurLinearSharp: SvgIconComponent;
    export const BlurLinearTwoTone: SvgIconComponent;
    export const BlurOff: SvgIconComponent;
    export const BlurOffOutlined: SvgIconComponent;
    export const BlurOffRounded: SvgIconComponent;
    export const BlurOffSharp: SvgIconComponent;
    export const BlurOffTwoTone: SvgIconComponent;
    export const BlurOn: SvgIconComponent;
    export const BlurOnOutlined: SvgIconComponent;
    export const BlurOnRounded: SvgIconComponent;
    export const BlurOnSharp: SvgIconComponent;
    export const BlurOnTwoTone: SvgIconComponent;
    export const Bolt: SvgIconComponent;
    export const BoltOutlined: SvgIconComponent;
    export const BoltRounded: SvgIconComponent;
    export const BoltSharp: SvgIconComponent;
    export const BoltTwoTone: SvgIconComponent;
    export const Book: SvgIconComponent;
    export const Bookmark: SvgIconComponent;
    export const BookmarkAdd: SvgIconComponent;
    export const BookmarkAdded: SvgIconComponent;
    export const BookmarkAddedOutlined: SvgIconComponent;
    export const BookmarkAddedRounded: SvgIconComponent;
    export const BookmarkAddedSharp: SvgIconComponent;
    export const BookmarkAddedTwoTone: SvgIconComponent;
    export const BookmarkAddOutlined: SvgIconComponent;
    export const BookmarkAddRounded: SvgIconComponent;
    export const BookmarkAddSharp: SvgIconComponent;
    export const BookmarkAddTwoTone: SvgIconComponent;
    export const BookmarkBorder: SvgIconComponent;
    export const BookmarkBorderOutlined: SvgIconComponent;
    export const BookmarkBorderRounded: SvgIconComponent;
    export const BookmarkBorderSharp: SvgIconComponent;
    export const BookmarkBorderTwoTone: SvgIconComponent;
    export const BookmarkOutlined: SvgIconComponent;
    export const BookmarkRemove: SvgIconComponent;
    export const BookmarkRemoveOutlined: SvgIconComponent;
    export const BookmarkRemoveRounded: SvgIconComponent;
    export const BookmarkRemoveSharp: SvgIconComponent;
    export const BookmarkRemoveTwoTone: SvgIconComponent;
    export const BookmarkRounded: SvgIconComponent;
    export const Bookmarks: SvgIconComponent;
    export const BookmarkSharp: SvgIconComponent;
    export const BookmarksOutlined: SvgIconComponent;
    export const BookmarksRounded: SvgIconComponent;
    export const BookmarksSharp: SvgIconComponent;
    export const BookmarksTwoTone: SvgIconComponent;
    export const BookmarkTwoTone: SvgIconComponent;
    export const BookOnline: SvgIconComponent;
    export const BookOnlineOutlined: SvgIconComponent;
    export const BookOnlineRounded: SvgIconComponent;
    export const BookOnlineSharp: SvgIconComponent;
    export const BookOnlineTwoTone: SvgIconComponent;
    export const BookOutlined: SvgIconComponent;
    export const BookRounded: SvgIconComponent;
    export const BookSharp: SvgIconComponent;
    export const BookTwoTone: SvgIconComponent;
    export const BorderAll: SvgIconComponent;
    export const BorderAllOutlined: SvgIconComponent;
    export const BorderAllRounded: SvgIconComponent;
    export const BorderAllSharp: SvgIconComponent;
    export const BorderAllTwoTone: SvgIconComponent;
    export const BorderBottom: SvgIconComponent;
    export const BorderBottomOutlined: SvgIconComponent;
    export const BorderBottomRounded: SvgIconComponent;
    export const BorderBottomSharp: SvgIconComponent;
    export const BorderBottomTwoTone: SvgIconComponent;
    export const BorderClear: SvgIconComponent;
    export const BorderClearOutlined: SvgIconComponent;
    export const BorderClearRounded: SvgIconComponent;
    export const BorderClearSharp: SvgIconComponent;
    export const BorderClearTwoTone: SvgIconComponent;
    export const BorderColor: SvgIconComponent;
    export const BorderColorOutlined: SvgIconComponent;
    export const BorderColorRounded: SvgIconComponent;
    export const BorderColorSharp: SvgIconComponent;
    export const BorderColorTwoTone: SvgIconComponent;
    export const BorderHorizontal: SvgIconComponent;
    export const BorderHorizontalOutlined: SvgIconComponent;
    export const BorderHorizontalRounded: SvgIconComponent;
    export const BorderHorizontalSharp: SvgIconComponent;
    export const BorderHorizontalTwoTone: SvgIconComponent;
    export const BorderInner: SvgIconComponent;
    export const BorderInnerOutlined: SvgIconComponent;
    export const BorderInnerRounded: SvgIconComponent;
    export const BorderInnerSharp: SvgIconComponent;
    export const BorderInnerTwoTone: SvgIconComponent;
    export const BorderLeft: SvgIconComponent;
    export const BorderLeftOutlined: SvgIconComponent;
    export const BorderLeftRounded: SvgIconComponent;
    export const BorderLeftSharp: SvgIconComponent;
    export const BorderLeftTwoTone: SvgIconComponent;
    export const BorderOuter: SvgIconComponent;
    export const BorderOuterOutlined: SvgIconComponent;
    export const BorderOuterRounded: SvgIconComponent;
    export const BorderOuterSharp: SvgIconComponent;
    export const BorderOuterTwoTone: SvgIconComponent;
    export const BorderRight: SvgIconComponent;
    export const BorderRightOutlined: SvgIconComponent;
    export const BorderRightRounded: SvgIconComponent;
    export const BorderRightSharp: SvgIconComponent;
    export const BorderRightTwoTone: SvgIconComponent;
    export const BorderStyle: SvgIconComponent;
    export const BorderStyleOutlined: SvgIconComponent;
    export const BorderStyleRounded: SvgIconComponent;
    export const BorderStyleSharp: SvgIconComponent;
    export const BorderStyleTwoTone: SvgIconComponent;
    export const BorderTop: SvgIconComponent;
    export const BorderTopOutlined: SvgIconComponent;
    export const BorderTopRounded: SvgIconComponent;
    export const BorderTopSharp: SvgIconComponent;
    export const BorderTopTwoTone: SvgIconComponent;
    export const BorderVertical: SvgIconComponent;
    export const BorderVerticalOutlined: SvgIconComponent;
    export const BorderVerticalRounded: SvgIconComponent;
    export const BorderVerticalSharp: SvgIconComponent;
    export const BorderVerticalTwoTone: SvgIconComponent;
    export const Boy: SvgIconComponent;
    export const BoyOutlined: SvgIconComponent;
    export const BoyRounded: SvgIconComponent;
    export const BoySharp: SvgIconComponent;
    export const BoyTwoTone: SvgIconComponent;
    export const BrandingWatermark: SvgIconComponent;
    export const BrandingWatermarkOutlined: SvgIconComponent;
    export const BrandingWatermarkRounded: SvgIconComponent;
    export const BrandingWatermarkSharp: SvgIconComponent;
    export const BrandingWatermarkTwoTone: SvgIconComponent;
    export const BreakfastDining: SvgIconComponent;
    export const BreakfastDiningOutlined: SvgIconComponent;
    export const BreakfastDiningRounded: SvgIconComponent;
    export const BreakfastDiningSharp: SvgIconComponent;
    export const BreakfastDiningTwoTone: SvgIconComponent;
    export const Brightness1: SvgIconComponent;
    export const Brightness1Outlined: SvgIconComponent;
    export const Brightness1Rounded: SvgIconComponent;
    export const Brightness1Sharp: SvgIconComponent;
    export const Brightness1TwoTone: SvgIconComponent;
    export const Brightness2: SvgIconComponent;
    export const Brightness2Outlined: SvgIconComponent;
    export const Brightness2Rounded: SvgIconComponent;
    export const Brightness2Sharp: SvgIconComponent;
    export const Brightness2TwoTone: SvgIconComponent;
    export const Brightness3: SvgIconComponent;
    export const Brightness3Outlined: SvgIconComponent;
    export const Brightness3Rounded: SvgIconComponent;
    export const Brightness3Sharp: SvgIconComponent;
    export const Brightness3TwoTone: SvgIconComponent;
    export const Brightness4: SvgIconComponent;
    export const Brightness4Outlined: SvgIconComponent;
    export const Brightness4Rounded: SvgIconComponent;
    export const Brightness4Sharp: SvgIconComponent;
    export const Brightness4TwoTone: SvgIconComponent;
    export const Brightness5: SvgIconComponent;
    export const Brightness5Outlined: SvgIconComponent;
    export const Brightness5Rounded: SvgIconComponent;
    export const Brightness5Sharp: SvgIconComponent;
    export const Brightness5TwoTone: SvgIconComponent;
    export const Brightness6: SvgIconComponent;
    export const Brightness6Outlined: SvgIconComponent;
    export const Brightness6Rounded: SvgIconComponent;
    export const Brightness6Sharp: SvgIconComponent;
    export const Brightness6TwoTone: SvgIconComponent;
    export const Brightness7: SvgIconComponent;
    export const Brightness7Outlined: SvgIconComponent;
    export const Brightness7Rounded: SvgIconComponent;
    export const Brightness7Sharp: SvgIconComponent;
    export const Brightness7TwoTone: SvgIconComponent;
    export const BrightnessAuto: SvgIconComponent;
    export const BrightnessAutoOutlined: SvgIconComponent;
    export const BrightnessAutoRounded: SvgIconComponent;
    export const BrightnessAutoSharp: SvgIconComponent;
    export const BrightnessAutoTwoTone: SvgIconComponent;
    export const BrightnessHigh: SvgIconComponent;
    export const BrightnessHighOutlined: SvgIconComponent;
    export const BrightnessHighRounded: SvgIconComponent;
    export const BrightnessHighSharp: SvgIconComponent;
    export const BrightnessHighTwoTone: SvgIconComponent;
    export const BrightnessLow: SvgIconComponent;
    export const BrightnessLowOutlined: SvgIconComponent;
    export const BrightnessLowRounded: SvgIconComponent;
    export const BrightnessLowSharp: SvgIconComponent;
    export const BrightnessLowTwoTone: SvgIconComponent;
    export const BrightnessMedium: SvgIconComponent;
    export const BrightnessMediumOutlined: SvgIconComponent;
    export const BrightnessMediumRounded: SvgIconComponent;
    export const BrightnessMediumSharp: SvgIconComponent;
    export const BrightnessMediumTwoTone: SvgIconComponent;
    export const BrokenImage: SvgIconComponent;
    export const BrokenImageOutlined: SvgIconComponent;
    export const BrokenImageRounded: SvgIconComponent;
    export const BrokenImageSharp: SvgIconComponent;
    export const BrokenImageTwoTone: SvgIconComponent;
    export const BrowserNotSupported: SvgIconComponent;
    export const BrowserNotSupportedOutlined: SvgIconComponent;
    export const BrowserNotSupportedRounded: SvgIconComponent;
    export const BrowserNotSupportedSharp: SvgIconComponent;
    export const BrowserNotSupportedTwoTone: SvgIconComponent;
    export const BrowserUpdated: SvgIconComponent;
    export const BrowserUpdatedOutlined: SvgIconComponent;
    export const BrowserUpdatedRounded: SvgIconComponent;
    export const BrowserUpdatedSharp: SvgIconComponent;
    export const BrowserUpdatedTwoTone: SvgIconComponent;
    export const BrunchDining: SvgIconComponent;
    export const BrunchDiningOutlined: SvgIconComponent;
    export const BrunchDiningRounded: SvgIconComponent;
    export const BrunchDiningSharp: SvgIconComponent;
    export const BrunchDiningTwoTone: SvgIconComponent;
    export const Brush: SvgIconComponent;
    export const BrushOutlined: SvgIconComponent;
    export const BrushRounded: SvgIconComponent;
    export const BrushSharp: SvgIconComponent;
    export const BrushTwoTone: SvgIconComponent;
    export const BubbleChart: SvgIconComponent;
    export const BubbleChartOutlined: SvgIconComponent;
    export const BubbleChartRounded: SvgIconComponent;
    export const BubbleChartSharp: SvgIconComponent;
    export const BubbleChartTwoTone: SvgIconComponent;
    export const BugReport: SvgIconComponent;
    export const BugReportOutlined: SvgIconComponent;
    export const BugReportRounded: SvgIconComponent;
    export const BugReportSharp: SvgIconComponent;
    export const BugReportTwoTone: SvgIconComponent;
    export const Build: SvgIconComponent;
    export const BuildCircle: SvgIconComponent;
    export const BuildCircleOutlined: SvgIconComponent;
    export const BuildCircleRounded: SvgIconComponent;
    export const BuildCircleSharp: SvgIconComponent;
    export const BuildCircleTwoTone: SvgIconComponent;
    export const BuildOutlined: SvgIconComponent;
    export const BuildRounded: SvgIconComponent;
    export const BuildSharp: SvgIconComponent;
    export const BuildTwoTone: SvgIconComponent;
    export const Bungalow: SvgIconComponent;
    export const BungalowOutlined: SvgIconComponent;
    export const BungalowRounded: SvgIconComponent;
    export const BungalowSharp: SvgIconComponent;
    export const BungalowTwoTone: SvgIconComponent;
    export const BurstMode: SvgIconComponent;
    export const BurstModeOutlined: SvgIconComponent;
    export const BurstModeRounded: SvgIconComponent;
    export const BurstModeSharp: SvgIconComponent;
    export const BurstModeTwoTone: SvgIconComponent;
    export const BusAlert: SvgIconComponent;
    export const BusAlertOutlined: SvgIconComponent;
    export const BusAlertRounded: SvgIconComponent;
    export const BusAlertSharp: SvgIconComponent;
    export const BusAlertTwoTone: SvgIconComponent;
    export const Business: SvgIconComponent;
    export const BusinessCenter: SvgIconComponent;
    export const BusinessCenterOutlined: SvgIconComponent;
    export const BusinessCenterRounded: SvgIconComponent;
    export const BusinessCenterSharp: SvgIconComponent;
    export const BusinessCenterTwoTone: SvgIconComponent;
    export const BusinessOutlined: SvgIconComponent;
    export const BusinessRounded: SvgIconComponent;
    export const BusinessSharp: SvgIconComponent;
    export const BusinessTwoTone: SvgIconComponent;
    export const Cabin: SvgIconComponent;
    export const CabinOutlined: SvgIconComponent;
    export const CabinRounded: SvgIconComponent;
    export const CabinSharp: SvgIconComponent;
    export const CabinTwoTone: SvgIconComponent;
    export const Cable: SvgIconComponent;
    export const CableOutlined: SvgIconComponent;
    export const CableRounded: SvgIconComponent;
    export const CableSharp: SvgIconComponent;
    export const CableTwoTone: SvgIconComponent;
    export const Cached: SvgIconComponent;
    export const CachedOutlined: SvgIconComponent;
    export const CachedRounded: SvgIconComponent;
    export const CachedSharp: SvgIconComponent;
    export const CachedTwoTone: SvgIconComponent;
    export const Cake: SvgIconComponent;
    export const CakeOutlined: SvgIconComponent;
    export const CakeRounded: SvgIconComponent;
    export const CakeSharp: SvgIconComponent;
    export const CakeTwoTone: SvgIconComponent;
    export const Calculate: SvgIconComponent;
    export const CalculateOutlined: SvgIconComponent;
    export const CalculateRounded: SvgIconComponent;
    export const CalculateSharp: SvgIconComponent;
    export const CalculateTwoTone: SvgIconComponent;
    export const CalendarToday: SvgIconComponent;
    export const CalendarTodayOutlined: SvgIconComponent;
    export const CalendarTodayRounded: SvgIconComponent;
    export const CalendarTodaySharp: SvgIconComponent;
    export const CalendarTodayTwoTone: SvgIconComponent;
    export const CalendarViewDay: SvgIconComponent;
    export const CalendarViewDayOutlined: SvgIconComponent;
    export const CalendarViewDayRounded: SvgIconComponent;
    export const CalendarViewDaySharp: SvgIconComponent;
    export const CalendarViewDayTwoTone: SvgIconComponent;
    export const CalendarViewMonth: SvgIconComponent;
    export const CalendarViewMonthOutlined: SvgIconComponent;
    export const CalendarViewMonthRounded: SvgIconComponent;
    export const CalendarViewMonthSharp: SvgIconComponent;
    export const CalendarViewMonthTwoTone: SvgIconComponent;
    export const CalendarViewWeek: SvgIconComponent;
    export const CalendarViewWeekOutlined: SvgIconComponent;
    export const CalendarViewWeekRounded: SvgIconComponent;
    export const CalendarViewWeekSharp: SvgIconComponent;
    export const CalendarViewWeekTwoTone: SvgIconComponent;
    export const Call: SvgIconComponent;
    export const CallEnd: SvgIconComponent;
    export const CallEndOutlined: SvgIconComponent;
    export const CallEndRounded: SvgIconComponent;
    export const CallEndSharp: SvgIconComponent;
    export const CallEndTwoTone: SvgIconComponent;
    export const CallMade: SvgIconComponent;
    export const CallMadeOutlined: SvgIconComponent;
    export const CallMadeRounded: SvgIconComponent;
    export const CallMadeSharp: SvgIconComponent;
    export const CallMadeTwoTone: SvgIconComponent;
    export const CallMerge: SvgIconComponent;
    export const CallMergeOutlined: SvgIconComponent;
    export const CallMergeRounded: SvgIconComponent;
    export const CallMergeSharp: SvgIconComponent;
    export const CallMergeTwoTone: SvgIconComponent;
    export const CallMissed: SvgIconComponent;
    export const CallMissedOutgoing: SvgIconComponent;
    export const CallMissedOutgoingOutlined: SvgIconComponent;
    export const CallMissedOutgoingRounded: SvgIconComponent;
    export const CallMissedOutgoingSharp: SvgIconComponent;
    export const CallMissedOutgoingTwoTone: SvgIconComponent;
    export const CallMissedOutlined: SvgIconComponent;
    export const CallMissedRounded: SvgIconComponent;
    export const CallMissedSharp: SvgIconComponent;
    export const CallMissedTwoTone: SvgIconComponent;
    export const CallOutlined: SvgIconComponent;
    export const CallReceived: SvgIconComponent;
    export const CallReceivedOutlined: SvgIconComponent;
    export const CallReceivedRounded: SvgIconComponent;
    export const CallReceivedSharp: SvgIconComponent;
    export const CallReceivedTwoTone: SvgIconComponent;
    export const CallRounded: SvgIconComponent;
    export const CallSharp: SvgIconComponent;
    export const CallSplit: SvgIconComponent;
    export const CallSplitOutlined: SvgIconComponent;
    export const CallSplitRounded: SvgIconComponent;
    export const CallSplitSharp: SvgIconComponent;
    export const CallSplitTwoTone: SvgIconComponent;
    export const CallToAction: SvgIconComponent;
    export const CallToActionOutlined: SvgIconComponent;
    export const CallToActionRounded: SvgIconComponent;
    export const CallToActionSharp: SvgIconComponent;
    export const CallToActionTwoTone: SvgIconComponent;
    export const CallTwoTone: SvgIconComponent;
    export const Camera: SvgIconComponent;
    export const CameraAlt: SvgIconComponent;
    export const CameraAltOutlined: SvgIconComponent;
    export const CameraAltRounded: SvgIconComponent;
    export const CameraAltSharp: SvgIconComponent;
    export const CameraAltTwoTone: SvgIconComponent;
    export const CameraEnhance: SvgIconComponent;
    export const CameraEnhanceOutlined: SvgIconComponent;
    export const CameraEnhanceRounded: SvgIconComponent;
    export const CameraEnhanceSharp: SvgIconComponent;
    export const CameraEnhanceTwoTone: SvgIconComponent;
    export const CameraFront: SvgIconComponent;
    export const CameraFrontOutlined: SvgIconComponent;
    export const CameraFrontRounded: SvgIconComponent;
    export const CameraFrontSharp: SvgIconComponent;
    export const CameraFrontTwoTone: SvgIconComponent;
    export const CameraIndoor: SvgIconComponent;
    export const CameraIndoorOutlined: SvgIconComponent;
    export const CameraIndoorRounded: SvgIconComponent;
    export const CameraIndoorSharp: SvgIconComponent;
    export const CameraIndoorTwoTone: SvgIconComponent;
    export const CameraOutdoor: SvgIconComponent;
    export const CameraOutdoorOutlined: SvgIconComponent;
    export const CameraOutdoorRounded: SvgIconComponent;
    export const CameraOutdoorSharp: SvgIconComponent;
    export const CameraOutdoorTwoTone: SvgIconComponent;
    export const CameraOutlined: SvgIconComponent;
    export const CameraRear: SvgIconComponent;
    export const CameraRearOutlined: SvgIconComponent;
    export const CameraRearRounded: SvgIconComponent;
    export const CameraRearSharp: SvgIconComponent;
    export const CameraRearTwoTone: SvgIconComponent;
    export const CameraRoll: SvgIconComponent;
    export const CameraRollOutlined: SvgIconComponent;
    export const CameraRollRounded: SvgIconComponent;
    export const CameraRollSharp: SvgIconComponent;
    export const CameraRollTwoTone: SvgIconComponent;
    export const CameraRounded: SvgIconComponent;
    export const CameraSharp: SvgIconComponent;
    export const Cameraswitch: SvgIconComponent;
    export const CameraswitchOutlined: SvgIconComponent;
    export const CameraswitchRounded: SvgIconComponent;
    export const CameraswitchSharp: SvgIconComponent;
    export const CameraswitchTwoTone: SvgIconComponent;
    export const CameraTwoTone: SvgIconComponent;
    export const Campaign: SvgIconComponent;
    export const CampaignOutlined: SvgIconComponent;
    export const CampaignRounded: SvgIconComponent;
    export const CampaignSharp: SvgIconComponent;
    export const CampaignTwoTone: SvgIconComponent;
    export const Cancel: SvgIconComponent;
    export const CancelOutlined: SvgIconComponent;
    export const CancelPresentation: SvgIconComponent;
    export const CancelPresentationOutlined: SvgIconComponent;
    export const CancelPresentationRounded: SvgIconComponent;
    export const CancelPresentationSharp: SvgIconComponent;
    export const CancelPresentationTwoTone: SvgIconComponent;
    export const CancelRounded: SvgIconComponent;
    export const CancelScheduleSend: SvgIconComponent;
    export const CancelScheduleSendOutlined: SvgIconComponent;
    export const CancelScheduleSendRounded: SvgIconComponent;
    export const CancelScheduleSendSharp: SvgIconComponent;
    export const CancelScheduleSendTwoTone: SvgIconComponent;
    export const CancelSharp: SvgIconComponent;
    export const CancelTwoTone: SvgIconComponent;
    export const CandlestickChart: SvgIconComponent;
    export const CandlestickChartOutlined: SvgIconComponent;
    export const CandlestickChartRounded: SvgIconComponent;
    export const CandlestickChartSharp: SvgIconComponent;
    export const CandlestickChartTwoTone: SvgIconComponent;
    export const CardGiftcard: SvgIconComponent;
    export const CardGiftcardOutlined: SvgIconComponent;
    export const CardGiftcardRounded: SvgIconComponent;
    export const CardGiftcardSharp: SvgIconComponent;
    export const CardGiftcardTwoTone: SvgIconComponent;
    export const CardMembership: SvgIconComponent;
    export const CardMembershipOutlined: SvgIconComponent;
    export const CardMembershipRounded: SvgIconComponent;
    export const CardMembershipSharp: SvgIconComponent;
    export const CardMembershipTwoTone: SvgIconComponent;
    export const CardTravel: SvgIconComponent;
    export const CardTravelOutlined: SvgIconComponent;
    export const CardTravelRounded: SvgIconComponent;
    export const CardTravelSharp: SvgIconComponent;
    export const CardTravelTwoTone: SvgIconComponent;
    export const Carpenter: SvgIconComponent;
    export const CarpenterOutlined: SvgIconComponent;
    export const CarpenterRounded: SvgIconComponent;
    export const CarpenterSharp: SvgIconComponent;
    export const CarpenterTwoTone: SvgIconComponent;
    export const CarRental: SvgIconComponent;
    export const CarRentalOutlined: SvgIconComponent;
    export const CarRentalRounded: SvgIconComponent;
    export const CarRentalSharp: SvgIconComponent;
    export const CarRentalTwoTone: SvgIconComponent;
    export const CarRepair: SvgIconComponent;
    export const CarRepairOutlined: SvgIconComponent;
    export const CarRepairRounded: SvgIconComponent;
    export const CarRepairSharp: SvgIconComponent;
    export const CarRepairTwoTone: SvgIconComponent;
    export const Cases: SvgIconComponent;
    export const CasesOutlined: SvgIconComponent;
    export const CasesRounded: SvgIconComponent;
    export const CasesSharp: SvgIconComponent;
    export const CasesTwoTone: SvgIconComponent;
    export const Casino: SvgIconComponent;
    export const CasinoOutlined: SvgIconComponent;
    export const CasinoRounded: SvgIconComponent;
    export const CasinoSharp: SvgIconComponent;
    export const CasinoTwoTone: SvgIconComponent;
    export const Cast: SvgIconComponent;
    export const CastConnected: SvgIconComponent;
    export const CastConnectedOutlined: SvgIconComponent;
    export const CastConnectedRounded: SvgIconComponent;
    export const CastConnectedSharp: SvgIconComponent;
    export const CastConnectedTwoTone: SvgIconComponent;
    export const CastForEducation: SvgIconComponent;
    export const CastForEducationOutlined: SvgIconComponent;
    export const CastForEducationRounded: SvgIconComponent;
    export const CastForEducationSharp: SvgIconComponent;
    export const CastForEducationTwoTone: SvgIconComponent;
    export const Castle: SvgIconComponent;
    export const CastleOutlined: SvgIconComponent;
    export const CastleRounded: SvgIconComponent;
    export const CastleSharp: SvgIconComponent;
    export const CastleTwoTone: SvgIconComponent;
    export const CastOutlined: SvgIconComponent;
    export const CastRounded: SvgIconComponent;
    export const CastSharp: SvgIconComponent;
    export const CastTwoTone: SvgIconComponent;
    export const CatchingPokemon: SvgIconComponent;
    export const CatchingPokemonOutlined: SvgIconComponent;
    export const CatchingPokemonRounded: SvgIconComponent;
    export const CatchingPokemonSharp: SvgIconComponent;
    export const CatchingPokemonTwoTone: SvgIconComponent;
    export const Category: SvgIconComponent;
    export const CategoryOutlined: SvgIconComponent;
    export const CategoryRounded: SvgIconComponent;
    export const CategorySharp: SvgIconComponent;
    export const CategoryTwoTone: SvgIconComponent;
    export const Celebration: SvgIconComponent;
    export const CelebrationOutlined: SvgIconComponent;
    export const CelebrationRounded: SvgIconComponent;
    export const CelebrationSharp: SvgIconComponent;
    export const CelebrationTwoTone: SvgIconComponent;
    export const CellTower: SvgIconComponent;
    export const CellTowerOutlined: SvgIconComponent;
    export const CellTowerRounded: SvgIconComponent;
    export const CellTowerSharp: SvgIconComponent;
    export const CellTowerTwoTone: SvgIconComponent;
    export const CellWifi: SvgIconComponent;
    export const CellWifiOutlined: SvgIconComponent;
    export const CellWifiRounded: SvgIconComponent;
    export const CellWifiSharp: SvgIconComponent;
    export const CellWifiTwoTone: SvgIconComponent;
    export const CenterFocusStrong: SvgIconComponent;
    export const CenterFocusStrongOutlined: SvgIconComponent;
    export const CenterFocusStrongRounded: SvgIconComponent;
    export const CenterFocusStrongSharp: SvgIconComponent;
    export const CenterFocusStrongTwoTone: SvgIconComponent;
    export const CenterFocusWeak: SvgIconComponent;
    export const CenterFocusWeakOutlined: SvgIconComponent;
    export const CenterFocusWeakRounded: SvgIconComponent;
    export const CenterFocusWeakSharp: SvgIconComponent;
    export const CenterFocusWeakTwoTone: SvgIconComponent;
    export const Chair: SvgIconComponent;
    export const ChairAlt: SvgIconComponent;
    export const ChairAltOutlined: SvgIconComponent;
    export const ChairAltRounded: SvgIconComponent;
    export const ChairAltSharp: SvgIconComponent;
    export const ChairAltTwoTone: SvgIconComponent;
    export const ChairOutlined: SvgIconComponent;
    export const ChairRounded: SvgIconComponent;
    export const ChairSharp: SvgIconComponent;
    export const ChairTwoTone: SvgIconComponent;
    export const Chalet: SvgIconComponent;
    export const ChaletOutlined: SvgIconComponent;
    export const ChaletRounded: SvgIconComponent;
    export const ChaletSharp: SvgIconComponent;
    export const ChaletTwoTone: SvgIconComponent;
    export const ChangeCircle: SvgIconComponent;
    export const ChangeCircleOutlined: SvgIconComponent;
    export const ChangeCircleRounded: SvgIconComponent;
    export const ChangeCircleSharp: SvgIconComponent;
    export const ChangeCircleTwoTone: SvgIconComponent;
    export const ChangeHistory: SvgIconComponent;
    export const ChangeHistoryOutlined: SvgIconComponent;
    export const ChangeHistoryRounded: SvgIconComponent;
    export const ChangeHistorySharp: SvgIconComponent;
    export const ChangeHistoryTwoTone: SvgIconComponent;
    export const ChargingStation: SvgIconComponent;
    export const ChargingStationOutlined: SvgIconComponent;
    export const ChargingStationRounded: SvgIconComponent;
    export const ChargingStationSharp: SvgIconComponent;
    export const ChargingStationTwoTone: SvgIconComponent;
    export const Chat: SvgIconComponent;
    export const ChatBubble: SvgIconComponent;
    export const ChatBubbleOutline: SvgIconComponent;
    export const ChatBubbleOutlined: SvgIconComponent;
    export const ChatBubbleOutlineOutlined: SvgIconComponent;
    export const ChatBubbleOutlineRounded: SvgIconComponent;
    export const ChatBubbleOutlineSharp: SvgIconComponent;
    export const ChatBubbleOutlineTwoTone: SvgIconComponent;
    export const ChatBubbleRounded: SvgIconComponent;
    export const ChatBubbleSharp: SvgIconComponent;
    export const ChatBubbleTwoTone: SvgIconComponent;
    export const ChatOutlined: SvgIconComponent;
    export const ChatRounded: SvgIconComponent;
    export const ChatSharp: SvgIconComponent;
    export const ChatTwoTone: SvgIconComponent;
    export const Check: SvgIconComponent;
    export const CheckBox: SvgIconComponent;
    export const CheckBoxOutlineBlank: SvgIconComponent;
    export const CheckBoxOutlineBlankOutlined: SvgIconComponent;
    export const CheckBoxOutlineBlankRounded: SvgIconComponent;
    export const CheckBoxOutlineBlankSharp: SvgIconComponent;
    export const CheckBoxOutlineBlankTwoTone: SvgIconComponent;
    export const CheckBoxOutlined: SvgIconComponent;
    export const CheckBoxRounded: SvgIconComponent;
    export const CheckBoxSharp: SvgIconComponent;
    export const CheckBoxTwoTone: SvgIconComponent;
    export const CheckCircle: SvgIconComponent;
    export const CheckCircleOutline: SvgIconComponent;
    export const CheckCircleOutlined: SvgIconComponent;
    export const CheckCircleOutlineOutlined: SvgIconComponent;
    export const CheckCircleOutlineRounded: SvgIconComponent;
    export const CheckCircleOutlineSharp: SvgIconComponent;
    export const CheckCircleOutlineTwoTone: SvgIconComponent;
    export const CheckCircleRounded: SvgIconComponent;
    export const CheckCircleSharp: SvgIconComponent;
    export const CheckCircleTwoTone: SvgIconComponent;
    export const CheckOutlined: SvgIconComponent;
    export const Checkroom: SvgIconComponent;
    export const CheckroomOutlined: SvgIconComponent;
    export const CheckroomRounded: SvgIconComponent;
    export const CheckroomSharp: SvgIconComponent;
    export const CheckroomTwoTone: SvgIconComponent;
    export const CheckRounded: SvgIconComponent;
    export const CheckSharp: SvgIconComponent;
    export const CheckTwoTone: SvgIconComponent;
    export const ChevronLeft: SvgIconComponent;
    export const ChevronLeftOutlined: SvgIconComponent;
    export const ChevronLeftRounded: SvgIconComponent;
    export const ChevronLeftSharp: SvgIconComponent;
    export const ChevronLeftTwoTone: SvgIconComponent;
    export const ChevronRight: SvgIconComponent;
    export const ChevronRightOutlined: SvgIconComponent;
    export const ChevronRightRounded: SvgIconComponent;
    export const ChevronRightSharp: SvgIconComponent;
    export const ChevronRightTwoTone: SvgIconComponent;
    export const ChildCare: SvgIconComponent;
    export const ChildCareOutlined: SvgIconComponent;
    export const ChildCareRounded: SvgIconComponent;
    export const ChildCareSharp: SvgIconComponent;
    export const ChildCareTwoTone: SvgIconComponent;
    export const ChildFriendly: SvgIconComponent;
    export const ChildFriendlyOutlined: SvgIconComponent;
    export const ChildFriendlyRounded: SvgIconComponent;
    export const ChildFriendlySharp: SvgIconComponent;
    export const ChildFriendlyTwoTone: SvgIconComponent;
    export const ChromeReaderMode: SvgIconComponent;
    export const ChromeReaderModeOutlined: SvgIconComponent;
    export const ChromeReaderModeRounded: SvgIconComponent;
    export const ChromeReaderModeSharp: SvgIconComponent;
    export const ChromeReaderModeTwoTone: SvgIconComponent;
    export const Church: SvgIconComponent;
    export const ChurchOutlined: SvgIconComponent;
    export const ChurchRounded: SvgIconComponent;
    export const ChurchSharp: SvgIconComponent;
    export const ChurchTwoTone: SvgIconComponent;
    export const Circle: SvgIconComponent;
    export const CircleNotifications: SvgIconComponent;
    export const CircleNotificationsOutlined: SvgIconComponent;
    export const CircleNotificationsRounded: SvgIconComponent;
    export const CircleNotificationsSharp: SvgIconComponent;
    export const CircleNotificationsTwoTone: SvgIconComponent;
    export const CircleOutlined: SvgIconComponent;
    export const CircleRounded: SvgIconComponent;
    export const CircleSharp: SvgIconComponent;
    export const CircleTwoTone: SvgIconComponent;
    export const Class: SvgIconComponent;
    export const ClassOutlined: SvgIconComponent;
    export const ClassRounded: SvgIconComponent;
    export const ClassSharp: SvgIconComponent;
    export const ClassTwoTone: SvgIconComponent;
    export const CleanHands: SvgIconComponent;
    export const CleanHandsOutlined: SvgIconComponent;
    export const CleanHandsRounded: SvgIconComponent;
    export const CleanHandsSharp: SvgIconComponent;
    export const CleanHandsTwoTone: SvgIconComponent;
    export const CleaningServices: SvgIconComponent;
    export const CleaningServicesOutlined: SvgIconComponent;
    export const CleaningServicesRounded: SvgIconComponent;
    export const CleaningServicesSharp: SvgIconComponent;
    export const CleaningServicesTwoTone: SvgIconComponent;
    export const Clear: SvgIconComponent;
    export const ClearAll: SvgIconComponent;
    export const ClearAllOutlined: SvgIconComponent;
    export const ClearAllRounded: SvgIconComponent;
    export const ClearAllSharp: SvgIconComponent;
    export const ClearAllTwoTone: SvgIconComponent;
    export const ClearOutlined: SvgIconComponent;
    export const ClearRounded: SvgIconComponent;
    export const ClearSharp: SvgIconComponent;
    export const ClearTwoTone: SvgIconComponent;
    export const Close: SvgIconComponent;
    export const ClosedCaption: SvgIconComponent;
    export const ClosedCaptionDisabled: SvgIconComponent;
    export const ClosedCaptionDisabledOutlined: SvgIconComponent;
    export const ClosedCaptionDisabledRounded: SvgIconComponent;
    export const ClosedCaptionDisabledSharp: SvgIconComponent;
    export const ClosedCaptionDisabledTwoTone: SvgIconComponent;
    export const ClosedCaptionOff: SvgIconComponent;
    export const ClosedCaptionOffOutlined: SvgIconComponent;
    export const ClosedCaptionOffRounded: SvgIconComponent;
    export const ClosedCaptionOffSharp: SvgIconComponent;
    export const ClosedCaptionOffTwoTone: SvgIconComponent;
    export const ClosedCaptionOutlined: SvgIconComponent;
    export const ClosedCaptionRounded: SvgIconComponent;
    export const ClosedCaptionSharp: SvgIconComponent;
    export const ClosedCaptionTwoTone: SvgIconComponent;
    export const CloseFullscreen: SvgIconComponent;
    export const CloseFullscreenOutlined: SvgIconComponent;
    export const CloseFullscreenRounded: SvgIconComponent;
    export const CloseFullscreenSharp: SvgIconComponent;
    export const CloseFullscreenTwoTone: SvgIconComponent;
    export const CloseOutlined: SvgIconComponent;
    export const CloseRounded: SvgIconComponent;
    export const CloseSharp: SvgIconComponent;
    export const CloseTwoTone: SvgIconComponent;
    export const Cloud: SvgIconComponent;
    export const CloudCircle: SvgIconComponent;
    export const CloudCircleOutlined: SvgIconComponent;
    export const CloudCircleRounded: SvgIconComponent;
    export const CloudCircleSharp: SvgIconComponent;
    export const CloudCircleTwoTone: SvgIconComponent;
    export const CloudDone: SvgIconComponent;
    export const CloudDoneOutlined: SvgIconComponent;
    export const CloudDoneRounded: SvgIconComponent;
    export const CloudDoneSharp: SvgIconComponent;
    export const CloudDoneTwoTone: SvgIconComponent;
    export const CloudDownload: SvgIconComponent;
    export const CloudDownloadOutlined: SvgIconComponent;
    export const CloudDownloadRounded: SvgIconComponent;
    export const CloudDownloadSharp: SvgIconComponent;
    export const CloudDownloadTwoTone: SvgIconComponent;
    export const CloudOff: SvgIconComponent;
    export const CloudOffOutlined: SvgIconComponent;
    export const CloudOffRounded: SvgIconComponent;
    export const CloudOffSharp: SvgIconComponent;
    export const CloudOffTwoTone: SvgIconComponent;
    export const CloudOutlined: SvgIconComponent;
    export const CloudQueue: SvgIconComponent;
    export const CloudQueueOutlined: SvgIconComponent;
    export const CloudQueueRounded: SvgIconComponent;
    export const CloudQueueSharp: SvgIconComponent;
    export const CloudQueueTwoTone: SvgIconComponent;
    export const CloudRounded: SvgIconComponent;
    export const CloudSharp: SvgIconComponent;
    export const CloudSync: SvgIconComponent;
    export const CloudSyncOutlined: SvgIconComponent;
    export const CloudSyncRounded: SvgIconComponent;
    export const CloudSyncSharp: SvgIconComponent;
    export const CloudSyncTwoTone: SvgIconComponent;
    export const CloudTwoTone: SvgIconComponent;
    export const CloudUpload: SvgIconComponent;
    export const CloudUploadOutlined: SvgIconComponent;
    export const CloudUploadRounded: SvgIconComponent;
    export const CloudUploadSharp: SvgIconComponent;
    export const CloudUploadTwoTone: SvgIconComponent;
    export const Co2: SvgIconComponent;
    export const Co2Outlined: SvgIconComponent;
    export const Co2Rounded: SvgIconComponent;
    export const Co2Sharp: SvgIconComponent;
    export const Co2TwoTone: SvgIconComponent;
    export const Code: SvgIconComponent;
    export const CodeOff: SvgIconComponent;
    export const CodeOffOutlined: SvgIconComponent;
    export const CodeOffRounded: SvgIconComponent;
    export const CodeOffSharp: SvgIconComponent;
    export const CodeOffTwoTone: SvgIconComponent;
    export const CodeOutlined: SvgIconComponent;
    export const CodeRounded: SvgIconComponent;
    export const CodeSharp: SvgIconComponent;
    export const CodeTwoTone: SvgIconComponent;
    export const Coffee: SvgIconComponent;
    export const CoffeeMaker: SvgIconComponent;
    export const CoffeeMakerOutlined: SvgIconComponent;
    export const CoffeeMakerRounded: SvgIconComponent;
    export const CoffeeMakerSharp: SvgIconComponent;
    export const CoffeeMakerTwoTone: SvgIconComponent;
    export const CoffeeOutlined: SvgIconComponent;
    export const CoffeeRounded: SvgIconComponent;
    export const CoffeeSharp: SvgIconComponent;
    export const CoffeeTwoTone: SvgIconComponent;
    export const Collections: SvgIconComponent;
    export const CollectionsBookmark: SvgIconComponent;
    export const CollectionsBookmarkOutlined: SvgIconComponent;
    export const CollectionsBookmarkRounded: SvgIconComponent;
    export const CollectionsBookmarkSharp: SvgIconComponent;
    export const CollectionsBookmarkTwoTone: SvgIconComponent;
    export const CollectionsOutlined: SvgIconComponent;
    export const CollectionsRounded: SvgIconComponent;
    export const CollectionsSharp: SvgIconComponent;
    export const CollectionsTwoTone: SvgIconComponent;
    export const Colorize: SvgIconComponent;
    export const ColorizeOutlined: SvgIconComponent;
    export const ColorizeRounded: SvgIconComponent;
    export const ColorizeSharp: SvgIconComponent;
    export const ColorizeTwoTone: SvgIconComponent;
    export const ColorLens: SvgIconComponent;
    export const ColorLensOutlined: SvgIconComponent;
    export const ColorLensRounded: SvgIconComponent;
    export const ColorLensSharp: SvgIconComponent;
    export const ColorLensTwoTone: SvgIconComponent;
    export const Comment: SvgIconComponent;
    export const CommentBank: SvgIconComponent;
    export const CommentBankOutlined: SvgIconComponent;
    export const CommentBankRounded: SvgIconComponent;
    export const CommentBankSharp: SvgIconComponent;
    export const CommentBankTwoTone: SvgIconComponent;
    export const CommentOutlined: SvgIconComponent;
    export const CommentRounded: SvgIconComponent;
    export const CommentsDisabled: SvgIconComponent;
    export const CommentsDisabledOutlined: SvgIconComponent;
    export const CommentsDisabledRounded: SvgIconComponent;
    export const CommentsDisabledSharp: SvgIconComponent;
    export const CommentsDisabledTwoTone: SvgIconComponent;
    export const CommentSharp: SvgIconComponent;
    export const CommentTwoTone: SvgIconComponent;
    export const Commit: SvgIconComponent;
    export const CommitOutlined: SvgIconComponent;
    export const CommitRounded: SvgIconComponent;
    export const CommitSharp: SvgIconComponent;
    export const CommitTwoTone: SvgIconComponent;
    export const Commute: SvgIconComponent;
    export const CommuteOutlined: SvgIconComponent;
    export const CommuteRounded: SvgIconComponent;
    export const CommuteSharp: SvgIconComponent;
    export const CommuteTwoTone: SvgIconComponent;
    export const Compare: SvgIconComponent;
    export const CompareArrows: SvgIconComponent;
    export const CompareArrowsOutlined: SvgIconComponent;
    export const CompareArrowsRounded: SvgIconComponent;
    export const CompareArrowsSharp: SvgIconComponent;
    export const CompareArrowsTwoTone: SvgIconComponent;
    export const CompareOutlined: SvgIconComponent;
    export const CompareRounded: SvgIconComponent;
    export const CompareSharp: SvgIconComponent;
    export const CompareTwoTone: SvgIconComponent;
    export const CompassCalibration: SvgIconComponent;
    export const CompassCalibrationOutlined: SvgIconComponent;
    export const CompassCalibrationRounded: SvgIconComponent;
    export const CompassCalibrationSharp: SvgIconComponent;
    export const CompassCalibrationTwoTone: SvgIconComponent;
    export const Compress: SvgIconComponent;
    export const CompressOutlined: SvgIconComponent;
    export const CompressRounded: SvgIconComponent;
    export const CompressSharp: SvgIconComponent;
    export const CompressTwoTone: SvgIconComponent;
    export const Computer: SvgIconComponent;
    export const ComputerOutlined: SvgIconComponent;
    export const ComputerRounded: SvgIconComponent;
    export const ComputerSharp: SvgIconComponent;
    export const ComputerTwoTone: SvgIconComponent;
    export const ConfirmationNumber: SvgIconComponent;
    export const ConfirmationNumberOutlined: SvgIconComponent;
    export const ConfirmationNumberRounded: SvgIconComponent;
    export const ConfirmationNumberSharp: SvgIconComponent;
    export const ConfirmationNumberTwoTone: SvgIconComponent;
    export const ConnectedTv: SvgIconComponent;
    export const ConnectedTvOutlined: SvgIconComponent;
    export const ConnectedTvRounded: SvgIconComponent;
    export const ConnectedTvSharp: SvgIconComponent;
    export const ConnectedTvTwoTone: SvgIconComponent;
    export const ConnectingAirports: SvgIconComponent;
    export const ConnectingAirportsOutlined: SvgIconComponent;
    export const ConnectingAirportsRounded: SvgIconComponent;
    export const ConnectingAirportsSharp: SvgIconComponent;
    export const ConnectingAirportsTwoTone: SvgIconComponent;
    export const ConnectWithoutContact: SvgIconComponent;
    export const ConnectWithoutContactOutlined: SvgIconComponent;
    export const ConnectWithoutContactRounded: SvgIconComponent;
    export const ConnectWithoutContactSharp: SvgIconComponent;
    export const ConnectWithoutContactTwoTone: SvgIconComponent;
    export const Construction: SvgIconComponent;
    export const ConstructionOutlined: SvgIconComponent;
    export const ConstructionRounded: SvgIconComponent;
    export const ConstructionSharp: SvgIconComponent;
    export const ConstructionTwoTone: SvgIconComponent;
    export const Contactless: SvgIconComponent;
    export const ContactlessOutlined: SvgIconComponent;
    export const ContactlessRounded: SvgIconComponent;
    export const ContactlessSharp: SvgIconComponent;
    export const ContactlessTwoTone: SvgIconComponent;
    export const ContactMail: SvgIconComponent;
    export const ContactMailOutlined: SvgIconComponent;
    export const ContactMailRounded: SvgIconComponent;
    export const ContactMailSharp: SvgIconComponent;
    export const ContactMailTwoTone: SvgIconComponent;
    export const ContactPage: SvgIconComponent;
    export const ContactPageOutlined: SvgIconComponent;
    export const ContactPageRounded: SvgIconComponent;
    export const ContactPageSharp: SvgIconComponent;
    export const ContactPageTwoTone: SvgIconComponent;
    export const ContactPhone: SvgIconComponent;
    export const ContactPhoneOutlined: SvgIconComponent;
    export const ContactPhoneRounded: SvgIconComponent;
    export const ContactPhoneSharp: SvgIconComponent;
    export const ContactPhoneTwoTone: SvgIconComponent;
    export const Contacts: SvgIconComponent;
    export const ContactsOutlined: SvgIconComponent;
    export const ContactsRounded: SvgIconComponent;
    export const ContactsSharp: SvgIconComponent;
    export const ContactsTwoTone: SvgIconComponent;
    export const ContactSupport: SvgIconComponent;
    export const ContactSupportOutlined: SvgIconComponent;
    export const ContactSupportRounded: SvgIconComponent;
    export const ContactSupportSharp: SvgIconComponent;
    export const ContactSupportTwoTone: SvgIconComponent;
    export const ContentCopy: SvgIconComponent;
    export const ContentCopyOutlined: SvgIconComponent;
    export const ContentCopyRounded: SvgIconComponent;
    export const ContentCopySharp: SvgIconComponent;
    export const ContentCopyTwoTone: SvgIconComponent;
    export const ContentCut: SvgIconComponent;
    export const ContentCutOutlined: SvgIconComponent;
    export const ContentCutRounded: SvgIconComponent;
    export const ContentCutSharp: SvgIconComponent;
    export const ContentCutTwoTone: SvgIconComponent;
    export const ContentPaste: SvgIconComponent;
    export const ContentPasteGo: SvgIconComponent;
    export const ContentPasteGoOutlined: SvgIconComponent;
    export const ContentPasteGoRounded: SvgIconComponent;
    export const ContentPasteGoSharp: SvgIconComponent;
    export const ContentPasteGoTwoTone: SvgIconComponent;
    export const ContentPasteOff: SvgIconComponent;
    export const ContentPasteOffOutlined: SvgIconComponent;
    export const ContentPasteOffRounded: SvgIconComponent;
    export const ContentPasteOffSharp: SvgIconComponent;
    export const ContentPasteOffTwoTone: SvgIconComponent;
    export const ContentPasteOutlined: SvgIconComponent;
    export const ContentPasteRounded: SvgIconComponent;
    export const ContentPasteSearch: SvgIconComponent;
    export const ContentPasteSearchOutlined: SvgIconComponent;
    export const ContentPasteSearchRounded: SvgIconComponent;
    export const ContentPasteSearchSharp: SvgIconComponent;
    export const ContentPasteSearchTwoTone: SvgIconComponent;
    export const ContentPasteSharp: SvgIconComponent;
    export const ContentPasteTwoTone: SvgIconComponent;
    export const Contrast: SvgIconComponent;
    export const ContrastOutlined: SvgIconComponent;
    export const ContrastRounded: SvgIconComponent;
    export const ContrastSharp: SvgIconComponent;
    export const ContrastTwoTone: SvgIconComponent;
    export const ControlCamera: SvgIconComponent;
    export const ControlCameraOutlined: SvgIconComponent;
    export const ControlCameraRounded: SvgIconComponent;
    export const ControlCameraSharp: SvgIconComponent;
    export const ControlCameraTwoTone: SvgIconComponent;
    export const ControlPoint: SvgIconComponent;
    export const ControlPointDuplicate: SvgIconComponent;
    export const ControlPointDuplicateOutlined: SvgIconComponent;
    export const ControlPointDuplicateRounded: SvgIconComponent;
    export const ControlPointDuplicateSharp: SvgIconComponent;
    export const ControlPointDuplicateTwoTone: SvgIconComponent;
    export const ControlPointOutlined: SvgIconComponent;
    export const ControlPointRounded: SvgIconComponent;
    export const ControlPointSharp: SvgIconComponent;
    export const ControlPointTwoTone: SvgIconComponent;
    export const Cookie: SvgIconComponent;
    export const CookieOutlined: SvgIconComponent;
    export const CookieRounded: SvgIconComponent;
    export const CookieSharp: SvgIconComponent;
    export const CookieTwoTone: SvgIconComponent;
    export const CoPresent: SvgIconComponent;
    export const CoPresentOutlined: SvgIconComponent;
    export const CoPresentRounded: SvgIconComponent;
    export const CoPresentSharp: SvgIconComponent;
    export const CoPresentTwoTone: SvgIconComponent;
    export const CopyAll: SvgIconComponent;
    export const CopyAllOutlined: SvgIconComponent;
    export const CopyAllRounded: SvgIconComponent;
    export const CopyAllSharp: SvgIconComponent;
    export const CopyAllTwoTone: SvgIconComponent;
    export const Copyright: SvgIconComponent;
    export const CopyrightOutlined: SvgIconComponent;
    export const CopyrightRounded: SvgIconComponent;
    export const CopyrightSharp: SvgIconComponent;
    export const CopyrightTwoTone: SvgIconComponent;
    export const Coronavirus: SvgIconComponent;
    export const CoronavirusOutlined: SvgIconComponent;
    export const CoronavirusRounded: SvgIconComponent;
    export const CoronavirusSharp: SvgIconComponent;
    export const CoronavirusTwoTone: SvgIconComponent;
    export const CorporateFare: SvgIconComponent;
    export const CorporateFareOutlined: SvgIconComponent;
    export const CorporateFareRounded: SvgIconComponent;
    export const CorporateFareSharp: SvgIconComponent;
    export const CorporateFareTwoTone: SvgIconComponent;
    export const Cottage: SvgIconComponent;
    export const CottageOutlined: SvgIconComponent;
    export const CottageRounded: SvgIconComponent;
    export const CottageSharp: SvgIconComponent;
    export const CottageTwoTone: SvgIconComponent;
    export const Countertops: SvgIconComponent;
    export const CountertopsOutlined: SvgIconComponent;
    export const CountertopsRounded: SvgIconComponent;
    export const CountertopsSharp: SvgIconComponent;
    export const CountertopsTwoTone: SvgIconComponent;
    export const Create: SvgIconComponent;
    export const CreateNewFolder: SvgIconComponent;
    export const CreateNewFolderOutlined: SvgIconComponent;
    export const CreateNewFolderRounded: SvgIconComponent;
    export const CreateNewFolderSharp: SvgIconComponent;
    export const CreateNewFolderTwoTone: SvgIconComponent;
    export const CreateOutlined: SvgIconComponent;
    export const CreateRounded: SvgIconComponent;
    export const CreateSharp: SvgIconComponent;
    export const CreateTwoTone: SvgIconComponent;
    export const CreditCard: SvgIconComponent;
    export const CreditCardOff: SvgIconComponent;
    export const CreditCardOffOutlined: SvgIconComponent;
    export const CreditCardOffRounded: SvgIconComponent;
    export const CreditCardOffSharp: SvgIconComponent;
    export const CreditCardOffTwoTone: SvgIconComponent;
    export const CreditCardOutlined: SvgIconComponent;
    export const CreditCardRounded: SvgIconComponent;
    export const CreditCardSharp: SvgIconComponent;
    export const CreditCardTwoTone: SvgIconComponent;
    export const CreditScore: SvgIconComponent;
    export const CreditScoreOutlined: SvgIconComponent;
    export const CreditScoreRounded: SvgIconComponent;
    export const CreditScoreSharp: SvgIconComponent;
    export const CreditScoreTwoTone: SvgIconComponent;
    export const Crib: SvgIconComponent;
    export const CribOutlined: SvgIconComponent;
    export const CribRounded: SvgIconComponent;
    export const CribSharp: SvgIconComponent;
    export const CribTwoTone: SvgIconComponent;
    export const Crop: SvgIconComponent;
    export const Crop169: SvgIconComponent;
    export const Crop169Outlined: SvgIconComponent;
    export const Crop169Rounded: SvgIconComponent;
    export const Crop169Sharp: SvgIconComponent;
    export const Crop169TwoTone: SvgIconComponent;
    export const Crop32: SvgIconComponent;
    export const Crop32Outlined: SvgIconComponent;
    export const Crop32Rounded: SvgIconComponent;
    export const Crop32Sharp: SvgIconComponent;
    export const Crop32TwoTone: SvgIconComponent;
    export const Crop54: SvgIconComponent;
    export const Crop54Outlined: SvgIconComponent;
    export const Crop54Rounded: SvgIconComponent;
    export const Crop54Sharp: SvgIconComponent;
    export const Crop54TwoTone: SvgIconComponent;
    export const Crop75: SvgIconComponent;
    export const Crop75Outlined: SvgIconComponent;
    export const Crop75Rounded: SvgIconComponent;
    export const Crop75Sharp: SvgIconComponent;
    export const Crop75TwoTone: SvgIconComponent;
    export const CropDin: SvgIconComponent;
    export const CropDinOutlined: SvgIconComponent;
    export const CropDinRounded: SvgIconComponent;
    export const CropDinSharp: SvgIconComponent;
    export const CropDinTwoTone: SvgIconComponent;
    export const CropFree: SvgIconComponent;
    export const CropFreeOutlined: SvgIconComponent;
    export const CropFreeRounded: SvgIconComponent;
    export const CropFreeSharp: SvgIconComponent;
    export const CropFreeTwoTone: SvgIconComponent;
    export const CropLandscape: SvgIconComponent;
    export const CropLandscapeOutlined: SvgIconComponent;
    export const CropLandscapeRounded: SvgIconComponent;
    export const CropLandscapeSharp: SvgIconComponent;
    export const CropLandscapeTwoTone: SvgIconComponent;
    export const CropOriginal: SvgIconComponent;
    export const CropOriginalOutlined: SvgIconComponent;
    export const CropOriginalRounded: SvgIconComponent;
    export const CropOriginalSharp: SvgIconComponent;
    export const CropOriginalTwoTone: SvgIconComponent;
    export const CropOutlined: SvgIconComponent;
    export const CropPortrait: SvgIconComponent;
    export const CropPortraitOutlined: SvgIconComponent;
    export const CropPortraitRounded: SvgIconComponent;
    export const CropPortraitSharp: SvgIconComponent;
    export const CropPortraitTwoTone: SvgIconComponent;
    export const CropRotate: SvgIconComponent;
    export const CropRotateOutlined: SvgIconComponent;
    export const CropRotateRounded: SvgIconComponent;
    export const CropRotateSharp: SvgIconComponent;
    export const CropRotateTwoTone: SvgIconComponent;
    export const CropRounded: SvgIconComponent;
    export const CropSharp: SvgIconComponent;
    export const CropSquare: SvgIconComponent;
    export const CropSquareOutlined: SvgIconComponent;
    export const CropSquareRounded: SvgIconComponent;
    export const CropSquareSharp: SvgIconComponent;
    export const CropSquareTwoTone: SvgIconComponent;
    export const CropTwoTone: SvgIconComponent;
    export const Css: SvgIconComponent;
    export const CssOutlined: SvgIconComponent;
    export const CssRounded: SvgIconComponent;
    export const CssSharp: SvgIconComponent;
    export const CssTwoTone: SvgIconComponent;
    export const CurrencyExchange: SvgIconComponent;
    export const CurrencyExchangeOutlined: SvgIconComponent;
    export const CurrencyExchangeRounded: SvgIconComponent;
    export const CurrencyExchangeSharp: SvgIconComponent;
    export const CurrencyExchangeTwoTone: SvgIconComponent;
    export const CurrencyFranc: SvgIconComponent;
    export const CurrencyFrancOutlined: SvgIconComponent;
    export const CurrencyFrancRounded: SvgIconComponent;
    export const CurrencyFrancSharp: SvgIconComponent;
    export const CurrencyFrancTwoTone: SvgIconComponent;
    export const CurrencyLira: SvgIconComponent;
    export const CurrencyLiraOutlined: SvgIconComponent;
    export const CurrencyLiraRounded: SvgIconComponent;
    export const CurrencyLiraSharp: SvgIconComponent;
    export const CurrencyLiraTwoTone: SvgIconComponent;
    export const CurrencyPound: SvgIconComponent;
    export const CurrencyPoundOutlined: SvgIconComponent;
    export const CurrencyPoundRounded: SvgIconComponent;
    export const CurrencyPoundSharp: SvgIconComponent;
    export const CurrencyPoundTwoTone: SvgIconComponent;
    export const CurrencyRuble: SvgIconComponent;
    export const CurrencyRubleOutlined: SvgIconComponent;
    export const CurrencyRubleRounded: SvgIconComponent;
    export const CurrencyRubleSharp: SvgIconComponent;
    export const CurrencyRubleTwoTone: SvgIconComponent;
    export const CurrencyRupee: SvgIconComponent;
    export const CurrencyRupeeOutlined: SvgIconComponent;
    export const CurrencyRupeeRounded: SvgIconComponent;
    export const CurrencyRupeeSharp: SvgIconComponent;
    export const CurrencyRupeeTwoTone: SvgIconComponent;
    export const CurrencyYen: SvgIconComponent;
    export const CurrencyYenOutlined: SvgIconComponent;
    export const CurrencyYenRounded: SvgIconComponent;
    export const CurrencyYenSharp: SvgIconComponent;
    export const CurrencyYenTwoTone: SvgIconComponent;
    export const CurrencyYuan: SvgIconComponent;
    export const CurrencyYuanOutlined: SvgIconComponent;
    export const CurrencyYuanRounded: SvgIconComponent;
    export const CurrencyYuanSharp: SvgIconComponent;
    export const CurrencyYuanTwoTone: SvgIconComponent;
    export const Dangerous: SvgIconComponent;
    export const DangerousOutlined: SvgIconComponent;
    export const DangerousRounded: SvgIconComponent;
    export const DangerousSharp: SvgIconComponent;
    export const DangerousTwoTone: SvgIconComponent;
    export const DarkMode: SvgIconComponent;
    export const DarkModeOutlined: SvgIconComponent;
    export const DarkModeRounded: SvgIconComponent;
    export const DarkModeSharp: SvgIconComponent;
    export const DarkModeTwoTone: SvgIconComponent;
    export const Dashboard: SvgIconComponent;
    export const DashboardCustomize: SvgIconComponent;
    export const DashboardCustomizeOutlined: SvgIconComponent;
    export const DashboardCustomizeRounded: SvgIconComponent;
    export const DashboardCustomizeSharp: SvgIconComponent;
    export const DashboardCustomizeTwoTone: SvgIconComponent;
    export const DashboardOutlined: SvgIconComponent;
    export const DashboardRounded: SvgIconComponent;
    export const DashboardSharp: SvgIconComponent;
    export const DashboardTwoTone: SvgIconComponent;
    export const DataArray: SvgIconComponent;
    export const DataArrayOutlined: SvgIconComponent;
    export const DataArrayRounded: SvgIconComponent;
    export const DataArraySharp: SvgIconComponent;
    export const DataArrayTwoTone: SvgIconComponent;
    export const DataObject: SvgIconComponent;
    export const DataObjectOutlined: SvgIconComponent;
    export const DataObjectRounded: SvgIconComponent;
    export const DataObjectSharp: SvgIconComponent;
    export const DataObjectTwoTone: SvgIconComponent;
    export const DataSaverOff: SvgIconComponent;
    export const DataSaverOffOutlined: SvgIconComponent;
    export const DataSaverOffRounded: SvgIconComponent;
    export const DataSaverOffSharp: SvgIconComponent;
    export const DataSaverOffTwoTone: SvgIconComponent;
    export const DataSaverOn: SvgIconComponent;
    export const DataSaverOnOutlined: SvgIconComponent;
    export const DataSaverOnRounded: SvgIconComponent;
    export const DataSaverOnSharp: SvgIconComponent;
    export const DataSaverOnTwoTone: SvgIconComponent;
    export const DataThresholding: SvgIconComponent;
    export const DataThresholdingOutlined: SvgIconComponent;
    export const DataThresholdingRounded: SvgIconComponent;
    export const DataThresholdingSharp: SvgIconComponent;
    export const DataThresholdingTwoTone: SvgIconComponent;
    export const DataUsage: SvgIconComponent;
    export const DataUsageOutlined: SvgIconComponent;
    export const DataUsageRounded: SvgIconComponent;
    export const DataUsageSharp: SvgIconComponent;
    export const DataUsageTwoTone: SvgIconComponent;
    export const DateRange: SvgIconComponent;
    export const DateRangeOutlined: SvgIconComponent;
    export const DateRangeRounded: SvgIconComponent;
    export const DateRangeSharp: SvgIconComponent;
    export const DateRangeTwoTone: SvgIconComponent;
    export const Deblur: SvgIconComponent;
    export const DeblurOutlined: SvgIconComponent;
    export const DeblurRounded: SvgIconComponent;
    export const DeblurSharp: SvgIconComponent;
    export const DeblurTwoTone: SvgIconComponent;
    export const Deck: SvgIconComponent;
    export const DeckOutlined: SvgIconComponent;
    export const DeckRounded: SvgIconComponent;
    export const DeckSharp: SvgIconComponent;
    export const DeckTwoTone: SvgIconComponent;
    export const Dehaze: SvgIconComponent;
    export const DehazeOutlined: SvgIconComponent;
    export const DehazeRounded: SvgIconComponent;
    export const DehazeSharp: SvgIconComponent;
    export const DehazeTwoTone: SvgIconComponent;
    export const Delete: SvgIconComponent;
    export const DeleteForever: SvgIconComponent;
    export const DeleteForeverOutlined: SvgIconComponent;
    export const DeleteForeverRounded: SvgIconComponent;
    export const DeleteForeverSharp: SvgIconComponent;
    export const DeleteForeverTwoTone: SvgIconComponent;
    export const DeleteOutline: SvgIconComponent;
    export const DeleteOutlined: SvgIconComponent;
    export const DeleteOutlineOutlined: SvgIconComponent;
    export const DeleteOutlineRounded: SvgIconComponent;
    export const DeleteOutlineSharp: SvgIconComponent;
    export const DeleteOutlineTwoTone: SvgIconComponent;
    export const DeleteRounded: SvgIconComponent;
    export const DeleteSharp: SvgIconComponent;
    export const DeleteSweep: SvgIconComponent;
    export const DeleteSweepOutlined: SvgIconComponent;
    export const DeleteSweepRounded: SvgIconComponent;
    export const DeleteSweepSharp: SvgIconComponent;
    export const DeleteSweepTwoTone: SvgIconComponent;
    export const DeleteTwoTone: SvgIconComponent;
    export const DeliveryDining: SvgIconComponent;
    export const DeliveryDiningOutlined: SvgIconComponent;
    export const DeliveryDiningRounded: SvgIconComponent;
    export const DeliveryDiningSharp: SvgIconComponent;
    export const DeliveryDiningTwoTone: SvgIconComponent;
    export const DensityLarge: SvgIconComponent;
    export const DensityLargeOutlined: SvgIconComponent;
    export const DensityLargeRounded: SvgIconComponent;
    export const DensityLargeSharp: SvgIconComponent;
    export const DensityLargeTwoTone: SvgIconComponent;
    export const DensityMedium: SvgIconComponent;
    export const DensityMediumOutlined: SvgIconComponent;
    export const DensityMediumRounded: SvgIconComponent;
    export const DensityMediumSharp: SvgIconComponent;
    export const DensityMediumTwoTone: SvgIconComponent;
    export const DensitySmall: SvgIconComponent;
    export const DensitySmallOutlined: SvgIconComponent;
    export const DensitySmallRounded: SvgIconComponent;
    export const DensitySmallSharp: SvgIconComponent;
    export const DensitySmallTwoTone: SvgIconComponent;
    export const DepartureBoard: SvgIconComponent;
    export const DepartureBoardOutlined: SvgIconComponent;
    export const DepartureBoardRounded: SvgIconComponent;
    export const DepartureBoardSharp: SvgIconComponent;
    export const DepartureBoardTwoTone: SvgIconComponent;
    export const Description: SvgIconComponent;
    export const DescriptionOutlined: SvgIconComponent;
    export const DescriptionRounded: SvgIconComponent;
    export const DescriptionSharp: SvgIconComponent;
    export const DescriptionTwoTone: SvgIconComponent;
    export const Deselect: SvgIconComponent;
    export const DeselectOutlined: SvgIconComponent;
    export const DeselectRounded: SvgIconComponent;
    export const DeselectSharp: SvgIconComponent;
    export const DeselectTwoTone: SvgIconComponent;
    export const DesignServices: SvgIconComponent;
    export const DesignServicesOutlined: SvgIconComponent;
    export const DesignServicesRounded: SvgIconComponent;
    export const DesignServicesSharp: SvgIconComponent;
    export const DesignServicesTwoTone: SvgIconComponent;
    export const DesktopAccessDisabled: SvgIconComponent;
    export const DesktopAccessDisabledOutlined: SvgIconComponent;
    export const DesktopAccessDisabledRounded: SvgIconComponent;
    export const DesktopAccessDisabledSharp: SvgIconComponent;
    export const DesktopAccessDisabledTwoTone: SvgIconComponent;
    export const DesktopMac: SvgIconComponent;
    export const DesktopMacOutlined: SvgIconComponent;
    export const DesktopMacRounded: SvgIconComponent;
    export const DesktopMacSharp: SvgIconComponent;
    export const DesktopMacTwoTone: SvgIconComponent;
    export const DesktopWindows: SvgIconComponent;
    export const DesktopWindowsOutlined: SvgIconComponent;
    export const DesktopWindowsRounded: SvgIconComponent;
    export const DesktopWindowsSharp: SvgIconComponent;
    export const DesktopWindowsTwoTone: SvgIconComponent;
    export const Details: SvgIconComponent;
    export const DetailsOutlined: SvgIconComponent;
    export const DetailsRounded: SvgIconComponent;
    export const DetailsSharp: SvgIconComponent;
    export const DetailsTwoTone: SvgIconComponent;
    export const DeveloperBoard: SvgIconComponent;
    export const DeveloperBoardOff: SvgIconComponent;
    export const DeveloperBoardOffOutlined: SvgIconComponent;
    export const DeveloperBoardOffRounded: SvgIconComponent;
    export const DeveloperBoardOffSharp: SvgIconComponent;
    export const DeveloperBoardOffTwoTone: SvgIconComponent;
    export const DeveloperBoardOutlined: SvgIconComponent;
    export const DeveloperBoardRounded: SvgIconComponent;
    export const DeveloperBoardSharp: SvgIconComponent;
    export const DeveloperBoardTwoTone: SvgIconComponent;
    export const DeveloperMode: SvgIconComponent;
    export const DeveloperModeOutlined: SvgIconComponent;
    export const DeveloperModeRounded: SvgIconComponent;
    export const DeveloperModeSharp: SvgIconComponent;
    export const DeveloperModeTwoTone: SvgIconComponent;
    export const DeviceHub: SvgIconComponent;
    export const DeviceHubOutlined: SvgIconComponent;
    export const DeviceHubRounded: SvgIconComponent;
    export const DeviceHubSharp: SvgIconComponent;
    export const DeviceHubTwoTone: SvgIconComponent;
    export const Devices: SvgIconComponent;
    export const DevicesOther: SvgIconComponent;
    export const DevicesOtherOutlined: SvgIconComponent;
    export const DevicesOtherRounded: SvgIconComponent;
    export const DevicesOtherSharp: SvgIconComponent;
    export const DevicesOtherTwoTone: SvgIconComponent;
    export const DevicesOutlined: SvgIconComponent;
    export const DevicesRounded: SvgIconComponent;
    export const DevicesSharp: SvgIconComponent;
    export const DevicesTwoTone: SvgIconComponent;
    export const DeviceThermostat: SvgIconComponent;
    export const DeviceThermostatOutlined: SvgIconComponent;
    export const DeviceThermostatRounded: SvgIconComponent;
    export const DeviceThermostatSharp: SvgIconComponent;
    export const DeviceThermostatTwoTone: SvgIconComponent;
    export const DeviceUnknown: SvgIconComponent;
    export const DeviceUnknownOutlined: SvgIconComponent;
    export const DeviceUnknownRounded: SvgIconComponent;
    export const DeviceUnknownSharp: SvgIconComponent;
    export const DeviceUnknownTwoTone: SvgIconComponent;
    export const DialerSip: SvgIconComponent;
    export const DialerSipOutlined: SvgIconComponent;
    export const DialerSipRounded: SvgIconComponent;
    export const DialerSipSharp: SvgIconComponent;
    export const DialerSipTwoTone: SvgIconComponent;
    export const Dialpad: SvgIconComponent;
    export const DialpadOutlined: SvgIconComponent;
    export const DialpadRounded: SvgIconComponent;
    export const DialpadSharp: SvgIconComponent;
    export const DialpadTwoTone: SvgIconComponent;
    export const Diamond: SvgIconComponent;
    export const DiamondOutlined: SvgIconComponent;
    export const DiamondRounded: SvgIconComponent;
    export const DiamondSharp: SvgIconComponent;
    export const DiamondTwoTone: SvgIconComponent;
    export const Difference: SvgIconComponent;
    export const DifferenceOutlined: SvgIconComponent;
    export const DifferenceRounded: SvgIconComponent;
    export const DifferenceSharp: SvgIconComponent;
    export const DifferenceTwoTone: SvgIconComponent;
    export const Dining: SvgIconComponent;
    export const DiningOutlined: SvgIconComponent;
    export const DiningRounded: SvgIconComponent;
    export const DiningSharp: SvgIconComponent;
    export const DiningTwoTone: SvgIconComponent;
    export const DinnerDining: SvgIconComponent;
    export const DinnerDiningOutlined: SvgIconComponent;
    export const DinnerDiningRounded: SvgIconComponent;
    export const DinnerDiningSharp: SvgIconComponent;
    export const DinnerDiningTwoTone: SvgIconComponent;
    export const Directions: SvgIconComponent;
    export const DirectionsBike: SvgIconComponent;
    export const DirectionsBikeOutlined: SvgIconComponent;
    export const DirectionsBikeRounded: SvgIconComponent;
    export const DirectionsBikeSharp: SvgIconComponent;
    export const DirectionsBikeTwoTone: SvgIconComponent;
    export const DirectionsBoat: SvgIconComponent;
    export const DirectionsBoatFilled: SvgIconComponent;
    export const DirectionsBoatFilledOutlined: SvgIconComponent;
    export const DirectionsBoatFilledRounded: SvgIconComponent;
    export const DirectionsBoatFilledSharp: SvgIconComponent;
    export const DirectionsBoatFilledTwoTone: SvgIconComponent;
    export const DirectionsBoatOutlined: SvgIconComponent;
    export const DirectionsBoatRounded: SvgIconComponent;
    export const DirectionsBoatSharp: SvgIconComponent;
    export const DirectionsBoatTwoTone: SvgIconComponent;
    export const DirectionsBus: SvgIconComponent;
    export const DirectionsBusFilled: SvgIconComponent;
    export const DirectionsBusFilledOutlined: SvgIconComponent;
    export const DirectionsBusFilledRounded: SvgIconComponent;
    export const DirectionsBusFilledSharp: SvgIconComponent;
    export const DirectionsBusFilledTwoTone: SvgIconComponent;
    export const DirectionsBusOutlined: SvgIconComponent;
    export const DirectionsBusRounded: SvgIconComponent;
    export const DirectionsBusSharp: SvgIconComponent;
    export const DirectionsBusTwoTone: SvgIconComponent;
    export const DirectionsCar: SvgIconComponent;
    export const DirectionsCarFilled: SvgIconComponent;
    export const DirectionsCarFilledOutlined: SvgIconComponent;
    export const DirectionsCarFilledRounded: SvgIconComponent;
    export const DirectionsCarFilledSharp: SvgIconComponent;
    export const DirectionsCarFilledTwoTone: SvgIconComponent;
    export const DirectionsCarOutlined: SvgIconComponent;
    export const DirectionsCarRounded: SvgIconComponent;
    export const DirectionsCarSharp: SvgIconComponent;
    export const DirectionsCarTwoTone: SvgIconComponent;
    export const DirectionsOff: SvgIconComponent;
    export const DirectionsOffOutlined: SvgIconComponent;
    export const DirectionsOffRounded: SvgIconComponent;
    export const DirectionsOffSharp: SvgIconComponent;
    export const DirectionsOffTwoTone: SvgIconComponent;
    export const DirectionsOutlined: SvgIconComponent;
    export const DirectionsRailway: SvgIconComponent;
    export const DirectionsRailwayFilled: SvgIconComponent;
    export const DirectionsRailwayFilledOutlined: SvgIconComponent;
    export const DirectionsRailwayFilledRounded: SvgIconComponent;
    export const DirectionsRailwayFilledSharp: SvgIconComponent;
    export const DirectionsRailwayFilledTwoTone: SvgIconComponent;
    export const DirectionsRailwayOutlined: SvgIconComponent;
    export const DirectionsRailwayRounded: SvgIconComponent;
    export const DirectionsRailwaySharp: SvgIconComponent;
    export const DirectionsRailwayTwoTone: SvgIconComponent;
    export const DirectionsRounded: SvgIconComponent;
    export const DirectionsRun: SvgIconComponent;
    export const DirectionsRunOutlined: SvgIconComponent;
    export const DirectionsRunRounded: SvgIconComponent;
    export const DirectionsRunSharp: SvgIconComponent;
    export const DirectionsRunTwoTone: SvgIconComponent;
    export const DirectionsSharp: SvgIconComponent;
    export const DirectionsSubway: SvgIconComponent;
    export const DirectionsSubwayFilled: SvgIconComponent;
    export const DirectionsSubwayFilledOutlined: SvgIconComponent;
    export const DirectionsSubwayFilledRounded: SvgIconComponent;
    export const DirectionsSubwayFilledSharp: SvgIconComponent;
    export const DirectionsSubwayFilledTwoTone: SvgIconComponent;
    export const DirectionsSubwayOutlined: SvgIconComponent;
    export const DirectionsSubwayRounded: SvgIconComponent;
    export const DirectionsSubwaySharp: SvgIconComponent;
    export const DirectionsSubwayTwoTone: SvgIconComponent;
    export const DirectionsTransit: SvgIconComponent;
    export const DirectionsTransitFilled: SvgIconComponent;
    export const DirectionsTransitFilledOutlined: SvgIconComponent;
    export const DirectionsTransitFilledRounded: SvgIconComponent;
    export const DirectionsTransitFilledSharp: SvgIconComponent;
    export const DirectionsTransitFilledTwoTone: SvgIconComponent;
    export const DirectionsTransitOutlined: SvgIconComponent;
    export const DirectionsTransitRounded: SvgIconComponent;
    export const DirectionsTransitSharp: SvgIconComponent;
    export const DirectionsTransitTwoTone: SvgIconComponent;
    export const DirectionsTwoTone: SvgIconComponent;
    export const DirectionsWalk: SvgIconComponent;
    export const DirectionsWalkOutlined: SvgIconComponent;
    export const DirectionsWalkRounded: SvgIconComponent;
    export const DirectionsWalkSharp: SvgIconComponent;
    export const DirectionsWalkTwoTone: SvgIconComponent;
    export const DirtyLens: SvgIconComponent;
    export const DirtyLensOutlined: SvgIconComponent;
    export const DirtyLensRounded: SvgIconComponent;
    export const DirtyLensSharp: SvgIconComponent;
    export const DirtyLensTwoTone: SvgIconComponent;
    export const DisabledByDefault: SvgIconComponent;
    export const DisabledByDefaultOutlined: SvgIconComponent;
    export const DisabledByDefaultRounded: SvgIconComponent;
    export const DisabledByDefaultSharp: SvgIconComponent;
    export const DisabledByDefaultTwoTone: SvgIconComponent;
    export const DiscFull: SvgIconComponent;
    export const DiscFullOutlined: SvgIconComponent;
    export const DiscFullRounded: SvgIconComponent;
    export const DiscFullSharp: SvgIconComponent;
    export const DiscFullTwoTone: SvgIconComponent;
    export const DisplaySettings: SvgIconComponent;
    export const DisplaySettingsOutlined: SvgIconComponent;
    export const DisplaySettingsRounded: SvgIconComponent;
    export const DisplaySettingsSharp: SvgIconComponent;
    export const DisplaySettingsTwoTone: SvgIconComponent;
    export const Dns: SvgIconComponent;
    export const DnsOutlined: SvgIconComponent;
    export const DnsRounded: SvgIconComponent;
    export const DnsSharp: SvgIconComponent;
    export const DnsTwoTone: SvgIconComponent;
    export const Dock: SvgIconComponent;
    export const DockOutlined: SvgIconComponent;
    export const DockRounded: SvgIconComponent;
    export const DockSharp: SvgIconComponent;
    export const DockTwoTone: SvgIconComponent;
    export const DocumentScanner: SvgIconComponent;
    export const DocumentScannerOutlined: SvgIconComponent;
    export const DocumentScannerRounded: SvgIconComponent;
    export const DocumentScannerSharp: SvgIconComponent;
    export const DocumentScannerTwoTone: SvgIconComponent;
    export const DoDisturb: SvgIconComponent;
    export const DoDisturbAlt: SvgIconComponent;
    export const DoDisturbAltOutlined: SvgIconComponent;
    export const DoDisturbAltRounded: SvgIconComponent;
    export const DoDisturbAltSharp: SvgIconComponent;
    export const DoDisturbAltTwoTone: SvgIconComponent;
    export const DoDisturbOff: SvgIconComponent;
    export const DoDisturbOffOutlined: SvgIconComponent;
    export const DoDisturbOffRounded: SvgIconComponent;
    export const DoDisturbOffSharp: SvgIconComponent;
    export const DoDisturbOffTwoTone: SvgIconComponent;
    export const DoDisturbOn: SvgIconComponent;
    export const DoDisturbOnOutlined: SvgIconComponent;
    export const DoDisturbOnRounded: SvgIconComponent;
    export const DoDisturbOnSharp: SvgIconComponent;
    export const DoDisturbOnTwoTone: SvgIconComponent;
    export const DoDisturbOutlined: SvgIconComponent;
    export const DoDisturbRounded: SvgIconComponent;
    export const DoDisturbSharp: SvgIconComponent;
    export const DoDisturbTwoTone: SvgIconComponent;
    export const Domain: SvgIconComponent;
    export const DomainAdd: SvgIconComponent;
    export const DomainAddOutlined: SvgIconComponent;
    export const DomainAddRounded: SvgIconComponent;
    export const DomainAddSharp: SvgIconComponent;
    export const DomainAddTwoTone: SvgIconComponent;
    export const DomainDisabled: SvgIconComponent;
    export const DomainDisabledOutlined: SvgIconComponent;
    export const DomainDisabledRounded: SvgIconComponent;
    export const DomainDisabledSharp: SvgIconComponent;
    export const DomainDisabledTwoTone: SvgIconComponent;
    export const DomainOutlined: SvgIconComponent;
    export const DomainRounded: SvgIconComponent;
    export const DomainSharp: SvgIconComponent;
    export const DomainTwoTone: SvgIconComponent;
    export const DomainVerification: SvgIconComponent;
    export const DomainVerificationOutlined: SvgIconComponent;
    export const DomainVerificationRounded: SvgIconComponent;
    export const DomainVerificationSharp: SvgIconComponent;
    export const DomainVerificationTwoTone: SvgIconComponent;
    export const Done: SvgIconComponent;
    export const DoneAll: SvgIconComponent;
    export const DoneAllOutlined: SvgIconComponent;
    export const DoneAllRounded: SvgIconComponent;
    export const DoneAllSharp: SvgIconComponent;
    export const DoneAllTwoTone: SvgIconComponent;
    export const DoneOutline: SvgIconComponent;
    export const DoneOutlined: SvgIconComponent;
    export const DoneOutlineOutlined: SvgIconComponent;
    export const DoneOutlineRounded: SvgIconComponent;
    export const DoneOutlineSharp: SvgIconComponent;
    export const DoneOutlineTwoTone: SvgIconComponent;
    export const DoneRounded: SvgIconComponent;
    export const DoneSharp: SvgIconComponent;
    export const DoneTwoTone: SvgIconComponent;
    export const DoNotDisturb: SvgIconComponent;
    export const DoNotDisturbAlt: SvgIconComponent;
    export const DoNotDisturbAltOutlined: SvgIconComponent;
    export const DoNotDisturbAltRounded: SvgIconComponent;
    export const DoNotDisturbAltSharp: SvgIconComponent;
    export const DoNotDisturbAltTwoTone: SvgIconComponent;
    export const DoNotDisturbOff: SvgIconComponent;
    export const DoNotDisturbOffOutlined: SvgIconComponent;
    export const DoNotDisturbOffRounded: SvgIconComponent;
    export const DoNotDisturbOffSharp: SvgIconComponent;
    export const DoNotDisturbOffTwoTone: SvgIconComponent;
    export const DoNotDisturbOn: SvgIconComponent;
    export const DoNotDisturbOnOutlined: SvgIconComponent;
    export const DoNotDisturbOnRounded: SvgIconComponent;
    export const DoNotDisturbOnSharp: SvgIconComponent;
    export const DoNotDisturbOnTotalSilence: SvgIconComponent;
    export const DoNotDisturbOnTotalSilenceOutlined: SvgIconComponent;
    export const DoNotDisturbOnTotalSilenceRounded: SvgIconComponent;
    export const DoNotDisturbOnTotalSilenceSharp: SvgIconComponent;
    export const DoNotDisturbOnTotalSilenceTwoTone: SvgIconComponent;
    export const DoNotDisturbOnTwoTone: SvgIconComponent;
    export const DoNotDisturbOutlined: SvgIconComponent;
    export const DoNotDisturbRounded: SvgIconComponent;
    export const DoNotDisturbSharp: SvgIconComponent;
    export const DoNotDisturbTwoTone: SvgIconComponent;
    export const DoNotStep: SvgIconComponent;
    export const DoNotStepOutlined: SvgIconComponent;
    export const DoNotStepRounded: SvgIconComponent;
    export const DoNotStepSharp: SvgIconComponent;
    export const DoNotStepTwoTone: SvgIconComponent;
    export const DoNotTouch: SvgIconComponent;
    export const DoNotTouchOutlined: SvgIconComponent;
    export const DoNotTouchRounded: SvgIconComponent;
    export const DoNotTouchSharp: SvgIconComponent;
    export const DoNotTouchTwoTone: SvgIconComponent;
    export const DonutLarge: SvgIconComponent;
    export const DonutLargeOutlined: SvgIconComponent;
    export const DonutLargeRounded: SvgIconComponent;
    export const DonutLargeSharp: SvgIconComponent;
    export const DonutLargeTwoTone: SvgIconComponent;
    export const DonutSmall: SvgIconComponent;
    export const DonutSmallOutlined: SvgIconComponent;
    export const DonutSmallRounded: SvgIconComponent;
    export const DonutSmallSharp: SvgIconComponent;
    export const DonutSmallTwoTone: SvgIconComponent;
    export const DoorBack: SvgIconComponent;
    export const DoorBackOutlined: SvgIconComponent;
    export const DoorBackRounded: SvgIconComponent;
    export const DoorBackSharp: SvgIconComponent;
    export const DoorBackTwoTone: SvgIconComponent;
    export const Doorbell: SvgIconComponent;
    export const DoorbellOutlined: SvgIconComponent;
    export const DoorbellRounded: SvgIconComponent;
    export const DoorbellSharp: SvgIconComponent;
    export const DoorbellTwoTone: SvgIconComponent;
    export const DoorFront: SvgIconComponent;
    export const DoorFrontOutlined: SvgIconComponent;
    export const DoorFrontRounded: SvgIconComponent;
    export const DoorFrontSharp: SvgIconComponent;
    export const DoorFrontTwoTone: SvgIconComponent;
    export const DoorSliding: SvgIconComponent;
    export const DoorSlidingOutlined: SvgIconComponent;
    export const DoorSlidingRounded: SvgIconComponent;
    export const DoorSlidingSharp: SvgIconComponent;
    export const DoorSlidingTwoTone: SvgIconComponent;
    export const DoubleArrow: SvgIconComponent;
    export const DoubleArrowOutlined: SvgIconComponent;
    export const DoubleArrowRounded: SvgIconComponent;
    export const DoubleArrowSharp: SvgIconComponent;
    export const DoubleArrowTwoTone: SvgIconComponent;
    export const DownhillSkiing: SvgIconComponent;
    export const DownhillSkiingOutlined: SvgIconComponent;
    export const DownhillSkiingRounded: SvgIconComponent;
    export const DownhillSkiingSharp: SvgIconComponent;
    export const DownhillSkiingTwoTone: SvgIconComponent;
    export const Download: SvgIconComponent;
    export const DownloadDone: SvgIconComponent;
    export const DownloadDoneOutlined: SvgIconComponent;
    export const DownloadDoneRounded: SvgIconComponent;
    export const DownloadDoneSharp: SvgIconComponent;
    export const DownloadDoneTwoTone: SvgIconComponent;
    export const DownloadForOffline: SvgIconComponent;
    export const DownloadForOfflineOutlined: SvgIconComponent;
    export const DownloadForOfflineRounded: SvgIconComponent;
    export const DownloadForOfflineSharp: SvgIconComponent;
    export const DownloadForOfflineTwoTone: SvgIconComponent;
    export const Downloading: SvgIconComponent;
    export const DownloadingOutlined: SvgIconComponent;
    export const DownloadingRounded: SvgIconComponent;
    export const DownloadingSharp: SvgIconComponent;
    export const DownloadingTwoTone: SvgIconComponent;
    export const DownloadOutlined: SvgIconComponent;
    export const DownloadRounded: SvgIconComponent;
    export const DownloadSharp: SvgIconComponent;
    export const DownloadTwoTone: SvgIconComponent;
    export const Drafts: SvgIconComponent;
    export const DraftsOutlined: SvgIconComponent;
    export const DraftsRounded: SvgIconComponent;
    export const DraftsSharp: SvgIconComponent;
    export const DraftsTwoTone: SvgIconComponent;
    export const DragHandle: SvgIconComponent;
    export const DragHandleOutlined: SvgIconComponent;
    export const DragHandleRounded: SvgIconComponent;
    export const DragHandleSharp: SvgIconComponent;
    export const DragHandleTwoTone: SvgIconComponent;
    export const DragIndicator: SvgIconComponent;
    export const DragIndicatorOutlined: SvgIconComponent;
    export const DragIndicatorRounded: SvgIconComponent;
    export const DragIndicatorSharp: SvgIconComponent;
    export const DragIndicatorTwoTone: SvgIconComponent;
    export const DriveEta: SvgIconComponent;
    export const DriveEtaOutlined: SvgIconComponent;
    export const DriveEtaRounded: SvgIconComponent;
    export const DriveEtaSharp: SvgIconComponent;
    export const DriveEtaTwoTone: SvgIconComponent;
    export const DriveFileMove: SvgIconComponent;
    export const DriveFileMoveOutlined: SvgIconComponent;
    export const DriveFileMoveRounded: SvgIconComponent;
    export const DriveFileMoveSharp: SvgIconComponent;
    export const DriveFileMoveTwoTone: SvgIconComponent;
    export const DriveFileRenameOutline: SvgIconComponent;
    export const DriveFileRenameOutlineOutlined: SvgIconComponent;
    export const DriveFileRenameOutlineRounded: SvgIconComponent;
    export const DriveFileRenameOutlineSharp: SvgIconComponent;
    export const DriveFileRenameOutlineTwoTone: SvgIconComponent;
    export const DriveFolderUpload: SvgIconComponent;
    export const DriveFolderUploadOutlined: SvgIconComponent;
    export const DriveFolderUploadRounded: SvgIconComponent;
    export const DriveFolderUploadSharp: SvgIconComponent;
    export const DriveFolderUploadTwoTone: SvgIconComponent;
    export const Dry: SvgIconComponent;
    export const DryCleaning: SvgIconComponent;
    export const DryCleaningOutlined: SvgIconComponent;
    export const DryCleaningRounded: SvgIconComponent;
    export const DryCleaningSharp: SvgIconComponent;
    export const DryCleaningTwoTone: SvgIconComponent;
    export const DryOutlined: SvgIconComponent;
    export const DryRounded: SvgIconComponent;
    export const DrySharp: SvgIconComponent;
    export const DryTwoTone: SvgIconComponent;
    export const Duo: SvgIconComponent;
    export const DuoOutlined: SvgIconComponent;
    export const DuoRounded: SvgIconComponent;
    export const DuoSharp: SvgIconComponent;
    export const DuoTwoTone: SvgIconComponent;
    export const Dvr: SvgIconComponent;
    export const DvrOutlined: SvgIconComponent;
    export const DvrRounded: SvgIconComponent;
    export const DvrSharp: SvgIconComponent;
    export const DvrTwoTone: SvgIconComponent;
    export const DynamicFeed: SvgIconComponent;
    export const DynamicFeedOutlined: SvgIconComponent;
    export const DynamicFeedRounded: SvgIconComponent;
    export const DynamicFeedSharp: SvgIconComponent;
    export const DynamicFeedTwoTone: SvgIconComponent;
    export const DynamicForm: SvgIconComponent;
    export const DynamicFormOutlined: SvgIconComponent;
    export const DynamicFormRounded: SvgIconComponent;
    export const DynamicFormSharp: SvgIconComponent;
    export const DynamicFormTwoTone: SvgIconComponent;
    export const Earbuds: SvgIconComponent;
    export const EarbudsBattery: SvgIconComponent;
    export const EarbudsBatteryOutlined: SvgIconComponent;
    export const EarbudsBatteryRounded: SvgIconComponent;
    export const EarbudsBatterySharp: SvgIconComponent;
    export const EarbudsBatteryTwoTone: SvgIconComponent;
    export const EarbudsOutlined: SvgIconComponent;
    export const EarbudsRounded: SvgIconComponent;
    export const EarbudsSharp: SvgIconComponent;
    export const EarbudsTwoTone: SvgIconComponent;
    export const East: SvgIconComponent;
    export const EastOutlined: SvgIconComponent;
    export const EastRounded: SvgIconComponent;
    export const EastSharp: SvgIconComponent;
    export const EastTwoTone: SvgIconComponent;
    export const EdgesensorHigh: SvgIconComponent;
    export const EdgesensorHighOutlined: SvgIconComponent;
    export const EdgesensorHighRounded: SvgIconComponent;
    export const EdgesensorHighSharp: SvgIconComponent;
    export const EdgesensorHighTwoTone: SvgIconComponent;
    export const EdgesensorLow: SvgIconComponent;
    export const EdgesensorLowOutlined: SvgIconComponent;
    export const EdgesensorLowRounded: SvgIconComponent;
    export const EdgesensorLowSharp: SvgIconComponent;
    export const EdgesensorLowTwoTone: SvgIconComponent;
    export const Edit: SvgIconComponent;
    export const EditAttributes: SvgIconComponent;
    export const EditAttributesOutlined: SvgIconComponent;
    export const EditAttributesRounded: SvgIconComponent;
    export const EditAttributesSharp: SvgIconComponent;
    export const EditAttributesTwoTone: SvgIconComponent;
    export const EditLocation: SvgIconComponent;
    export const EditLocationAlt: SvgIconComponent;
    export const EditLocationAltOutlined: SvgIconComponent;
    export const EditLocationAltRounded: SvgIconComponent;
    export const EditLocationAltSharp: SvgIconComponent;
    export const EditLocationAltTwoTone: SvgIconComponent;
    export const EditLocationOutlined: SvgIconComponent;
    export const EditLocationRounded: SvgIconComponent;
    export const EditLocationSharp: SvgIconComponent;
    export const EditLocationTwoTone: SvgIconComponent;
    export const EditNotifications: SvgIconComponent;
    export const EditNotificationsOutlined: SvgIconComponent;
    export const EditNotificationsRounded: SvgIconComponent;
    export const EditNotificationsSharp: SvgIconComponent;
    export const EditNotificationsTwoTone: SvgIconComponent;
    export const EditOff: SvgIconComponent;
    export const EditOffOutlined: SvgIconComponent;
    export const EditOffRounded: SvgIconComponent;
    export const EditOffSharp: SvgIconComponent;
    export const EditOffTwoTone: SvgIconComponent;
    export const EditOutlined: SvgIconComponent;
    export const EditRoad: SvgIconComponent;
    export const EditRoadOutlined: SvgIconComponent;
    export const EditRoadRounded: SvgIconComponent;
    export const EditRoadSharp: SvgIconComponent;
    export const EditRoadTwoTone: SvgIconComponent;
    export const EditRounded: SvgIconComponent;
    export const EditSharp: SvgIconComponent;
    export const EditTwoTone: SvgIconComponent;
    export const Egg: SvgIconComponent;
    export const EggAlt: SvgIconComponent;
    export const EggAltOutlined: SvgIconComponent;
    export const EggAltRounded: SvgIconComponent;
    export const EggAltSharp: SvgIconComponent;
    export const EggAltTwoTone: SvgIconComponent;
    export const EggOutlined: SvgIconComponent;
    export const EggRounded: SvgIconComponent;
    export const EggSharp: SvgIconComponent;
    export const EggTwoTone: SvgIconComponent;
    export const EighteenMp: SvgIconComponent;
    export const EighteenMpOutlined: SvgIconComponent;
    export const EighteenMpRounded: SvgIconComponent;
    export const EighteenMpSharp: SvgIconComponent;
    export const EighteenMpTwoTone: SvgIconComponent;
    export const EightK: SvgIconComponent;
    export const EightKOutlined: SvgIconComponent;
    export const EightKPlus: SvgIconComponent;
    export const EightKPlusOutlined: SvgIconComponent;
    export const EightKPlusRounded: SvgIconComponent;
    export const EightKPlusSharp: SvgIconComponent;
    export const EightKPlusTwoTone: SvgIconComponent;
    export const EightKRounded: SvgIconComponent;
    export const EightKSharp: SvgIconComponent;
    export const EightKTwoTone: SvgIconComponent;
    export const EightMp: SvgIconComponent;
    export const EightMpOutlined: SvgIconComponent;
    export const EightMpRounded: SvgIconComponent;
    export const EightMpSharp: SvgIconComponent;
    export const EightMpTwoTone: SvgIconComponent;
    export const EightteenMp: SvgIconComponent;
    export const EightteenMpOutlined: SvgIconComponent;
    export const EightteenMpRounded: SvgIconComponent;
    export const EightteenMpSharp: SvgIconComponent;
    export const EightteenMpTwoTone: SvgIconComponent;
    export const Eject: SvgIconComponent;
    export const EjectOutlined: SvgIconComponent;
    export const EjectRounded: SvgIconComponent;
    export const EjectSharp: SvgIconComponent;
    export const EjectTwoTone: SvgIconComponent;
    export const Elderly: SvgIconComponent;
    export const ElderlyOutlined: SvgIconComponent;
    export const ElderlyRounded: SvgIconComponent;
    export const ElderlySharp: SvgIconComponent;
    export const ElderlyTwoTone: SvgIconComponent;
    export const ElderlyWoman: SvgIconComponent;
    export const ElderlyWomanOutlined: SvgIconComponent;
    export const ElderlyWomanRounded: SvgIconComponent;
    export const ElderlyWomanSharp: SvgIconComponent;
    export const ElderlyWomanTwoTone: SvgIconComponent;
    export const ElectricalServices: SvgIconComponent;
    export const ElectricalServicesOutlined: SvgIconComponent;
    export const ElectricalServicesRounded: SvgIconComponent;
    export const ElectricalServicesSharp: SvgIconComponent;
    export const ElectricalServicesTwoTone: SvgIconComponent;
    export const ElectricBike: SvgIconComponent;
    export const ElectricBikeOutlined: SvgIconComponent;
    export const ElectricBikeRounded: SvgIconComponent;
    export const ElectricBikeSharp: SvgIconComponent;
    export const ElectricBikeTwoTone: SvgIconComponent;
    export const ElectricCar: SvgIconComponent;
    export const ElectricCarOutlined: SvgIconComponent;
    export const ElectricCarRounded: SvgIconComponent;
    export const ElectricCarSharp: SvgIconComponent;
    export const ElectricCarTwoTone: SvgIconComponent;
    export const ElectricMoped: SvgIconComponent;
    export const ElectricMopedOutlined: SvgIconComponent;
    export const ElectricMopedRounded: SvgIconComponent;
    export const ElectricMopedSharp: SvgIconComponent;
    export const ElectricMopedTwoTone: SvgIconComponent;
    export const ElectricRickshaw: SvgIconComponent;
    export const ElectricRickshawOutlined: SvgIconComponent;
    export const ElectricRickshawRounded: SvgIconComponent;
    export const ElectricRickshawSharp: SvgIconComponent;
    export const ElectricRickshawTwoTone: SvgIconComponent;
    export const ElectricScooter: SvgIconComponent;
    export const ElectricScooterOutlined: SvgIconComponent;
    export const ElectricScooterRounded: SvgIconComponent;
    export const ElectricScooterSharp: SvgIconComponent;
    export const ElectricScooterTwoTone: SvgIconComponent;
    export const Elevator: SvgIconComponent;
    export const ElevatorOutlined: SvgIconComponent;
    export const ElevatorRounded: SvgIconComponent;
    export const ElevatorSharp: SvgIconComponent;
    export const ElevatorTwoTone: SvgIconComponent;
    export const ElevenMp: SvgIconComponent;
    export const ElevenMpOutlined: SvgIconComponent;
    export const ElevenMpRounded: SvgIconComponent;
    export const ElevenMpSharp: SvgIconComponent;
    export const ElevenMpTwoTone: SvgIconComponent;
    export const Email: SvgIconComponent;
    export const EmailOutlined: SvgIconComponent;
    export const EmailRounded: SvgIconComponent;
    export const EmailSharp: SvgIconComponent;
    export const EmailTwoTone: SvgIconComponent;
    export const EMobiledata: SvgIconComponent;
    export const EMobiledataOutlined: SvgIconComponent;
    export const EMobiledataRounded: SvgIconComponent;
    export const EMobiledataSharp: SvgIconComponent;
    export const EMobiledataTwoTone: SvgIconComponent;
    export const EmojiEmotions: SvgIconComponent;
    export const EmojiEmotionsOutlined: SvgIconComponent;
    export const EmojiEmotionsRounded: SvgIconComponent;
    export const EmojiEmotionsSharp: SvgIconComponent;
    export const EmojiEmotionsTwoTone: SvgIconComponent;
    export const EmojiEvents: SvgIconComponent;
    export const EmojiEventsOutlined: SvgIconComponent;
    export const EmojiEventsRounded: SvgIconComponent;
    export const EmojiEventsSharp: SvgIconComponent;
    export const EmojiEventsTwoTone: SvgIconComponent;
    export const EmojiFlags: SvgIconComponent;
    export const EmojiFlagsOutlined: SvgIconComponent;
    export const EmojiFlagsRounded: SvgIconComponent;
    export const EmojiFlagsSharp: SvgIconComponent;
    export const EmojiFlagsTwoTone: SvgIconComponent;
    export const EmojiFoodBeverage: SvgIconComponent;
    export const EmojiFoodBeverageOutlined: SvgIconComponent;
    export const EmojiFoodBeverageRounded: SvgIconComponent;
    export const EmojiFoodBeverageSharp: SvgIconComponent;
    export const EmojiFoodBeverageTwoTone: SvgIconComponent;
    export const EmojiNature: SvgIconComponent;
    export const EmojiNatureOutlined: SvgIconComponent;
    export const EmojiNatureRounded: SvgIconComponent;
    export const EmojiNatureSharp: SvgIconComponent;
    export const EmojiNatureTwoTone: SvgIconComponent;
    export const EmojiObjects: SvgIconComponent;
    export const EmojiObjectsOutlined: SvgIconComponent;
    export const EmojiObjectsRounded: SvgIconComponent;
    export const EmojiObjectsSharp: SvgIconComponent;
    export const EmojiObjectsTwoTone: SvgIconComponent;
    export const EmojiPeople: SvgIconComponent;
    export const EmojiPeopleOutlined: SvgIconComponent;
    export const EmojiPeopleRounded: SvgIconComponent;
    export const EmojiPeopleSharp: SvgIconComponent;
    export const EmojiPeopleTwoTone: SvgIconComponent;
    export const EmojiSymbols: SvgIconComponent;
    export const EmojiSymbolsOutlined: SvgIconComponent;
    export const EmojiSymbolsRounded: SvgIconComponent;
    export const EmojiSymbolsSharp: SvgIconComponent;
    export const EmojiSymbolsTwoTone: SvgIconComponent;
    export const EmojiTransportation: SvgIconComponent;
    export const EmojiTransportationOutlined: SvgIconComponent;
    export const EmojiTransportationRounded: SvgIconComponent;
    export const EmojiTransportationSharp: SvgIconComponent;
    export const EmojiTransportationTwoTone: SvgIconComponent;
    export const Engineering: SvgIconComponent;
    export const EngineeringOutlined: SvgIconComponent;
    export const EngineeringRounded: SvgIconComponent;
    export const EngineeringSharp: SvgIconComponent;
    export const EngineeringTwoTone: SvgIconComponent;
    export const EnhancedEncryption: SvgIconComponent;
    export const EnhancedEncryptionOutlined: SvgIconComponent;
    export const EnhancedEncryptionRounded: SvgIconComponent;
    export const EnhancedEncryptionSharp: SvgIconComponent;
    export const EnhancedEncryptionTwoTone: SvgIconComponent;
    export const Equalizer: SvgIconComponent;
    export const EqualizerOutlined: SvgIconComponent;
    export const EqualizerRounded: SvgIconComponent;
    export const EqualizerSharp: SvgIconComponent;
    export const EqualizerTwoTone: SvgIconComponent;
    export const Error: SvgIconComponent;
    export const ErrorOutline: SvgIconComponent;
    export const ErrorOutlined: SvgIconComponent;
    export const ErrorOutlineOutlined: SvgIconComponent;
    export const ErrorOutlineRounded: SvgIconComponent;
    export const ErrorOutlineSharp: SvgIconComponent;
    export const ErrorOutlineTwoTone: SvgIconComponent;
    export const ErrorRounded: SvgIconComponent;
    export const ErrorSharp: SvgIconComponent;
    export const ErrorTwoTone: SvgIconComponent;
    export const Escalator: SvgIconComponent;
    export const EscalatorOutlined: SvgIconComponent;
    export const EscalatorRounded: SvgIconComponent;
    export const EscalatorSharp: SvgIconComponent;
    export const EscalatorTwoTone: SvgIconComponent;
    export const EscalatorWarning: SvgIconComponent;
    export const EscalatorWarningOutlined: SvgIconComponent;
    export const EscalatorWarningRounded: SvgIconComponent;
    export const EscalatorWarningSharp: SvgIconComponent;
    export const EscalatorWarningTwoTone: SvgIconComponent;
    export const Euro: SvgIconComponent;
    export const EuroOutlined: SvgIconComponent;
    export const EuroRounded: SvgIconComponent;
    export const EuroSharp: SvgIconComponent;
    export const EuroSymbol: SvgIconComponent;
    export const EuroSymbolOutlined: SvgIconComponent;
    export const EuroSymbolRounded: SvgIconComponent;
    export const EuroSymbolSharp: SvgIconComponent;
    export const EuroSymbolTwoTone: SvgIconComponent;
    export const EuroTwoTone: SvgIconComponent;
    export const Event: SvgIconComponent;
    export const EventAvailable: SvgIconComponent;
    export const EventAvailableOutlined: SvgIconComponent;
    export const EventAvailableRounded: SvgIconComponent;
    export const EventAvailableSharp: SvgIconComponent;
    export const EventAvailableTwoTone: SvgIconComponent;
    export const EventBusy: SvgIconComponent;
    export const EventBusyOutlined: SvgIconComponent;
    export const EventBusyRounded: SvgIconComponent;
    export const EventBusySharp: SvgIconComponent;
    export const EventBusyTwoTone: SvgIconComponent;
    export const EventNote: SvgIconComponent;
    export const EventNoteOutlined: SvgIconComponent;
    export const EventNoteRounded: SvgIconComponent;
    export const EventNoteSharp: SvgIconComponent;
    export const EventNoteTwoTone: SvgIconComponent;
    export const EventOutlined: SvgIconComponent;
    export const EventRepeat: SvgIconComponent;
    export const EventRepeatOutlined: SvgIconComponent;
    export const EventRepeatRounded: SvgIconComponent;
    export const EventRepeatSharp: SvgIconComponent;
    export const EventRepeatTwoTone: SvgIconComponent;
    export const EventRounded: SvgIconComponent;
    export const EventSeat: SvgIconComponent;
    export const EventSeatOutlined: SvgIconComponent;
    export const EventSeatRounded: SvgIconComponent;
    export const EventSeatSharp: SvgIconComponent;
    export const EventSeatTwoTone: SvgIconComponent;
    export const EventSharp: SvgIconComponent;
    export const EventTwoTone: SvgIconComponent;
    export const EvStation: SvgIconComponent;
    export const EvStationOutlined: SvgIconComponent;
    export const EvStationRounded: SvgIconComponent;
    export const EvStationSharp: SvgIconComponent;
    export const EvStationTwoTone: SvgIconComponent;
    export const ExitToApp: SvgIconComponent;
    export const ExitToAppOutlined: SvgIconComponent;
    export const ExitToAppRounded: SvgIconComponent;
    export const ExitToAppSharp: SvgIconComponent;
    export const ExitToAppTwoTone: SvgIconComponent;
    export const Expand: SvgIconComponent;
    export const ExpandCircleDown: SvgIconComponent;
    export const ExpandCircleDownOutlined: SvgIconComponent;
    export const ExpandCircleDownRounded: SvgIconComponent;
    export const ExpandCircleDownSharp: SvgIconComponent;
    export const ExpandCircleDownTwoTone: SvgIconComponent;
    export const ExpandLess: SvgIconComponent;
    export const ExpandLessOutlined: SvgIconComponent;
    export const ExpandLessRounded: SvgIconComponent;
    export const ExpandLessSharp: SvgIconComponent;
    export const ExpandLessTwoTone: SvgIconComponent;
    export const ExpandMore: SvgIconComponent;
    export const ExpandMoreOutlined: SvgIconComponent;
    export const ExpandMoreRounded: SvgIconComponent;
    export const ExpandMoreSharp: SvgIconComponent;
    export const ExpandMoreTwoTone: SvgIconComponent;
    export const ExpandOutlined: SvgIconComponent;
    export const ExpandRounded: SvgIconComponent;
    export const ExpandSharp: SvgIconComponent;
    export const ExpandTwoTone: SvgIconComponent;
    export const Explicit: SvgIconComponent;
    export const ExplicitOutlined: SvgIconComponent;
    export const ExplicitRounded: SvgIconComponent;
    export const ExplicitSharp: SvgIconComponent;
    export const ExplicitTwoTone: SvgIconComponent;
    export const Explore: SvgIconComponent;
    export const ExploreOff: SvgIconComponent;
    export const ExploreOffOutlined: SvgIconComponent;
    export const ExploreOffRounded: SvgIconComponent;
    export const ExploreOffSharp: SvgIconComponent;
    export const ExploreOffTwoTone: SvgIconComponent;
    export const ExploreOutlined: SvgIconComponent;
    export const ExploreRounded: SvgIconComponent;
    export const ExploreSharp: SvgIconComponent;
    export const ExploreTwoTone: SvgIconComponent;
    export const Exposure: SvgIconComponent;
    export const ExposureOutlined: SvgIconComponent;
    export const ExposureRounded: SvgIconComponent;
    export const ExposureSharp: SvgIconComponent;
    export const ExposureTwoTone: SvgIconComponent;
    export const Extension: SvgIconComponent;
    export const ExtensionOff: SvgIconComponent;
    export const ExtensionOffOutlined: SvgIconComponent;
    export const ExtensionOffRounded: SvgIconComponent;
    export const ExtensionOffSharp: SvgIconComponent;
    export const ExtensionOffTwoTone: SvgIconComponent;
    export const ExtensionOutlined: SvgIconComponent;
    export const ExtensionRounded: SvgIconComponent;
    export const ExtensionSharp: SvgIconComponent;
    export const ExtensionTwoTone: SvgIconComponent;
    export const Face: SvgIconComponent;
    export const Facebook: SvgIconComponent;
    export const FacebookOutlined: SvgIconComponent;
    export const FacebookRounded: SvgIconComponent;
    export const FacebookSharp: SvgIconComponent;
    export const FacebookTwoTone: SvgIconComponent;
    export const FaceOutlined: SvgIconComponent;
    export const FaceRetouchingNatural: SvgIconComponent;
    export const FaceRetouchingNaturalOutlined: SvgIconComponent;
    export const FaceRetouchingNaturalRounded: SvgIconComponent;
    export const FaceRetouchingNaturalSharp: SvgIconComponent;
    export const FaceRetouchingNaturalTwoTone: SvgIconComponent;
    export const FaceRetouchingOff: SvgIconComponent;
    export const FaceRetouchingOffOutlined: SvgIconComponent;
    export const FaceRetouchingOffRounded: SvgIconComponent;
    export const FaceRetouchingOffSharp: SvgIconComponent;
    export const FaceRetouchingOffTwoTone: SvgIconComponent;
    export const FaceRounded: SvgIconComponent;
    export const FaceSharp: SvgIconComponent;
    export const FaceTwoTone: SvgIconComponent;
    export const FactCheck: SvgIconComponent;
    export const FactCheckOutlined: SvgIconComponent;
    export const FactCheckRounded: SvgIconComponent;
    export const FactCheckSharp: SvgIconComponent;
    export const FactCheckTwoTone: SvgIconComponent;
    export const Factory: SvgIconComponent;
    export const FactoryOutlined: SvgIconComponent;
    export const FactoryRounded: SvgIconComponent;
    export const FactorySharp: SvgIconComponent;
    export const FactoryTwoTone: SvgIconComponent;
    export const FamilyRestroom: SvgIconComponent;
    export const FamilyRestroomOutlined: SvgIconComponent;
    export const FamilyRestroomRounded: SvgIconComponent;
    export const FamilyRestroomSharp: SvgIconComponent;
    export const FamilyRestroomTwoTone: SvgIconComponent;
    export const Fastfood: SvgIconComponent;
    export const FastfoodOutlined: SvgIconComponent;
    export const FastfoodRounded: SvgIconComponent;
    export const FastfoodSharp: SvgIconComponent;
    export const FastfoodTwoTone: SvgIconComponent;
    export const FastForward: SvgIconComponent;
    export const FastForwardOutlined: SvgIconComponent;
    export const FastForwardRounded: SvgIconComponent;
    export const FastForwardSharp: SvgIconComponent;
    export const FastForwardTwoTone: SvgIconComponent;
    export const FastRewind: SvgIconComponent;
    export const FastRewindOutlined: SvgIconComponent;
    export const FastRewindRounded: SvgIconComponent;
    export const FastRewindSharp: SvgIconComponent;
    export const FastRewindTwoTone: SvgIconComponent;
    export const Favorite: SvgIconComponent;
    export const FavoriteBorder: SvgIconComponent;
    export const FavoriteBorderOutlined: SvgIconComponent;
    export const FavoriteBorderRounded: SvgIconComponent;
    export const FavoriteBorderSharp: SvgIconComponent;
    export const FavoriteBorderTwoTone: SvgIconComponent;
    export const FavoriteOutlined: SvgIconComponent;
    export const FavoriteRounded: SvgIconComponent;
    export const FavoriteSharp: SvgIconComponent;
    export const FavoriteTwoTone: SvgIconComponent;
    export const Fax: SvgIconComponent;
    export const FaxOutlined: SvgIconComponent;
    export const FaxRounded: SvgIconComponent;
    export const FaxSharp: SvgIconComponent;
    export const FaxTwoTone: SvgIconComponent;
    export const FeaturedPlayList: SvgIconComponent;
    export const FeaturedPlayListOutlined: SvgIconComponent;
    export const FeaturedPlayListRounded: SvgIconComponent;
    export const FeaturedPlayListSharp: SvgIconComponent;
    export const FeaturedPlayListTwoTone: SvgIconComponent;
    export const FeaturedVideo: SvgIconComponent;
    export const FeaturedVideoOutlined: SvgIconComponent;
    export const FeaturedVideoRounded: SvgIconComponent;
    export const FeaturedVideoSharp: SvgIconComponent;
    export const FeaturedVideoTwoTone: SvgIconComponent;
    export const Feed: SvgIconComponent;
    export const Feedback: SvgIconComponent;
    export const FeedbackOutlined: SvgIconComponent;
    export const FeedbackRounded: SvgIconComponent;
    export const FeedbackSharp: SvgIconComponent;
    export const FeedbackTwoTone: SvgIconComponent;
    export const FeedOutlined: SvgIconComponent;
    export const FeedRounded: SvgIconComponent;
    export const FeedSharp: SvgIconComponent;
    export const FeedTwoTone: SvgIconComponent;
    export const Female: SvgIconComponent;
    export const FemaleOutlined: SvgIconComponent;
    export const FemaleRounded: SvgIconComponent;
    export const FemaleSharp: SvgIconComponent;
    export const FemaleTwoTone: SvgIconComponent;
    export const Fence: SvgIconComponent;
    export const FenceOutlined: SvgIconComponent;
    export const FenceRounded: SvgIconComponent;
    export const FenceSharp: SvgIconComponent;
    export const FenceTwoTone: SvgIconComponent;
    export const Festival: SvgIconComponent;
    export const FestivalOutlined: SvgIconComponent;
    export const FestivalRounded: SvgIconComponent;
    export const FestivalSharp: SvgIconComponent;
    export const FestivalTwoTone: SvgIconComponent;
    export const FiberDvr: SvgIconComponent;
    export const FiberDvrOutlined: SvgIconComponent;
    export const FiberDvrRounded: SvgIconComponent;
    export const FiberDvrSharp: SvgIconComponent;
    export const FiberDvrTwoTone: SvgIconComponent;
    export const FiberManualRecord: SvgIconComponent;
    export const FiberManualRecordOutlined: SvgIconComponent;
    export const FiberManualRecordRounded: SvgIconComponent;
    export const FiberManualRecordSharp: SvgIconComponent;
    export const FiberManualRecordTwoTone: SvgIconComponent;
    export const FiberNew: SvgIconComponent;
    export const FiberNewOutlined: SvgIconComponent;
    export const FiberNewRounded: SvgIconComponent;
    export const FiberNewSharp: SvgIconComponent;
    export const FiberNewTwoTone: SvgIconComponent;
    export const FiberPin: SvgIconComponent;
    export const FiberPinOutlined: SvgIconComponent;
    export const FiberPinRounded: SvgIconComponent;
    export const FiberPinSharp: SvgIconComponent;
    export const FiberPinTwoTone: SvgIconComponent;
    export const FiberSmartRecord: SvgIconComponent;
    export const FiberSmartRecordOutlined: SvgIconComponent;
    export const FiberSmartRecordRounded: SvgIconComponent;
    export const FiberSmartRecordSharp: SvgIconComponent;
    export const FiberSmartRecordTwoTone: SvgIconComponent;
    export const FifteenMp: SvgIconComponent;
    export const FifteenMpOutlined: SvgIconComponent;
    export const FifteenMpRounded: SvgIconComponent;
    export const FifteenMpSharp: SvgIconComponent;
    export const FifteenMpTwoTone: SvgIconComponent;
    export const FileCopy: SvgIconComponent;
    export const FileCopyOutlined: SvgIconComponent;
    export const FileCopyRounded: SvgIconComponent;
    export const FileCopySharp: SvgIconComponent;
    export const FileCopyTwoTone: SvgIconComponent;
    export const FileDownload: SvgIconComponent;
    export const FileDownloadDone: SvgIconComponent;
    export const FileDownloadDoneOutlined: SvgIconComponent;
    export const FileDownloadDoneRounded: SvgIconComponent;
    export const FileDownloadDoneSharp: SvgIconComponent;
    export const FileDownloadDoneTwoTone: SvgIconComponent;
    export const FileDownloadOff: SvgIconComponent;
    export const FileDownloadOffOutlined: SvgIconComponent;
    export const FileDownloadOffRounded: SvgIconComponent;
    export const FileDownloadOffSharp: SvgIconComponent;
    export const FileDownloadOffTwoTone: SvgIconComponent;
    export const FileDownloadOutlined: SvgIconComponent;
    export const FileDownloadRounded: SvgIconComponent;
    export const FileDownloadSharp: SvgIconComponent;
    export const FileDownloadTwoTone: SvgIconComponent;
    export const FileOpen: SvgIconComponent;
    export const FileOpenOutlined: SvgIconComponent;
    export const FileOpenRounded: SvgIconComponent;
    export const FileOpenSharp: SvgIconComponent;
    export const FileOpenTwoTone: SvgIconComponent;
    export const FilePresent: SvgIconComponent;
    export const FilePresentOutlined: SvgIconComponent;
    export const FilePresentRounded: SvgIconComponent;
    export const FilePresentSharp: SvgIconComponent;
    export const FilePresentTwoTone: SvgIconComponent;
    export const FileUpload: SvgIconComponent;
    export const FileUploadOutlined: SvgIconComponent;
    export const FileUploadRounded: SvgIconComponent;
    export const FileUploadSharp: SvgIconComponent;
    export const FileUploadTwoTone: SvgIconComponent;
    export const Filter: SvgIconComponent;
    export const Filter1: SvgIconComponent;
    export const Filter1Outlined: SvgIconComponent;
    export const Filter1Rounded: SvgIconComponent;
    export const Filter1Sharp: SvgIconComponent;
    export const Filter1TwoTone: SvgIconComponent;
    export const Filter2: SvgIconComponent;
    export const Filter2Outlined: SvgIconComponent;
    export const Filter2Rounded: SvgIconComponent;
    export const Filter2Sharp: SvgIconComponent;
    export const Filter2TwoTone: SvgIconComponent;
    export const Filter3: SvgIconComponent;
    export const Filter3Outlined: SvgIconComponent;
    export const Filter3Rounded: SvgIconComponent;
    export const Filter3Sharp: SvgIconComponent;
    export const Filter3TwoTone: SvgIconComponent;
    export const Filter4: SvgIconComponent;
    export const Filter4Outlined: SvgIconComponent;
    export const Filter4Rounded: SvgIconComponent;
    export const Filter4Sharp: SvgIconComponent;
    export const Filter4TwoTone: SvgIconComponent;
    export const Filter5: SvgIconComponent;
    export const Filter5Outlined: SvgIconComponent;
    export const Filter5Rounded: SvgIconComponent;
    export const Filter5Sharp: SvgIconComponent;
    export const Filter5TwoTone: SvgIconComponent;
    export const Filter6: SvgIconComponent;
    export const Filter6Outlined: SvgIconComponent;
    export const Filter6Rounded: SvgIconComponent;
    export const Filter6Sharp: SvgIconComponent;
    export const Filter6TwoTone: SvgIconComponent;
    export const Filter7: SvgIconComponent;
    export const Filter7Outlined: SvgIconComponent;
    export const Filter7Rounded: SvgIconComponent;
    export const Filter7Sharp: SvgIconComponent;
    export const Filter7TwoTone: SvgIconComponent;
    export const Filter8: SvgIconComponent;
    export const Filter8Outlined: SvgIconComponent;
    export const Filter8Rounded: SvgIconComponent;
    export const Filter8Sharp: SvgIconComponent;
    export const Filter8TwoTone: SvgIconComponent;
    export const Filter9: SvgIconComponent;
    export const Filter9Outlined: SvgIconComponent;
    export const Filter9Plus: SvgIconComponent;
    export const Filter9PlusOutlined: SvgIconComponent;
    export const Filter9PlusRounded: SvgIconComponent;
    export const Filter9PlusSharp: SvgIconComponent;
    export const Filter9PlusTwoTone: SvgIconComponent;
    export const Filter9Rounded: SvgIconComponent;
    export const Filter9Sharp: SvgIconComponent;
    export const Filter9TwoTone: SvgIconComponent;
    export const FilterAlt: SvgIconComponent;
    export const FilterAltOff: SvgIconComponent;
    export const FilterAltOffOutlined: SvgIconComponent;
    export const FilterAltOffRounded: SvgIconComponent;
    export const FilterAltOffSharp: SvgIconComponent;
    export const FilterAltOffTwoTone: SvgIconComponent;
    export const FilterAltOutlined: SvgIconComponent;
    export const FilterAltRounded: SvgIconComponent;
    export const FilterAltSharp: SvgIconComponent;
    export const FilterAltTwoTone: SvgIconComponent;
    export const FilterBAndW: SvgIconComponent;
    export const FilterBAndWOutlined: SvgIconComponent;
    export const FilterBAndWRounded: SvgIconComponent;
    export const FilterBAndWSharp: SvgIconComponent;
    export const FilterBAndWTwoTone: SvgIconComponent;
    export const FilterCenterFocus: SvgIconComponent;
    export const FilterCenterFocusOutlined: SvgIconComponent;
    export const FilterCenterFocusRounded: SvgIconComponent;
    export const FilterCenterFocusSharp: SvgIconComponent;
    export const FilterCenterFocusTwoTone: SvgIconComponent;
    export const FilterDrama: SvgIconComponent;
    export const FilterDramaOutlined: SvgIconComponent;
    export const FilterDramaRounded: SvgIconComponent;
    export const FilterDramaSharp: SvgIconComponent;
    export const FilterDramaTwoTone: SvgIconComponent;
    export const FilterFrames: SvgIconComponent;
    export const FilterFramesOutlined: SvgIconComponent;
    export const FilterFramesRounded: SvgIconComponent;
    export const FilterFramesSharp: SvgIconComponent;
    export const FilterFramesTwoTone: SvgIconComponent;
    export const FilterHdr: SvgIconComponent;
    export const FilterHdrOutlined: SvgIconComponent;
    export const FilterHdrRounded: SvgIconComponent;
    export const FilterHdrSharp: SvgIconComponent;
    export const FilterHdrTwoTone: SvgIconComponent;
    export const FilterList: SvgIconComponent;
    export const FilterListOff: SvgIconComponent;
    export const FilterListOffOutlined: SvgIconComponent;
    export const FilterListOffRounded: SvgIconComponent;
    export const FilterListOffSharp: SvgIconComponent;
    export const FilterListOffTwoTone: SvgIconComponent;
    export const FilterListOutlined: SvgIconComponent;
    export const FilterListRounded: SvgIconComponent;
    export const FilterListSharp: SvgIconComponent;
    export const FilterListTwoTone: SvgIconComponent;
    export const FilterNone: SvgIconComponent;
    export const FilterNoneOutlined: SvgIconComponent;
    export const FilterNoneRounded: SvgIconComponent;
    export const FilterNoneSharp: SvgIconComponent;
    export const FilterNoneTwoTone: SvgIconComponent;
    export const FilterOutlined: SvgIconComponent;
    export const FilterRounded: SvgIconComponent;
    export const FilterSharp: SvgIconComponent;
    export const FilterTiltShift: SvgIconComponent;
    export const FilterTiltShiftOutlined: SvgIconComponent;
    export const FilterTiltShiftRounded: SvgIconComponent;
    export const FilterTiltShiftSharp: SvgIconComponent;
    export const FilterTiltShiftTwoTone: SvgIconComponent;
    export const FilterTwoTone: SvgIconComponent;
    export const FilterVintage: SvgIconComponent;
    export const FilterVintageOutlined: SvgIconComponent;
    export const FilterVintageRounded: SvgIconComponent;
    export const FilterVintageSharp: SvgIconComponent;
    export const FilterVintageTwoTone: SvgIconComponent;
    export const FindInPage: SvgIconComponent;
    export const FindInPageOutlined: SvgIconComponent;
    export const FindInPageRounded: SvgIconComponent;
    export const FindInPageSharp: SvgIconComponent;
    export const FindInPageTwoTone: SvgIconComponent;
    export const FindReplace: SvgIconComponent;
    export const FindReplaceOutlined: SvgIconComponent;
    export const FindReplaceRounded: SvgIconComponent;
    export const FindReplaceSharp: SvgIconComponent;
    export const FindReplaceTwoTone: SvgIconComponent;
    export const Fingerprint: SvgIconComponent;
    export const FingerprintOutlined: SvgIconComponent;
    export const FingerprintRounded: SvgIconComponent;
    export const FingerprintSharp: SvgIconComponent;
    export const FingerprintTwoTone: SvgIconComponent;
    export const FireExtinguisher: SvgIconComponent;
    export const FireExtinguisherOutlined: SvgIconComponent;
    export const FireExtinguisherRounded: SvgIconComponent;
    export const FireExtinguisherSharp: SvgIconComponent;
    export const FireExtinguisherTwoTone: SvgIconComponent;
    export const Fireplace: SvgIconComponent;
    export const FireplaceOutlined: SvgIconComponent;
    export const FireplaceRounded: SvgIconComponent;
    export const FireplaceSharp: SvgIconComponent;
    export const FireplaceTwoTone: SvgIconComponent;
    export const FirstPage: SvgIconComponent;
    export const FirstPageOutlined: SvgIconComponent;
    export const FirstPageRounded: SvgIconComponent;
    export const FirstPageSharp: SvgIconComponent;
    export const FirstPageTwoTone: SvgIconComponent;
    export const Fitbit: SvgIconComponent;
    export const FitbitOutlined: SvgIconComponent;
    export const FitbitRounded: SvgIconComponent;
    export const FitbitSharp: SvgIconComponent;
    export const FitbitTwoTone: SvgIconComponent;
    export const FitnessCenter: SvgIconComponent;
    export const FitnessCenterOutlined: SvgIconComponent;
    export const FitnessCenterRounded: SvgIconComponent;
    export const FitnessCenterSharp: SvgIconComponent;
    export const FitnessCenterTwoTone: SvgIconComponent;
    export const FitScreen: SvgIconComponent;
    export const FitScreenOutlined: SvgIconComponent;
    export const FitScreenRounded: SvgIconComponent;
    export const FitScreenSharp: SvgIconComponent;
    export const FitScreenTwoTone: SvgIconComponent;
    export const FiveG: SvgIconComponent;
    export const FiveGOutlined: SvgIconComponent;
    export const FiveGRounded: SvgIconComponent;
    export const FiveGSharp: SvgIconComponent;
    export const FiveGTwoTone: SvgIconComponent;
    export const FiveK: SvgIconComponent;
    export const FiveKOutlined: SvgIconComponent;
    export const FiveKPlus: SvgIconComponent;
    export const FiveKPlusOutlined: SvgIconComponent;
    export const FiveKPlusRounded: SvgIconComponent;
    export const FiveKPlusSharp: SvgIconComponent;
    export const FiveKPlusTwoTone: SvgIconComponent;
    export const FiveKRounded: SvgIconComponent;
    export const FiveKSharp: SvgIconComponent;
    export const FiveKTwoTone: SvgIconComponent;
    export const FiveMp: SvgIconComponent;
    export const FiveMpOutlined: SvgIconComponent;
    export const FiveMpRounded: SvgIconComponent;
    export const FiveMpSharp: SvgIconComponent;
    export const FiveMpTwoTone: SvgIconComponent;
    export const FivteenMp: SvgIconComponent;
    export const FivteenMpOutlined: SvgIconComponent;
    export const FivteenMpRounded: SvgIconComponent;
    export const FivteenMpSharp: SvgIconComponent;
    export const FivteenMpTwoTone: SvgIconComponent;
    export const Flag: SvgIconComponent;
    export const FlagCircle: SvgIconComponent;
    export const FlagCircleOutlined: SvgIconComponent;
    export const FlagCircleRounded: SvgIconComponent;
    export const FlagCircleSharp: SvgIconComponent;
    export const FlagCircleTwoTone: SvgIconComponent;
    export const FlagOutlined: SvgIconComponent;
    export const FlagRounded: SvgIconComponent;
    export const FlagSharp: SvgIconComponent;
    export const FlagTwoTone: SvgIconComponent;
    export const Flaky: SvgIconComponent;
    export const FlakyOutlined: SvgIconComponent;
    export const FlakyRounded: SvgIconComponent;
    export const FlakySharp: SvgIconComponent;
    export const FlakyTwoTone: SvgIconComponent;
    export const Flare: SvgIconComponent;
    export const FlareOutlined: SvgIconComponent;
    export const FlareRounded: SvgIconComponent;
    export const FlareSharp: SvgIconComponent;
    export const FlareTwoTone: SvgIconComponent;
    export const FlashAuto: SvgIconComponent;
    export const FlashAutoOutlined: SvgIconComponent;
    export const FlashAutoRounded: SvgIconComponent;
    export const FlashAutoSharp: SvgIconComponent;
    export const FlashAutoTwoTone: SvgIconComponent;
    export const FlashlightOff: SvgIconComponent;
    export const FlashlightOffOutlined: SvgIconComponent;
    export const FlashlightOffRounded: SvgIconComponent;
    export const FlashlightOffSharp: SvgIconComponent;
    export const FlashlightOffTwoTone: SvgIconComponent;
    export const FlashlightOn: SvgIconComponent;
    export const FlashlightOnOutlined: SvgIconComponent;
    export const FlashlightOnRounded: SvgIconComponent;
    export const FlashlightOnSharp: SvgIconComponent;
    export const FlashlightOnTwoTone: SvgIconComponent;
    export const FlashOff: SvgIconComponent;
    export const FlashOffOutlined: SvgIconComponent;
    export const FlashOffRounded: SvgIconComponent;
    export const FlashOffSharp: SvgIconComponent;
    export const FlashOffTwoTone: SvgIconComponent;
    export const FlashOn: SvgIconComponent;
    export const FlashOnOutlined: SvgIconComponent;
    export const FlashOnRounded: SvgIconComponent;
    export const FlashOnSharp: SvgIconComponent;
    export const FlashOnTwoTone: SvgIconComponent;
    export const Flatware: SvgIconComponent;
    export const FlatwareOutlined: SvgIconComponent;
    export const FlatwareRounded: SvgIconComponent;
    export const FlatwareSharp: SvgIconComponent;
    export const FlatwareTwoTone: SvgIconComponent;
    export const Flight: SvgIconComponent;
    export const FlightClass: SvgIconComponent;
    export const FlightClassOutlined: SvgIconComponent;
    export const FlightClassRounded: SvgIconComponent;
    export const FlightClassSharp: SvgIconComponent;
    export const FlightClassTwoTone: SvgIconComponent;
    export const FlightLand: SvgIconComponent;
    export const FlightLandOutlined: SvgIconComponent;
    export const FlightLandRounded: SvgIconComponent;
    export const FlightLandSharp: SvgIconComponent;
    export const FlightLandTwoTone: SvgIconComponent;
    export const FlightOutlined: SvgIconComponent;
    export const FlightRounded: SvgIconComponent;
    export const FlightSharp: SvgIconComponent;
    export const FlightTakeoff: SvgIconComponent;
    export const FlightTakeoffOutlined: SvgIconComponent;
    export const FlightTakeoffRounded: SvgIconComponent;
    export const FlightTakeoffSharp: SvgIconComponent;
    export const FlightTakeoffTwoTone: SvgIconComponent;
    export const FlightTwoTone: SvgIconComponent;
    export const Flip: SvgIconComponent;
    export const FlipCameraAndroid: SvgIconComponent;
    export const FlipCameraAndroidOutlined: SvgIconComponent;
    export const FlipCameraAndroidRounded: SvgIconComponent;
    export const FlipCameraAndroidSharp: SvgIconComponent;
    export const FlipCameraAndroidTwoTone: SvgIconComponent;
    export const FlipCameraIos: SvgIconComponent;
    export const FlipCameraIosOutlined: SvgIconComponent;
    export const FlipCameraIosRounded: SvgIconComponent;
    export const FlipCameraIosSharp: SvgIconComponent;
    export const FlipCameraIosTwoTone: SvgIconComponent;
    export const FlipOutlined: SvgIconComponent;
    export const FlipRounded: SvgIconComponent;
    export const FlipSharp: SvgIconComponent;
    export const FlipToBack: SvgIconComponent;
    export const FlipToBackOutlined: SvgIconComponent;
    export const FlipToBackRounded: SvgIconComponent;
    export const FlipToBackSharp: SvgIconComponent;
    export const FlipToBackTwoTone: SvgIconComponent;
    export const FlipToFront: SvgIconComponent;
    export const FlipToFrontOutlined: SvgIconComponent;
    export const FlipToFrontRounded: SvgIconComponent;
    export const FlipToFrontSharp: SvgIconComponent;
    export const FlipToFrontTwoTone: SvgIconComponent;
    export const FlipTwoTone: SvgIconComponent;
    export const Flourescent: SvgIconComponent;
    export const FlourescentOutlined: SvgIconComponent;
    export const FlourescentRounded: SvgIconComponent;
    export const FlourescentSharp: SvgIconComponent;
    export const FlourescentTwoTone: SvgIconComponent;
    export const FlutterDash: SvgIconComponent;
    export const FlutterDashOutlined: SvgIconComponent;
    export const FlutterDashRounded: SvgIconComponent;
    export const FlutterDashSharp: SvgIconComponent;
    export const FlutterDashTwoTone: SvgIconComponent;
    export const FmdBad: SvgIconComponent;
    export const FmdBadOutlined: SvgIconComponent;
    export const FmdBadRounded: SvgIconComponent;
    export const FmdBadSharp: SvgIconComponent;
    export const FmdBadTwoTone: SvgIconComponent;
    export const FmdGood: SvgIconComponent;
    export const FmdGoodOutlined: SvgIconComponent;
    export const FmdGoodRounded: SvgIconComponent;
    export const FmdGoodSharp: SvgIconComponent;
    export const FmdGoodTwoTone: SvgIconComponent;
    export const Folder: SvgIconComponent;
    export const FolderDelete: SvgIconComponent;
    export const FolderDeleteOutlined: SvgIconComponent;
    export const FolderDeleteRounded: SvgIconComponent;
    export const FolderDeleteSharp: SvgIconComponent;
    export const FolderDeleteTwoTone: SvgIconComponent;
    export const FolderOff: SvgIconComponent;
    export const FolderOffOutlined: SvgIconComponent;
    export const FolderOffRounded: SvgIconComponent;
    export const FolderOffSharp: SvgIconComponent;
    export const FolderOffTwoTone: SvgIconComponent;
    export const FolderOpen: SvgIconComponent;
    export const FolderOpenOutlined: SvgIconComponent;
    export const FolderOpenRounded: SvgIconComponent;
    export const FolderOpenSharp: SvgIconComponent;
    export const FolderOpenTwoTone: SvgIconComponent;
    export const FolderOutlined: SvgIconComponent;
    export const FolderRounded: SvgIconComponent;
    export const FolderShared: SvgIconComponent;
    export const FolderSharedOutlined: SvgIconComponent;
    export const FolderSharedRounded: SvgIconComponent;
    export const FolderSharedSharp: SvgIconComponent;
    export const FolderSharedTwoTone: SvgIconComponent;
    export const FolderSharp: SvgIconComponent;
    export const FolderSpecial: SvgIconComponent;
    export const FolderSpecialOutlined: SvgIconComponent;
    export const FolderSpecialRounded: SvgIconComponent;
    export const FolderSpecialSharp: SvgIconComponent;
    export const FolderSpecialTwoTone: SvgIconComponent;
    export const FolderTwoTone: SvgIconComponent;
    export const FolderZip: SvgIconComponent;
    export const FolderZipOutlined: SvgIconComponent;
    export const FolderZipRounded: SvgIconComponent;
    export const FolderZipSharp: SvgIconComponent;
    export const FolderZipTwoTone: SvgIconComponent;
    export const FollowTheSigns: SvgIconComponent;
    export const FollowTheSignsOutlined: SvgIconComponent;
    export const FollowTheSignsRounded: SvgIconComponent;
    export const FollowTheSignsSharp: SvgIconComponent;
    export const FollowTheSignsTwoTone: SvgIconComponent;
    export const FontDownload: SvgIconComponent;
    export const FontDownloadOff: SvgIconComponent;
    export const FontDownloadOffOutlined: SvgIconComponent;
    export const FontDownloadOffRounded: SvgIconComponent;
    export const FontDownloadOffSharp: SvgIconComponent;
    export const FontDownloadOffTwoTone: SvgIconComponent;
    export const FontDownloadOutlined: SvgIconComponent;
    export const FontDownloadRounded: SvgIconComponent;
    export const FontDownloadSharp: SvgIconComponent;
    export const FontDownloadTwoTone: SvgIconComponent;
    export const FoodBank: SvgIconComponent;
    export const FoodBankOutlined: SvgIconComponent;
    export const FoodBankRounded: SvgIconComponent;
    export const FoodBankSharp: SvgIconComponent;
    export const FoodBankTwoTone: SvgIconComponent;
    export const Forest: SvgIconComponent;
    export const ForestOutlined: SvgIconComponent;
    export const ForestRounded: SvgIconComponent;
    export const ForestSharp: SvgIconComponent;
    export const ForestTwoTone: SvgIconComponent;
    export const ForkLeft: SvgIconComponent;
    export const ForkLeftOutlined: SvgIconComponent;
    export const ForkLeftRounded: SvgIconComponent;
    export const ForkLeftSharp: SvgIconComponent;
    export const ForkLeftTwoTone: SvgIconComponent;
    export const ForkRight: SvgIconComponent;
    export const ForkRightOutlined: SvgIconComponent;
    export const ForkRightRounded: SvgIconComponent;
    export const ForkRightSharp: SvgIconComponent;
    export const ForkRightTwoTone: SvgIconComponent;
    export const FormatAlignCenter: SvgIconComponent;
    export const FormatAlignCenterOutlined: SvgIconComponent;
    export const FormatAlignCenterRounded: SvgIconComponent;
    export const FormatAlignCenterSharp: SvgIconComponent;
    export const FormatAlignCenterTwoTone: SvgIconComponent;
    export const FormatAlignJustify: SvgIconComponent;
    export const FormatAlignJustifyOutlined: SvgIconComponent;
    export const FormatAlignJustifyRounded: SvgIconComponent;
    export const FormatAlignJustifySharp: SvgIconComponent;
    export const FormatAlignJustifyTwoTone: SvgIconComponent;
    export const FormatAlignLeft: SvgIconComponent;
    export const FormatAlignLeftOutlined: SvgIconComponent;
    export const FormatAlignLeftRounded: SvgIconComponent;
    export const FormatAlignLeftSharp: SvgIconComponent;
    export const FormatAlignLeftTwoTone: SvgIconComponent;
    export const FormatAlignRight: SvgIconComponent;
    export const FormatAlignRightOutlined: SvgIconComponent;
    export const FormatAlignRightRounded: SvgIconComponent;
    export const FormatAlignRightSharp: SvgIconComponent;
    export const FormatAlignRightTwoTone: SvgIconComponent;
    export const FormatBold: SvgIconComponent;
    export const FormatBoldOutlined: SvgIconComponent;
    export const FormatBoldRounded: SvgIconComponent;
    export const FormatBoldSharp: SvgIconComponent;
    export const FormatBoldTwoTone: SvgIconComponent;
    export const FormatClear: SvgIconComponent;
    export const FormatClearOutlined: SvgIconComponent;
    export const FormatClearRounded: SvgIconComponent;
    export const FormatClearSharp: SvgIconComponent;
    export const FormatClearTwoTone: SvgIconComponent;
    export const FormatColorFill: SvgIconComponent;
    export const FormatColorFillOutlined: SvgIconComponent;
    export const FormatColorFillRounded: SvgIconComponent;
    export const FormatColorFillSharp: SvgIconComponent;
    export const FormatColorFillTwoTone: SvgIconComponent;
    export const FormatColorReset: SvgIconComponent;
    export const FormatColorResetOutlined: SvgIconComponent;
    export const FormatColorResetRounded: SvgIconComponent;
    export const FormatColorResetSharp: SvgIconComponent;
    export const FormatColorResetTwoTone: SvgIconComponent;
    export const FormatColorText: SvgIconComponent;
    export const FormatColorTextOutlined: SvgIconComponent;
    export const FormatColorTextRounded: SvgIconComponent;
    export const FormatColorTextSharp: SvgIconComponent;
    export const FormatColorTextTwoTone: SvgIconComponent;
    export const FormatIndentDecrease: SvgIconComponent;
    export const FormatIndentDecreaseOutlined: SvgIconComponent;
    export const FormatIndentDecreaseRounded: SvgIconComponent;
    export const FormatIndentDecreaseSharp: SvgIconComponent;
    export const FormatIndentDecreaseTwoTone: SvgIconComponent;
    export const FormatIndentIncrease: SvgIconComponent;
    export const FormatIndentIncreaseOutlined: SvgIconComponent;
    export const FormatIndentIncreaseRounded: SvgIconComponent;
    export const FormatIndentIncreaseSharp: SvgIconComponent;
    export const FormatIndentIncreaseTwoTone: SvgIconComponent;
    export const FormatItalic: SvgIconComponent;
    export const FormatItalicOutlined: SvgIconComponent;
    export const FormatItalicRounded: SvgIconComponent;
    export const FormatItalicSharp: SvgIconComponent;
    export const FormatItalicTwoTone: SvgIconComponent;
    export const FormatLineSpacing: SvgIconComponent;
    export const FormatLineSpacingOutlined: SvgIconComponent;
    export const FormatLineSpacingRounded: SvgIconComponent;
    export const FormatLineSpacingSharp: SvgIconComponent;
    export const FormatLineSpacingTwoTone: SvgIconComponent;
    export const FormatListBulleted: SvgIconComponent;
    export const FormatListBulletedOutlined: SvgIconComponent;
    export const FormatListBulletedRounded: SvgIconComponent;
    export const FormatListBulletedSharp: SvgIconComponent;
    export const FormatListBulletedTwoTone: SvgIconComponent;
    export const FormatListNumbered: SvgIconComponent;
    export const FormatListNumberedOutlined: SvgIconComponent;
    export const FormatListNumberedRounded: SvgIconComponent;
    export const FormatListNumberedRtl: SvgIconComponent;
    export const FormatListNumberedRtlOutlined: SvgIconComponent;
    export const FormatListNumberedRtlRounded: SvgIconComponent;
    export const FormatListNumberedRtlSharp: SvgIconComponent;
    export const FormatListNumberedRtlTwoTone: SvgIconComponent;
    export const FormatListNumberedSharp: SvgIconComponent;
    export const FormatListNumberedTwoTone: SvgIconComponent;
    export const FormatOverline: SvgIconComponent;
    export const FormatOverlineOutlined: SvgIconComponent;
    export const FormatOverlineRounded: SvgIconComponent;
    export const FormatOverlineSharp: SvgIconComponent;
    export const FormatOverlineTwoTone: SvgIconComponent;
    export const FormatPaint: SvgIconComponent;
    export const FormatPaintOutlined: SvgIconComponent;
    export const FormatPaintRounded: SvgIconComponent;
    export const FormatPaintSharp: SvgIconComponent;
    export const FormatPaintTwoTone: SvgIconComponent;
    export const FormatQuote: SvgIconComponent;
    export const FormatQuoteOutlined: SvgIconComponent;
    export const FormatQuoteRounded: SvgIconComponent;
    export const FormatQuoteSharp: SvgIconComponent;
    export const FormatQuoteTwoTone: SvgIconComponent;
    export const FormatShapes: SvgIconComponent;
    export const FormatShapesOutlined: SvgIconComponent;
    export const FormatShapesRounded: SvgIconComponent;
    export const FormatShapesSharp: SvgIconComponent;
    export const FormatShapesTwoTone: SvgIconComponent;
    export const FormatSize: SvgIconComponent;
    export const FormatSizeOutlined: SvgIconComponent;
    export const FormatSizeRounded: SvgIconComponent;
    export const FormatSizeSharp: SvgIconComponent;
    export const FormatSizeTwoTone: SvgIconComponent;
    export const FormatStrikethrough: SvgIconComponent;
    export const FormatStrikethroughOutlined: SvgIconComponent;
    export const FormatStrikethroughRounded: SvgIconComponent;
    export const FormatStrikethroughSharp: SvgIconComponent;
    export const FormatStrikethroughTwoTone: SvgIconComponent;
    export const FormatTextdirectionLToR: SvgIconComponent;
    export const FormatTextdirectionLToROutlined: SvgIconComponent;
    export const FormatTextdirectionLToRRounded: SvgIconComponent;
    export const FormatTextdirectionLToRSharp: SvgIconComponent;
    export const FormatTextdirectionLToRTwoTone: SvgIconComponent;
    export const FormatTextdirectionRToL: SvgIconComponent;
    export const FormatTextdirectionRToLOutlined: SvgIconComponent;
    export const FormatTextdirectionRToLRounded: SvgIconComponent;
    export const FormatTextdirectionRToLSharp: SvgIconComponent;
    export const FormatTextdirectionRToLTwoTone: SvgIconComponent;
    export const FormatUnderlined: SvgIconComponent;
    export const FormatUnderlinedOutlined: SvgIconComponent;
    export const FormatUnderlinedRounded: SvgIconComponent;
    export const FormatUnderlinedSharp: SvgIconComponent;
    export const FormatUnderlinedTwoTone: SvgIconComponent;
    export const Fort: SvgIconComponent;
    export const FortOutlined: SvgIconComponent;
    export const FortRounded: SvgIconComponent;
    export const FortSharp: SvgIconComponent;
    export const FortTwoTone: SvgIconComponent;
    export const Forum: SvgIconComponent;
    export const ForumOutlined: SvgIconComponent;
    export const ForumRounded: SvgIconComponent;
    export const ForumSharp: SvgIconComponent;
    export const ForumTwoTone: SvgIconComponent;
    export const Forward: SvgIconComponent;
    export const Forward10: SvgIconComponent;
    export const Forward10Outlined: SvgIconComponent;
    export const Forward10Rounded: SvgIconComponent;
    export const Forward10Sharp: SvgIconComponent;
    export const Forward10TwoTone: SvgIconComponent;
    export const Forward30: SvgIconComponent;
    export const Forward30Outlined: SvgIconComponent;
    export const Forward30Rounded: SvgIconComponent;
    export const Forward30Sharp: SvgIconComponent;
    export const Forward30TwoTone: SvgIconComponent;
    export const Forward5: SvgIconComponent;
    export const Forward5Outlined: SvgIconComponent;
    export const Forward5Rounded: SvgIconComponent;
    export const Forward5Sharp: SvgIconComponent;
    export const Forward5TwoTone: SvgIconComponent;
    export const ForwardOutlined: SvgIconComponent;
    export const ForwardRounded: SvgIconComponent;
    export const ForwardSharp: SvgIconComponent;
    export const ForwardToInbox: SvgIconComponent;
    export const ForwardToInboxOutlined: SvgIconComponent;
    export const ForwardToInboxRounded: SvgIconComponent;
    export const ForwardToInboxSharp: SvgIconComponent;
    export const ForwardToInboxTwoTone: SvgIconComponent;
    export const ForwardTwoTone: SvgIconComponent;
    export const Foundation: SvgIconComponent;
    export const FoundationOutlined: SvgIconComponent;
    export const FoundationRounded: SvgIconComponent;
    export const FoundationSharp: SvgIconComponent;
    export const FoundationTwoTone: SvgIconComponent;
    export const FourGMobiledata: SvgIconComponent;
    export const FourGMobiledataOutlined: SvgIconComponent;
    export const FourGMobiledataRounded: SvgIconComponent;
    export const FourGMobiledataSharp: SvgIconComponent;
    export const FourGMobiledataTwoTone: SvgIconComponent;
    export const FourGPlusMobiledata: SvgIconComponent;
    export const FourGPlusMobiledataOutlined: SvgIconComponent;
    export const FourGPlusMobiledataRounded: SvgIconComponent;
    export const FourGPlusMobiledataSharp: SvgIconComponent;
    export const FourGPlusMobiledataTwoTone: SvgIconComponent;
    export const FourK: SvgIconComponent;
    export const FourKOutlined: SvgIconComponent;
    export const FourKPlus: SvgIconComponent;
    export const FourKPlusOutlined: SvgIconComponent;
    export const FourKPlusRounded: SvgIconComponent;
    export const FourKPlusSharp: SvgIconComponent;
    export const FourKPlusTwoTone: SvgIconComponent;
    export const FourKRounded: SvgIconComponent;
    export const FourKSharp: SvgIconComponent;
    export const FourKTwoTone: SvgIconComponent;
    export const FourMp: SvgIconComponent;
    export const FourMpOutlined: SvgIconComponent;
    export const FourMpRounded: SvgIconComponent;
    export const FourMpSharp: SvgIconComponent;
    export const FourMpTwoTone: SvgIconComponent;
    export const FourteenMp: SvgIconComponent;
    export const FourteenMpOutlined: SvgIconComponent;
    export const FourteenMpRounded: SvgIconComponent;
    export const FourteenMpSharp: SvgIconComponent;
    export const FourteenMpTwoTone: SvgIconComponent;
    export const FreeBreakfast: SvgIconComponent;
    export const FreeBreakfastOutlined: SvgIconComponent;
    export const FreeBreakfastRounded: SvgIconComponent;
    export const FreeBreakfastSharp: SvgIconComponent;
    export const FreeBreakfastTwoTone: SvgIconComponent;
    export const Fullscreen: SvgIconComponent;
    export const FullscreenExit: SvgIconComponent;
    export const FullscreenExitOutlined: SvgIconComponent;
    export const FullscreenExitRounded: SvgIconComponent;
    export const FullscreenExitSharp: SvgIconComponent;
    export const FullscreenExitTwoTone: SvgIconComponent;
    export const FullscreenOutlined: SvgIconComponent;
    export const FullscreenRounded: SvgIconComponent;
    export const FullscreenSharp: SvgIconComponent;
    export const FullscreenTwoTone: SvgIconComponent;
    export const Functions: SvgIconComponent;
    export const FunctionsOutlined: SvgIconComponent;
    export const FunctionsRounded: SvgIconComponent;
    export const FunctionsSharp: SvgIconComponent;
    export const FunctionsTwoTone: SvgIconComponent;
    export const Gamepad: SvgIconComponent;
    export const GamepadOutlined: SvgIconComponent;
    export const GamepadRounded: SvgIconComponent;
    export const GamepadSharp: SvgIconComponent;
    export const GamepadTwoTone: SvgIconComponent;
    export const Games: SvgIconComponent;
    export const GamesOutlined: SvgIconComponent;
    export const GamesRounded: SvgIconComponent;
    export const GamesSharp: SvgIconComponent;
    export const GamesTwoTone: SvgIconComponent;
    export const Garage: SvgIconComponent;
    export const GarageOutlined: SvgIconComponent;
    export const GarageRounded: SvgIconComponent;
    export const GarageSharp: SvgIconComponent;
    export const GarageTwoTone: SvgIconComponent;
    export const Gavel: SvgIconComponent;
    export const GavelOutlined: SvgIconComponent;
    export const GavelRounded: SvgIconComponent;
    export const GavelSharp: SvgIconComponent;
    export const GavelTwoTone: SvgIconComponent;
    export const Gesture: SvgIconComponent;
    export const GestureOutlined: SvgIconComponent;
    export const GestureRounded: SvgIconComponent;
    export const GestureSharp: SvgIconComponent;
    export const GestureTwoTone: SvgIconComponent;
    export const GetApp: SvgIconComponent;
    export const GetAppOutlined: SvgIconComponent;
    export const GetAppRounded: SvgIconComponent;
    export const GetAppSharp: SvgIconComponent;
    export const GetAppTwoTone: SvgIconComponent;
    export const Gif: SvgIconComponent;
    export const GifBox: SvgIconComponent;
    export const GifBoxOutlined: SvgIconComponent;
    export const GifBoxRounded: SvgIconComponent;
    export const GifBoxSharp: SvgIconComponent;
    export const GifBoxTwoTone: SvgIconComponent;
    export const GifOutlined: SvgIconComponent;
    export const GifRounded: SvgIconComponent;
    export const GifSharp: SvgIconComponent;
    export const GifTwoTone: SvgIconComponent;
    export const Girl: SvgIconComponent;
    export const GirlOutlined: SvgIconComponent;
    export const GirlRounded: SvgIconComponent;
    export const GirlSharp: SvgIconComponent;
    export const GirlTwoTone: SvgIconComponent;
    export const Gite: SvgIconComponent;
    export const GiteOutlined: SvgIconComponent;
    export const GiteRounded: SvgIconComponent;
    export const GiteSharp: SvgIconComponent;
    export const GiteTwoTone: SvgIconComponent;
    export const GitHub: SvgIconComponent;
    export const GMobiledata: SvgIconComponent;
    export const GMobiledataOutlined: SvgIconComponent;
    export const GMobiledataRounded: SvgIconComponent;
    export const GMobiledataSharp: SvgIconComponent;
    export const GMobiledataTwoTone: SvgIconComponent;
    export const GolfCourse: SvgIconComponent;
    export const GolfCourseOutlined: SvgIconComponent;
    export const GolfCourseRounded: SvgIconComponent;
    export const GolfCourseSharp: SvgIconComponent;
    export const GolfCourseTwoTone: SvgIconComponent;
    export const Google: SvgIconComponent;
    export const GppBad: SvgIconComponent;
    export const GppBadOutlined: SvgIconComponent;
    export const GppBadRounded: SvgIconComponent;
    export const GppBadSharp: SvgIconComponent;
    export const GppBadTwoTone: SvgIconComponent;
    export const GppGood: SvgIconComponent;
    export const GppGoodOutlined: SvgIconComponent;
    export const GppGoodRounded: SvgIconComponent;
    export const GppGoodSharp: SvgIconComponent;
    export const GppGoodTwoTone: SvgIconComponent;
    export const GppMaybe: SvgIconComponent;
    export const GppMaybeOutlined: SvgIconComponent;
    export const GppMaybeRounded: SvgIconComponent;
    export const GppMaybeSharp: SvgIconComponent;
    export const GppMaybeTwoTone: SvgIconComponent;
    export const GpsFixed: SvgIconComponent;
    export const GpsFixedOutlined: SvgIconComponent;
    export const GpsFixedRounded: SvgIconComponent;
    export const GpsFixedSharp: SvgIconComponent;
    export const GpsFixedTwoTone: SvgIconComponent;
    export const GpsNotFixed: SvgIconComponent;
    export const GpsNotFixedOutlined: SvgIconComponent;
    export const GpsNotFixedRounded: SvgIconComponent;
    export const GpsNotFixedSharp: SvgIconComponent;
    export const GpsNotFixedTwoTone: SvgIconComponent;
    export const GpsOff: SvgIconComponent;
    export const GpsOffOutlined: SvgIconComponent;
    export const GpsOffRounded: SvgIconComponent;
    export const GpsOffSharp: SvgIconComponent;
    export const GpsOffTwoTone: SvgIconComponent;
    export const Grade: SvgIconComponent;
    export const GradeOutlined: SvgIconComponent;
    export const GradeRounded: SvgIconComponent;
    export const GradeSharp: SvgIconComponent;
    export const GradeTwoTone: SvgIconComponent;
    export const Gradient: SvgIconComponent;
    export const GradientOutlined: SvgIconComponent;
    export const GradientRounded: SvgIconComponent;
    export const GradientSharp: SvgIconComponent;
    export const GradientTwoTone: SvgIconComponent;
    export const Grading: SvgIconComponent;
    export const GradingOutlined: SvgIconComponent;
    export const GradingRounded: SvgIconComponent;
    export const GradingSharp: SvgIconComponent;
    export const GradingTwoTone: SvgIconComponent;
    export const Grain: SvgIconComponent;
    export const GrainOutlined: SvgIconComponent;
    export const GrainRounded: SvgIconComponent;
    export const GrainSharp: SvgIconComponent;
    export const GrainTwoTone: SvgIconComponent;
    export const GraphicEq: SvgIconComponent;
    export const GraphicEqOutlined: SvgIconComponent;
    export const GraphicEqRounded: SvgIconComponent;
    export const GraphicEqSharp: SvgIconComponent;
    export const GraphicEqTwoTone: SvgIconComponent;
    export const Grass: SvgIconComponent;
    export const GrassOutlined: SvgIconComponent;
    export const GrassRounded: SvgIconComponent;
    export const GrassSharp: SvgIconComponent;
    export const GrassTwoTone: SvgIconComponent;
    export const Grid3x3: SvgIconComponent;
    export const Grid3x3Outlined: SvgIconComponent;
    export const Grid3x3Rounded: SvgIconComponent;
    export const Grid3x3Sharp: SvgIconComponent;
    export const Grid3x3TwoTone: SvgIconComponent;
    export const Grid4x4: SvgIconComponent;
    export const Grid4x4Outlined: SvgIconComponent;
    export const Grid4x4Rounded: SvgIconComponent;
    export const Grid4x4Sharp: SvgIconComponent;
    export const Grid4x4TwoTone: SvgIconComponent;
    export const GridGoldenratio: SvgIconComponent;
    export const GridGoldenratioOutlined: SvgIconComponent;
    export const GridGoldenratioRounded: SvgIconComponent;
    export const GridGoldenratioSharp: SvgIconComponent;
    export const GridGoldenratioTwoTone: SvgIconComponent;
    export const GridOff: SvgIconComponent;
    export const GridOffOutlined: SvgIconComponent;
    export const GridOffRounded: SvgIconComponent;
    export const GridOffSharp: SvgIconComponent;
    export const GridOffTwoTone: SvgIconComponent;
    export const GridOn: SvgIconComponent;
    export const GridOnOutlined: SvgIconComponent;
    export const GridOnRounded: SvgIconComponent;
    export const GridOnSharp: SvgIconComponent;
    export const GridOnTwoTone: SvgIconComponent;
    export const GridView: SvgIconComponent;
    export const GridViewOutlined: SvgIconComponent;
    export const GridViewRounded: SvgIconComponent;
    export const GridViewSharp: SvgIconComponent;
    export const GridViewTwoTone: SvgIconComponent;
    export const Group: SvgIconComponent;
    export const GroupAdd: SvgIconComponent;
    export const GroupAddOutlined: SvgIconComponent;
    export const GroupAddRounded: SvgIconComponent;
    export const GroupAddSharp: SvgIconComponent;
    export const GroupAddTwoTone: SvgIconComponent;
    export const GroupOutlined: SvgIconComponent;
    export const GroupRemove: SvgIconComponent;
    export const GroupRemoveOutlined: SvgIconComponent;
    export const GroupRemoveRounded: SvgIconComponent;
    export const GroupRemoveSharp: SvgIconComponent;
    export const GroupRemoveTwoTone: SvgIconComponent;
    export const GroupRounded: SvgIconComponent;
    export const Groups: SvgIconComponent;
    export const GroupSharp: SvgIconComponent;
    export const GroupsOutlined: SvgIconComponent;
    export const GroupsRounded: SvgIconComponent;
    export const GroupsSharp: SvgIconComponent;
    export const GroupsTwoTone: SvgIconComponent;
    export const GroupTwoTone: SvgIconComponent;
    export const GroupWork: SvgIconComponent;
    export const GroupWorkOutlined: SvgIconComponent;
    export const GroupWorkRounded: SvgIconComponent;
    export const GroupWorkSharp: SvgIconComponent;
    export const GroupWorkTwoTone: SvgIconComponent;
    export const GTranslate: SvgIconComponent;
    export const GTranslateOutlined: SvgIconComponent;
    export const GTranslateRounded: SvgIconComponent;
    export const GTranslateSharp: SvgIconComponent;
    export const GTranslateTwoTone: SvgIconComponent;
    export const Hail: SvgIconComponent;
    export const HailOutlined: SvgIconComponent;
    export const HailRounded: SvgIconComponent;
    export const HailSharp: SvgIconComponent;
    export const HailTwoTone: SvgIconComponent;
    export const Handyman: SvgIconComponent;
    export const HandymanOutlined: SvgIconComponent;
    export const HandymanRounded: SvgIconComponent;
    export const HandymanSharp: SvgIconComponent;
    export const HandymanTwoTone: SvgIconComponent;
    export const Hardware: SvgIconComponent;
    export const HardwareOutlined: SvgIconComponent;
    export const HardwareRounded: SvgIconComponent;
    export const HardwareSharp: SvgIconComponent;
    export const HardwareTwoTone: SvgIconComponent;
    export const Hd: SvgIconComponent;
    export const HdOutlined: SvgIconComponent;
    export const HdrAuto: SvgIconComponent;
    export const HdrAutoOutlined: SvgIconComponent;
    export const HdrAutoRounded: SvgIconComponent;
    export const HdrAutoSelect: SvgIconComponent;
    export const HdrAutoSelectOutlined: SvgIconComponent;
    export const HdrAutoSelectRounded: SvgIconComponent;
    export const HdrAutoSelectSharp: SvgIconComponent;
    export const HdrAutoSelectTwoTone: SvgIconComponent;
    export const HdrAutoSharp: SvgIconComponent;
    export const HdrAutoTwoTone: SvgIconComponent;
    export const HdrEnhancedSelect: SvgIconComponent;
    export const HdrEnhancedSelectOutlined: SvgIconComponent;
    export const HdrEnhancedSelectRounded: SvgIconComponent;
    export const HdrEnhancedSelectSharp: SvgIconComponent;
    export const HdrEnhancedSelectTwoTone: SvgIconComponent;
    export const HdrOff: SvgIconComponent;
    export const HdrOffOutlined: SvgIconComponent;
    export const HdrOffRounded: SvgIconComponent;
    export const HdrOffSelect: SvgIconComponent;
    export const HdrOffSelectOutlined: SvgIconComponent;
    export const HdrOffSelectRounded: SvgIconComponent;
    export const HdrOffSelectSharp: SvgIconComponent;
    export const HdrOffSelectTwoTone: SvgIconComponent;
    export const HdrOffSharp: SvgIconComponent;
    export const HdrOffTwoTone: SvgIconComponent;
    export const HdrOn: SvgIconComponent;
    export const HdrOnOutlined: SvgIconComponent;
    export const HdrOnRounded: SvgIconComponent;
    export const HdrOnSelect: SvgIconComponent;
    export const HdrOnSelectOutlined: SvgIconComponent;
    export const HdrOnSelectRounded: SvgIconComponent;
    export const HdrOnSelectSharp: SvgIconComponent;
    export const HdrOnSelectTwoTone: SvgIconComponent;
    export const HdrOnSharp: SvgIconComponent;
    export const HdrOnTwoTone: SvgIconComponent;
    export const HdRounded: SvgIconComponent;
    export const HdrPlus: SvgIconComponent;
    export const HdrPlusOutlined: SvgIconComponent;
    export const HdrPlusRounded: SvgIconComponent;
    export const HdrPlusSharp: SvgIconComponent;
    export const HdrPlusTwoTone: SvgIconComponent;
    export const HdrStrong: SvgIconComponent;
    export const HdrStrongOutlined: SvgIconComponent;
    export const HdrStrongRounded: SvgIconComponent;
    export const HdrStrongSharp: SvgIconComponent;
    export const HdrStrongTwoTone: SvgIconComponent;
    export const HdrWeak: SvgIconComponent;
    export const HdrWeakOutlined: SvgIconComponent;
    export const HdrWeakRounded: SvgIconComponent;
    export const HdrWeakSharp: SvgIconComponent;
    export const HdrWeakTwoTone: SvgIconComponent;
    export const HdSharp: SvgIconComponent;
    export const HdTwoTone: SvgIconComponent;
    export const Headphones: SvgIconComponent;
    export const HeadphonesBattery: SvgIconComponent;
    export const HeadphonesBatteryOutlined: SvgIconComponent;
    export const HeadphonesBatteryRounded: SvgIconComponent;
    export const HeadphonesBatterySharp: SvgIconComponent;
    export const HeadphonesBatteryTwoTone: SvgIconComponent;
    export const HeadphonesOutlined: SvgIconComponent;
    export const HeadphonesRounded: SvgIconComponent;
    export const HeadphonesSharp: SvgIconComponent;
    export const HeadphonesTwoTone: SvgIconComponent;
    export const Headset: SvgIconComponent;
    export const HeadsetMic: SvgIconComponent;
    export const HeadsetMicOutlined: SvgIconComponent;
    export const HeadsetMicRounded: SvgIconComponent;
    export const HeadsetMicSharp: SvgIconComponent;
    export const HeadsetMicTwoTone: SvgIconComponent;
    export const HeadsetOff: SvgIconComponent;
    export const HeadsetOffOutlined: SvgIconComponent;
    export const HeadsetOffRounded: SvgIconComponent;
    export const HeadsetOffSharp: SvgIconComponent;
    export const HeadsetOffTwoTone: SvgIconComponent;
    export const HeadsetOutlined: SvgIconComponent;
    export const HeadsetRounded: SvgIconComponent;
    export const HeadsetSharp: SvgIconComponent;
    export const HeadsetTwoTone: SvgIconComponent;
    export const Healing: SvgIconComponent;
    export const HealingOutlined: SvgIconComponent;
    export const HealingRounded: SvgIconComponent;
    export const HealingSharp: SvgIconComponent;
    export const HealingTwoTone: SvgIconComponent;
    export const HealthAndSafety: SvgIconComponent;
    export const HealthAndSafetyOutlined: SvgIconComponent;
    export const HealthAndSafetyRounded: SvgIconComponent;
    export const HealthAndSafetySharp: SvgIconComponent;
    export const HealthAndSafetyTwoTone: SvgIconComponent;
    export const Hearing: SvgIconComponent;
    export const HearingDisabled: SvgIconComponent;
    export const HearingDisabledOutlined: SvgIconComponent;
    export const HearingDisabledRounded: SvgIconComponent;
    export const HearingDisabledSharp: SvgIconComponent;
    export const HearingDisabledTwoTone: SvgIconComponent;
    export const HearingOutlined: SvgIconComponent;
    export const HearingRounded: SvgIconComponent;
    export const HearingSharp: SvgIconComponent;
    export const HearingTwoTone: SvgIconComponent;
    export const HeartBroken: SvgIconComponent;
    export const HeartBrokenOutlined: SvgIconComponent;
    export const HeartBrokenRounded: SvgIconComponent;
    export const HeartBrokenSharp: SvgIconComponent;
    export const HeartBrokenTwoTone: SvgIconComponent;
    export const Height: SvgIconComponent;
    export const HeightOutlined: SvgIconComponent;
    export const HeightRounded: SvgIconComponent;
    export const HeightSharp: SvgIconComponent;
    export const HeightTwoTone: SvgIconComponent;
    export const Help: SvgIconComponent;
    export const HelpCenter: SvgIconComponent;
    export const HelpCenterOutlined: SvgIconComponent;
    export const HelpCenterRounded: SvgIconComponent;
    export const HelpCenterSharp: SvgIconComponent;
    export const HelpCenterTwoTone: SvgIconComponent;
    export const HelpOutline: SvgIconComponent;
    export const HelpOutlined: SvgIconComponent;
    export const HelpOutlineOutlined: SvgIconComponent;
    export const HelpOutlineRounded: SvgIconComponent;
    export const HelpOutlineSharp: SvgIconComponent;
    export const HelpOutlineTwoTone: SvgIconComponent;
    export const HelpRounded: SvgIconComponent;
    export const HelpSharp: SvgIconComponent;
    export const HelpTwoTone: SvgIconComponent;
    export const Hevc: SvgIconComponent;
    export const HevcOutlined: SvgIconComponent;
    export const HevcRounded: SvgIconComponent;
    export const HevcSharp: SvgIconComponent;
    export const HevcTwoTone: SvgIconComponent;
    export const Hexagon: SvgIconComponent;
    export const HexagonOutlined: SvgIconComponent;
    export const HexagonRounded: SvgIconComponent;
    export const HexagonSharp: SvgIconComponent;
    export const HexagonTwoTone: SvgIconComponent;
    export const HideImage: SvgIconComponent;
    export const HideImageOutlined: SvgIconComponent;
    export const HideImageRounded: SvgIconComponent;
    export const HideImageSharp: SvgIconComponent;
    export const HideImageTwoTone: SvgIconComponent;
    export const HideSource: SvgIconComponent;
    export const HideSourceOutlined: SvgIconComponent;
    export const HideSourceRounded: SvgIconComponent;
    export const HideSourceSharp: SvgIconComponent;
    export const HideSourceTwoTone: SvgIconComponent;
    export const Highlight: SvgIconComponent;
    export const HighlightAlt: SvgIconComponent;
    export const HighlightAltOutlined: SvgIconComponent;
    export const HighlightAltRounded: SvgIconComponent;
    export const HighlightAltSharp: SvgIconComponent;
    export const HighlightAltTwoTone: SvgIconComponent;
    export const HighlightOff: SvgIconComponent;
    export const HighlightOffOutlined: SvgIconComponent;
    export const HighlightOffRounded: SvgIconComponent;
    export const HighlightOffSharp: SvgIconComponent;
    export const HighlightOffTwoTone: SvgIconComponent;
    export const HighlightOutlined: SvgIconComponent;
    export const HighlightRounded: SvgIconComponent;
    export const HighlightSharp: SvgIconComponent;
    export const HighlightTwoTone: SvgIconComponent;
    export const HighQuality: SvgIconComponent;
    export const HighQualityOutlined: SvgIconComponent;
    export const HighQualityRounded: SvgIconComponent;
    export const HighQualitySharp: SvgIconComponent;
    export const HighQualityTwoTone: SvgIconComponent;
    export const Hiking: SvgIconComponent;
    export const HikingOutlined: SvgIconComponent;
    export const HikingRounded: SvgIconComponent;
    export const HikingSharp: SvgIconComponent;
    export const HikingTwoTone: SvgIconComponent;
    export const History: SvgIconComponent;
    export const HistoryEdu: SvgIconComponent;
    export const HistoryEduOutlined: SvgIconComponent;
    export const HistoryEduRounded: SvgIconComponent;
    export const HistoryEduSharp: SvgIconComponent;
    export const HistoryEduTwoTone: SvgIconComponent;
    export const HistoryOutlined: SvgIconComponent;
    export const HistoryRounded: SvgIconComponent;
    export const HistorySharp: SvgIconComponent;
    export const HistoryToggleOff: SvgIconComponent;
    export const HistoryToggleOffOutlined: SvgIconComponent;
    export const HistoryToggleOffRounded: SvgIconComponent;
    export const HistoryToggleOffSharp: SvgIconComponent;
    export const HistoryToggleOffTwoTone: SvgIconComponent;
    export const HistoryTwoTone: SvgIconComponent;
    export const Hive: SvgIconComponent;
    export const HiveOutlined: SvgIconComponent;
    export const HiveRounded: SvgIconComponent;
    export const HiveSharp: SvgIconComponent;
    export const HiveTwoTone: SvgIconComponent;
    export const Hls: SvgIconComponent;
    export const HlsOff: SvgIconComponent;
    export const HlsOffOutlined: SvgIconComponent;
    export const HlsOffRounded: SvgIconComponent;
    export const HlsOffSharp: SvgIconComponent;
    export const HlsOffTwoTone: SvgIconComponent;
    export const HlsOutlined: SvgIconComponent;
    export const HlsRounded: SvgIconComponent;
    export const HlsSharp: SvgIconComponent;
    export const HlsTwoTone: SvgIconComponent;
    export const HMobiledata: SvgIconComponent;
    export const HMobiledataOutlined: SvgIconComponent;
    export const HMobiledataRounded: SvgIconComponent;
    export const HMobiledataSharp: SvgIconComponent;
    export const HMobiledataTwoTone: SvgIconComponent;
    export const HolidayVillage: SvgIconComponent;
    export const HolidayVillageOutlined: SvgIconComponent;
    export const HolidayVillageRounded: SvgIconComponent;
    export const HolidayVillageSharp: SvgIconComponent;
    export const HolidayVillageTwoTone: SvgIconComponent;
    export const Home: SvgIconComponent;
    export const HomeMax: SvgIconComponent;
    export const HomeMaxOutlined: SvgIconComponent;
    export const HomeMaxRounded: SvgIconComponent;
    export const HomeMaxSharp: SvgIconComponent;
    export const HomeMaxTwoTone: SvgIconComponent;
    export const HomeMini: SvgIconComponent;
    export const HomeMiniOutlined: SvgIconComponent;
    export const HomeMiniRounded: SvgIconComponent;
    export const HomeMiniSharp: SvgIconComponent;
    export const HomeMiniTwoTone: SvgIconComponent;
    export const HomeOutlined: SvgIconComponent;
    export const HomeRepairService: SvgIconComponent;
    export const HomeRepairServiceOutlined: SvgIconComponent;
    export const HomeRepairServiceRounded: SvgIconComponent;
    export const HomeRepairServiceSharp: SvgIconComponent;
    export const HomeRepairServiceTwoTone: SvgIconComponent;
    export const HomeRounded: SvgIconComponent;
    export const HomeSharp: SvgIconComponent;
    export const HomeTwoTone: SvgIconComponent;
    export const HomeWork: SvgIconComponent;
    export const HomeWorkOutlined: SvgIconComponent;
    export const HomeWorkRounded: SvgIconComponent;
    export const HomeWorkSharp: SvgIconComponent;
    export const HomeWorkTwoTone: SvgIconComponent;
    export const HorizontalRule: SvgIconComponent;
    export const HorizontalRuleOutlined: SvgIconComponent;
    export const HorizontalRuleRounded: SvgIconComponent;
    export const HorizontalRuleSharp: SvgIconComponent;
    export const HorizontalRuleTwoTone: SvgIconComponent;
    export const HorizontalSplit: SvgIconComponent;
    export const HorizontalSplitOutlined: SvgIconComponent;
    export const HorizontalSplitRounded: SvgIconComponent;
    export const HorizontalSplitSharp: SvgIconComponent;
    export const HorizontalSplitTwoTone: SvgIconComponent;
    export const Hotel: SvgIconComponent;
    export const HotelOutlined: SvgIconComponent;
    export const HotelRounded: SvgIconComponent;
    export const HotelSharp: SvgIconComponent;
    export const HotelTwoTone: SvgIconComponent;
    export const HotTub: SvgIconComponent;
    export const HotTubOutlined: SvgIconComponent;
    export const HotTubRounded: SvgIconComponent;
    export const HotTubSharp: SvgIconComponent;
    export const HotTubTwoTone: SvgIconComponent;
    export const HourglassBottom: SvgIconComponent;
    export const HourglassBottomOutlined: SvgIconComponent;
    export const HourglassBottomRounded: SvgIconComponent;
    export const HourglassBottomSharp: SvgIconComponent;
    export const HourglassBottomTwoTone: SvgIconComponent;
    export const HourglassDisabled: SvgIconComponent;
    export const HourglassDisabledOutlined: SvgIconComponent;
    export const HourglassDisabledRounded: SvgIconComponent;
    export const HourglassDisabledSharp: SvgIconComponent;
    export const HourglassDisabledTwoTone: SvgIconComponent;
    export const HourglassEmpty: SvgIconComponent;
    export const HourglassEmptyOutlined: SvgIconComponent;
    export const HourglassEmptyRounded: SvgIconComponent;
    export const HourglassEmptySharp: SvgIconComponent;
    export const HourglassEmptyTwoTone: SvgIconComponent;
    export const HourglassFull: SvgIconComponent;
    export const HourglassFullOutlined: SvgIconComponent;
    export const HourglassFullRounded: SvgIconComponent;
    export const HourglassFullSharp: SvgIconComponent;
    export const HourglassFullTwoTone: SvgIconComponent;
    export const HourglassTop: SvgIconComponent;
    export const HourglassTopOutlined: SvgIconComponent;
    export const HourglassTopRounded: SvgIconComponent;
    export const HourglassTopSharp: SvgIconComponent;
    export const HourglassTopTwoTone: SvgIconComponent;
    export const House: SvgIconComponent;
    export const Houseboat: SvgIconComponent;
    export const HouseboatOutlined: SvgIconComponent;
    export const HouseboatRounded: SvgIconComponent;
    export const HouseboatSharp: SvgIconComponent;
    export const HouseboatTwoTone: SvgIconComponent;
    export const HouseOutlined: SvgIconComponent;
    export const HouseRounded: SvgIconComponent;
    export const HouseSharp: SvgIconComponent;
    export const HouseSiding: SvgIconComponent;
    export const HouseSidingOutlined: SvgIconComponent;
    export const HouseSidingRounded: SvgIconComponent;
    export const HouseSidingSharp: SvgIconComponent;
    export const HouseSidingTwoTone: SvgIconComponent;
    export const HouseTwoTone: SvgIconComponent;
    export const HowToReg: SvgIconComponent;
    export const HowToRegOutlined: SvgIconComponent;
    export const HowToRegRounded: SvgIconComponent;
    export const HowToRegSharp: SvgIconComponent;
    export const HowToRegTwoTone: SvgIconComponent;
    export const HowToVote: SvgIconComponent;
    export const HowToVoteOutlined: SvgIconComponent;
    export const HowToVoteRounded: SvgIconComponent;
    export const HowToVoteSharp: SvgIconComponent;
    export const HowToVoteTwoTone: SvgIconComponent;
    export const HPlusMobiledata: SvgIconComponent;
    export const HPlusMobiledataOutlined: SvgIconComponent;
    export const HPlusMobiledataRounded: SvgIconComponent;
    export const HPlusMobiledataSharp: SvgIconComponent;
    export const HPlusMobiledataTwoTone: SvgIconComponent;
    export const Html: SvgIconComponent;
    export const HtmlOutlined: SvgIconComponent;
    export const HtmlRounded: SvgIconComponent;
    export const HtmlSharp: SvgIconComponent;
    export const HtmlTwoTone: SvgIconComponent;
    export const Http: SvgIconComponent;
    export const HttpOutlined: SvgIconComponent;
    export const HttpRounded: SvgIconComponent;
    export const Https: SvgIconComponent;
    export const HttpSharp: SvgIconComponent;
    export const HttpsOutlined: SvgIconComponent;
    export const HttpsRounded: SvgIconComponent;
    export const HttpsSharp: SvgIconComponent;
    export const HttpsTwoTone: SvgIconComponent;
    export const HttpTwoTone: SvgIconComponent;
    export const Hub: SvgIconComponent;
    export const HubOutlined: SvgIconComponent;
    export const HubRounded: SvgIconComponent;
    export const HubSharp: SvgIconComponent;
    export const HubTwoTone: SvgIconComponent;
    export const Hvac: SvgIconComponent;
    export const HvacOutlined: SvgIconComponent;
    export const HvacRounded: SvgIconComponent;
    export const HvacSharp: SvgIconComponent;
    export const HvacTwoTone: SvgIconComponent;
    export const Icecream: SvgIconComponent;
    export const IcecreamOutlined: SvgIconComponent;
    export const IcecreamRounded: SvgIconComponent;
    export const IcecreamSharp: SvgIconComponent;
    export const IcecreamTwoTone: SvgIconComponent;
    export const IceSkating: SvgIconComponent;
    export const IceSkatingOutlined: SvgIconComponent;
    export const IceSkatingRounded: SvgIconComponent;
    export const IceSkatingSharp: SvgIconComponent;
    export const IceSkatingTwoTone: SvgIconComponent;
    export const Image: SvgIconComponent;
    export const ImageAspectRatio: SvgIconComponent;
    export const ImageAspectRatioOutlined: SvgIconComponent;
    export const ImageAspectRatioRounded: SvgIconComponent;
    export const ImageAspectRatioSharp: SvgIconComponent;
    export const ImageAspectRatioTwoTone: SvgIconComponent;
    export const ImageNotSupported: SvgIconComponent;
    export const ImageNotSupportedOutlined: SvgIconComponent;
    export const ImageNotSupportedRounded: SvgIconComponent;
    export const ImageNotSupportedSharp: SvgIconComponent;
    export const ImageNotSupportedTwoTone: SvgIconComponent;
    export const ImageOutlined: SvgIconComponent;
    export const ImageRounded: SvgIconComponent;
    export const ImageSearch: SvgIconComponent;
    export const ImageSearchOutlined: SvgIconComponent;
    export const ImagesearchRoller: SvgIconComponent;
    export const ImagesearchRollerOutlined: SvgIconComponent;
    export const ImagesearchRollerRounded: SvgIconComponent;
    export const ImagesearchRollerSharp: SvgIconComponent;
    export const ImagesearchRollerTwoTone: SvgIconComponent;
    export const ImageSearchRounded: SvgIconComponent;
    export const ImageSearchSharp: SvgIconComponent;
    export const ImageSearchTwoTone: SvgIconComponent;
    export const ImageSharp: SvgIconComponent;
    export const ImageTwoTone: SvgIconComponent;
    export const ImportantDevices: SvgIconComponent;
    export const ImportantDevicesOutlined: SvgIconComponent;
    export const ImportantDevicesRounded: SvgIconComponent;
    export const ImportantDevicesSharp: SvgIconComponent;
    export const ImportantDevicesTwoTone: SvgIconComponent;
    export const ImportContacts: SvgIconComponent;
    export const ImportContactsOutlined: SvgIconComponent;
    export const ImportContactsRounded: SvgIconComponent;
    export const ImportContactsSharp: SvgIconComponent;
    export const ImportContactsTwoTone: SvgIconComponent;
    export const ImportExport: SvgIconComponent;
    export const ImportExportOutlined: SvgIconComponent;
    export const ImportExportRounded: SvgIconComponent;
    export const ImportExportSharp: SvgIconComponent;
    export const ImportExportTwoTone: SvgIconComponent;
    export const Inbox: SvgIconComponent;
    export const InboxOutlined: SvgIconComponent;
    export const InboxRounded: SvgIconComponent;
    export const InboxSharp: SvgIconComponent;
    export const InboxTwoTone: SvgIconComponent;
    export const IndeterminateCheckBox: SvgIconComponent;
    export const IndeterminateCheckBoxOutlined: SvgIconComponent;
    export const IndeterminateCheckBoxRounded: SvgIconComponent;
    export const IndeterminateCheckBoxSharp: SvgIconComponent;
    export const IndeterminateCheckBoxTwoTone: SvgIconComponent;
    export const Info: SvgIconComponent;
    export const InfoOutlined: SvgIconComponent;
    export const InfoRounded: SvgIconComponent;
    export const InfoSharp: SvgIconComponent;
    export const InfoTwoTone: SvgIconComponent;
    export const Input: SvgIconComponent;
    export const InputOutlined: SvgIconComponent;
    export const InputRounded: SvgIconComponent;
    export const InputSharp: SvgIconComponent;
    export const InputTwoTone: SvgIconComponent;
    export const InsertChart: SvgIconComponent;
    export const InsertChartOutlined: SvgIconComponent;
    export const InsertChartOutlinedOutlined: SvgIconComponent;
    export const InsertChartOutlinedRounded: SvgIconComponent;
    export const InsertChartOutlinedSharp: SvgIconComponent;
    export const InsertChartOutlinedTwoTone: SvgIconComponent;
    export const InsertChartRounded: SvgIconComponent;
    export const InsertChartSharp: SvgIconComponent;
    export const InsertChartTwoTone: SvgIconComponent;
    export const InsertComment: SvgIconComponent;
    export const InsertCommentOutlined: SvgIconComponent;
    export const InsertCommentRounded: SvgIconComponent;
    export const InsertCommentSharp: SvgIconComponent;
    export const InsertCommentTwoTone: SvgIconComponent;
    export const InsertDriveFile: SvgIconComponent;
    export const InsertDriveFileOutlined: SvgIconComponent;
    export const InsertDriveFileRounded: SvgIconComponent;
    export const InsertDriveFileSharp: SvgIconComponent;
    export const InsertDriveFileTwoTone: SvgIconComponent;
    export const InsertEmoticon: SvgIconComponent;
    export const InsertEmoticonOutlined: SvgIconComponent;
    export const InsertEmoticonRounded: SvgIconComponent;
    export const InsertEmoticonSharp: SvgIconComponent;
    export const InsertEmoticonTwoTone: SvgIconComponent;
    export const InsertInvitation: SvgIconComponent;
    export const InsertInvitationOutlined: SvgIconComponent;
    export const InsertInvitationRounded: SvgIconComponent;
    export const InsertInvitationSharp: SvgIconComponent;
    export const InsertInvitationTwoTone: SvgIconComponent;
    export const InsertLink: SvgIconComponent;
    export const InsertLinkOutlined: SvgIconComponent;
    export const InsertLinkRounded: SvgIconComponent;
    export const InsertLinkSharp: SvgIconComponent;
    export const InsertLinkTwoTone: SvgIconComponent;
    export const InsertPageBreak: SvgIconComponent;
    export const InsertPageBreakOutlined: SvgIconComponent;
    export const InsertPageBreakRounded: SvgIconComponent;
    export const InsertPageBreakSharp: SvgIconComponent;
    export const InsertPageBreakTwoTone: SvgIconComponent;
    export const InsertPhoto: SvgIconComponent;
    export const InsertPhotoOutlined: SvgIconComponent;
    export const InsertPhotoRounded: SvgIconComponent;
    export const InsertPhotoSharp: SvgIconComponent;
    export const InsertPhotoTwoTone: SvgIconComponent;
    export const Insights: SvgIconComponent;
    export const InsightsOutlined: SvgIconComponent;
    export const InsightsRounded: SvgIconComponent;
    export const InsightsSharp: SvgIconComponent;
    export const InsightsTwoTone: SvgIconComponent;
    export const Instagram: SvgIconComponent;
    export const InstallDesktop: SvgIconComponent;
    export const InstallDesktopOutlined: SvgIconComponent;
    export const InstallDesktopRounded: SvgIconComponent;
    export const InstallDesktopSharp: SvgIconComponent;
    export const InstallDesktopTwoTone: SvgIconComponent;
    export const InstallMobile: SvgIconComponent;
    export const InstallMobileOutlined: SvgIconComponent;
    export const InstallMobileRounded: SvgIconComponent;
    export const InstallMobileSharp: SvgIconComponent;
    export const InstallMobileTwoTone: SvgIconComponent;
    export const IntegrationInstructions: SvgIconComponent;
    export const IntegrationInstructionsOutlined: SvgIconComponent;
    export const IntegrationInstructionsRounded: SvgIconComponent;
    export const IntegrationInstructionsSharp: SvgIconComponent;
    export const IntegrationInstructionsTwoTone: SvgIconComponent;
    export const Interests: SvgIconComponent;
    export const InterestsOutlined: SvgIconComponent;
    export const InterestsRounded: SvgIconComponent;
    export const InterestsSharp: SvgIconComponent;
    export const InterestsTwoTone: SvgIconComponent;
    export const InterpreterMode: SvgIconComponent;
    export const InterpreterModeOutlined: SvgIconComponent;
    export const InterpreterModeRounded: SvgIconComponent;
    export const InterpreterModeSharp: SvgIconComponent;
    export const InterpreterModeTwoTone: SvgIconComponent;
    export const Inventory: SvgIconComponent;
    export const Inventory2: SvgIconComponent;
    export const Inventory2Outlined: SvgIconComponent;
    export const Inventory2Rounded: SvgIconComponent;
    export const Inventory2Sharp: SvgIconComponent;
    export const Inventory2TwoTone: SvgIconComponent;
    export const InventoryOutlined: SvgIconComponent;
    export const InventoryRounded: SvgIconComponent;
    export const InventorySharp: SvgIconComponent;
    export const InventoryTwoTone: SvgIconComponent;
    export const InvertColors: SvgIconComponent;
    export const InvertColorsOff: SvgIconComponent;
    export const InvertColorsOffOutlined: SvgIconComponent;
    export const InvertColorsOffRounded: SvgIconComponent;
    export const InvertColorsOffSharp: SvgIconComponent;
    export const InvertColorsOffTwoTone: SvgIconComponent;
    export const InvertColorsOutlined: SvgIconComponent;
    export const InvertColorsRounded: SvgIconComponent;
    export const InvertColorsSharp: SvgIconComponent;
    export const InvertColorsTwoTone: SvgIconComponent;
    export const IosShare: SvgIconComponent;
    export const IosShareOutlined: SvgIconComponent;
    export const IosShareRounded: SvgIconComponent;
    export const IosShareSharp: SvgIconComponent;
    export const IosShareTwoTone: SvgIconComponent;
    export const Iron: SvgIconComponent;
    export const IronOutlined: SvgIconComponent;
    export const IronRounded: SvgIconComponent;
    export const IronSharp: SvgIconComponent;
    export const IronTwoTone: SvgIconComponent;
    export const Iso: SvgIconComponent;
    export const IsoOutlined: SvgIconComponent;
    export const IsoRounded: SvgIconComponent;
    export const IsoSharp: SvgIconComponent;
    export const IsoTwoTone: SvgIconComponent;
    export const Javascript: SvgIconComponent;
    export const JavascriptOutlined: SvgIconComponent;
    export const JavascriptRounded: SvgIconComponent;
    export const JavascriptSharp: SvgIconComponent;
    export const JavascriptTwoTone: SvgIconComponent;
    export const JoinFull: SvgIconComponent;
    export const JoinFullOutlined: SvgIconComponent;
    export const JoinFullRounded: SvgIconComponent;
    export const JoinFullSharp: SvgIconComponent;
    export const JoinFullTwoTone: SvgIconComponent;
    export const JoinInner: SvgIconComponent;
    export const JoinInnerOutlined: SvgIconComponent;
    export const JoinInnerRounded: SvgIconComponent;
    export const JoinInnerSharp: SvgIconComponent;
    export const JoinInnerTwoTone: SvgIconComponent;
    export const JoinLeft: SvgIconComponent;
    export const JoinLeftOutlined: SvgIconComponent;
    export const JoinLeftRounded: SvgIconComponent;
    export const JoinLeftSharp: SvgIconComponent;
    export const JoinLeftTwoTone: SvgIconComponent;
    export const JoinRight: SvgIconComponent;
    export const JoinRightOutlined: SvgIconComponent;
    export const JoinRightRounded: SvgIconComponent;
    export const JoinRightSharp: SvgIconComponent;
    export const JoinRightTwoTone: SvgIconComponent;
    export const Kayaking: SvgIconComponent;
    export const KayakingOutlined: SvgIconComponent;
    export const KayakingRounded: SvgIconComponent;
    export const KayakingSharp: SvgIconComponent;
    export const KayakingTwoTone: SvgIconComponent;
    export const KebabDining: SvgIconComponent;
    export const KebabDiningOutlined: SvgIconComponent;
    export const KebabDiningRounded: SvgIconComponent;
    export const KebabDiningSharp: SvgIconComponent;
    export const KebabDiningTwoTone: SvgIconComponent;
    export const Key: SvgIconComponent;
    export const Keyboard: SvgIconComponent;
    export const KeyboardAlt: SvgIconComponent;
    export const KeyboardAltOutlined: SvgIconComponent;
    export const KeyboardAltRounded: SvgIconComponent;
    export const KeyboardAltSharp: SvgIconComponent;
    export const KeyboardAltTwoTone: SvgIconComponent;
    export const KeyboardArrowDown: SvgIconComponent;
    export const KeyboardArrowDownOutlined: SvgIconComponent;
    export const KeyboardArrowDownRounded: SvgIconComponent;
    export const KeyboardArrowDownSharp: SvgIconComponent;
    export const KeyboardArrowDownTwoTone: SvgIconComponent;
    export const KeyboardArrowLeft: SvgIconComponent;
    export const KeyboardArrowLeftOutlined: SvgIconComponent;
    export const KeyboardArrowLeftRounded: SvgIconComponent;
    export const KeyboardArrowLeftSharp: SvgIconComponent;
    export const KeyboardArrowLeftTwoTone: SvgIconComponent;
    export const KeyboardArrowRight: SvgIconComponent;
    export const KeyboardArrowRightOutlined: SvgIconComponent;
    export const KeyboardArrowRightRounded: SvgIconComponent;
    export const KeyboardArrowRightSharp: SvgIconComponent;
    export const KeyboardArrowRightTwoTone: SvgIconComponent;
    export const KeyboardArrowUp: SvgIconComponent;
    export const KeyboardArrowUpOutlined: SvgIconComponent;
    export const KeyboardArrowUpRounded: SvgIconComponent;
    export const KeyboardArrowUpSharp: SvgIconComponent;
    export const KeyboardArrowUpTwoTone: SvgIconComponent;
    export const KeyboardBackspace: SvgIconComponent;
    export const KeyboardBackspaceOutlined: SvgIconComponent;
    export const KeyboardBackspaceRounded: SvgIconComponent;
    export const KeyboardBackspaceSharp: SvgIconComponent;
    export const KeyboardBackspaceTwoTone: SvgIconComponent;
    export const KeyboardCapslock: SvgIconComponent;
    export const KeyboardCapslockOutlined: SvgIconComponent;
    export const KeyboardCapslockRounded: SvgIconComponent;
    export const KeyboardCapslockSharp: SvgIconComponent;
    export const KeyboardCapslockTwoTone: SvgIconComponent;
    export const KeyboardCommandKey: SvgIconComponent;
    export const KeyboardCommandKeyOutlined: SvgIconComponent;
    export const KeyboardCommandKeyRounded: SvgIconComponent;
    export const KeyboardCommandKeySharp: SvgIconComponent;
    export const KeyboardCommandKeyTwoTone: SvgIconComponent;
    export const KeyboardControlKey: SvgIconComponent;
    export const KeyboardControlKeyOutlined: SvgIconComponent;
    export const KeyboardControlKeyRounded: SvgIconComponent;
    export const KeyboardControlKeySharp: SvgIconComponent;
    export const KeyboardControlKeyTwoTone: SvgIconComponent;
    export const KeyboardDoubleArrowDown: SvgIconComponent;
    export const KeyboardDoubleArrowDownOutlined: SvgIconComponent;
    export const KeyboardDoubleArrowDownRounded: SvgIconComponent;
    export const KeyboardDoubleArrowDownSharp: SvgIconComponent;
    export const KeyboardDoubleArrowDownTwoTone: SvgIconComponent;
    export const KeyboardDoubleArrowLeft: SvgIconComponent;
    export const KeyboardDoubleArrowLeftOutlined: SvgIconComponent;
    export const KeyboardDoubleArrowLeftRounded: SvgIconComponent;
    export const KeyboardDoubleArrowLeftSharp: SvgIconComponent;
    export const KeyboardDoubleArrowLeftTwoTone: SvgIconComponent;
    export const KeyboardDoubleArrowRight: SvgIconComponent;
    export const KeyboardDoubleArrowRightOutlined: SvgIconComponent;
    export const KeyboardDoubleArrowRightRounded: SvgIconComponent;
    export const KeyboardDoubleArrowRightSharp: SvgIconComponent;
    export const KeyboardDoubleArrowRightTwoTone: SvgIconComponent;
    export const KeyboardDoubleArrowUp: SvgIconComponent;
    export const KeyboardDoubleArrowUpOutlined: SvgIconComponent;
    export const KeyboardDoubleArrowUpRounded: SvgIconComponent;
    export const KeyboardDoubleArrowUpSharp: SvgIconComponent;
    export const KeyboardDoubleArrowUpTwoTone: SvgIconComponent;
    export const KeyboardHide: SvgIconComponent;
    export const KeyboardHideOutlined: SvgIconComponent;
    export const KeyboardHideRounded: SvgIconComponent;
    export const KeyboardHideSharp: SvgIconComponent;
    export const KeyboardHideTwoTone: SvgIconComponent;
    export const KeyboardOptionKey: SvgIconComponent;
    export const KeyboardOptionKeyOutlined: SvgIconComponent;
    export const KeyboardOptionKeyRounded: SvgIconComponent;
    export const KeyboardOptionKeySharp: SvgIconComponent;
    export const KeyboardOptionKeyTwoTone: SvgIconComponent;
    export const KeyboardOutlined: SvgIconComponent;
    export const KeyboardReturn: SvgIconComponent;
    export const KeyboardReturnOutlined: SvgIconComponent;
    export const KeyboardReturnRounded: SvgIconComponent;
    export const KeyboardReturnSharp: SvgIconComponent;
    export const KeyboardReturnTwoTone: SvgIconComponent;
    export const KeyboardRounded: SvgIconComponent;
    export const KeyboardSharp: SvgIconComponent;
    export const KeyboardTab: SvgIconComponent;
    export const KeyboardTabOutlined: SvgIconComponent;
    export const KeyboardTabRounded: SvgIconComponent;
    export const KeyboardTabSharp: SvgIconComponent;
    export const KeyboardTabTwoTone: SvgIconComponent;
    export const KeyboardTwoTone: SvgIconComponent;
    export const KeyboardVoice: SvgIconComponent;
    export const KeyboardVoiceOutlined: SvgIconComponent;
    export const KeyboardVoiceRounded: SvgIconComponent;
    export const KeyboardVoiceSharp: SvgIconComponent;
    export const KeyboardVoiceTwoTone: SvgIconComponent;
    export const KeyOff: SvgIconComponent;
    export const KeyOffOutlined: SvgIconComponent;
    export const KeyOffRounded: SvgIconComponent;
    export const KeyOffSharp: SvgIconComponent;
    export const KeyOffTwoTone: SvgIconComponent;
    export const KeyOutlined: SvgIconComponent;
    export const KeyRounded: SvgIconComponent;
    export const KeySharp: SvgIconComponent;
    export const KeyTwoTone: SvgIconComponent;
    export const KingBed: SvgIconComponent;
    export const KingBedOutlined: SvgIconComponent;
    export const KingBedRounded: SvgIconComponent;
    export const KingBedSharp: SvgIconComponent;
    export const KingBedTwoTone: SvgIconComponent;
    export const Kitchen: SvgIconComponent;
    export const KitchenOutlined: SvgIconComponent;
    export const KitchenRounded: SvgIconComponent;
    export const KitchenSharp: SvgIconComponent;
    export const KitchenTwoTone: SvgIconComponent;
    export const Kitesurfing: SvgIconComponent;
    export const KitesurfingOutlined: SvgIconComponent;
    export const KitesurfingRounded: SvgIconComponent;
    export const KitesurfingSharp: SvgIconComponent;
    export const KitesurfingTwoTone: SvgIconComponent;
    export const Label: SvgIconComponent;
    export const LabelImportant: SvgIconComponent;
    export const LabelImportantOutlined: SvgIconComponent;
    export const LabelImportantRounded: SvgIconComponent;
    export const LabelImportantSharp: SvgIconComponent;
    export const LabelImportantTwoTone: SvgIconComponent;
    export const LabelOff: SvgIconComponent;
    export const LabelOffOutlined: SvgIconComponent;
    export const LabelOffRounded: SvgIconComponent;
    export const LabelOffSharp: SvgIconComponent;
    export const LabelOffTwoTone: SvgIconComponent;
    export const LabelOutlined: SvgIconComponent;
    export const LabelRounded: SvgIconComponent;
    export const LabelSharp: SvgIconComponent;
    export const LabelTwoTone: SvgIconComponent;
    export const Lan: SvgIconComponent;
    export const Landscape: SvgIconComponent;
    export const LandscapeOutlined: SvgIconComponent;
    export const LandscapeRounded: SvgIconComponent;
    export const LandscapeSharp: SvgIconComponent;
    export const LandscapeTwoTone: SvgIconComponent;
    export const Language: SvgIconComponent;
    export const LanguageOutlined: SvgIconComponent;
    export const LanguageRounded: SvgIconComponent;
    export const LanguageSharp: SvgIconComponent;
    export const LanguageTwoTone: SvgIconComponent;
    export const LanOutlined: SvgIconComponent;
    export const LanRounded: SvgIconComponent;
    export const LanSharp: SvgIconComponent;
    export const LanTwoTone: SvgIconComponent;
    export const Laptop: SvgIconComponent;
    export const LaptopChromebook: SvgIconComponent;
    export const LaptopChromebookOutlined: SvgIconComponent;
    export const LaptopChromebookRounded: SvgIconComponent;
    export const LaptopChromebookSharp: SvgIconComponent;
    export const LaptopChromebookTwoTone: SvgIconComponent;
    export const LaptopMac: SvgIconComponent;
    export const LaptopMacOutlined: SvgIconComponent;
    export const LaptopMacRounded: SvgIconComponent;
    export const LaptopMacSharp: SvgIconComponent;
    export const LaptopMacTwoTone: SvgIconComponent;
    export const LaptopOutlined: SvgIconComponent;
    export const LaptopRounded: SvgIconComponent;
    export const LaptopSharp: SvgIconComponent;
    export const LaptopTwoTone: SvgIconComponent;
    export const LaptopWindows: SvgIconComponent;
    export const LaptopWindowsOutlined: SvgIconComponent;
    export const LaptopWindowsRounded: SvgIconComponent;
    export const LaptopWindowsSharp: SvgIconComponent;
    export const LaptopWindowsTwoTone: SvgIconComponent;
    export const LastPage: SvgIconComponent;
    export const LastPageOutlined: SvgIconComponent;
    export const LastPageRounded: SvgIconComponent;
    export const LastPageSharp: SvgIconComponent;
    export const LastPageTwoTone: SvgIconComponent;
    export const Launch: SvgIconComponent;
    export const LaunchOutlined: SvgIconComponent;
    export const LaunchRounded: SvgIconComponent;
    export const LaunchSharp: SvgIconComponent;
    export const LaunchTwoTone: SvgIconComponent;
    export const Layers: SvgIconComponent;
    export const LayersClear: SvgIconComponent;
    export const LayersClearOutlined: SvgIconComponent;
    export const LayersClearRounded: SvgIconComponent;
    export const LayersClearSharp: SvgIconComponent;
    export const LayersClearTwoTone: SvgIconComponent;
    export const LayersOutlined: SvgIconComponent;
    export const LayersRounded: SvgIconComponent;
    export const LayersSharp: SvgIconComponent;
    export const LayersTwoTone: SvgIconComponent;
    export const Leaderboard: SvgIconComponent;
    export const LeaderboardOutlined: SvgIconComponent;
    export const LeaderboardRounded: SvgIconComponent;
    export const LeaderboardSharp: SvgIconComponent;
    export const LeaderboardTwoTone: SvgIconComponent;
    export const LeakAdd: SvgIconComponent;
    export const LeakAddOutlined: SvgIconComponent;
    export const LeakAddRounded: SvgIconComponent;
    export const LeakAddSharp: SvgIconComponent;
    export const LeakAddTwoTone: SvgIconComponent;
    export const LeakRemove: SvgIconComponent;
    export const LeakRemoveOutlined: SvgIconComponent;
    export const LeakRemoveRounded: SvgIconComponent;
    export const LeakRemoveSharp: SvgIconComponent;
    export const LeakRemoveTwoTone: SvgIconComponent;
    export const LegendToggle: SvgIconComponent;
    export const LegendToggleOutlined: SvgIconComponent;
    export const LegendToggleRounded: SvgIconComponent;
    export const LegendToggleSharp: SvgIconComponent;
    export const LegendToggleTwoTone: SvgIconComponent;
    export const Lens: SvgIconComponent;
    export const LensBlur: SvgIconComponent;
    export const LensBlurOutlined: SvgIconComponent;
    export const LensBlurRounded: SvgIconComponent;
    export const LensBlurSharp: SvgIconComponent;
    export const LensBlurTwoTone: SvgIconComponent;
    export const LensOutlined: SvgIconComponent;
    export const LensRounded: SvgIconComponent;
    export const LensSharp: SvgIconComponent;
    export const LensTwoTone: SvgIconComponent;
    export const LibraryAdd: SvgIconComponent;
    export const LibraryAddCheck: SvgIconComponent;
    export const LibraryAddCheckOutlined: SvgIconComponent;
    export const LibraryAddCheckRounded: SvgIconComponent;
    export const LibraryAddCheckSharp: SvgIconComponent;
    export const LibraryAddCheckTwoTone: SvgIconComponent;
    export const LibraryAddOutlined: SvgIconComponent;
    export const LibraryAddRounded: SvgIconComponent;
    export const LibraryAddSharp: SvgIconComponent;
    export const LibraryAddTwoTone: SvgIconComponent;
    export const LibraryBooks: SvgIconComponent;
    export const LibraryBooksOutlined: SvgIconComponent;
    export const LibraryBooksRounded: SvgIconComponent;
    export const LibraryBooksSharp: SvgIconComponent;
    export const LibraryBooksTwoTone: SvgIconComponent;
    export const LibraryMusic: SvgIconComponent;
    export const LibraryMusicOutlined: SvgIconComponent;
    export const LibraryMusicRounded: SvgIconComponent;
    export const LibraryMusicSharp: SvgIconComponent;
    export const LibraryMusicTwoTone: SvgIconComponent;
    export const Light: SvgIconComponent;
    export const Lightbulb: SvgIconComponent;
    export const LightbulbOutlined: SvgIconComponent;
    export const LightbulbRounded: SvgIconComponent;
    export const LightbulbSharp: SvgIconComponent;
    export const LightbulbTwoTone: SvgIconComponent;
    export const LightMode: SvgIconComponent;
    export const LightModeOutlined: SvgIconComponent;
    export const LightModeRounded: SvgIconComponent;
    export const LightModeSharp: SvgIconComponent;
    export const LightModeTwoTone: SvgIconComponent;
    export const LightOutlined: SvgIconComponent;
    export const LightRounded: SvgIconComponent;
    export const LightSharp: SvgIconComponent;
    export const LightTwoTone: SvgIconComponent;
    export const LinearScale: SvgIconComponent;
    export const LinearScaleOutlined: SvgIconComponent;
    export const LinearScaleRounded: SvgIconComponent;
    export const LinearScaleSharp: SvgIconComponent;
    export const LinearScaleTwoTone: SvgIconComponent;
    export const LineAxis: SvgIconComponent;
    export const LineAxisOutlined: SvgIconComponent;
    export const LineAxisRounded: SvgIconComponent;
    export const LineAxisSharp: SvgIconComponent;
    export const LineAxisTwoTone: SvgIconComponent;
    export const LineStyle: SvgIconComponent;
    export const LineStyleOutlined: SvgIconComponent;
    export const LineStyleRounded: SvgIconComponent;
    export const LineStyleSharp: SvgIconComponent;
    export const LineStyleTwoTone: SvgIconComponent;
    export const LineWeight: SvgIconComponent;
    export const LineWeightOutlined: SvgIconComponent;
    export const LineWeightRounded: SvgIconComponent;
    export const LineWeightSharp: SvgIconComponent;
    export const LineWeightTwoTone: SvgIconComponent;
    export const Link: SvgIconComponent;
    export const LinkedCamera: SvgIconComponent;
    export const LinkedCameraOutlined: SvgIconComponent;
    export const LinkedCameraRounded: SvgIconComponent;
    export const LinkedCameraSharp: SvgIconComponent;
    export const LinkedCameraTwoTone: SvgIconComponent;
    export const LinkedIn: SvgIconComponent;
    export const LinkOff: SvgIconComponent;
    export const LinkOffOutlined: SvgIconComponent;
    export const LinkOffRounded: SvgIconComponent;
    export const LinkOffSharp: SvgIconComponent;
    export const LinkOffTwoTone: SvgIconComponent;
    export const LinkOutlined: SvgIconComponent;
    export const LinkRounded: SvgIconComponent;
    export const LinkSharp: SvgIconComponent;
    export const LinkTwoTone: SvgIconComponent;
    export const Liquor: SvgIconComponent;
    export const LiquorOutlined: SvgIconComponent;
    export const LiquorRounded: SvgIconComponent;
    export const LiquorSharp: SvgIconComponent;
    export const LiquorTwoTone: SvgIconComponent;
    export const List: SvgIconComponent;
    export const ListAlt: SvgIconComponent;
    export const ListAltOutlined: SvgIconComponent;
    export const ListAltRounded: SvgIconComponent;
    export const ListAltSharp: SvgIconComponent;
    export const ListAltTwoTone: SvgIconComponent;
    export const ListOutlined: SvgIconComponent;
    export const ListRounded: SvgIconComponent;
    export const ListSharp: SvgIconComponent;
    export const ListTwoTone: SvgIconComponent;
    export const LiveHelp: SvgIconComponent;
    export const LiveHelpOutlined: SvgIconComponent;
    export const LiveHelpRounded: SvgIconComponent;
    export const LiveHelpSharp: SvgIconComponent;
    export const LiveHelpTwoTone: SvgIconComponent;
    export const LiveTv: SvgIconComponent;
    export const LiveTvOutlined: SvgIconComponent;
    export const LiveTvRounded: SvgIconComponent;
    export const LiveTvSharp: SvgIconComponent;
    export const LiveTvTwoTone: SvgIconComponent;
    export const Living: SvgIconComponent;
    export const LivingOutlined: SvgIconComponent;
    export const LivingRounded: SvgIconComponent;
    export const LivingSharp: SvgIconComponent;
    export const LivingTwoTone: SvgIconComponent;
    export const LocalActivity: SvgIconComponent;
    export const LocalActivityOutlined: SvgIconComponent;
    export const LocalActivityRounded: SvgIconComponent;
    export const LocalActivitySharp: SvgIconComponent;
    export const LocalActivityTwoTone: SvgIconComponent;
    export const LocalAirport: SvgIconComponent;
    export const LocalAirportOutlined: SvgIconComponent;
    export const LocalAirportRounded: SvgIconComponent;
    export const LocalAirportSharp: SvgIconComponent;
    export const LocalAirportTwoTone: SvgIconComponent;
    export const LocalAtm: SvgIconComponent;
    export const LocalAtmOutlined: SvgIconComponent;
    export const LocalAtmRounded: SvgIconComponent;
    export const LocalAtmSharp: SvgIconComponent;
    export const LocalAtmTwoTone: SvgIconComponent;
    export const LocalBar: SvgIconComponent;
    export const LocalBarOutlined: SvgIconComponent;
    export const LocalBarRounded: SvgIconComponent;
    export const LocalBarSharp: SvgIconComponent;
    export const LocalBarTwoTone: SvgIconComponent;
    export const LocalCafe: SvgIconComponent;
    export const LocalCafeOutlined: SvgIconComponent;
    export const LocalCafeRounded: SvgIconComponent;
    export const LocalCafeSharp: SvgIconComponent;
    export const LocalCafeTwoTone: SvgIconComponent;
    export const LocalCarWash: SvgIconComponent;
    export const LocalCarWashOutlined: SvgIconComponent;
    export const LocalCarWashRounded: SvgIconComponent;
    export const LocalCarWashSharp: SvgIconComponent;
    export const LocalCarWashTwoTone: SvgIconComponent;
    export const LocalConvenienceStore: SvgIconComponent;
    export const LocalConvenienceStoreOutlined: SvgIconComponent;
    export const LocalConvenienceStoreRounded: SvgIconComponent;
    export const LocalConvenienceStoreSharp: SvgIconComponent;
    export const LocalConvenienceStoreTwoTone: SvgIconComponent;
    export const LocalDining: SvgIconComponent;
    export const LocalDiningOutlined: SvgIconComponent;
    export const LocalDiningRounded: SvgIconComponent;
    export const LocalDiningSharp: SvgIconComponent;
    export const LocalDiningTwoTone: SvgIconComponent;
    export const LocalDrink: SvgIconComponent;
    export const LocalDrinkOutlined: SvgIconComponent;
    export const LocalDrinkRounded: SvgIconComponent;
    export const LocalDrinkSharp: SvgIconComponent;
    export const LocalDrinkTwoTone: SvgIconComponent;
    export const LocalFireDepartment: SvgIconComponent;
    export const LocalFireDepartmentOutlined: SvgIconComponent;
    export const LocalFireDepartmentRounded: SvgIconComponent;
    export const LocalFireDepartmentSharp: SvgIconComponent;
    export const LocalFireDepartmentTwoTone: SvgIconComponent;
    export const LocalFlorist: SvgIconComponent;
    export const LocalFloristOutlined: SvgIconComponent;
    export const LocalFloristRounded: SvgIconComponent;
    export const LocalFloristSharp: SvgIconComponent;
    export const LocalFloristTwoTone: SvgIconComponent;
    export const LocalGasStation: SvgIconComponent;
    export const LocalGasStationOutlined: SvgIconComponent;
    export const LocalGasStationRounded: SvgIconComponent;
    export const LocalGasStationSharp: SvgIconComponent;
    export const LocalGasStationTwoTone: SvgIconComponent;
    export const LocalGroceryStore: SvgIconComponent;
    export const LocalGroceryStoreOutlined: SvgIconComponent;
    export const LocalGroceryStoreRounded: SvgIconComponent;
    export const LocalGroceryStoreSharp: SvgIconComponent;
    export const LocalGroceryStoreTwoTone: SvgIconComponent;
    export const LocalHospital: SvgIconComponent;
    export const LocalHospitalOutlined: SvgIconComponent;
    export const LocalHospitalRounded: SvgIconComponent;
    export const LocalHospitalSharp: SvgIconComponent;
    export const LocalHospitalTwoTone: SvgIconComponent;
    export const LocalHotel: SvgIconComponent;
    export const LocalHotelOutlined: SvgIconComponent;
    export const LocalHotelRounded: SvgIconComponent;
    export const LocalHotelSharp: SvgIconComponent;
    export const LocalHotelTwoTone: SvgIconComponent;
    export const LocalLaundryService: SvgIconComponent;
    export const LocalLaundryServiceOutlined: SvgIconComponent;
    export const LocalLaundryServiceRounded: SvgIconComponent;
    export const LocalLaundryServiceSharp: SvgIconComponent;
    export const LocalLaundryServiceTwoTone: SvgIconComponent;
    export const LocalLibrary: SvgIconComponent;
    export const LocalLibraryOutlined: SvgIconComponent;
    export const LocalLibraryRounded: SvgIconComponent;
    export const LocalLibrarySharp: SvgIconComponent;
    export const LocalLibraryTwoTone: SvgIconComponent;
    export const LocalMall: SvgIconComponent;
    export const LocalMallOutlined: SvgIconComponent;
    export const LocalMallRounded: SvgIconComponent;
    export const LocalMallSharp: SvgIconComponent;
    export const LocalMallTwoTone: SvgIconComponent;
    export const LocalMovies: SvgIconComponent;
    export const LocalMoviesOutlined: SvgIconComponent;
    export const LocalMoviesRounded: SvgIconComponent;
    export const LocalMoviesSharp: SvgIconComponent;
    export const LocalMoviesTwoTone: SvgIconComponent;
    export const LocalOffer: SvgIconComponent;
    export const LocalOfferOutlined: SvgIconComponent;
    export const LocalOfferRounded: SvgIconComponent;
    export const LocalOfferSharp: SvgIconComponent;
    export const LocalOfferTwoTone: SvgIconComponent;
    export const LocalParking: SvgIconComponent;
    export const LocalParkingOutlined: SvgIconComponent;
    export const LocalParkingRounded: SvgIconComponent;
    export const LocalParkingSharp: SvgIconComponent;
    export const LocalParkingTwoTone: SvgIconComponent;
    export const LocalPharmacy: SvgIconComponent;
    export const LocalPharmacyOutlined: SvgIconComponent;
    export const LocalPharmacyRounded: SvgIconComponent;
    export const LocalPharmacySharp: SvgIconComponent;
    export const LocalPharmacyTwoTone: SvgIconComponent;
    export const LocalPhone: SvgIconComponent;
    export const LocalPhoneOutlined: SvgIconComponent;
    export const LocalPhoneRounded: SvgIconComponent;
    export const LocalPhoneSharp: SvgIconComponent;
    export const LocalPhoneTwoTone: SvgIconComponent;
    export const LocalPizza: SvgIconComponent;
    export const LocalPizzaOutlined: SvgIconComponent;
    export const LocalPizzaRounded: SvgIconComponent;
    export const LocalPizzaSharp: SvgIconComponent;
    export const LocalPizzaTwoTone: SvgIconComponent;
    export const LocalPlay: SvgIconComponent;
    export const LocalPlayOutlined: SvgIconComponent;
    export const LocalPlayRounded: SvgIconComponent;
    export const LocalPlaySharp: SvgIconComponent;
    export const LocalPlayTwoTone: SvgIconComponent;
    export const LocalPolice: SvgIconComponent;
    export const LocalPoliceOutlined: SvgIconComponent;
    export const LocalPoliceRounded: SvgIconComponent;
    export const LocalPoliceSharp: SvgIconComponent;
    export const LocalPoliceTwoTone: SvgIconComponent;
    export const LocalPostOffice: SvgIconComponent;
    export const LocalPostOfficeOutlined: SvgIconComponent;
    export const LocalPostOfficeRounded: SvgIconComponent;
    export const LocalPostOfficeSharp: SvgIconComponent;
    export const LocalPostOfficeTwoTone: SvgIconComponent;
    export const LocalPrintshop: SvgIconComponent;
    export const LocalPrintshopOutlined: SvgIconComponent;
    export const LocalPrintshopRounded: SvgIconComponent;
    export const LocalPrintshopSharp: SvgIconComponent;
    export const LocalPrintshopTwoTone: SvgIconComponent;
    export const LocalSee: SvgIconComponent;
    export const LocalSeeOutlined: SvgIconComponent;
    export const LocalSeeRounded: SvgIconComponent;
    export const LocalSeeSharp: SvgIconComponent;
    export const LocalSeeTwoTone: SvgIconComponent;
    export const LocalShipping: SvgIconComponent;
    export const LocalShippingOutlined: SvgIconComponent;
    export const LocalShippingRounded: SvgIconComponent;
    export const LocalShippingSharp: SvgIconComponent;
    export const LocalShippingTwoTone: SvgIconComponent;
    export const LocalTaxi: SvgIconComponent;
    export const LocalTaxiOutlined: SvgIconComponent;
    export const LocalTaxiRounded: SvgIconComponent;
    export const LocalTaxiSharp: SvgIconComponent;
    export const LocalTaxiTwoTone: SvgIconComponent;
    export const LocationCity: SvgIconComponent;
    export const LocationCityOutlined: SvgIconComponent;
    export const LocationCityRounded: SvgIconComponent;
    export const LocationCitySharp: SvgIconComponent;
    export const LocationCityTwoTone: SvgIconComponent;
    export const LocationDisabled: SvgIconComponent;
    export const LocationDisabledOutlined: SvgIconComponent;
    export const LocationDisabledRounded: SvgIconComponent;
    export const LocationDisabledSharp: SvgIconComponent;
    export const LocationDisabledTwoTone: SvgIconComponent;
    export const LocationOff: SvgIconComponent;
    export const LocationOffOutlined: SvgIconComponent;
    export const LocationOffRounded: SvgIconComponent;
    export const LocationOffSharp: SvgIconComponent;
    export const LocationOffTwoTone: SvgIconComponent;
    export const LocationOn: SvgIconComponent;
    export const LocationOnOutlined: SvgIconComponent;
    export const LocationOnRounded: SvgIconComponent;
    export const LocationOnSharp: SvgIconComponent;
    export const LocationOnTwoTone: SvgIconComponent;
    export const LocationSearching: SvgIconComponent;
    export const LocationSearchingOutlined: SvgIconComponent;
    export const LocationSearchingRounded: SvgIconComponent;
    export const LocationSearchingSharp: SvgIconComponent;
    export const LocationSearchingTwoTone: SvgIconComponent;
    export const Lock: SvgIconComponent;
    export const LockClock: SvgIconComponent;
    export const LockClockOutlined: SvgIconComponent;
    export const LockClockRounded: SvgIconComponent;
    export const LockClockSharp: SvgIconComponent;
    export const LockClockTwoTone: SvgIconComponent;
    export const LockOpen: SvgIconComponent;
    export const LockOpenOutlined: SvgIconComponent;
    export const LockOpenRounded: SvgIconComponent;
    export const LockOpenSharp: SvgIconComponent;
    export const LockOpenTwoTone: SvgIconComponent;
    export const LockOutlined: SvgIconComponent;
    export const LockReset: SvgIconComponent;
    export const LockResetOutlined: SvgIconComponent;
    export const LockResetRounded: SvgIconComponent;
    export const LockResetSharp: SvgIconComponent;
    export const LockResetTwoTone: SvgIconComponent;
    export const LockRounded: SvgIconComponent;
    export const LockSharp: SvgIconComponent;
    export const LockTwoTone: SvgIconComponent;
    export const Login: SvgIconComponent;
    export const LoginOutlined: SvgIconComponent;
    export const LoginRounded: SvgIconComponent;
    export const LoginSharp: SvgIconComponent;
    export const LoginTwoTone: SvgIconComponent;
    export const LogoDev: SvgIconComponent;
    export const LogoDevOutlined: SvgIconComponent;
    export const LogoDevRounded: SvgIconComponent;
    export const LogoDevSharp: SvgIconComponent;
    export const LogoDevTwoTone: SvgIconComponent;
    export const Logout: SvgIconComponent;
    export const LogoutOutlined: SvgIconComponent;
    export const LogoutRounded: SvgIconComponent;
    export const LogoutSharp: SvgIconComponent;
    export const LogoutTwoTone: SvgIconComponent;
    export const Looks: SvgIconComponent;
    export const Looks3: SvgIconComponent;
    export const Looks3Outlined: SvgIconComponent;
    export const Looks3Rounded: SvgIconComponent;
    export const Looks3Sharp: SvgIconComponent;
    export const Looks3TwoTone: SvgIconComponent;
    export const Looks4: SvgIconComponent;
    export const Looks4Outlined: SvgIconComponent;
    export const Looks4Rounded: SvgIconComponent;
    export const Looks4Sharp: SvgIconComponent;
    export const Looks4TwoTone: SvgIconComponent;
    export const Looks5: SvgIconComponent;
    export const Looks5Outlined: SvgIconComponent;
    export const Looks5Rounded: SvgIconComponent;
    export const Looks5Sharp: SvgIconComponent;
    export const Looks5TwoTone: SvgIconComponent;
    export const Looks6: SvgIconComponent;
    export const Looks6Outlined: SvgIconComponent;
    export const Looks6Rounded: SvgIconComponent;
    export const Looks6Sharp: SvgIconComponent;
    export const Looks6TwoTone: SvgIconComponent;
    export const LooksOne: SvgIconComponent;
    export const LooksOneOutlined: SvgIconComponent;
    export const LooksOneRounded: SvgIconComponent;
    export const LooksOneSharp: SvgIconComponent;
    export const LooksOneTwoTone: SvgIconComponent;
    export const LooksOutlined: SvgIconComponent;
    export const LooksRounded: SvgIconComponent;
    export const LooksSharp: SvgIconComponent;
    export const LooksTwo: SvgIconComponent;
    export const LooksTwoOutlined: SvgIconComponent;
    export const LooksTwoRounded: SvgIconComponent;
    export const LooksTwoSharp: SvgIconComponent;
    export const LooksTwoTone: SvgIconComponent;
    export const LooksTwoTwoTone: SvgIconComponent;
    export const Loop: SvgIconComponent;
    export const LoopOutlined: SvgIconComponent;
    export const LoopRounded: SvgIconComponent;
    export const LoopSharp: SvgIconComponent;
    export const LoopTwoTone: SvgIconComponent;
    export const Loupe: SvgIconComponent;
    export const LoupeOutlined: SvgIconComponent;
    export const LoupeRounded: SvgIconComponent;
    export const LoupeSharp: SvgIconComponent;
    export const LoupeTwoTone: SvgIconComponent;
    export const LowPriority: SvgIconComponent;
    export const LowPriorityOutlined: SvgIconComponent;
    export const LowPriorityRounded: SvgIconComponent;
    export const LowPrioritySharp: SvgIconComponent;
    export const LowPriorityTwoTone: SvgIconComponent;
    export const Loyalty: SvgIconComponent;
    export const LoyaltyOutlined: SvgIconComponent;
    export const LoyaltyRounded: SvgIconComponent;
    export const LoyaltySharp: SvgIconComponent;
    export const LoyaltyTwoTone: SvgIconComponent;
    export const LteMobiledata: SvgIconComponent;
    export const LteMobiledataOutlined: SvgIconComponent;
    export const LteMobiledataRounded: SvgIconComponent;
    export const LteMobiledataSharp: SvgIconComponent;
    export const LteMobiledataTwoTone: SvgIconComponent;
    export const LtePlusMobiledata: SvgIconComponent;
    export const LtePlusMobiledataOutlined: SvgIconComponent;
    export const LtePlusMobiledataRounded: SvgIconComponent;
    export const LtePlusMobiledataSharp: SvgIconComponent;
    export const LtePlusMobiledataTwoTone: SvgIconComponent;
    export const Luggage: SvgIconComponent;
    export const LuggageOutlined: SvgIconComponent;
    export const LuggageRounded: SvgIconComponent;
    export const LuggageSharp: SvgIconComponent;
    export const LuggageTwoTone: SvgIconComponent;
    export const LunchDining: SvgIconComponent;
    export const LunchDiningOutlined: SvgIconComponent;
    export const LunchDiningRounded: SvgIconComponent;
    export const LunchDiningSharp: SvgIconComponent;
    export const LunchDiningTwoTone: SvgIconComponent;
    export const Mail: SvgIconComponent;
    export const MailOutline: SvgIconComponent;
    export const MailOutlined: SvgIconComponent;
    export const MailOutlineOutlined: SvgIconComponent;
    export const MailOutlineRounded: SvgIconComponent;
    export const MailOutlineSharp: SvgIconComponent;
    export const MailOutlineTwoTone: SvgIconComponent;
    export const MailRounded: SvgIconComponent;
    export const MailSharp: SvgIconComponent;
    export const MailTwoTone: SvgIconComponent;
    export const Male: SvgIconComponent;
    export const MaleOutlined: SvgIconComponent;
    export const MaleRounded: SvgIconComponent;
    export const MaleSharp: SvgIconComponent;
    export const MaleTwoTone: SvgIconComponent;
    export const Man: SvgIconComponent;
    export const ManageAccounts: SvgIconComponent;
    export const ManageAccountsOutlined: SvgIconComponent;
    export const ManageAccountsRounded: SvgIconComponent;
    export const ManageAccountsSharp: SvgIconComponent;
    export const ManageAccountsTwoTone: SvgIconComponent;
    export const ManageSearch: SvgIconComponent;
    export const ManageSearchOutlined: SvgIconComponent;
    export const ManageSearchRounded: SvgIconComponent;
    export const ManageSearchSharp: SvgIconComponent;
    export const ManageSearchTwoTone: SvgIconComponent;
    export const ManOutlined: SvgIconComponent;
    export const ManRounded: SvgIconComponent;
    export const ManSharp: SvgIconComponent;
    export const ManTwoTone: SvgIconComponent;
    export const Map: SvgIconComponent;
    export const MapOutlined: SvgIconComponent;
    export const MapRounded: SvgIconComponent;
    export const MapSharp: SvgIconComponent;
    export const MapsHomeWork: SvgIconComponent;
    export const MapsHomeWorkOutlined: SvgIconComponent;
    export const MapsHomeWorkRounded: SvgIconComponent;
    export const MapsHomeWorkSharp: SvgIconComponent;
    export const MapsHomeWorkTwoTone: SvgIconComponent;
    export const MapsUgc: SvgIconComponent;
    export const MapsUgcOutlined: SvgIconComponent;
    export const MapsUgcRounded: SvgIconComponent;
    export const MapsUgcSharp: SvgIconComponent;
    export const MapsUgcTwoTone: SvgIconComponent;
    export const MapTwoTone: SvgIconComponent;
    export const Margin: SvgIconComponent;
    export const MarginOutlined: SvgIconComponent;
    export const MarginRounded: SvgIconComponent;
    export const MarginSharp: SvgIconComponent;
    export const MarginTwoTone: SvgIconComponent;
    export const MarkAsUnread: SvgIconComponent;
    export const MarkAsUnreadOutlined: SvgIconComponent;
    export const MarkAsUnreadRounded: SvgIconComponent;
    export const MarkAsUnreadSharp: SvgIconComponent;
    export const MarkAsUnreadTwoTone: SvgIconComponent;
    export const MarkChatRead: SvgIconComponent;
    export const MarkChatReadOutlined: SvgIconComponent;
    export const MarkChatReadRounded: SvgIconComponent;
    export const MarkChatReadSharp: SvgIconComponent;
    export const MarkChatReadTwoTone: SvgIconComponent;
    export const MarkChatUnread: SvgIconComponent;
    export const MarkChatUnreadOutlined: SvgIconComponent;
    export const MarkChatUnreadRounded: SvgIconComponent;
    export const MarkChatUnreadSharp: SvgIconComponent;
    export const MarkChatUnreadTwoTone: SvgIconComponent;
    export const MarkEmailRead: SvgIconComponent;
    export const MarkEmailReadOutlined: SvgIconComponent;
    export const MarkEmailReadRounded: SvgIconComponent;
    export const MarkEmailReadSharp: SvgIconComponent;
    export const MarkEmailReadTwoTone: SvgIconComponent;
    export const MarkEmailUnread: SvgIconComponent;
    export const MarkEmailUnreadOutlined: SvgIconComponent;
    export const MarkEmailUnreadRounded: SvgIconComponent;
    export const MarkEmailUnreadSharp: SvgIconComponent;
    export const MarkEmailUnreadTwoTone: SvgIconComponent;
    export const Markunread: SvgIconComponent;
    export const MarkUnreadChatAlt: SvgIconComponent;
    export const MarkUnreadChatAltOutlined: SvgIconComponent;
    export const MarkUnreadChatAltRounded: SvgIconComponent;
    export const MarkUnreadChatAltSharp: SvgIconComponent;
    export const MarkUnreadChatAltTwoTone: SvgIconComponent;
    export const MarkunreadMailbox: SvgIconComponent;
    export const MarkunreadMailboxOutlined: SvgIconComponent;
    export const MarkunreadMailboxRounded: SvgIconComponent;
    export const MarkunreadMailboxSharp: SvgIconComponent;
    export const MarkunreadMailboxTwoTone: SvgIconComponent;
    export const MarkunreadOutlined: SvgIconComponent;
    export const MarkunreadRounded: SvgIconComponent;
    export const MarkunreadSharp: SvgIconComponent;
    export const MarkunreadTwoTone: SvgIconComponent;
    export const Masks: SvgIconComponent;
    export const MasksOutlined: SvgIconComponent;
    export const MasksRounded: SvgIconComponent;
    export const MasksSharp: SvgIconComponent;
    export const MasksTwoTone: SvgIconComponent;
    export const Maximize: SvgIconComponent;
    export const MaximizeOutlined: SvgIconComponent;
    export const MaximizeRounded: SvgIconComponent;
    export const MaximizeSharp: SvgIconComponent;
    export const MaximizeTwoTone: SvgIconComponent;
    export const MediaBluetoothOff: SvgIconComponent;
    export const MediaBluetoothOffOutlined: SvgIconComponent;
    export const MediaBluetoothOffRounded: SvgIconComponent;
    export const MediaBluetoothOffSharp: SvgIconComponent;
    export const MediaBluetoothOffTwoTone: SvgIconComponent;
    export const MediaBluetoothOn: SvgIconComponent;
    export const MediaBluetoothOnOutlined: SvgIconComponent;
    export const MediaBluetoothOnRounded: SvgIconComponent;
    export const MediaBluetoothOnSharp: SvgIconComponent;
    export const MediaBluetoothOnTwoTone: SvgIconComponent;
    export const Mediation: SvgIconComponent;
    export const MediationOutlined: SvgIconComponent;
    export const MediationRounded: SvgIconComponent;
    export const MediationSharp: SvgIconComponent;
    export const MediationTwoTone: SvgIconComponent;
    export const MedicalServices: SvgIconComponent;
    export const MedicalServicesOutlined: SvgIconComponent;
    export const MedicalServicesRounded: SvgIconComponent;
    export const MedicalServicesSharp: SvgIconComponent;
    export const MedicalServicesTwoTone: SvgIconComponent;
    export const Medication: SvgIconComponent;
    export const MedicationLiquid: SvgIconComponent;
    export const MedicationLiquidOutlined: SvgIconComponent;
    export const MedicationLiquidRounded: SvgIconComponent;
    export const MedicationLiquidSharp: SvgIconComponent;
    export const MedicationLiquidTwoTone: SvgIconComponent;
    export const MedicationOutlined: SvgIconComponent;
    export const MedicationRounded: SvgIconComponent;
    export const MedicationSharp: SvgIconComponent;
    export const MedicationTwoTone: SvgIconComponent;
    export const MeetingRoom: SvgIconComponent;
    export const MeetingRoomOutlined: SvgIconComponent;
    export const MeetingRoomRounded: SvgIconComponent;
    export const MeetingRoomSharp: SvgIconComponent;
    export const MeetingRoomTwoTone: SvgIconComponent;
    export const Memory: SvgIconComponent;
    export const MemoryOutlined: SvgIconComponent;
    export const MemoryRounded: SvgIconComponent;
    export const MemorySharp: SvgIconComponent;
    export const MemoryTwoTone: SvgIconComponent;
    export const Menu: SvgIconComponent;
    export const MenuBook: SvgIconComponent;
    export const MenuBookOutlined: SvgIconComponent;
    export const MenuBookRounded: SvgIconComponent;
    export const MenuBookSharp: SvgIconComponent;
    export const MenuBookTwoTone: SvgIconComponent;
    export const MenuOpen: SvgIconComponent;
    export const MenuOpenOutlined: SvgIconComponent;
    export const MenuOpenRounded: SvgIconComponent;
    export const MenuOpenSharp: SvgIconComponent;
    export const MenuOpenTwoTone: SvgIconComponent;
    export const MenuOutlined: SvgIconComponent;
    export const MenuRounded: SvgIconComponent;
    export const MenuSharp: SvgIconComponent;
    export const MenuTwoTone: SvgIconComponent;
    export const Merge: SvgIconComponent;
    export const MergeOutlined: SvgIconComponent;
    export const MergeRounded: SvgIconComponent;
    export const MergeSharp: SvgIconComponent;
    export const MergeTwoTone: SvgIconComponent;
    export const MergeType: SvgIconComponent;
    export const MergeTypeOutlined: SvgIconComponent;
    export const MergeTypeRounded: SvgIconComponent;
    export const MergeTypeSharp: SvgIconComponent;
    export const MergeTypeTwoTone: SvgIconComponent;
    export const Message: SvgIconComponent;
    export const MessageOutlined: SvgIconComponent;
    export const MessageRounded: SvgIconComponent;
    export const MessageSharp: SvgIconComponent;
    export const MessageTwoTone: SvgIconComponent;
    export const Mic: SvgIconComponent;
    export const MicExternalOff: SvgIconComponent;
    export const MicExternalOffOutlined: SvgIconComponent;
    export const MicExternalOffRounded: SvgIconComponent;
    export const MicExternalOffSharp: SvgIconComponent;
    export const MicExternalOffTwoTone: SvgIconComponent;
    export const MicExternalOn: SvgIconComponent;
    export const MicExternalOnOutlined: SvgIconComponent;
    export const MicExternalOnRounded: SvgIconComponent;
    export const MicExternalOnSharp: SvgIconComponent;
    export const MicExternalOnTwoTone: SvgIconComponent;
    export const MicNone: SvgIconComponent;
    export const MicNoneOutlined: SvgIconComponent;
    export const MicNoneRounded: SvgIconComponent;
    export const MicNoneSharp: SvgIconComponent;
    export const MicNoneTwoTone: SvgIconComponent;
    export const MicOff: SvgIconComponent;
    export const MicOffOutlined: SvgIconComponent;
    export const MicOffRounded: SvgIconComponent;
    export const MicOffSharp: SvgIconComponent;
    export const MicOffTwoTone: SvgIconComponent;
    export const MicOutlined: SvgIconComponent;
    export const MicRounded: SvgIconComponent;
    export const Microwave: SvgIconComponent;
    export const MicrowaveOutlined: SvgIconComponent;
    export const MicrowaveRounded: SvgIconComponent;
    export const MicrowaveSharp: SvgIconComponent;
    export const MicrowaveTwoTone: SvgIconComponent;
    export const MicSharp: SvgIconComponent;
    export const MicTwoTone: SvgIconComponent;
    export const MilitaryTech: SvgIconComponent;
    export const MilitaryTechOutlined: SvgIconComponent;
    export const MilitaryTechRounded: SvgIconComponent;
    export const MilitaryTechSharp: SvgIconComponent;
    export const MilitaryTechTwoTone: SvgIconComponent;
    export const Minimize: SvgIconComponent;
    export const MinimizeOutlined: SvgIconComponent;
    export const MinimizeRounded: SvgIconComponent;
    export const MinimizeSharp: SvgIconComponent;
    export const MinimizeTwoTone: SvgIconComponent;
    export const MiscellaneousServices: SvgIconComponent;
    export const MiscellaneousServicesOutlined: SvgIconComponent;
    export const MiscellaneousServicesRounded: SvgIconComponent;
    export const MiscellaneousServicesSharp: SvgIconComponent;
    export const MiscellaneousServicesTwoTone: SvgIconComponent;
    export const MissedVideoCall: SvgIconComponent;
    export const MissedVideoCallOutlined: SvgIconComponent;
    export const MissedVideoCallRounded: SvgIconComponent;
    export const MissedVideoCallSharp: SvgIconComponent;
    export const MissedVideoCallTwoTone: SvgIconComponent;
    export const Mms: SvgIconComponent;
    export const MmsOutlined: SvgIconComponent;
    export const MmsRounded: SvgIconComponent;
    export const MmsSharp: SvgIconComponent;
    export const MmsTwoTone: SvgIconComponent;
    export const MobiledataOff: SvgIconComponent;
    export const MobiledataOffOutlined: SvgIconComponent;
    export const MobiledataOffRounded: SvgIconComponent;
    export const MobiledataOffSharp: SvgIconComponent;
    export const MobiledataOffTwoTone: SvgIconComponent;
    export const MobileFriendly: SvgIconComponent;
    export const MobileFriendlyOutlined: SvgIconComponent;
    export const MobileFriendlyRounded: SvgIconComponent;
    export const MobileFriendlySharp: SvgIconComponent;
    export const MobileFriendlyTwoTone: SvgIconComponent;
    export const MobileOff: SvgIconComponent;
    export const MobileOffOutlined: SvgIconComponent;
    export const MobileOffRounded: SvgIconComponent;
    export const MobileOffSharp: SvgIconComponent;
    export const MobileOffTwoTone: SvgIconComponent;
    export const MobileScreenShare: SvgIconComponent;
    export const MobileScreenShareOutlined: SvgIconComponent;
    export const MobileScreenShareRounded: SvgIconComponent;
    export const MobileScreenShareSharp: SvgIconComponent;
    export const MobileScreenShareTwoTone: SvgIconComponent;
    export const Mode: SvgIconComponent;
    export const ModeComment: SvgIconComponent;
    export const ModeCommentOutlined: SvgIconComponent;
    export const ModeCommentRounded: SvgIconComponent;
    export const ModeCommentSharp: SvgIconComponent;
    export const ModeCommentTwoTone: SvgIconComponent;
    export const ModeEdit: SvgIconComponent;
    export const ModeEditOutline: SvgIconComponent;
    export const ModeEditOutlined: SvgIconComponent;
    export const ModeEditOutlineOutlined: SvgIconComponent;
    export const ModeEditOutlineRounded: SvgIconComponent;
    export const ModeEditOutlineSharp: SvgIconComponent;
    export const ModeEditOutlineTwoTone: SvgIconComponent;
    export const ModeEditRounded: SvgIconComponent;
    export const ModeEditSharp: SvgIconComponent;
    export const ModeEditTwoTone: SvgIconComponent;
    export const ModelTraining: SvgIconComponent;
    export const ModelTrainingOutlined: SvgIconComponent;
    export const ModelTrainingRounded: SvgIconComponent;
    export const ModelTrainingSharp: SvgIconComponent;
    export const ModelTrainingTwoTone: SvgIconComponent;
    export const ModeNight: SvgIconComponent;
    export const ModeNightOutlined: SvgIconComponent;
    export const ModeNightRounded: SvgIconComponent;
    export const ModeNightSharp: SvgIconComponent;
    export const ModeNightTwoTone: SvgIconComponent;
    export const ModeOfTravel: SvgIconComponent;
    export const ModeOfTravelOutlined: SvgIconComponent;
    export const ModeOfTravelRounded: SvgIconComponent;
    export const ModeOfTravelSharp: SvgIconComponent;
    export const ModeOfTravelTwoTone: SvgIconComponent;
    export const ModeOutlined: SvgIconComponent;
    export const ModeRounded: SvgIconComponent;
    export const ModeSharp: SvgIconComponent;
    export const ModeStandby: SvgIconComponent;
    export const ModeStandbyOutlined: SvgIconComponent;
    export const ModeStandbyRounded: SvgIconComponent;
    export const ModeStandbySharp: SvgIconComponent;
    export const ModeStandbyTwoTone: SvgIconComponent;
    export const ModeTwoTone: SvgIconComponent;
    export const MonetizationOn: SvgIconComponent;
    export const MonetizationOnOutlined: SvgIconComponent;
    export const MonetizationOnRounded: SvgIconComponent;
    export const MonetizationOnSharp: SvgIconComponent;
    export const MonetizationOnTwoTone: SvgIconComponent;
    export const Money: SvgIconComponent;
    export const MoneyOff: SvgIconComponent;
    export const MoneyOffCsred: SvgIconComponent;
    export const MoneyOffCsredOutlined: SvgIconComponent;
    export const MoneyOffCsredRounded: SvgIconComponent;
    export const MoneyOffCsredSharp: SvgIconComponent;
    export const MoneyOffCsredTwoTone: SvgIconComponent;
    export const MoneyOffOutlined: SvgIconComponent;
    export const MoneyOffRounded: SvgIconComponent;
    export const MoneyOffSharp: SvgIconComponent;
    export const MoneyOffTwoTone: SvgIconComponent;
    export const MoneyOutlined: SvgIconComponent;
    export const MoneyRounded: SvgIconComponent;
    export const MoneySharp: SvgIconComponent;
    export const MoneyTwoTone: SvgIconComponent;
    export const Monitor: SvgIconComponent;
    export const MonitorHeart: SvgIconComponent;
    export const MonitorHeartOutlined: SvgIconComponent;
    export const MonitorHeartRounded: SvgIconComponent;
    export const MonitorHeartSharp: SvgIconComponent;
    export const MonitorHeartTwoTone: SvgIconComponent;
    export const MonitorOutlined: SvgIconComponent;
    export const MonitorRounded: SvgIconComponent;
    export const MonitorSharp: SvgIconComponent;
    export const MonitorTwoTone: SvgIconComponent;
    export const MonitorWeight: SvgIconComponent;
    export const MonitorWeightOutlined: SvgIconComponent;
    export const MonitorWeightRounded: SvgIconComponent;
    export const MonitorWeightSharp: SvgIconComponent;
    export const MonitorWeightTwoTone: SvgIconComponent;
    export const MonochromePhotos: SvgIconComponent;
    export const MonochromePhotosOutlined: SvgIconComponent;
    export const MonochromePhotosRounded: SvgIconComponent;
    export const MonochromePhotosSharp: SvgIconComponent;
    export const MonochromePhotosTwoTone: SvgIconComponent;
    export const Mood: SvgIconComponent;
    export const MoodBad: SvgIconComponent;
    export const MoodBadOutlined: SvgIconComponent;
    export const MoodBadRounded: SvgIconComponent;
    export const MoodBadSharp: SvgIconComponent;
    export const MoodBadTwoTone: SvgIconComponent;
    export const MoodOutlined: SvgIconComponent;
    export const MoodRounded: SvgIconComponent;
    export const MoodSharp: SvgIconComponent;
    export const MoodTwoTone: SvgIconComponent;
    export const Moped: SvgIconComponent;
    export const MopedOutlined: SvgIconComponent;
    export const MopedRounded: SvgIconComponent;
    export const MopedSharp: SvgIconComponent;
    export const MopedTwoTone: SvgIconComponent;
    export const More: SvgIconComponent;
    export const MoreHoriz: SvgIconComponent;
    export const MoreHorizOutlined: SvgIconComponent;
    export const MoreHorizRounded: SvgIconComponent;
    export const MoreHorizSharp: SvgIconComponent;
    export const MoreHorizTwoTone: SvgIconComponent;
    export const MoreOutlined: SvgIconComponent;
    export const MoreRounded: SvgIconComponent;
    export const MoreSharp: SvgIconComponent;
    export const MoreTime: SvgIconComponent;
    export const MoreTimeOutlined: SvgIconComponent;
    export const MoreTimeRounded: SvgIconComponent;
    export const MoreTimeSharp: SvgIconComponent;
    export const MoreTimeTwoTone: SvgIconComponent;
    export const MoreTwoTone: SvgIconComponent;
    export const MoreVert: SvgIconComponent;
    export const MoreVertOutlined: SvgIconComponent;
    export const MoreVertRounded: SvgIconComponent;
    export const MoreVertSharp: SvgIconComponent;
    export const MoreVertTwoTone: SvgIconComponent;
    export const Mosque: SvgIconComponent;
    export const MosqueOutlined: SvgIconComponent;
    export const MosqueRounded: SvgIconComponent;
    export const MosqueSharp: SvgIconComponent;
    export const MosqueTwoTone: SvgIconComponent;
    export const MotionPhotosAuto: SvgIconComponent;
    export const MotionPhotosAutoOutlined: SvgIconComponent;
    export const MotionPhotosAutoRounded: SvgIconComponent;
    export const MotionPhotosAutoSharp: SvgIconComponent;
    export const MotionPhotosAutoTwoTone: SvgIconComponent;
    export const MotionPhotosOff: SvgIconComponent;
    export const MotionPhotosOffOutlined: SvgIconComponent;
    export const MotionPhotosOffRounded: SvgIconComponent;
    export const MotionPhotosOffSharp: SvgIconComponent;
    export const MotionPhotosOffTwoTone: SvgIconComponent;
    export const Mouse: SvgIconComponent;
    export const MouseOutlined: SvgIconComponent;
    export const MouseRounded: SvgIconComponent;
    export const MouseSharp: SvgIconComponent;
    export const MouseTwoTone: SvgIconComponent;
    export const MoveDown: SvgIconComponent;
    export const MoveDownOutlined: SvgIconComponent;
    export const MoveDownRounded: SvgIconComponent;
    export const MoveDownSharp: SvgIconComponent;
    export const MoveDownTwoTone: SvgIconComponent;
    export const MoveToInbox: SvgIconComponent;
    export const MoveToInboxOutlined: SvgIconComponent;
    export const MoveToInboxRounded: SvgIconComponent;
    export const MoveToInboxSharp: SvgIconComponent;
    export const MoveToInboxTwoTone: SvgIconComponent;
    export const MoveUp: SvgIconComponent;
    export const MoveUpOutlined: SvgIconComponent;
    export const MoveUpRounded: SvgIconComponent;
    export const MoveUpSharp: SvgIconComponent;
    export const MoveUpTwoTone: SvgIconComponent;
    export const Movie: SvgIconComponent;
    export const MovieCreation: SvgIconComponent;
    export const MovieCreationOutlined: SvgIconComponent;
    export const MovieCreationRounded: SvgIconComponent;
    export const MovieCreationSharp: SvgIconComponent;
    export const MovieCreationTwoTone: SvgIconComponent;
    export const MovieFilter: SvgIconComponent;
    export const MovieFilterOutlined: SvgIconComponent;
    export const MovieFilterRounded: SvgIconComponent;
    export const MovieFilterSharp: SvgIconComponent;
    export const MovieFilterTwoTone: SvgIconComponent;
    export const MovieOutlined: SvgIconComponent;
    export const MovieRounded: SvgIconComponent;
    export const MovieSharp: SvgIconComponent;
    export const MovieTwoTone: SvgIconComponent;
    export const Moving: SvgIconComponent;
    export const MovingOutlined: SvgIconComponent;
    export const MovingRounded: SvgIconComponent;
    export const MovingSharp: SvgIconComponent;
    export const MovingTwoTone: SvgIconComponent;
    export const Mp: SvgIconComponent;
    export const MpOutlined: SvgIconComponent;
    export const MpRounded: SvgIconComponent;
    export const MpSharp: SvgIconComponent;
    export const MpTwoTone: SvgIconComponent;
    export const MultilineChart: SvgIconComponent;
    export const MultilineChartOutlined: SvgIconComponent;
    export const MultilineChartRounded: SvgIconComponent;
    export const MultilineChartSharp: SvgIconComponent;
    export const MultilineChartTwoTone: SvgIconComponent;
    export const MultipleStop: SvgIconComponent;
    export const MultipleStopOutlined: SvgIconComponent;
    export const MultipleStopRounded: SvgIconComponent;
    export const MultipleStopSharp: SvgIconComponent;
    export const MultipleStopTwoTone: SvgIconComponent;
    export const Museum: SvgIconComponent;
    export const MuseumOutlined: SvgIconComponent;
    export const MuseumRounded: SvgIconComponent;
    export const MuseumSharp: SvgIconComponent;
    export const MuseumTwoTone: SvgIconComponent;
    export const MusicNote: SvgIconComponent;
    export const MusicNoteOutlined: SvgIconComponent;
    export const MusicNoteRounded: SvgIconComponent;
    export const MusicNoteSharp: SvgIconComponent;
    export const MusicNoteTwoTone: SvgIconComponent;
    export const MusicOff: SvgIconComponent;
    export const MusicOffOutlined: SvgIconComponent;
    export const MusicOffRounded: SvgIconComponent;
    export const MusicOffSharp: SvgIconComponent;
    export const MusicOffTwoTone: SvgIconComponent;
    export const MusicVideo: SvgIconComponent;
    export const MusicVideoOutlined: SvgIconComponent;
    export const MusicVideoRounded: SvgIconComponent;
    export const MusicVideoSharp: SvgIconComponent;
    export const MusicVideoTwoTone: SvgIconComponent;
    export const MyLocation: SvgIconComponent;
    export const MyLocationOutlined: SvgIconComponent;
    export const MyLocationRounded: SvgIconComponent;
    export const MyLocationSharp: SvgIconComponent;
    export const MyLocationTwoTone: SvgIconComponent;
    export const Nat: SvgIconComponent;
    export const NatOutlined: SvgIconComponent;
    export const NatRounded: SvgIconComponent;
    export const NatSharp: SvgIconComponent;
    export const NatTwoTone: SvgIconComponent;
    export const Nature: SvgIconComponent;
    export const NatureOutlined: SvgIconComponent;
    export const NaturePeople: SvgIconComponent;
    export const NaturePeopleOutlined: SvgIconComponent;
    export const NaturePeopleRounded: SvgIconComponent;
    export const NaturePeopleSharp: SvgIconComponent;
    export const NaturePeopleTwoTone: SvgIconComponent;
    export const NatureRounded: SvgIconComponent;
    export const NatureSharp: SvgIconComponent;
    export const NatureTwoTone: SvgIconComponent;
    export const NavigateBefore: SvgIconComponent;
    export const NavigateBeforeOutlined: SvgIconComponent;
    export const NavigateBeforeRounded: SvgIconComponent;
    export const NavigateBeforeSharp: SvgIconComponent;
    export const NavigateBeforeTwoTone: SvgIconComponent;
    export const NavigateNext: SvgIconComponent;
    export const NavigateNextOutlined: SvgIconComponent;
    export const NavigateNextRounded: SvgIconComponent;
    export const NavigateNextSharp: SvgIconComponent;
    export const NavigateNextTwoTone: SvgIconComponent;
    export const Navigation: SvgIconComponent;
    export const NavigationOutlined: SvgIconComponent;
    export const NavigationRounded: SvgIconComponent;
    export const NavigationSharp: SvgIconComponent;
    export const NavigationTwoTone: SvgIconComponent;
    export const NearbyError: SvgIconComponent;
    export const NearbyErrorOutlined: SvgIconComponent;
    export const NearbyErrorRounded: SvgIconComponent;
    export const NearbyErrorSharp: SvgIconComponent;
    export const NearbyErrorTwoTone: SvgIconComponent;
    export const NearbyOff: SvgIconComponent;
    export const NearbyOffOutlined: SvgIconComponent;
    export const NearbyOffRounded: SvgIconComponent;
    export const NearbyOffSharp: SvgIconComponent;
    export const NearbyOffTwoTone: SvgIconComponent;
    export const NearMe: SvgIconComponent;
    export const NearMeDisabled: SvgIconComponent;
    export const NearMeDisabledOutlined: SvgIconComponent;
    export const NearMeDisabledRounded: SvgIconComponent;
    export const NearMeDisabledSharp: SvgIconComponent;
    export const NearMeDisabledTwoTone: SvgIconComponent;
    export const NearMeOutlined: SvgIconComponent;
    export const NearMeRounded: SvgIconComponent;
    export const NearMeSharp: SvgIconComponent;
    export const NearMeTwoTone: SvgIconComponent;
    export const NetworkCell: SvgIconComponent;
    export const NetworkCellOutlined: SvgIconComponent;
    export const NetworkCellRounded: SvgIconComponent;
    export const NetworkCellSharp: SvgIconComponent;
    export const NetworkCellTwoTone: SvgIconComponent;
    export const NetworkCheck: SvgIconComponent;
    export const NetworkCheckOutlined: SvgIconComponent;
    export const NetworkCheckRounded: SvgIconComponent;
    export const NetworkCheckSharp: SvgIconComponent;
    export const NetworkCheckTwoTone: SvgIconComponent;
    export const NetworkLocked: SvgIconComponent;
    export const NetworkLockedOutlined: SvgIconComponent;
    export const NetworkLockedRounded: SvgIconComponent;
    export const NetworkLockedSharp: SvgIconComponent;
    export const NetworkLockedTwoTone: SvgIconComponent;
    export const NetworkWifi: SvgIconComponent;
    export const NetworkWifiOutlined: SvgIconComponent;
    export const NetworkWifiRounded: SvgIconComponent;
    export const NetworkWifiSharp: SvgIconComponent;
    export const NetworkWifiTwoTone: SvgIconComponent;
    export const NewReleases: SvgIconComponent;
    export const NewReleasesOutlined: SvgIconComponent;
    export const NewReleasesRounded: SvgIconComponent;
    export const NewReleasesSharp: SvgIconComponent;
    export const NewReleasesTwoTone: SvgIconComponent;
    export const Newspaper: SvgIconComponent;
    export const NewspaperOutlined: SvgIconComponent;
    export const NewspaperRounded: SvgIconComponent;
    export const NewspaperSharp: SvgIconComponent;
    export const NewspaperTwoTone: SvgIconComponent;
    export const NextPlan: SvgIconComponent;
    export const NextPlanOutlined: SvgIconComponent;
    export const NextPlanRounded: SvgIconComponent;
    export const NextPlanSharp: SvgIconComponent;
    export const NextPlanTwoTone: SvgIconComponent;
    export const NextWeek: SvgIconComponent;
    export const NextWeekOutlined: SvgIconComponent;
    export const NextWeekRounded: SvgIconComponent;
    export const NextWeekSharp: SvgIconComponent;
    export const NextWeekTwoTone: SvgIconComponent;
    export const Nfc: SvgIconComponent;
    export const NfcOutlined: SvgIconComponent;
    export const NfcRounded: SvgIconComponent;
    export const NfcSharp: SvgIconComponent;
    export const NfcTwoTone: SvgIconComponent;
    export const Nightlife: SvgIconComponent;
    export const NightlifeOutlined: SvgIconComponent;
    export const NightlifeRounded: SvgIconComponent;
    export const NightlifeSharp: SvgIconComponent;
    export const NightlifeTwoTone: SvgIconComponent;
    export const Nightlight: SvgIconComponent;
    export const NightlightOutlined: SvgIconComponent;
    export const NightlightRound: SvgIconComponent;
    export const NightlightRounded: SvgIconComponent;
    export const NightlightRoundOutlined: SvgIconComponent;
    export const NightlightRoundRounded: SvgIconComponent;
    export const NightlightRoundSharp: SvgIconComponent;
    export const NightlightRoundTwoTone: SvgIconComponent;
    export const NightlightSharp: SvgIconComponent;
    export const NightlightTwoTone: SvgIconComponent;
    export const NightShelter: SvgIconComponent;
    export const NightShelterOutlined: SvgIconComponent;
    export const NightShelterRounded: SvgIconComponent;
    export const NightShelterSharp: SvgIconComponent;
    export const NightShelterTwoTone: SvgIconComponent;
    export const NightsStay: SvgIconComponent;
    export const NightsStayOutlined: SvgIconComponent;
    export const NightsStayRounded: SvgIconComponent;
    export const NightsStaySharp: SvgIconComponent;
    export const NightsStayTwoTone: SvgIconComponent;
    export const NineK: SvgIconComponent;
    export const NineKOutlined: SvgIconComponent;
    export const NineKPlus: SvgIconComponent;
    export const NineKPlusOutlined: SvgIconComponent;
    export const NineKPlusRounded: SvgIconComponent;
    export const NineKPlusSharp: SvgIconComponent;
    export const NineKPlusTwoTone: SvgIconComponent;
    export const NineKRounded: SvgIconComponent;
    export const NineKSharp: SvgIconComponent;
    export const NineKTwoTone: SvgIconComponent;
    export const NineMp: SvgIconComponent;
    export const NineMpOutlined: SvgIconComponent;
    export const NineMpRounded: SvgIconComponent;
    export const NineMpSharp: SvgIconComponent;
    export const NineMpTwoTone: SvgIconComponent;
    export const NineteenMp: SvgIconComponent;
    export const NineteenMpOutlined: SvgIconComponent;
    export const NineteenMpRounded: SvgIconComponent;
    export const NineteenMpSharp: SvgIconComponent;
    export const NineteenMpTwoTone: SvgIconComponent;
    export const NoAccounts: SvgIconComponent;
    export const NoAccountsOutlined: SvgIconComponent;
    export const NoAccountsRounded: SvgIconComponent;
    export const NoAccountsSharp: SvgIconComponent;
    export const NoAccountsTwoTone: SvgIconComponent;
    export const NoBackpack: SvgIconComponent;
    export const NoBackpackOutlined: SvgIconComponent;
    export const NoBackpackRounded: SvgIconComponent;
    export const NoBackpackSharp: SvgIconComponent;
    export const NoBackpackTwoTone: SvgIconComponent;
    export const NoCell: SvgIconComponent;
    export const NoCellOutlined: SvgIconComponent;
    export const NoCellRounded: SvgIconComponent;
    export const NoCellSharp: SvgIconComponent;
    export const NoCellTwoTone: SvgIconComponent;
    export const NoDrinks: SvgIconComponent;
    export const NoDrinksOutlined: SvgIconComponent;
    export const NoDrinksRounded: SvgIconComponent;
    export const NoDrinksSharp: SvgIconComponent;
    export const NoDrinksTwoTone: SvgIconComponent;
    export const NoEncryption: SvgIconComponent;
    export const NoEncryptionGmailerrorred: SvgIconComponent;
    export const NoEncryptionGmailerrorredOutlined: SvgIconComponent;
    export const NoEncryptionGmailerrorredRounded: SvgIconComponent;
    export const NoEncryptionGmailerrorredSharp: SvgIconComponent;
    export const NoEncryptionGmailerrorredTwoTone: SvgIconComponent;
    export const NoEncryptionOutlined: SvgIconComponent;
    export const NoEncryptionRounded: SvgIconComponent;
    export const NoEncryptionSharp: SvgIconComponent;
    export const NoEncryptionTwoTone: SvgIconComponent;
    export const NoFlash: SvgIconComponent;
    export const NoFlashOutlined: SvgIconComponent;
    export const NoFlashRounded: SvgIconComponent;
    export const NoFlashSharp: SvgIconComponent;
    export const NoFlashTwoTone: SvgIconComponent;
    export const NoFood: SvgIconComponent;
    export const NoFoodOutlined: SvgIconComponent;
    export const NoFoodRounded: SvgIconComponent;
    export const NoFoodSharp: SvgIconComponent;
    export const NoFoodTwoTone: SvgIconComponent;
    export const NoLuggage: SvgIconComponent;
    export const NoLuggageOutlined: SvgIconComponent;
    export const NoLuggageRounded: SvgIconComponent;
    export const NoLuggageSharp: SvgIconComponent;
    export const NoLuggageTwoTone: SvgIconComponent;
    export const NoMeals: SvgIconComponent;
    export const NoMealsOutlined: SvgIconComponent;
    export const NoMealsRounded: SvgIconComponent;
    export const NoMealsSharp: SvgIconComponent;
    export const NoMealsTwoTone: SvgIconComponent;
    export const NoMeetingRoom: SvgIconComponent;
    export const NoMeetingRoomOutlined: SvgIconComponent;
    export const NoMeetingRoomRounded: SvgIconComponent;
    export const NoMeetingRoomSharp: SvgIconComponent;
    export const NoMeetingRoomTwoTone: SvgIconComponent;
    export const NoPhotography: SvgIconComponent;
    export const NoPhotographyOutlined: SvgIconComponent;
    export const NoPhotographyRounded: SvgIconComponent;
    export const NoPhotographySharp: SvgIconComponent;
    export const NoPhotographyTwoTone: SvgIconComponent;
    export const NordicWalking: SvgIconComponent;
    export const NordicWalkingOutlined: SvgIconComponent;
    export const NordicWalkingRounded: SvgIconComponent;
    export const NordicWalkingSharp: SvgIconComponent;
    export const NordicWalkingTwoTone: SvgIconComponent;
    export const North: SvgIconComponent;
    export const NorthEast: SvgIconComponent;
    export const NorthEastOutlined: SvgIconComponent;
    export const NorthEastRounded: SvgIconComponent;
    export const NorthEastSharp: SvgIconComponent;
    export const NorthEastTwoTone: SvgIconComponent;
    export const NorthOutlined: SvgIconComponent;
    export const NorthRounded: SvgIconComponent;
    export const NorthSharp: SvgIconComponent;
    export const NorthTwoTone: SvgIconComponent;
    export const NorthWest: SvgIconComponent;
    export const NorthWestOutlined: SvgIconComponent;
    export const NorthWestRounded: SvgIconComponent;
    export const NorthWestSharp: SvgIconComponent;
    export const NorthWestTwoTone: SvgIconComponent;
    export const NoSim: SvgIconComponent;
    export const NoSimOutlined: SvgIconComponent;
    export const NoSimRounded: SvgIconComponent;
    export const NoSimSharp: SvgIconComponent;
    export const NoSimTwoTone: SvgIconComponent;
    export const NoStroller: SvgIconComponent;
    export const NoStrollerOutlined: SvgIconComponent;
    export const NoStrollerRounded: SvgIconComponent;
    export const NoStrollerSharp: SvgIconComponent;
    export const NoStrollerTwoTone: SvgIconComponent;
    export const NotAccessible: SvgIconComponent;
    export const NotAccessibleOutlined: SvgIconComponent;
    export const NotAccessibleRounded: SvgIconComponent;
    export const NotAccessibleSharp: SvgIconComponent;
    export const NotAccessibleTwoTone: SvgIconComponent;
    export const Note: SvgIconComponent;
    export const NoteAdd: SvgIconComponent;
    export const NoteAddOutlined: SvgIconComponent;
    export const NoteAddRounded: SvgIconComponent;
    export const NoteAddSharp: SvgIconComponent;
    export const NoteAddTwoTone: SvgIconComponent;
    export const NoteAlt: SvgIconComponent;
    export const NoteAltOutlined: SvgIconComponent;
    export const NoteAltRounded: SvgIconComponent;
    export const NoteAltSharp: SvgIconComponent;
    export const NoteAltTwoTone: SvgIconComponent;
    export const NoteOutlined: SvgIconComponent;
    export const NoteRounded: SvgIconComponent;
    export const Notes: SvgIconComponent;
    export const NoteSharp: SvgIconComponent;
    export const NotesOutlined: SvgIconComponent;
    export const NotesRounded: SvgIconComponent;
    export const NotesSharp: SvgIconComponent;
    export const NotesTwoTone: SvgIconComponent;
    export const NoteTwoTone: SvgIconComponent;
    export const NotificationAdd: SvgIconComponent;
    export const NotificationAddOutlined: SvgIconComponent;
    export const NotificationAddRounded: SvgIconComponent;
    export const NotificationAddSharp: SvgIconComponent;
    export const NotificationAddTwoTone: SvgIconComponent;
    export const NotificationImportant: SvgIconComponent;
    export const NotificationImportantOutlined: SvgIconComponent;
    export const NotificationImportantRounded: SvgIconComponent;
    export const NotificationImportantSharp: SvgIconComponent;
    export const NotificationImportantTwoTone: SvgIconComponent;
    export const Notifications: SvgIconComponent;
    export const NotificationsActive: SvgIconComponent;
    export const NotificationsActiveOutlined: SvgIconComponent;
    export const NotificationsActiveRounded: SvgIconComponent;
    export const NotificationsActiveSharp: SvgIconComponent;
    export const NotificationsActiveTwoTone: SvgIconComponent;
    export const NotificationsNone: SvgIconComponent;
    export const NotificationsNoneOutlined: SvgIconComponent;
    export const NotificationsNoneRounded: SvgIconComponent;
    export const NotificationsNoneSharp: SvgIconComponent;
    export const NotificationsNoneTwoTone: SvgIconComponent;
    export const NotificationsOff: SvgIconComponent;
    export const NotificationsOffOutlined: SvgIconComponent;
    export const NotificationsOffRounded: SvgIconComponent;
    export const NotificationsOffSharp: SvgIconComponent;
    export const NotificationsOffTwoTone: SvgIconComponent;
    export const NotificationsOutlined: SvgIconComponent;
    export const NotificationsPaused: SvgIconComponent;
    export const NotificationsPausedOutlined: SvgIconComponent;
    export const NotificationsPausedRounded: SvgIconComponent;
    export const NotificationsPausedSharp: SvgIconComponent;
    export const NotificationsPausedTwoTone: SvgIconComponent;
    export const NotificationsRounded: SvgIconComponent;
    export const NotificationsSharp: SvgIconComponent;
    export const NotificationsTwoTone: SvgIconComponent;
    export const NotInterested: SvgIconComponent;
    export const NotInterestedOutlined: SvgIconComponent;
    export const NotInterestedRounded: SvgIconComponent;
    export const NotInterestedSharp: SvgIconComponent;
    export const NotInterestedTwoTone: SvgIconComponent;
    export const NotListedLocation: SvgIconComponent;
    export const NotListedLocationOutlined: SvgIconComponent;
    export const NotListedLocationRounded: SvgIconComponent;
    export const NotListedLocationSharp: SvgIconComponent;
    export const NotListedLocationTwoTone: SvgIconComponent;
    export const NoTransfer: SvgIconComponent;
    export const NoTransferOutlined: SvgIconComponent;
    export const NoTransferRounded: SvgIconComponent;
    export const NoTransferSharp: SvgIconComponent;
    export const NoTransferTwoTone: SvgIconComponent;
    export const NotStarted: SvgIconComponent;
    export const NotStartedOutlined: SvgIconComponent;
    export const NotStartedRounded: SvgIconComponent;
    export const NotStartedSharp: SvgIconComponent;
    export const NotStartedTwoTone: SvgIconComponent;
    export const Numbers: SvgIconComponent;
    export const NumbersOutlined: SvgIconComponent;
    export const NumbersRounded: SvgIconComponent;
    export const NumbersSharp: SvgIconComponent;
    export const NumbersTwoTone: SvgIconComponent;
    export const OfflineBolt: SvgIconComponent;
    export const OfflineBoltOutlined: SvgIconComponent;
    export const OfflineBoltRounded: SvgIconComponent;
    export const OfflineBoltSharp: SvgIconComponent;
    export const OfflineBoltTwoTone: SvgIconComponent;
    export const OfflinePin: SvgIconComponent;
    export const OfflinePinOutlined: SvgIconComponent;
    export const OfflinePinRounded: SvgIconComponent;
    export const OfflinePinSharp: SvgIconComponent;
    export const OfflinePinTwoTone: SvgIconComponent;
    export const OfflineShare: SvgIconComponent;
    export const OfflineShareOutlined: SvgIconComponent;
    export const OfflineShareRounded: SvgIconComponent;
    export const OfflineShareSharp: SvgIconComponent;
    export const OfflineShareTwoTone: SvgIconComponent;
    export const OndemandVideo: SvgIconComponent;
    export const OndemandVideoOutlined: SvgIconComponent;
    export const OndemandVideoRounded: SvgIconComponent;
    export const OndemandVideoSharp: SvgIconComponent;
    export const OndemandVideoTwoTone: SvgIconComponent;
    export const OneK: SvgIconComponent;
    export const OneKk: SvgIconComponent;
    export const OneKkOutlined: SvgIconComponent;
    export const OneKkRounded: SvgIconComponent;
    export const OneKkSharp: SvgIconComponent;
    export const OneKkTwoTone: SvgIconComponent;
    export const OneKOutlined: SvgIconComponent;
    export const OneKPlus: SvgIconComponent;
    export const OneKPlusOutlined: SvgIconComponent;
    export const OneKPlusRounded: SvgIconComponent;
    export const OneKPlusSharp: SvgIconComponent;
    export const OneKPlusTwoTone: SvgIconComponent;
    export const OneKRounded: SvgIconComponent;
    export const OneKSharp: SvgIconComponent;
    export const OneKTwoTone: SvgIconComponent;
    export const OnlinePrediction: SvgIconComponent;
    export const OnlinePredictionOutlined: SvgIconComponent;
    export const OnlinePredictionRounded: SvgIconComponent;
    export const OnlinePredictionSharp: SvgIconComponent;
    export const OnlinePredictionTwoTone: SvgIconComponent;
    export const Opacity: SvgIconComponent;
    export const OpacityOutlined: SvgIconComponent;
    export const OpacityRounded: SvgIconComponent;
    export const OpacitySharp: SvgIconComponent;
    export const OpacityTwoTone: SvgIconComponent;
    export const OpenInBrowser: SvgIconComponent;
    export const OpenInBrowserOutlined: SvgIconComponent;
    export const OpenInBrowserRounded: SvgIconComponent;
    export const OpenInBrowserSharp: SvgIconComponent;
    export const OpenInBrowserTwoTone: SvgIconComponent;
    export const OpenInFull: SvgIconComponent;
    export const OpenInFullOutlined: SvgIconComponent;
    export const OpenInFullRounded: SvgIconComponent;
    export const OpenInFullSharp: SvgIconComponent;
    export const OpenInFullTwoTone: SvgIconComponent;
    export const OpenInNew: SvgIconComponent;
    export const OpenInNewOff: SvgIconComponent;
    export const OpenInNewOffOutlined: SvgIconComponent;
    export const OpenInNewOffRounded: SvgIconComponent;
    export const OpenInNewOffSharp: SvgIconComponent;
    export const OpenInNewOffTwoTone: SvgIconComponent;
    export const OpenInNewOutlined: SvgIconComponent;
    export const OpenInNewRounded: SvgIconComponent;
    export const OpenInNewSharp: SvgIconComponent;
    export const OpenInNewTwoTone: SvgIconComponent;
    export const OpenWith: SvgIconComponent;
    export const OpenWithOutlined: SvgIconComponent;
    export const OpenWithRounded: SvgIconComponent;
    export const OpenWithSharp: SvgIconComponent;
    export const OpenWithTwoTone: SvgIconComponent;
    export const OtherHouses: SvgIconComponent;
    export const OtherHousesOutlined: SvgIconComponent;
    export const OtherHousesRounded: SvgIconComponent;
    export const OtherHousesSharp: SvgIconComponent;
    export const OtherHousesTwoTone: SvgIconComponent;
    export const Outbound: SvgIconComponent;
    export const OutboundOutlined: SvgIconComponent;
    export const OutboundRounded: SvgIconComponent;
    export const OutboundSharp: SvgIconComponent;
    export const OutboundTwoTone: SvgIconComponent;
    export const Outbox: SvgIconComponent;
    export const OutboxOutlined: SvgIconComponent;
    export const OutboxRounded: SvgIconComponent;
    export const OutboxSharp: SvgIconComponent;
    export const OutboxTwoTone: SvgIconComponent;
    export const OutdoorGrill: SvgIconComponent;
    export const OutdoorGrillOutlined: SvgIconComponent;
    export const OutdoorGrillRounded: SvgIconComponent;
    export const OutdoorGrillSharp: SvgIconComponent;
    export const OutdoorGrillTwoTone: SvgIconComponent;
    export const Outlet: SvgIconComponent;
    export const OutletOutlined: SvgIconComponent;
    export const OutletRounded: SvgIconComponent;
    export const OutletSharp: SvgIconComponent;
    export const OutletTwoTone: SvgIconComponent;
    export const OutlinedFlag: SvgIconComponent;
    export const OutlinedFlagOutlined: SvgIconComponent;
    export const OutlinedFlagRounded: SvgIconComponent;
    export const OutlinedFlagSharp: SvgIconComponent;
    export const OutlinedFlagTwoTone: SvgIconComponent;
    export const Padding: SvgIconComponent;
    export const PaddingOutlined: SvgIconComponent;
    export const PaddingRounded: SvgIconComponent;
    export const PaddingSharp: SvgIconComponent;
    export const PaddingTwoTone: SvgIconComponent;
    export const Pages: SvgIconComponent;
    export const PagesOutlined: SvgIconComponent;
    export const PagesRounded: SvgIconComponent;
    export const PagesSharp: SvgIconComponent;
    export const PagesTwoTone: SvgIconComponent;
    export const Pageview: SvgIconComponent;
    export const PageviewOutlined: SvgIconComponent;
    export const PageviewRounded: SvgIconComponent;
    export const PageviewSharp: SvgIconComponent;
    export const PageviewTwoTone: SvgIconComponent;
    export const Paid: SvgIconComponent;
    export const PaidOutlined: SvgIconComponent;
    export const PaidRounded: SvgIconComponent;
    export const PaidSharp: SvgIconComponent;
    export const PaidTwoTone: SvgIconComponent;
    export const Palette: SvgIconComponent;
    export const PaletteOutlined: SvgIconComponent;
    export const PaletteRounded: SvgIconComponent;
    export const PaletteSharp: SvgIconComponent;
    export const PaletteTwoTone: SvgIconComponent;
    export const Panorama: SvgIconComponent;
    export const PanoramaFishEye: SvgIconComponent;
    export const PanoramaFishEyeOutlined: SvgIconComponent;
    export const PanoramaFishEyeRounded: SvgIconComponent;
    export const PanoramaFishEyeSharp: SvgIconComponent;
    export const PanoramaFishEyeTwoTone: SvgIconComponent;
    export const PanoramaHorizontal: SvgIconComponent;
    export const PanoramaHorizontalOutlined: SvgIconComponent;
    export const PanoramaHorizontalRounded: SvgIconComponent;
    export const PanoramaHorizontalSelect: SvgIconComponent;
    export const PanoramaHorizontalSelectOutlined: SvgIconComponent;
    export const PanoramaHorizontalSelectRounded: SvgIconComponent;
    export const PanoramaHorizontalSelectSharp: SvgIconComponent;
    export const PanoramaHorizontalSelectTwoTone: SvgIconComponent;
    export const PanoramaHorizontalSharp: SvgIconComponent;
    export const PanoramaHorizontalTwoTone: SvgIconComponent;
    export const PanoramaOutlined: SvgIconComponent;
    export const PanoramaPhotosphere: SvgIconComponent;
    export const PanoramaPhotosphereOutlined: SvgIconComponent;
    export const PanoramaPhotosphereRounded: SvgIconComponent;
    export const PanoramaPhotosphereSelect: SvgIconComponent;
    export const PanoramaPhotosphereSelectOutlined: SvgIconComponent;
    export const PanoramaPhotosphereSelectRounded: SvgIconComponent;
    export const PanoramaPhotosphereSelectSharp: SvgIconComponent;
    export const PanoramaPhotosphereSelectTwoTone: SvgIconComponent;
    export const PanoramaPhotosphereSharp: SvgIconComponent;
    export const PanoramaPhotosphereTwoTone: SvgIconComponent;
    export const PanoramaRounded: SvgIconComponent;
    export const PanoramaSharp: SvgIconComponent;
    export const PanoramaTwoTone: SvgIconComponent;
    export const PanoramaVertical: SvgIconComponent;
    export const PanoramaVerticalOutlined: SvgIconComponent;
    export const PanoramaVerticalRounded: SvgIconComponent;
    export const PanoramaVerticalSelect: SvgIconComponent;
    export const PanoramaVerticalSelectOutlined: SvgIconComponent;
    export const PanoramaVerticalSelectRounded: SvgIconComponent;
    export const PanoramaVerticalSelectSharp: SvgIconComponent;
    export const PanoramaVerticalSelectTwoTone: SvgIconComponent;
    export const PanoramaVerticalSharp: SvgIconComponent;
    export const PanoramaVerticalTwoTone: SvgIconComponent;
    export const PanoramaWideAngle: SvgIconComponent;
    export const PanoramaWideAngleOutlined: SvgIconComponent;
    export const PanoramaWideAngleRounded: SvgIconComponent;
    export const PanoramaWideAngleSelect: SvgIconComponent;
    export const PanoramaWideAngleSelectOutlined: SvgIconComponent;
    export const PanoramaWideAngleSelectRounded: SvgIconComponent;
    export const PanoramaWideAngleSelectSharp: SvgIconComponent;
    export const PanoramaWideAngleSelectTwoTone: SvgIconComponent;
    export const PanoramaWideAngleSharp: SvgIconComponent;
    export const PanoramaWideAngleTwoTone: SvgIconComponent;
    export const PanTool: SvgIconComponent;
    export const PanToolAlt: SvgIconComponent;
    export const PanToolAltOutlined: SvgIconComponent;
    export const PanToolAltRounded: SvgIconComponent;
    export const PanToolAltSharp: SvgIconComponent;
    export const PanToolAltTwoTone: SvgIconComponent;
    export const PanToolOutlined: SvgIconComponent;
    export const PanToolRounded: SvgIconComponent;
    export const PanToolSharp: SvgIconComponent;
    export const PanToolTwoTone: SvgIconComponent;
    export const Paragliding: SvgIconComponent;
    export const ParaglidingOutlined: SvgIconComponent;
    export const ParaglidingRounded: SvgIconComponent;
    export const ParaglidingSharp: SvgIconComponent;
    export const ParaglidingTwoTone: SvgIconComponent;
    export const Park: SvgIconComponent;
    export const ParkOutlined: SvgIconComponent;
    export const ParkRounded: SvgIconComponent;
    export const ParkSharp: SvgIconComponent;
    export const ParkTwoTone: SvgIconComponent;
    export const PartyMode: SvgIconComponent;
    export const PartyModeOutlined: SvgIconComponent;
    export const PartyModeRounded: SvgIconComponent;
    export const PartyModeSharp: SvgIconComponent;
    export const PartyModeTwoTone: SvgIconComponent;
    export const Password: SvgIconComponent;
    export const PasswordOutlined: SvgIconComponent;
    export const PasswordRounded: SvgIconComponent;
    export const PasswordSharp: SvgIconComponent;
    export const PasswordTwoTone: SvgIconComponent;
    export const Pattern: SvgIconComponent;
    export const PatternOutlined: SvgIconComponent;
    export const PatternRounded: SvgIconComponent;
    export const PatternSharp: SvgIconComponent;
    export const PatternTwoTone: SvgIconComponent;
    export const Pause: SvgIconComponent;
    export const PauseCircle: SvgIconComponent;
    export const PauseCircleFilled: SvgIconComponent;
    export const PauseCircleFilledOutlined: SvgIconComponent;
    export const PauseCircleFilledRounded: SvgIconComponent;
    export const PauseCircleFilledSharp: SvgIconComponent;
    export const PauseCircleFilledTwoTone: SvgIconComponent;
    export const PauseCircleOutline: SvgIconComponent;
    export const PauseCircleOutlined: SvgIconComponent;
    export const PauseCircleOutlineOutlined: SvgIconComponent;
    export const PauseCircleOutlineRounded: SvgIconComponent;
    export const PauseCircleOutlineSharp: SvgIconComponent;
    export const PauseCircleOutlineTwoTone: SvgIconComponent;
    export const PauseCircleRounded: SvgIconComponent;
    export const PauseCircleSharp: SvgIconComponent;
    export const PauseCircleTwoTone: SvgIconComponent;
    export const PauseOutlined: SvgIconComponent;
    export const PausePresentation: SvgIconComponent;
    export const PausePresentationOutlined: SvgIconComponent;
    export const PausePresentationRounded: SvgIconComponent;
    export const PausePresentationSharp: SvgIconComponent;
    export const PausePresentationTwoTone: SvgIconComponent;
    export const PauseRounded: SvgIconComponent;
    export const PauseSharp: SvgIconComponent;
    export const PauseTwoTone: SvgIconComponent;
    export const Payment: SvgIconComponent;
    export const PaymentOutlined: SvgIconComponent;
    export const PaymentRounded: SvgIconComponent;
    export const Payments: SvgIconComponent;
    export const PaymentSharp: SvgIconComponent;
    export const PaymentsOutlined: SvgIconComponent;
    export const PaymentsRounded: SvgIconComponent;
    export const PaymentsSharp: SvgIconComponent;
    export const PaymentsTwoTone: SvgIconComponent;
    export const PaymentTwoTone: SvgIconComponent;
    export const PedalBike: SvgIconComponent;
    export const PedalBikeOutlined: SvgIconComponent;
    export const PedalBikeRounded: SvgIconComponent;
    export const PedalBikeSharp: SvgIconComponent;
    export const PedalBikeTwoTone: SvgIconComponent;
    export const Pending: SvgIconComponent;
    export const PendingActions: SvgIconComponent;
    export const PendingActionsOutlined: SvgIconComponent;
    export const PendingActionsRounded: SvgIconComponent;
    export const PendingActionsSharp: SvgIconComponent;
    export const PendingActionsTwoTone: SvgIconComponent;
    export const PendingOutlined: SvgIconComponent;
    export const PendingRounded: SvgIconComponent;
    export const PendingSharp: SvgIconComponent;
    export const PendingTwoTone: SvgIconComponent;
    export const Pentagon: SvgIconComponent;
    export const PentagonOutlined: SvgIconComponent;
    export const PentagonRounded: SvgIconComponent;
    export const PentagonSharp: SvgIconComponent;
    export const PentagonTwoTone: SvgIconComponent;
    export const People: SvgIconComponent;
    export const PeopleAlt: SvgIconComponent;
    export const PeopleAltOutlined: SvgIconComponent;
    export const PeopleAltRounded: SvgIconComponent;
    export const PeopleAltSharp: SvgIconComponent;
    export const PeopleAltTwoTone: SvgIconComponent;
    export const PeopleOutline: SvgIconComponent;
    export const PeopleOutlined: SvgIconComponent;
    export const PeopleOutlineOutlined: SvgIconComponent;
    export const PeopleOutlineRounded: SvgIconComponent;
    export const PeopleOutlineSharp: SvgIconComponent;
    export const PeopleOutlineTwoTone: SvgIconComponent;
    export const PeopleRounded: SvgIconComponent;
    export const PeopleSharp: SvgIconComponent;
    export const PeopleTwoTone: SvgIconComponent;
    export const Percent: SvgIconComponent;
    export const PercentOutlined: SvgIconComponent;
    export const PercentRounded: SvgIconComponent;
    export const PercentSharp: SvgIconComponent;
    export const PercentTwoTone: SvgIconComponent;
    export const PermCameraMic: SvgIconComponent;
    export const PermCameraMicOutlined: SvgIconComponent;
    export const PermCameraMicRounded: SvgIconComponent;
    export const PermCameraMicSharp: SvgIconComponent;
    export const PermCameraMicTwoTone: SvgIconComponent;
    export const PermContactCalendar: SvgIconComponent;
    export const PermContactCalendarOutlined: SvgIconComponent;
    export const PermContactCalendarRounded: SvgIconComponent;
    export const PermContactCalendarSharp: SvgIconComponent;
    export const PermContactCalendarTwoTone: SvgIconComponent;
    export const PermDataSetting: SvgIconComponent;
    export const PermDataSettingOutlined: SvgIconComponent;
    export const PermDataSettingRounded: SvgIconComponent;
    export const PermDataSettingSharp: SvgIconComponent;
    export const PermDataSettingTwoTone: SvgIconComponent;
    export const PermDeviceInformation: SvgIconComponent;
    export const PermDeviceInformationOutlined: SvgIconComponent;
    export const PermDeviceInformationRounded: SvgIconComponent;
    export const PermDeviceInformationSharp: SvgIconComponent;
    export const PermDeviceInformationTwoTone: SvgIconComponent;
    export const PermIdentity: SvgIconComponent;
    export const PermIdentityOutlined: SvgIconComponent;
    export const PermIdentityRounded: SvgIconComponent;
    export const PermIdentitySharp: SvgIconComponent;
    export const PermIdentityTwoTone: SvgIconComponent;
    export const PermMedia: SvgIconComponent;
    export const PermMediaOutlined: SvgIconComponent;
    export const PermMediaRounded: SvgIconComponent;
    export const PermMediaSharp: SvgIconComponent;
    export const PermMediaTwoTone: SvgIconComponent;
    export const PermPhoneMsg: SvgIconComponent;
    export const PermPhoneMsgOutlined: SvgIconComponent;
    export const PermPhoneMsgRounded: SvgIconComponent;
    export const PermPhoneMsgSharp: SvgIconComponent;
    export const PermPhoneMsgTwoTone: SvgIconComponent;
    export const PermScanWifi: SvgIconComponent;
    export const PermScanWifiOutlined: SvgIconComponent;
    export const PermScanWifiRounded: SvgIconComponent;
    export const PermScanWifiSharp: SvgIconComponent;
    export const PermScanWifiTwoTone: SvgIconComponent;
    export const Person: SvgIconComponent;
    export const PersonAdd: SvgIconComponent;
    export const PersonAddAlt: SvgIconComponent;
    export const PersonAddAlt1: SvgIconComponent;
    export const PersonAddAlt1Outlined: SvgIconComponent;
    export const PersonAddAlt1Rounded: SvgIconComponent;
    export const PersonAddAlt1Sharp: SvgIconComponent;
    export const PersonAddAlt1TwoTone: SvgIconComponent;
    export const PersonAddAltOutlined: SvgIconComponent;
    export const PersonAddAltRounded: SvgIconComponent;
    export const PersonAddAltSharp: SvgIconComponent;
    export const PersonAddAltTwoTone: SvgIconComponent;
    export const PersonAddDisabled: SvgIconComponent;
    export const PersonAddDisabledOutlined: SvgIconComponent;
    export const PersonAddDisabledRounded: SvgIconComponent;
    export const PersonAddDisabledSharp: SvgIconComponent;
    export const PersonAddDisabledTwoTone: SvgIconComponent;
    export const PersonAddOutlined: SvgIconComponent;
    export const PersonAddRounded: SvgIconComponent;
    export const PersonAddSharp: SvgIconComponent;
    export const PersonAddTwoTone: SvgIconComponent;
    export const PersonalVideo: SvgIconComponent;
    export const PersonalVideoOutlined: SvgIconComponent;
    export const PersonalVideoRounded: SvgIconComponent;
    export const PersonalVideoSharp: SvgIconComponent;
    export const PersonalVideoTwoTone: SvgIconComponent;
    export const PersonOff: SvgIconComponent;
    export const PersonOffOutlined: SvgIconComponent;
    export const PersonOffRounded: SvgIconComponent;
    export const PersonOffSharp: SvgIconComponent;
    export const PersonOffTwoTone: SvgIconComponent;
    export const PersonOutline: SvgIconComponent;
    export const PersonOutlined: SvgIconComponent;
    export const PersonOutlineOutlined: SvgIconComponent;
    export const PersonOutlineRounded: SvgIconComponent;
    export const PersonOutlineSharp: SvgIconComponent;
    export const PersonOutlineTwoTone: SvgIconComponent;
    export const PersonPin: SvgIconComponent;
    export const PersonPinCircle: SvgIconComponent;
    export const PersonPinCircleOutlined: SvgIconComponent;
    export const PersonPinCircleRounded: SvgIconComponent;
    export const PersonPinCircleSharp: SvgIconComponent;
    export const PersonPinCircleTwoTone: SvgIconComponent;
    export const PersonPinOutlined: SvgIconComponent;
    export const PersonPinRounded: SvgIconComponent;
    export const PersonPinSharp: SvgIconComponent;
    export const PersonPinTwoTone: SvgIconComponent;
    export const PersonRemove: SvgIconComponent;
    export const PersonRemoveAlt1: SvgIconComponent;
    export const PersonRemoveAlt1Outlined: SvgIconComponent;
    export const PersonRemoveAlt1Rounded: SvgIconComponent;
    export const PersonRemoveAlt1Sharp: SvgIconComponent;
    export const PersonRemoveAlt1TwoTone: SvgIconComponent;
    export const PersonRemoveOutlined: SvgIconComponent;
    export const PersonRemoveRounded: SvgIconComponent;
    export const PersonRemoveSharp: SvgIconComponent;
    export const PersonRemoveTwoTone: SvgIconComponent;
    export const PersonRounded: SvgIconComponent;
    export const PersonSearch: SvgIconComponent;
    export const PersonSearchOutlined: SvgIconComponent;
    export const PersonSearchRounded: SvgIconComponent;
    export const PersonSearchSharp: SvgIconComponent;
    export const PersonSearchTwoTone: SvgIconComponent;
    export const PersonSharp: SvgIconComponent;
    export const PersonTwoTone: SvgIconComponent;
    export const PestControl: SvgIconComponent;
    export const PestControlOutlined: SvgIconComponent;
    export const PestControlRodent: SvgIconComponent;
    export const PestControlRodentOutlined: SvgIconComponent;
    export const PestControlRodentRounded: SvgIconComponent;
    export const PestControlRodentSharp: SvgIconComponent;
    export const PestControlRodentTwoTone: SvgIconComponent;
    export const PestControlRounded: SvgIconComponent;
    export const PestControlSharp: SvgIconComponent;
    export const PestControlTwoTone: SvgIconComponent;
    export const Pets: SvgIconComponent;
    export const PetsOutlined: SvgIconComponent;
    export const PetsRounded: SvgIconComponent;
    export const PetsSharp: SvgIconComponent;
    export const PetsTwoTone: SvgIconComponent;
    export const Phishing: SvgIconComponent;
    export const PhishingOutlined: SvgIconComponent;
    export const PhishingRounded: SvgIconComponent;
    export const PhishingSharp: SvgIconComponent;
    export const PhishingTwoTone: SvgIconComponent;
    export const Phone: SvgIconComponent;
    export const PhoneAndroid: SvgIconComponent;
    export const PhoneAndroidOutlined: SvgIconComponent;
    export const PhoneAndroidRounded: SvgIconComponent;
    export const PhoneAndroidSharp: SvgIconComponent;
    export const PhoneAndroidTwoTone: SvgIconComponent;
    export const PhoneBluetoothSpeaker: SvgIconComponent;
    export const PhoneBluetoothSpeakerOutlined: SvgIconComponent;
    export const PhoneBluetoothSpeakerRounded: SvgIconComponent;
    export const PhoneBluetoothSpeakerSharp: SvgIconComponent;
    export const PhoneBluetoothSpeakerTwoTone: SvgIconComponent;
    export const PhoneCallback: SvgIconComponent;
    export const PhoneCallbackOutlined: SvgIconComponent;
    export const PhoneCallbackRounded: SvgIconComponent;
    export const PhoneCallbackSharp: SvgIconComponent;
    export const PhoneCallbackTwoTone: SvgIconComponent;
    export const PhoneDisabled: SvgIconComponent;
    export const PhoneDisabledOutlined: SvgIconComponent;
    export const PhoneDisabledRounded: SvgIconComponent;
    export const PhoneDisabledSharp: SvgIconComponent;
    export const PhoneDisabledTwoTone: SvgIconComponent;
    export const PhoneEnabled: SvgIconComponent;
    export const PhoneEnabledOutlined: SvgIconComponent;
    export const PhoneEnabledRounded: SvgIconComponent;
    export const PhoneEnabledSharp: SvgIconComponent;
    export const PhoneEnabledTwoTone: SvgIconComponent;
    export const PhoneForwarded: SvgIconComponent;
    export const PhoneForwardedOutlined: SvgIconComponent;
    export const PhoneForwardedRounded: SvgIconComponent;
    export const PhoneForwardedSharp: SvgIconComponent;
    export const PhoneForwardedTwoTone: SvgIconComponent;
    export const PhoneInTalk: SvgIconComponent;
    export const PhoneInTalkOutlined: SvgIconComponent;
    export const PhoneInTalkRounded: SvgIconComponent;
    export const PhoneInTalkSharp: SvgIconComponent;
    export const PhoneInTalkTwoTone: SvgIconComponent;
    export const PhoneIphone: SvgIconComponent;
    export const PhoneIphoneOutlined: SvgIconComponent;
    export const PhoneIphoneRounded: SvgIconComponent;
    export const PhoneIphoneSharp: SvgIconComponent;
    export const PhoneIphoneTwoTone: SvgIconComponent;
    export const Phonelink: SvgIconComponent;
    export const PhonelinkErase: SvgIconComponent;
    export const PhonelinkEraseOutlined: SvgIconComponent;
    export const PhonelinkEraseRounded: SvgIconComponent;
    export const PhonelinkEraseSharp: SvgIconComponent;
    export const PhonelinkEraseTwoTone: SvgIconComponent;
    export const PhonelinkLock: SvgIconComponent;
    export const PhonelinkLockOutlined: SvgIconComponent;
    export const PhonelinkLockRounded: SvgIconComponent;
    export const PhonelinkLockSharp: SvgIconComponent;
    export const PhonelinkLockTwoTone: SvgIconComponent;
    export const PhonelinkOff: SvgIconComponent;
    export const PhonelinkOffOutlined: SvgIconComponent;
    export const PhonelinkOffRounded: SvgIconComponent;
    export const PhonelinkOffSharp: SvgIconComponent;
    export const PhonelinkOffTwoTone: SvgIconComponent;
    export const PhonelinkOutlined: SvgIconComponent;
    export const PhonelinkRing: SvgIconComponent;
    export const PhonelinkRingOutlined: SvgIconComponent;
    export const PhonelinkRingRounded: SvgIconComponent;
    export const PhonelinkRingSharp: SvgIconComponent;
    export const PhonelinkRingTwoTone: SvgIconComponent;
    export const PhonelinkRounded: SvgIconComponent;
    export const PhonelinkSetup: SvgIconComponent;
    export const PhonelinkSetupOutlined: SvgIconComponent;
    export const PhonelinkSetupRounded: SvgIconComponent;
    export const PhonelinkSetupSharp: SvgIconComponent;
    export const PhonelinkSetupTwoTone: SvgIconComponent;
    export const PhonelinkSharp: SvgIconComponent;
    export const PhonelinkTwoTone: SvgIconComponent;
    export const PhoneLocked: SvgIconComponent;
    export const PhoneLockedOutlined: SvgIconComponent;
    export const PhoneLockedRounded: SvgIconComponent;
    export const PhoneLockedSharp: SvgIconComponent;
    export const PhoneLockedTwoTone: SvgIconComponent;
    export const PhoneMissed: SvgIconComponent;
    export const PhoneMissedOutlined: SvgIconComponent;
    export const PhoneMissedRounded: SvgIconComponent;
    export const PhoneMissedSharp: SvgIconComponent;
    export const PhoneMissedTwoTone: SvgIconComponent;
    export const PhoneOutlined: SvgIconComponent;
    export const PhonePaused: SvgIconComponent;
    export const PhonePausedOutlined: SvgIconComponent;
    export const PhonePausedRounded: SvgIconComponent;
    export const PhonePausedSharp: SvgIconComponent;
    export const PhonePausedTwoTone: SvgIconComponent;
    export const PhoneRounded: SvgIconComponent;
    export const PhoneSharp: SvgIconComponent;
    export const PhoneTwoTone: SvgIconComponent;
    export const Photo: SvgIconComponent;
    export const PhotoAlbum: SvgIconComponent;
    export const PhotoAlbumOutlined: SvgIconComponent;
    export const PhotoAlbumRounded: SvgIconComponent;
    export const PhotoAlbumSharp: SvgIconComponent;
    export const PhotoAlbumTwoTone: SvgIconComponent;
    export const PhotoCamera: SvgIconComponent;
    export const PhotoCameraBack: SvgIconComponent;
    export const PhotoCameraBackOutlined: SvgIconComponent;
    export const PhotoCameraBackRounded: SvgIconComponent;
    export const PhotoCameraBackSharp: SvgIconComponent;
    export const PhotoCameraBackTwoTone: SvgIconComponent;
    export const PhotoCameraFront: SvgIconComponent;
    export const PhotoCameraFrontOutlined: SvgIconComponent;
    export const PhotoCameraFrontRounded: SvgIconComponent;
    export const PhotoCameraFrontSharp: SvgIconComponent;
    export const PhotoCameraFrontTwoTone: SvgIconComponent;
    export const PhotoCameraOutlined: SvgIconComponent;
    export const PhotoCameraRounded: SvgIconComponent;
    export const PhotoCameraSharp: SvgIconComponent;
    export const PhotoCameraTwoTone: SvgIconComponent;
    export const PhotoFilter: SvgIconComponent;
    export const PhotoFilterOutlined: SvgIconComponent;
    export const PhotoFilterRounded: SvgIconComponent;
    export const PhotoFilterSharp: SvgIconComponent;
    export const PhotoFilterTwoTone: SvgIconComponent;
    export const PhotoLibrary: SvgIconComponent;
    export const PhotoLibraryOutlined: SvgIconComponent;
    export const PhotoLibraryRounded: SvgIconComponent;
    export const PhotoLibrarySharp: SvgIconComponent;
    export const PhotoLibraryTwoTone: SvgIconComponent;
    export const PhotoOutlined: SvgIconComponent;
    export const PhotoRounded: SvgIconComponent;
    export const PhotoSharp: SvgIconComponent;
    export const PhotoSizeSelectActual: SvgIconComponent;
    export const PhotoSizeSelectActualOutlined: SvgIconComponent;
    export const PhotoSizeSelectActualRounded: SvgIconComponent;
    export const PhotoSizeSelectActualSharp: SvgIconComponent;
    export const PhotoSizeSelectActualTwoTone: SvgIconComponent;
    export const PhotoSizeSelectLarge: SvgIconComponent;
    export const PhotoSizeSelectLargeOutlined: SvgIconComponent;
    export const PhotoSizeSelectLargeRounded: SvgIconComponent;
    export const PhotoSizeSelectLargeSharp: SvgIconComponent;
    export const PhotoSizeSelectLargeTwoTone: SvgIconComponent;
    export const PhotoSizeSelectSmall: SvgIconComponent;
    export const PhotoSizeSelectSmallOutlined: SvgIconComponent;
    export const PhotoSizeSelectSmallRounded: SvgIconComponent;
    export const PhotoSizeSelectSmallSharp: SvgIconComponent;
    export const PhotoSizeSelectSmallTwoTone: SvgIconComponent;
    export const PhotoTwoTone: SvgIconComponent;
    export const Php: SvgIconComponent;
    export const PhpOutlined: SvgIconComponent;
    export const PhpRounded: SvgIconComponent;
    export const PhpSharp: SvgIconComponent;
    export const PhpTwoTone: SvgIconComponent;
    export const Piano: SvgIconComponent;
    export const PianoOff: SvgIconComponent;
    export const PianoOffOutlined: SvgIconComponent;
    export const PianoOffRounded: SvgIconComponent;
    export const PianoOffSharp: SvgIconComponent;
    export const PianoOffTwoTone: SvgIconComponent;
    export const PianoOutlined: SvgIconComponent;
    export const PianoRounded: SvgIconComponent;
    export const PianoSharp: SvgIconComponent;
    export const PianoTwoTone: SvgIconComponent;
    export const PictureAsPdf: SvgIconComponent;
    export const PictureAsPdfOutlined: SvgIconComponent;
    export const PictureAsPdfRounded: SvgIconComponent;
    export const PictureAsPdfSharp: SvgIconComponent;
    export const PictureAsPdfTwoTone: SvgIconComponent;
    export const PictureInPicture: SvgIconComponent;
    export const PictureInPictureAlt: SvgIconComponent;
    export const PictureInPictureAltOutlined: SvgIconComponent;
    export const PictureInPictureAltRounded: SvgIconComponent;
    export const PictureInPictureAltSharp: SvgIconComponent;
    export const PictureInPictureAltTwoTone: SvgIconComponent;
    export const PictureInPictureOutlined: SvgIconComponent;
    export const PictureInPictureRounded: SvgIconComponent;
    export const PictureInPictureSharp: SvgIconComponent;
    export const PictureInPictureTwoTone: SvgIconComponent;
    export const PieChart: SvgIconComponent;
    export const PieChartOutline: SvgIconComponent;
    export const PieChartOutlined: SvgIconComponent;
    export const PieChartOutlineOutlined: SvgIconComponent;
    export const PieChartOutlineRounded: SvgIconComponent;
    export const PieChartOutlineSharp: SvgIconComponent;
    export const PieChartOutlineTwoTone: SvgIconComponent;
    export const PieChartRounded: SvgIconComponent;
    export const PieChartSharp: SvgIconComponent;
    export const PieChartTwoTone: SvgIconComponent;
    export const Pin: SvgIconComponent;
    export const Pinch: SvgIconComponent;
    export const PinchOutlined: SvgIconComponent;
    export const PinchRounded: SvgIconComponent;
    export const PinchSharp: SvgIconComponent;
    export const PinchTwoTone: SvgIconComponent;
    export const PinDrop: SvgIconComponent;
    export const PinDropOutlined: SvgIconComponent;
    export const PinDropRounded: SvgIconComponent;
    export const PinDropSharp: SvgIconComponent;
    export const PinDropTwoTone: SvgIconComponent;
    export const PinOutlined: SvgIconComponent;
    export const PinRounded: SvgIconComponent;
    export const PinSharp: SvgIconComponent;
    export const Pinterest: SvgIconComponent;
    export const PinTwoTone: SvgIconComponent;
    export const PivotTableChart: SvgIconComponent;
    export const PivotTableChartOutlined: SvgIconComponent;
    export const PivotTableChartRounded: SvgIconComponent;
    export const PivotTableChartSharp: SvgIconComponent;
    export const PivotTableChartTwoTone: SvgIconComponent;
    export const Pix: SvgIconComponent;
    export const PixOutlined: SvgIconComponent;
    export const PixRounded: SvgIconComponent;
    export const PixSharp: SvgIconComponent;
    export const PixTwoTone: SvgIconComponent;
    export const Place: SvgIconComponent;
    export const PlaceOutlined: SvgIconComponent;
    export const PlaceRounded: SvgIconComponent;
    export const PlaceSharp: SvgIconComponent;
    export const PlaceTwoTone: SvgIconComponent;
    export const Plagiarism: SvgIconComponent;
    export const PlagiarismOutlined: SvgIconComponent;
    export const PlagiarismRounded: SvgIconComponent;
    export const PlagiarismSharp: SvgIconComponent;
    export const PlagiarismTwoTone: SvgIconComponent;
    export const PlayArrow: SvgIconComponent;
    export const PlayArrowOutlined: SvgIconComponent;
    export const PlayArrowRounded: SvgIconComponent;
    export const PlayArrowSharp: SvgIconComponent;
    export const PlayArrowTwoTone: SvgIconComponent;
    export const PlayCircle: SvgIconComponent;
    export const PlayCircleFilled: SvgIconComponent;
    export const PlayCircleFilledOutlined: SvgIconComponent;
    export const PlayCircleFilledRounded: SvgIconComponent;
    export const PlayCircleFilledSharp: SvgIconComponent;
    export const PlayCircleFilledTwoTone: SvgIconComponent;
    export const PlayCircleFilledWhite: SvgIconComponent;
    export const PlayCircleFilledWhiteOutlined: SvgIconComponent;
    export const PlayCircleFilledWhiteRounded: SvgIconComponent;
    export const PlayCircleFilledWhiteSharp: SvgIconComponent;
    export const PlayCircleFilledWhiteTwoTone: SvgIconComponent;
    export const PlayCircleOutline: SvgIconComponent;
    export const PlayCircleOutlined: SvgIconComponent;
    export const PlayCircleOutlineOutlined: SvgIconComponent;
    export const PlayCircleOutlineRounded: SvgIconComponent;
    export const PlayCircleOutlineSharp: SvgIconComponent;
    export const PlayCircleOutlineTwoTone: SvgIconComponent;
    export const PlayCircleRounded: SvgIconComponent;
    export const PlayCircleSharp: SvgIconComponent;
    export const PlayCircleTwoTone: SvgIconComponent;
    export const PlayDisabled: SvgIconComponent;
    export const PlayDisabledOutlined: SvgIconComponent;
    export const PlayDisabledRounded: SvgIconComponent;
    export const PlayDisabledSharp: SvgIconComponent;
    export const PlayDisabledTwoTone: SvgIconComponent;
    export const PlayForWork: SvgIconComponent;
    export const PlayForWorkOutlined: SvgIconComponent;
    export const PlayForWorkRounded: SvgIconComponent;
    export const PlayForWorkSharp: SvgIconComponent;
    export const PlayForWorkTwoTone: SvgIconComponent;
    export const PlayLesson: SvgIconComponent;
    export const PlayLessonOutlined: SvgIconComponent;
    export const PlayLessonRounded: SvgIconComponent;
    export const PlayLessonSharp: SvgIconComponent;
    export const PlayLessonTwoTone: SvgIconComponent;
    export const PlaylistAdd: SvgIconComponent;
    export const PlaylistAddCheck: SvgIconComponent;
    export const PlaylistAddCheckCircle: SvgIconComponent;
    export const PlaylistAddCheckCircleOutlined: SvgIconComponent;
    export const PlaylistAddCheckCircleRounded: SvgIconComponent;
    export const PlaylistAddCheckCircleSharp: SvgIconComponent;
    export const PlaylistAddCheckCircleTwoTone: SvgIconComponent;
    export const PlaylistAddCheckOutlined: SvgIconComponent;
    export const PlaylistAddCheckRounded: SvgIconComponent;
    export const PlaylistAddCheckSharp: SvgIconComponent;
    export const PlaylistAddCheckTwoTone: SvgIconComponent;
    export const PlaylistAddCircle: SvgIconComponent;
    export const PlaylistAddCircleOutlined: SvgIconComponent;
    export const PlaylistAddCircleRounded: SvgIconComponent;
    export const PlaylistAddCircleSharp: SvgIconComponent;
    export const PlaylistAddCircleTwoTone: SvgIconComponent;
    export const PlaylistAddOutlined: SvgIconComponent;
    export const PlaylistAddRounded: SvgIconComponent;
    export const PlaylistAddSharp: SvgIconComponent;
    export const PlaylistAddTwoTone: SvgIconComponent;
    export const PlaylistPlay: SvgIconComponent;
    export const PlaylistPlayOutlined: SvgIconComponent;
    export const PlaylistPlayRounded: SvgIconComponent;
    export const PlaylistPlaySharp: SvgIconComponent;
    export const PlaylistPlayTwoTone: SvgIconComponent;
    export const PlaylistRemove: SvgIconComponent;
    export const PlaylistRemoveOutlined: SvgIconComponent;
    export const PlaylistRemoveRounded: SvgIconComponent;
    export const PlaylistRemoveSharp: SvgIconComponent;
    export const PlaylistRemoveTwoTone: SvgIconComponent;
    export const Plumbing: SvgIconComponent;
    export const PlumbingOutlined: SvgIconComponent;
    export const PlumbingRounded: SvgIconComponent;
    export const PlumbingSharp: SvgIconComponent;
    export const PlumbingTwoTone: SvgIconComponent;
    export const PlusOne: SvgIconComponent;
    export const PlusOneOutlined: SvgIconComponent;
    export const PlusOneRounded: SvgIconComponent;
    export const PlusOneSharp: SvgIconComponent;
    export const PlusOneTwoTone: SvgIconComponent;
    export const Podcasts: SvgIconComponent;
    export const PodcastsOutlined: SvgIconComponent;
    export const PodcastsRounded: SvgIconComponent;
    export const PodcastsSharp: SvgIconComponent;
    export const PodcastsTwoTone: SvgIconComponent;
    export const PointOfSale: SvgIconComponent;
    export const PointOfSaleOutlined: SvgIconComponent;
    export const PointOfSaleRounded: SvgIconComponent;
    export const PointOfSaleSharp: SvgIconComponent;
    export const PointOfSaleTwoTone: SvgIconComponent;
    export const Policy: SvgIconComponent;
    export const PolicyOutlined: SvgIconComponent;
    export const PolicyRounded: SvgIconComponent;
    export const PolicySharp: SvgIconComponent;
    export const PolicyTwoTone: SvgIconComponent;
    export const Poll: SvgIconComponent;
    export const PollOutlined: SvgIconComponent;
    export const PollRounded: SvgIconComponent;
    export const PollSharp: SvgIconComponent;
    export const PollTwoTone: SvgIconComponent;
    export const Polyline: SvgIconComponent;
    export const PolylineOutlined: SvgIconComponent;
    export const PolylineRounded: SvgIconComponent;
    export const PolylineSharp: SvgIconComponent;
    export const PolylineTwoTone: SvgIconComponent;
    export const Pool: SvgIconComponent;
    export const PoolOutlined: SvgIconComponent;
    export const PoolRounded: SvgIconComponent;
    export const PoolSharp: SvgIconComponent;
    export const PoolTwoTone: SvgIconComponent;
    export const PortableWifiOff: SvgIconComponent;
    export const PortableWifiOffOutlined: SvgIconComponent;
    export const PortableWifiOffRounded: SvgIconComponent;
    export const PortableWifiOffSharp: SvgIconComponent;
    export const PortableWifiOffTwoTone: SvgIconComponent;
    export const Portrait: SvgIconComponent;
    export const PortraitOutlined: SvgIconComponent;
    export const PortraitRounded: SvgIconComponent;
    export const PortraitSharp: SvgIconComponent;
    export const PortraitTwoTone: SvgIconComponent;
    export const PostAdd: SvgIconComponent;
    export const PostAddOutlined: SvgIconComponent;
    export const PostAddRounded: SvgIconComponent;
    export const PostAddSharp: SvgIconComponent;
    export const PostAddTwoTone: SvgIconComponent;
    export const Power: SvgIconComponent;
    export const PowerInput: SvgIconComponent;
    export const PowerInputOutlined: SvgIconComponent;
    export const PowerInputRounded: SvgIconComponent;
    export const PowerInputSharp: SvgIconComponent;
    export const PowerInputTwoTone: SvgIconComponent;
    export const PowerOff: SvgIconComponent;
    export const PowerOffOutlined: SvgIconComponent;
    export const PowerOffRounded: SvgIconComponent;
    export const PowerOffSharp: SvgIconComponent;
    export const PowerOffTwoTone: SvgIconComponent;
    export const PowerOutlined: SvgIconComponent;
    export const PowerRounded: SvgIconComponent;
    export const PowerSettingsNew: SvgIconComponent;
    export const PowerSettingsNewOutlined: SvgIconComponent;
    export const PowerSettingsNewRounded: SvgIconComponent;
    export const PowerSettingsNewSharp: SvgIconComponent;
    export const PowerSettingsNewTwoTone: SvgIconComponent;
    export const PowerSharp: SvgIconComponent;
    export const PowerTwoTone: SvgIconComponent;
    export const PrecisionManufacturing: SvgIconComponent;
    export const PrecisionManufacturingOutlined: SvgIconComponent;
    export const PrecisionManufacturingRounded: SvgIconComponent;
    export const PrecisionManufacturingSharp: SvgIconComponent;
    export const PrecisionManufacturingTwoTone: SvgIconComponent;
    export const PregnantWoman: SvgIconComponent;
    export const PregnantWomanOutlined: SvgIconComponent;
    export const PregnantWomanRounded: SvgIconComponent;
    export const PregnantWomanSharp: SvgIconComponent;
    export const PregnantWomanTwoTone: SvgIconComponent;
    export const PresentToAll: SvgIconComponent;
    export const PresentToAllOutlined: SvgIconComponent;
    export const PresentToAllRounded: SvgIconComponent;
    export const PresentToAllSharp: SvgIconComponent;
    export const PresentToAllTwoTone: SvgIconComponent;
    export const Preview: SvgIconComponent;
    export const PreviewOutlined: SvgIconComponent;
    export const PreviewRounded: SvgIconComponent;
    export const PreviewSharp: SvgIconComponent;
    export const PreviewTwoTone: SvgIconComponent;
    export const PriceChange: SvgIconComponent;
    export const PriceChangeOutlined: SvgIconComponent;
    export const PriceChangeRounded: SvgIconComponent;
    export const PriceChangeSharp: SvgIconComponent;
    export const PriceChangeTwoTone: SvgIconComponent;
    export const PriceCheck: SvgIconComponent;
    export const PriceCheckOutlined: SvgIconComponent;
    export const PriceCheckRounded: SvgIconComponent;
    export const PriceCheckSharp: SvgIconComponent;
    export const PriceCheckTwoTone: SvgIconComponent;
    export const Print: SvgIconComponent;
    export const PrintDisabled: SvgIconComponent;
    export const PrintDisabledOutlined: SvgIconComponent;
    export const PrintDisabledRounded: SvgIconComponent;
    export const PrintDisabledSharp: SvgIconComponent;
    export const PrintDisabledTwoTone: SvgIconComponent;
    export const PrintOutlined: SvgIconComponent;
    export const PrintRounded: SvgIconComponent;
    export const PrintSharp: SvgIconComponent;
    export const PrintTwoTone: SvgIconComponent;
    export const PriorityHigh: SvgIconComponent;
    export const PriorityHighOutlined: SvgIconComponent;
    export const PriorityHighRounded: SvgIconComponent;
    export const PriorityHighSharp: SvgIconComponent;
    export const PriorityHighTwoTone: SvgIconComponent;
    export const PrivacyTip: SvgIconComponent;
    export const PrivacyTipOutlined: SvgIconComponent;
    export const PrivacyTipRounded: SvgIconComponent;
    export const PrivacyTipSharp: SvgIconComponent;
    export const PrivacyTipTwoTone: SvgIconComponent;
    export const ProductionQuantityLimits: SvgIconComponent;
    export const ProductionQuantityLimitsOutlined: SvgIconComponent;
    export const ProductionQuantityLimitsRounded: SvgIconComponent;
    export const ProductionQuantityLimitsSharp: SvgIconComponent;
    export const ProductionQuantityLimitsTwoTone: SvgIconComponent;
    export const Psychology: SvgIconComponent;
    export const PsychologyOutlined: SvgIconComponent;
    export const PsychologyRounded: SvgIconComponent;
    export const PsychologySharp: SvgIconComponent;
    export const PsychologyTwoTone: SvgIconComponent;
    export const Public: SvgIconComponent;
    export const PublicOff: SvgIconComponent;
    export const PublicOffOutlined: SvgIconComponent;
    export const PublicOffRounded: SvgIconComponent;
    export const PublicOffSharp: SvgIconComponent;
    export const PublicOffTwoTone: SvgIconComponent;
    export const PublicOutlined: SvgIconComponent;
    export const PublicRounded: SvgIconComponent;
    export const PublicSharp: SvgIconComponent;
    export const PublicTwoTone: SvgIconComponent;
    export const Publish: SvgIconComponent;
    export const PublishedWithChanges: SvgIconComponent;
    export const PublishedWithChangesOutlined: SvgIconComponent;
    export const PublishedWithChangesRounded: SvgIconComponent;
    export const PublishedWithChangesSharp: SvgIconComponent;
    export const PublishedWithChangesTwoTone: SvgIconComponent;
    export const PublishOutlined: SvgIconComponent;
    export const PublishRounded: SvgIconComponent;
    export const PublishSharp: SvgIconComponent;
    export const PublishTwoTone: SvgIconComponent;
    export const PunchClock: SvgIconComponent;
    export const PunchClockOutlined: SvgIconComponent;
    export const PunchClockRounded: SvgIconComponent;
    export const PunchClockSharp: SvgIconComponent;
    export const PunchClockTwoTone: SvgIconComponent;
    export const PushPin: SvgIconComponent;
    export const PushPinOutlined: SvgIconComponent;
    export const PushPinRounded: SvgIconComponent;
    export const PushPinSharp: SvgIconComponent;
    export const PushPinTwoTone: SvgIconComponent;
    export const QrCode: SvgIconComponent;
    export const QrCode2: SvgIconComponent;
    export const QrCode2Outlined: SvgIconComponent;
    export const QrCode2Rounded: SvgIconComponent;
    export const QrCode2Sharp: SvgIconComponent;
    export const QrCode2TwoTone: SvgIconComponent;
    export const QrCodeOutlined: SvgIconComponent;
    export const QrCodeRounded: SvgIconComponent;
    export const QrCodeScanner: SvgIconComponent;
    export const QrCodeScannerOutlined: SvgIconComponent;
    export const QrCodeScannerRounded: SvgIconComponent;
    export const QrCodeScannerSharp: SvgIconComponent;
    export const QrCodeScannerTwoTone: SvgIconComponent;
    export const QrCodeSharp: SvgIconComponent;
    export const QrCodeTwoTone: SvgIconComponent;
    export const QueryBuilder: SvgIconComponent;
    export const QueryBuilderOutlined: SvgIconComponent;
    export const QueryBuilderRounded: SvgIconComponent;
    export const QueryBuilderSharp: SvgIconComponent;
    export const QueryBuilderTwoTone: SvgIconComponent;
    export const QueryStats: SvgIconComponent;
    export const QueryStatsOutlined: SvgIconComponent;
    export const QueryStatsRounded: SvgIconComponent;
    export const QueryStatsSharp: SvgIconComponent;
    export const QueryStatsTwoTone: SvgIconComponent;
    export const QuestionAnswer: SvgIconComponent;
    export const QuestionAnswerOutlined: SvgIconComponent;
    export const QuestionAnswerRounded: SvgIconComponent;
    export const QuestionAnswerSharp: SvgIconComponent;
    export const QuestionAnswerTwoTone: SvgIconComponent;
    export const QuestionMark: SvgIconComponent;
    export const QuestionMarkOutlined: SvgIconComponent;
    export const QuestionMarkRounded: SvgIconComponent;
    export const QuestionMarkSharp: SvgIconComponent;
    export const QuestionMarkTwoTone: SvgIconComponent;
    export const Queue: SvgIconComponent;
    export const QueueMusic: SvgIconComponent;
    export const QueueMusicOutlined: SvgIconComponent;
    export const QueueMusicRounded: SvgIconComponent;
    export const QueueMusicSharp: SvgIconComponent;
    export const QueueMusicTwoTone: SvgIconComponent;
    export const QueueOutlined: SvgIconComponent;
    export const QueuePlayNext: SvgIconComponent;
    export const QueuePlayNextOutlined: SvgIconComponent;
    export const QueuePlayNextRounded: SvgIconComponent;
    export const QueuePlayNextSharp: SvgIconComponent;
    export const QueuePlayNextTwoTone: SvgIconComponent;
    export const QueueRounded: SvgIconComponent;
    export const QueueSharp: SvgIconComponent;
    export const QueueTwoTone: SvgIconComponent;
    export const Quickreply: SvgIconComponent;
    export const QuickreplyOutlined: SvgIconComponent;
    export const QuickreplyRounded: SvgIconComponent;
    export const QuickreplySharp: SvgIconComponent;
    export const QuickreplyTwoTone: SvgIconComponent;
    export const Quiz: SvgIconComponent;
    export const QuizOutlined: SvgIconComponent;
    export const QuizRounded: SvgIconComponent;
    export const QuizSharp: SvgIconComponent;
    export const QuizTwoTone: SvgIconComponent;
    export const Radar: SvgIconComponent;
    export const RadarOutlined: SvgIconComponent;
    export const RadarRounded: SvgIconComponent;
    export const RadarSharp: SvgIconComponent;
    export const RadarTwoTone: SvgIconComponent;
    export const Radio: SvgIconComponent;
    export const RadioButtonChecked: SvgIconComponent;
    export const RadioButtonCheckedOutlined: SvgIconComponent;
    export const RadioButtonCheckedRounded: SvgIconComponent;
    export const RadioButtonCheckedSharp: SvgIconComponent;
    export const RadioButtonCheckedTwoTone: SvgIconComponent;
    export const RadioButtonUnchecked: SvgIconComponent;
    export const RadioButtonUncheckedOutlined: SvgIconComponent;
    export const RadioButtonUncheckedRounded: SvgIconComponent;
    export const RadioButtonUncheckedSharp: SvgIconComponent;
    export const RadioButtonUncheckedTwoTone: SvgIconComponent;
    export const RadioOutlined: SvgIconComponent;
    export const RadioRounded: SvgIconComponent;
    export const RadioSharp: SvgIconComponent;
    export const RadioTwoTone: SvgIconComponent;
    export const RailwayAlert: SvgIconComponent;
    export const RailwayAlertOutlined: SvgIconComponent;
    export const RailwayAlertRounded: SvgIconComponent;
    export const RailwayAlertSharp: SvgIconComponent;
    export const RailwayAlertTwoTone: SvgIconComponent;
    export const RamenDining: SvgIconComponent;
    export const RamenDiningOutlined: SvgIconComponent;
    export const RamenDiningRounded: SvgIconComponent;
    export const RamenDiningSharp: SvgIconComponent;
    export const RamenDiningTwoTone: SvgIconComponent;
    export const RampLeft: SvgIconComponent;
    export const RampLeftOutlined: SvgIconComponent;
    export const RampLeftRounded: SvgIconComponent;
    export const RampLeftSharp: SvgIconComponent;
    export const RampLeftTwoTone: SvgIconComponent;
    export const RampRight: SvgIconComponent;
    export const RampRightOutlined: SvgIconComponent;
    export const RampRightRounded: SvgIconComponent;
    export const RampRightSharp: SvgIconComponent;
    export const RampRightTwoTone: SvgIconComponent;
    export const RateReview: SvgIconComponent;
    export const RateReviewOutlined: SvgIconComponent;
    export const RateReviewRounded: SvgIconComponent;
    export const RateReviewSharp: SvgIconComponent;
    export const RateReviewTwoTone: SvgIconComponent;
    export const RawOff: SvgIconComponent;
    export const RawOffOutlined: SvgIconComponent;
    export const RawOffRounded: SvgIconComponent;
    export const RawOffSharp: SvgIconComponent;
    export const RawOffTwoTone: SvgIconComponent;
    export const RawOn: SvgIconComponent;
    export const RawOnOutlined: SvgIconComponent;
    export const RawOnRounded: SvgIconComponent;
    export const RawOnSharp: SvgIconComponent;
    export const RawOnTwoTone: SvgIconComponent;
    export const ReadMore: SvgIconComponent;
    export const ReadMoreOutlined: SvgIconComponent;
    export const ReadMoreRounded: SvgIconComponent;
    export const ReadMoreSharp: SvgIconComponent;
    export const ReadMoreTwoTone: SvgIconComponent;
    export const Receipt: SvgIconComponent;
    export const ReceiptLong: SvgIconComponent;
    export const ReceiptLongOutlined: SvgIconComponent;
    export const ReceiptLongRounded: SvgIconComponent;
    export const ReceiptLongSharp: SvgIconComponent;
    export const ReceiptLongTwoTone: SvgIconComponent;
    export const ReceiptOutlined: SvgIconComponent;
    export const ReceiptRounded: SvgIconComponent;
    export const ReceiptSharp: SvgIconComponent;
    export const ReceiptTwoTone: SvgIconComponent;
    export const RecentActors: SvgIconComponent;
    export const RecentActorsOutlined: SvgIconComponent;
    export const RecentActorsRounded: SvgIconComponent;
    export const RecentActorsSharp: SvgIconComponent;
    export const RecentActorsTwoTone: SvgIconComponent;
    export const Recommend: SvgIconComponent;
    export const RecommendOutlined: SvgIconComponent;
    export const RecommendRounded: SvgIconComponent;
    export const RecommendSharp: SvgIconComponent;
    export const RecommendTwoTone: SvgIconComponent;
    export const RecordVoiceOver: SvgIconComponent;
    export const RecordVoiceOverOutlined: SvgIconComponent;
    export const RecordVoiceOverRounded: SvgIconComponent;
    export const RecordVoiceOverSharp: SvgIconComponent;
    export const RecordVoiceOverTwoTone: SvgIconComponent;
    export const Rectangle: SvgIconComponent;
    export const RectangleOutlined: SvgIconComponent;
    export const RectangleRounded: SvgIconComponent;
    export const RectangleSharp: SvgIconComponent;
    export const RectangleTwoTone: SvgIconComponent;
    export const Reddit: SvgIconComponent;
    export const Redeem: SvgIconComponent;
    export const RedeemOutlined: SvgIconComponent;
    export const RedeemRounded: SvgIconComponent;
    export const RedeemSharp: SvgIconComponent;
    export const RedeemTwoTone: SvgIconComponent;
    export const Redo: SvgIconComponent;
    export const RedoOutlined: SvgIconComponent;
    export const RedoRounded: SvgIconComponent;
    export const RedoSharp: SvgIconComponent;
    export const RedoTwoTone: SvgIconComponent;
    export const ReduceCapacity: SvgIconComponent;
    export const ReduceCapacityOutlined: SvgIconComponent;
    export const ReduceCapacityRounded: SvgIconComponent;
    export const ReduceCapacitySharp: SvgIconComponent;
    export const ReduceCapacityTwoTone: SvgIconComponent;
    export const Refresh: SvgIconComponent;
    export const RefreshOutlined: SvgIconComponent;
    export const RefreshRounded: SvgIconComponent;
    export const RefreshSharp: SvgIconComponent;
    export const RefreshTwoTone: SvgIconComponent;
    export const RememberMe: SvgIconComponent;
    export const RememberMeOutlined: SvgIconComponent;
    export const RememberMeRounded: SvgIconComponent;
    export const RememberMeSharp: SvgIconComponent;
    export const RememberMeTwoTone: SvgIconComponent;
    export const Remove: SvgIconComponent;
    export const RemoveCircle: SvgIconComponent;
    export const RemoveCircleOutline: SvgIconComponent;
    export const RemoveCircleOutlined: SvgIconComponent;
    export const RemoveCircleOutlineOutlined: SvgIconComponent;
    export const RemoveCircleOutlineRounded: SvgIconComponent;
    export const RemoveCircleOutlineSharp: SvgIconComponent;
    export const RemoveCircleOutlineTwoTone: SvgIconComponent;
    export const RemoveCircleRounded: SvgIconComponent;
    export const RemoveCircleSharp: SvgIconComponent;
    export const RemoveCircleTwoTone: SvgIconComponent;
    export const RemoveDone: SvgIconComponent;
    export const RemoveDoneOutlined: SvgIconComponent;
    export const RemoveDoneRounded: SvgIconComponent;
    export const RemoveDoneSharp: SvgIconComponent;
    export const RemoveDoneTwoTone: SvgIconComponent;
    export const RemoveFromQueue: SvgIconComponent;
    export const RemoveFromQueueOutlined: SvgIconComponent;
    export const RemoveFromQueueRounded: SvgIconComponent;
    export const RemoveFromQueueSharp: SvgIconComponent;
    export const RemoveFromQueueTwoTone: SvgIconComponent;
    export const RemoveModerator: SvgIconComponent;
    export const RemoveModeratorOutlined: SvgIconComponent;
    export const RemoveModeratorRounded: SvgIconComponent;
    export const RemoveModeratorSharp: SvgIconComponent;
    export const RemoveModeratorTwoTone: SvgIconComponent;
    export const RemoveOutlined: SvgIconComponent;
    export const RemoveRedEye: SvgIconComponent;
    export const RemoveRedEyeOutlined: SvgIconComponent;
    export const RemoveRedEyeRounded: SvgIconComponent;
    export const RemoveRedEyeSharp: SvgIconComponent;
    export const RemoveRedEyeTwoTone: SvgIconComponent;
    export const RemoveRounded: SvgIconComponent;
    export const RemoveSharp: SvgIconComponent;
    export const RemoveShoppingCart: SvgIconComponent;
    export const RemoveShoppingCartOutlined: SvgIconComponent;
    export const RemoveShoppingCartRounded: SvgIconComponent;
    export const RemoveShoppingCartSharp: SvgIconComponent;
    export const RemoveShoppingCartTwoTone: SvgIconComponent;
    export const RemoveTwoTone: SvgIconComponent;
    export const Reorder: SvgIconComponent;
    export const ReorderOutlined: SvgIconComponent;
    export const ReorderRounded: SvgIconComponent;
    export const ReorderSharp: SvgIconComponent;
    export const ReorderTwoTone: SvgIconComponent;
    export const Repeat: SvgIconComponent;
    export const RepeatOn: SvgIconComponent;
    export const RepeatOne: SvgIconComponent;
    export const RepeatOneOn: SvgIconComponent;
    export const RepeatOneOnOutlined: SvgIconComponent;
    export const RepeatOneOnRounded: SvgIconComponent;
    export const RepeatOneOnSharp: SvgIconComponent;
    export const RepeatOneOnTwoTone: SvgIconComponent;
    export const RepeatOneOutlined: SvgIconComponent;
    export const RepeatOneRounded: SvgIconComponent;
    export const RepeatOneSharp: SvgIconComponent;
    export const RepeatOneTwoTone: SvgIconComponent;
    export const RepeatOnOutlined: SvgIconComponent;
    export const RepeatOnRounded: SvgIconComponent;
    export const RepeatOnSharp: SvgIconComponent;
    export const RepeatOnTwoTone: SvgIconComponent;
    export const RepeatOutlined: SvgIconComponent;
    export const RepeatRounded: SvgIconComponent;
    export const RepeatSharp: SvgIconComponent;
    export const RepeatTwoTone: SvgIconComponent;
    export const Replay: SvgIconComponent;
    export const Replay10: SvgIconComponent;
    export const Replay10Outlined: SvgIconComponent;
    export const Replay10Rounded: SvgIconComponent;
    export const Replay10Sharp: SvgIconComponent;
    export const Replay10TwoTone: SvgIconComponent;
    export const Replay30: SvgIconComponent;
    export const Replay30Outlined: SvgIconComponent;
    export const Replay30Rounded: SvgIconComponent;
    export const Replay30Sharp: SvgIconComponent;
    export const Replay30TwoTone: SvgIconComponent;
    export const Replay5: SvgIconComponent;
    export const Replay5Outlined: SvgIconComponent;
    export const Replay5Rounded: SvgIconComponent;
    export const Replay5Sharp: SvgIconComponent;
    export const Replay5TwoTone: SvgIconComponent;
    export const ReplayCircleFilled: SvgIconComponent;
    export const ReplayCircleFilledOutlined: SvgIconComponent;
    export const ReplayCircleFilledRounded: SvgIconComponent;
    export const ReplayCircleFilledSharp: SvgIconComponent;
    export const ReplayCircleFilledTwoTone: SvgIconComponent;
    export const ReplayOutlined: SvgIconComponent;
    export const ReplayRounded: SvgIconComponent;
    export const ReplaySharp: SvgIconComponent;
    export const ReplayTwoTone: SvgIconComponent;
    export const Reply: SvgIconComponent;
    export const ReplyAll: SvgIconComponent;
    export const ReplyAllOutlined: SvgIconComponent;
    export const ReplyAllRounded: SvgIconComponent;
    export const ReplyAllSharp: SvgIconComponent;
    export const ReplyAllTwoTone: SvgIconComponent;
    export const ReplyOutlined: SvgIconComponent;
    export const ReplyRounded: SvgIconComponent;
    export const ReplySharp: SvgIconComponent;
    export const ReplyTwoTone: SvgIconComponent;
    export const Report: SvgIconComponent;
    export const ReportGmailerrorred: SvgIconComponent;
    export const ReportGmailerrorredOutlined: SvgIconComponent;
    export const ReportGmailerrorredRounded: SvgIconComponent;
    export const ReportGmailerrorredSharp: SvgIconComponent;
    export const ReportGmailerrorredTwoTone: SvgIconComponent;
    export const ReportOff: SvgIconComponent;
    export const ReportOffOutlined: SvgIconComponent;
    export const ReportOffRounded: SvgIconComponent;
    export const ReportOffSharp: SvgIconComponent;
    export const ReportOffTwoTone: SvgIconComponent;
    export const ReportOutlined: SvgIconComponent;
    export const ReportProblem: SvgIconComponent;
    export const ReportProblemOutlined: SvgIconComponent;
    export const ReportProblemRounded: SvgIconComponent;
    export const ReportProblemSharp: SvgIconComponent;
    export const ReportProblemTwoTone: SvgIconComponent;
    export const ReportRounded: SvgIconComponent;
    export const ReportSharp: SvgIconComponent;
    export const ReportTwoTone: SvgIconComponent;
    export const RequestPage: SvgIconComponent;
    export const RequestPageOutlined: SvgIconComponent;
    export const RequestPageRounded: SvgIconComponent;
    export const RequestPageSharp: SvgIconComponent;
    export const RequestPageTwoTone: SvgIconComponent;
    export const RequestQuote: SvgIconComponent;
    export const RequestQuoteOutlined: SvgIconComponent;
    export const RequestQuoteRounded: SvgIconComponent;
    export const RequestQuoteSharp: SvgIconComponent;
    export const RequestQuoteTwoTone: SvgIconComponent;
    export const ResetTv: SvgIconComponent;
    export const ResetTvOutlined: SvgIconComponent;
    export const ResetTvRounded: SvgIconComponent;
    export const ResetTvSharp: SvgIconComponent;
    export const ResetTvTwoTone: SvgIconComponent;
    export const RestartAlt: SvgIconComponent;
    export const RestartAltOutlined: SvgIconComponent;
    export const RestartAltRounded: SvgIconComponent;
    export const RestartAltSharp: SvgIconComponent;
    export const RestartAltTwoTone: SvgIconComponent;
    export const Restaurant: SvgIconComponent;
    export const RestaurantMenu: SvgIconComponent;
    export const RestaurantMenuOutlined: SvgIconComponent;
    export const RestaurantMenuRounded: SvgIconComponent;
    export const RestaurantMenuSharp: SvgIconComponent;
    export const RestaurantMenuTwoTone: SvgIconComponent;
    export const RestaurantOutlined: SvgIconComponent;
    export const RestaurantRounded: SvgIconComponent;
    export const RestaurantSharp: SvgIconComponent;
    export const RestaurantTwoTone: SvgIconComponent;
    export const Restore: SvgIconComponent;
    export const RestoreFromTrash: SvgIconComponent;
    export const RestoreFromTrashOutlined: SvgIconComponent;
    export const RestoreFromTrashRounded: SvgIconComponent;
    export const RestoreFromTrashSharp: SvgIconComponent;
    export const RestoreFromTrashTwoTone: SvgIconComponent;
    export const RestoreOutlined: SvgIconComponent;
    export const RestorePage: SvgIconComponent;
    export const RestorePageOutlined: SvgIconComponent;
    export const RestorePageRounded: SvgIconComponent;
    export const RestorePageSharp: SvgIconComponent;
    export const RestorePageTwoTone: SvgIconComponent;
    export const RestoreRounded: SvgIconComponent;
    export const RestoreSharp: SvgIconComponent;
    export const RestoreTwoTone: SvgIconComponent;
    export const Reviews: SvgIconComponent;
    export const ReviewsOutlined: SvgIconComponent;
    export const ReviewsRounded: SvgIconComponent;
    export const ReviewsSharp: SvgIconComponent;
    export const ReviewsTwoTone: SvgIconComponent;
    export const RiceBowl: SvgIconComponent;
    export const RiceBowlOutlined: SvgIconComponent;
    export const RiceBowlRounded: SvgIconComponent;
    export const RiceBowlSharp: SvgIconComponent;
    export const RiceBowlTwoTone: SvgIconComponent;
    export const RingVolume: SvgIconComponent;
    export const RingVolumeOutlined: SvgIconComponent;
    export const RingVolumeRounded: SvgIconComponent;
    export const RingVolumeSharp: SvgIconComponent;
    export const RingVolumeTwoTone: SvgIconComponent;
    export const RMobiledata: SvgIconComponent;
    export const RMobiledataOutlined: SvgIconComponent;
    export const RMobiledataRounded: SvgIconComponent;
    export const RMobiledataSharp: SvgIconComponent;
    export const RMobiledataTwoTone: SvgIconComponent;
    export const Rocket: SvgIconComponent;
    export const RocketLaunch: SvgIconComponent;
    export const RocketLaunchOutlined: SvgIconComponent;
    export const RocketLaunchRounded: SvgIconComponent;
    export const RocketLaunchSharp: SvgIconComponent;
    export const RocketLaunchTwoTone: SvgIconComponent;
    export const RocketOutlined: SvgIconComponent;
    export const RocketRounded: SvgIconComponent;
    export const RocketSharp: SvgIconComponent;
    export const RocketTwoTone: SvgIconComponent;
    export const Roofing: SvgIconComponent;
    export const RoofingOutlined: SvgIconComponent;
    export const RoofingRounded: SvgIconComponent;
    export const RoofingSharp: SvgIconComponent;
    export const RoofingTwoTone: SvgIconComponent;
    export const Room: SvgIconComponent;
    export const RoomOutlined: SvgIconComponent;
    export const RoomPreferences: SvgIconComponent;
    export const RoomPreferencesOutlined: SvgIconComponent;
    export const RoomPreferencesRounded: SvgIconComponent;
    export const RoomPreferencesSharp: SvgIconComponent;
    export const RoomPreferencesTwoTone: SvgIconComponent;
    export const RoomRounded: SvgIconComponent;
    export const RoomService: SvgIconComponent;
    export const RoomServiceOutlined: SvgIconComponent;
    export const RoomServiceRounded: SvgIconComponent;
    export const RoomServiceSharp: SvgIconComponent;
    export const RoomServiceTwoTone: SvgIconComponent;
    export const RoomSharp: SvgIconComponent;
    export const RoomTwoTone: SvgIconComponent;
    export const Rotate90DegreesCcw: SvgIconComponent;
    export const Rotate90DegreesCcwOutlined: SvgIconComponent;
    export const Rotate90DegreesCcwRounded: SvgIconComponent;
    export const Rotate90DegreesCcwSharp: SvgIconComponent;
    export const Rotate90DegreesCcwTwoTone: SvgIconComponent;
    export const Rotate90DegreesCw: SvgIconComponent;
    export const Rotate90DegreesCwOutlined: SvgIconComponent;
    export const Rotate90DegreesCwRounded: SvgIconComponent;
    export const Rotate90DegreesCwSharp: SvgIconComponent;
    export const Rotate90DegreesCwTwoTone: SvgIconComponent;
    export const RotateLeft: SvgIconComponent;
    export const RotateLeftOutlined: SvgIconComponent;
    export const RotateLeftRounded: SvgIconComponent;
    export const RotateLeftSharp: SvgIconComponent;
    export const RotateLeftTwoTone: SvgIconComponent;
    export const RotateRight: SvgIconComponent;
    export const RotateRightOutlined: SvgIconComponent;
    export const RotateRightRounded: SvgIconComponent;
    export const RotateRightSharp: SvgIconComponent;
    export const RotateRightTwoTone: SvgIconComponent;
    export const RoundaboutLeft: SvgIconComponent;
    export const RoundaboutLeftOutlined: SvgIconComponent;
    export const RoundaboutLeftRounded: SvgIconComponent;
    export const RoundaboutLeftSharp: SvgIconComponent;
    export const RoundaboutLeftTwoTone: SvgIconComponent;
    export const RoundaboutRight: SvgIconComponent;
    export const RoundaboutRightOutlined: SvgIconComponent;
    export const RoundaboutRightRounded: SvgIconComponent;
    export const RoundaboutRightSharp: SvgIconComponent;
    export const RoundaboutRightTwoTone: SvgIconComponent;
    export const RoundedCorner: SvgIconComponent;
    export const RoundedCornerOutlined: SvgIconComponent;
    export const RoundedCornerRounded: SvgIconComponent;
    export const RoundedCornerSharp: SvgIconComponent;
    export const RoundedCornerTwoTone: SvgIconComponent;
    export const Route: SvgIconComponent;
    export const RouteOutlined: SvgIconComponent;
    export const Router: SvgIconComponent;
    export const RouteRounded: SvgIconComponent;
    export const RouterOutlined: SvgIconComponent;
    export const RouterRounded: SvgIconComponent;
    export const RouterSharp: SvgIconComponent;
    export const RouterTwoTone: SvgIconComponent;
    export const RouteSharp: SvgIconComponent;
    export const RouteTwoTone: SvgIconComponent;
    export const Rowing: SvgIconComponent;
    export const RowingOutlined: SvgIconComponent;
    export const RowingRounded: SvgIconComponent;
    export const RowingSharp: SvgIconComponent;
    export const RowingTwoTone: SvgIconComponent;
    export const RssFeed: SvgIconComponent;
    export const RssFeedOutlined: SvgIconComponent;
    export const RssFeedRounded: SvgIconComponent;
    export const RssFeedSharp: SvgIconComponent;
    export const RssFeedTwoTone: SvgIconComponent;
    export const Rsvp: SvgIconComponent;
    export const RsvpOutlined: SvgIconComponent;
    export const RsvpRounded: SvgIconComponent;
    export const RsvpSharp: SvgIconComponent;
    export const RsvpTwoTone: SvgIconComponent;
    export const Rtt: SvgIconComponent;
    export const RttOutlined: SvgIconComponent;
    export const RttRounded: SvgIconComponent;
    export const RttSharp: SvgIconComponent;
    export const RttTwoTone: SvgIconComponent;
    export const Rule: SvgIconComponent;
    export const RuleFolder: SvgIconComponent;
    export const RuleFolderOutlined: SvgIconComponent;
    export const RuleFolderRounded: SvgIconComponent;
    export const RuleFolderSharp: SvgIconComponent;
    export const RuleFolderTwoTone: SvgIconComponent;
    export const RuleOutlined: SvgIconComponent;
    export const RuleRounded: SvgIconComponent;
    export const RuleSharp: SvgIconComponent;
    export const RuleTwoTone: SvgIconComponent;
    export const RunCircle: SvgIconComponent;
    export const RunCircleOutlined: SvgIconComponent;
    export const RunCircleRounded: SvgIconComponent;
    export const RunCircleSharp: SvgIconComponent;
    export const RunCircleTwoTone: SvgIconComponent;
    export const RunningWithErrors: SvgIconComponent;
    export const RunningWithErrorsOutlined: SvgIconComponent;
    export const RunningWithErrorsRounded: SvgIconComponent;
    export const RunningWithErrorsSharp: SvgIconComponent;
    export const RunningWithErrorsTwoTone: SvgIconComponent;
    export const RvHookup: SvgIconComponent;
    export const RvHookupOutlined: SvgIconComponent;
    export const RvHookupRounded: SvgIconComponent;
    export const RvHookupSharp: SvgIconComponent;
    export const RvHookupTwoTone: SvgIconComponent;
    export const SafetyDivider: SvgIconComponent;
    export const SafetyDividerOutlined: SvgIconComponent;
    export const SafetyDividerRounded: SvgIconComponent;
    export const SafetyDividerSharp: SvgIconComponent;
    export const SafetyDividerTwoTone: SvgIconComponent;
    export const Sailing: SvgIconComponent;
    export const SailingOutlined: SvgIconComponent;
    export const SailingRounded: SvgIconComponent;
    export const SailingSharp: SvgIconComponent;
    export const SailingTwoTone: SvgIconComponent;
    export const Sanitizer: SvgIconComponent;
    export const SanitizerOutlined: SvgIconComponent;
    export const SanitizerRounded: SvgIconComponent;
    export const SanitizerSharp: SvgIconComponent;
    export const SanitizerTwoTone: SvgIconComponent;
    export const Satellite: SvgIconComponent;
    export const SatelliteAlt: SvgIconComponent;
    export const SatelliteAltOutlined: SvgIconComponent;
    export const SatelliteAltRounded: SvgIconComponent;
    export const SatelliteAltSharp: SvgIconComponent;
    export const SatelliteAltTwoTone: SvgIconComponent;
    export const SatelliteOutlined: SvgIconComponent;
    export const SatelliteRounded: SvgIconComponent;
    export const SatelliteSharp: SvgIconComponent;
    export const SatelliteTwoTone: SvgIconComponent;
    export const Save: SvgIconComponent;
    export const SaveAlt: SvgIconComponent;
    export const SaveAltOutlined: SvgIconComponent;
    export const SaveAltRounded: SvgIconComponent;
    export const SaveAltSharp: SvgIconComponent;
    export const SaveAltTwoTone: SvgIconComponent;
    export const SaveAs: SvgIconComponent;
    export const SaveAsOutlined: SvgIconComponent;
    export const SaveAsRounded: SvgIconComponent;
    export const SaveAsSharp: SvgIconComponent;
    export const SaveAsTwoTone: SvgIconComponent;
    export const SavedSearch: SvgIconComponent;
    export const SavedSearchOutlined: SvgIconComponent;
    export const SavedSearchRounded: SvgIconComponent;
    export const SavedSearchSharp: SvgIconComponent;
    export const SavedSearchTwoTone: SvgIconComponent;
    export const SaveOutlined: SvgIconComponent;
    export const SaveRounded: SvgIconComponent;
    export const SaveSharp: SvgIconComponent;
    export const SaveTwoTone: SvgIconComponent;
    export const Savings: SvgIconComponent;
    export const SavingsOutlined: SvgIconComponent;
    export const SavingsRounded: SvgIconComponent;
    export const SavingsSharp: SvgIconComponent;
    export const SavingsTwoTone: SvgIconComponent;
    export const Scale: SvgIconComponent;
    export const ScaleOutlined: SvgIconComponent;
    export const ScaleRounded: SvgIconComponent;
    export const ScaleSharp: SvgIconComponent;
    export const ScaleTwoTone: SvgIconComponent;
    export const Scanner: SvgIconComponent;
    export const ScannerOutlined: SvgIconComponent;
    export const ScannerRounded: SvgIconComponent;
    export const ScannerSharp: SvgIconComponent;
    export const ScannerTwoTone: SvgIconComponent;
    export const ScatterPlot: SvgIconComponent;
    export const ScatterPlotOutlined: SvgIconComponent;
    export const ScatterPlotRounded: SvgIconComponent;
    export const ScatterPlotSharp: SvgIconComponent;
    export const ScatterPlotTwoTone: SvgIconComponent;
    export const Schedule: SvgIconComponent;
    export const ScheduleOutlined: SvgIconComponent;
    export const ScheduleRounded: SvgIconComponent;
    export const ScheduleSend: SvgIconComponent;
    export const ScheduleSendOutlined: SvgIconComponent;
    export const ScheduleSendRounded: SvgIconComponent;
    export const ScheduleSendSharp: SvgIconComponent;
    export const ScheduleSendTwoTone: SvgIconComponent;
    export const ScheduleSharp: SvgIconComponent;
    export const ScheduleTwoTone: SvgIconComponent;
    export const Schema: SvgIconComponent;
    export const SchemaOutlined: SvgIconComponent;
    export const SchemaRounded: SvgIconComponent;
    export const SchemaSharp: SvgIconComponent;
    export const SchemaTwoTone: SvgIconComponent;
    export const School: SvgIconComponent;
    export const SchoolOutlined: SvgIconComponent;
    export const SchoolRounded: SvgIconComponent;
    export const SchoolSharp: SvgIconComponent;
    export const SchoolTwoTone: SvgIconComponent;
    export const Science: SvgIconComponent;
    export const ScienceOutlined: SvgIconComponent;
    export const ScienceRounded: SvgIconComponent;
    export const ScienceSharp: SvgIconComponent;
    export const ScienceTwoTone: SvgIconComponent;
    export const Score: SvgIconComponent;
    export const ScoreOutlined: SvgIconComponent;
    export const ScoreRounded: SvgIconComponent;
    export const ScoreSharp: SvgIconComponent;
    export const ScoreTwoTone: SvgIconComponent;
    export const ScreenLockLandscape: SvgIconComponent;
    export const ScreenLockLandscapeOutlined: SvgIconComponent;
    export const ScreenLockLandscapeRounded: SvgIconComponent;
    export const ScreenLockLandscapeSharp: SvgIconComponent;
    export const ScreenLockLandscapeTwoTone: SvgIconComponent;
    export const ScreenLockPortrait: SvgIconComponent;
    export const ScreenLockPortraitOutlined: SvgIconComponent;
    export const ScreenLockPortraitRounded: SvgIconComponent;
    export const ScreenLockPortraitSharp: SvgIconComponent;
    export const ScreenLockPortraitTwoTone: SvgIconComponent;
    export const ScreenLockRotation: SvgIconComponent;
    export const ScreenLockRotationOutlined: SvgIconComponent;
    export const ScreenLockRotationRounded: SvgIconComponent;
    export const ScreenLockRotationSharp: SvgIconComponent;
    export const ScreenLockRotationTwoTone: SvgIconComponent;
    export const ScreenRotation: SvgIconComponent;
    export const ScreenRotationOutlined: SvgIconComponent;
    export const ScreenRotationRounded: SvgIconComponent;
    export const ScreenRotationSharp: SvgIconComponent;
    export const ScreenRotationTwoTone: SvgIconComponent;
    export const ScreenSearchDesktop: SvgIconComponent;
    export const ScreenSearchDesktopOutlined: SvgIconComponent;
    export const ScreenSearchDesktopRounded: SvgIconComponent;
    export const ScreenSearchDesktopSharp: SvgIconComponent;
    export const ScreenSearchDesktopTwoTone: SvgIconComponent;
    export const ScreenShare: SvgIconComponent;
    export const ScreenShareOutlined: SvgIconComponent;
    export const ScreenShareRounded: SvgIconComponent;
    export const ScreenShareSharp: SvgIconComponent;
    export const ScreenShareTwoTone: SvgIconComponent;
    export const Screenshot: SvgIconComponent;
    export const ScreenshotOutlined: SvgIconComponent;
    export const ScreenshotRounded: SvgIconComponent;
    export const ScreenshotSharp: SvgIconComponent;
    export const ScreenshotTwoTone: SvgIconComponent;
    export const Sd: SvgIconComponent;
    export const SdCard: SvgIconComponent;
    export const SdCardAlert: SvgIconComponent;
    export const SdCardAlertOutlined: SvgIconComponent;
    export const SdCardAlertRounded: SvgIconComponent;
    export const SdCardAlertSharp: SvgIconComponent;
    export const SdCardAlertTwoTone: SvgIconComponent;
    export const SdCardOutlined: SvgIconComponent;
    export const SdCardRounded: SvgIconComponent;
    export const SdCardSharp: SvgIconComponent;
    export const SdCardTwoTone: SvgIconComponent;
    export const SdOutlined: SvgIconComponent;
    export const SdRounded: SvgIconComponent;
    export const SdSharp: SvgIconComponent;
    export const SdStorage: SvgIconComponent;
    export const SdStorageOutlined: SvgIconComponent;
    export const SdStorageRounded: SvgIconComponent;
    export const SdStorageSharp: SvgIconComponent;
    export const SdStorageTwoTone: SvgIconComponent;
    export const SdTwoTone: SvgIconComponent;
    export const Search: SvgIconComponent;
    export const SearchOff: SvgIconComponent;
    export const SearchOffOutlined: SvgIconComponent;
    export const SearchOffRounded: SvgIconComponent;
    export const SearchOffSharp: SvgIconComponent;
    export const SearchOffTwoTone: SvgIconComponent;
    export const SearchOutlined: SvgIconComponent;
    export const SearchRounded: SvgIconComponent;
    export const SearchSharp: SvgIconComponent;
    export const SearchTwoTone: SvgIconComponent;
    export const Security: SvgIconComponent;
    export const SecurityOutlined: SvgIconComponent;
    export const SecurityRounded: SvgIconComponent;
    export const SecuritySharp: SvgIconComponent;
    export const SecurityTwoTone: SvgIconComponent;
    export const SecurityUpdate: SvgIconComponent;
    export const SecurityUpdateGood: SvgIconComponent;
    export const SecurityUpdateGoodOutlined: SvgIconComponent;
    export const SecurityUpdateGoodRounded: SvgIconComponent;
    export const SecurityUpdateGoodSharp: SvgIconComponent;
    export const SecurityUpdateGoodTwoTone: SvgIconComponent;
    export const SecurityUpdateOutlined: SvgIconComponent;
    export const SecurityUpdateRounded: SvgIconComponent;
    export const SecurityUpdateSharp: SvgIconComponent;
    export const SecurityUpdateTwoTone: SvgIconComponent;
    export const SecurityUpdateWarning: SvgIconComponent;
    export const SecurityUpdateWarningOutlined: SvgIconComponent;
    export const SecurityUpdateWarningRounded: SvgIconComponent;
    export const SecurityUpdateWarningSharp: SvgIconComponent;
    export const SecurityUpdateWarningTwoTone: SvgIconComponent;
    export const Segment: SvgIconComponent;
    export const SegmentOutlined: SvgIconComponent;
    export const SegmentRounded: SvgIconComponent;
    export const SegmentSharp: SvgIconComponent;
    export const SegmentTwoTone: SvgIconComponent;
    export const SelectAll: SvgIconComponent;
    export const SelectAllOutlined: SvgIconComponent;
    export const SelectAllRounded: SvgIconComponent;
    export const SelectAllSharp: SvgIconComponent;
    export const SelectAllTwoTone: SvgIconComponent;
    export const SelfImprovement: SvgIconComponent;
    export const SelfImprovementOutlined: SvgIconComponent;
    export const SelfImprovementRounded: SvgIconComponent;
    export const SelfImprovementSharp: SvgIconComponent;
    export const SelfImprovementTwoTone: SvgIconComponent;
    export const Sell: SvgIconComponent;
    export const SellOutlined: SvgIconComponent;
    export const SellRounded: SvgIconComponent;
    export const SellSharp: SvgIconComponent;
    export const SellTwoTone: SvgIconComponent;
    export const Send: SvgIconComponent;
    export const SendAndArchive: SvgIconComponent;
    export const SendAndArchiveOutlined: SvgIconComponent;
    export const SendAndArchiveRounded: SvgIconComponent;
    export const SendAndArchiveSharp: SvgIconComponent;
    export const SendAndArchiveTwoTone: SvgIconComponent;
    export const SendOutlined: SvgIconComponent;
    export const SendRounded: SvgIconComponent;
    export const SendSharp: SvgIconComponent;
    export const SendTimeExtension: SvgIconComponent;
    export const SendTimeExtensionOutlined: SvgIconComponent;
    export const SendTimeExtensionRounded: SvgIconComponent;
    export const SendTimeExtensionSharp: SvgIconComponent;
    export const SendTimeExtensionTwoTone: SvgIconComponent;
    export const SendToMobile: SvgIconComponent;
    export const SendToMobileOutlined: SvgIconComponent;
    export const SendToMobileRounded: SvgIconComponent;
    export const SendToMobileSharp: SvgIconComponent;
    export const SendToMobileTwoTone: SvgIconComponent;
    export const SendTwoTone: SvgIconComponent;
    export const SensorDoor: SvgIconComponent;
    export const SensorDoorOutlined: SvgIconComponent;
    export const SensorDoorRounded: SvgIconComponent;
    export const SensorDoorSharp: SvgIconComponent;
    export const SensorDoorTwoTone: SvgIconComponent;
    export const Sensors: SvgIconComponent;
    export const SensorsOff: SvgIconComponent;
    export const SensorsOffOutlined: SvgIconComponent;
    export const SensorsOffRounded: SvgIconComponent;
    export const SensorsOffSharp: SvgIconComponent;
    export const SensorsOffTwoTone: SvgIconComponent;
    export const SensorsOutlined: SvgIconComponent;
    export const SensorsRounded: SvgIconComponent;
    export const SensorsSharp: SvgIconComponent;
    export const SensorsTwoTone: SvgIconComponent;
    export const SensorWindow: SvgIconComponent;
    export const SensorWindowOutlined: SvgIconComponent;
    export const SensorWindowRounded: SvgIconComponent;
    export const SensorWindowSharp: SvgIconComponent;
    export const SensorWindowTwoTone: SvgIconComponent;
    export const SentimentDissatisfied: SvgIconComponent;
    export const SentimentDissatisfiedOutlined: SvgIconComponent;
    export const SentimentDissatisfiedRounded: SvgIconComponent;
    export const SentimentDissatisfiedSharp: SvgIconComponent;
    export const SentimentDissatisfiedTwoTone: SvgIconComponent;
    export const SentimentNeutral: SvgIconComponent;
    export const SentimentNeutralOutlined: SvgIconComponent;
    export const SentimentNeutralRounded: SvgIconComponent;
    export const SentimentNeutralSharp: SvgIconComponent;
    export const SentimentNeutralTwoTone: SvgIconComponent;
    export const SentimentSatisfied: SvgIconComponent;
    export const SentimentSatisfiedAlt: SvgIconComponent;
    export const SentimentSatisfiedAltOutlined: SvgIconComponent;
    export const SentimentSatisfiedAltRounded: SvgIconComponent;
    export const SentimentSatisfiedAltSharp: SvgIconComponent;
    export const SentimentSatisfiedAltTwoTone: SvgIconComponent;
    export const SentimentSatisfiedOutlined: SvgIconComponent;
    export const SentimentSatisfiedRounded: SvgIconComponent;
    export const SentimentSatisfiedSharp: SvgIconComponent;
    export const SentimentSatisfiedTwoTone: SvgIconComponent;
    export const SentimentVeryDissatisfied: SvgIconComponent;
    export const SentimentVeryDissatisfiedOutlined: SvgIconComponent;
    export const SentimentVeryDissatisfiedRounded: SvgIconComponent;
    export const SentimentVeryDissatisfiedSharp: SvgIconComponent;
    export const SentimentVeryDissatisfiedTwoTone: SvgIconComponent;
    export const SentimentVerySatisfied: SvgIconComponent;
    export const SentimentVerySatisfiedOutlined: SvgIconComponent;
    export const SentimentVerySatisfiedRounded: SvgIconComponent;
    export const SentimentVerySatisfiedSharp: SvgIconComponent;
    export const SentimentVerySatisfiedTwoTone: SvgIconComponent;
    export const SetMeal: SvgIconComponent;
    export const SetMealOutlined: SvgIconComponent;
    export const SetMealRounded: SvgIconComponent;
    export const SetMealSharp: SvgIconComponent;
    export const SetMealTwoTone: SvgIconComponent;
    export const Settings: SvgIconComponent;
    export const SettingsAccessibility: SvgIconComponent;
    export const SettingsAccessibilityOutlined: SvgIconComponent;
    export const SettingsAccessibilityRounded: SvgIconComponent;
    export const SettingsAccessibilitySharp: SvgIconComponent;
    export const SettingsAccessibilityTwoTone: SvgIconComponent;
    export const SettingsApplications: SvgIconComponent;
    export const SettingsApplicationsOutlined: SvgIconComponent;
    export const SettingsApplicationsRounded: SvgIconComponent;
    export const SettingsApplicationsSharp: SvgIconComponent;
    export const SettingsApplicationsTwoTone: SvgIconComponent;
    export const SettingsBackupRestore: SvgIconComponent;
    export const SettingsBackupRestoreOutlined: SvgIconComponent;
    export const SettingsBackupRestoreRounded: SvgIconComponent;
    export const SettingsBackupRestoreSharp: SvgIconComponent;
    export const SettingsBackupRestoreTwoTone: SvgIconComponent;
    export const SettingsBluetooth: SvgIconComponent;
    export const SettingsBluetoothOutlined: SvgIconComponent;
    export const SettingsBluetoothRounded: SvgIconComponent;
    export const SettingsBluetoothSharp: SvgIconComponent;
    export const SettingsBluetoothTwoTone: SvgIconComponent;
    export const SettingsBrightness: SvgIconComponent;
    export const SettingsBrightnessOutlined: SvgIconComponent;
    export const SettingsBrightnessRounded: SvgIconComponent;
    export const SettingsBrightnessSharp: SvgIconComponent;
    export const SettingsBrightnessTwoTone: SvgIconComponent;
    export const SettingsCell: SvgIconComponent;
    export const SettingsCellOutlined: SvgIconComponent;
    export const SettingsCellRounded: SvgIconComponent;
    export const SettingsCellSharp: SvgIconComponent;
    export const SettingsCellTwoTone: SvgIconComponent;
    export const SettingsEthernet: SvgIconComponent;
    export const SettingsEthernetOutlined: SvgIconComponent;
    export const SettingsEthernetRounded: SvgIconComponent;
    export const SettingsEthernetSharp: SvgIconComponent;
    export const SettingsEthernetTwoTone: SvgIconComponent;
    export const SettingsInputAntenna: SvgIconComponent;
    export const SettingsInputAntennaOutlined: SvgIconComponent;
    export const SettingsInputAntennaRounded: SvgIconComponent;
    export const SettingsInputAntennaSharp: SvgIconComponent;
    export const SettingsInputAntennaTwoTone: SvgIconComponent;
    export const SettingsInputComponent: SvgIconComponent;
    export const SettingsInputComponentOutlined: SvgIconComponent;
    export const SettingsInputComponentRounded: SvgIconComponent;
    export const SettingsInputComponentSharp: SvgIconComponent;
    export const SettingsInputComponentTwoTone: SvgIconComponent;
    export const SettingsInputComposite: SvgIconComponent;
    export const SettingsInputCompositeOutlined: SvgIconComponent;
    export const SettingsInputCompositeRounded: SvgIconComponent;
    export const SettingsInputCompositeSharp: SvgIconComponent;
    export const SettingsInputCompositeTwoTone: SvgIconComponent;
    export const SettingsInputHdmi: SvgIconComponent;
    export const SettingsInputHdmiOutlined: SvgIconComponent;
    export const SettingsInputHdmiRounded: SvgIconComponent;
    export const SettingsInputHdmiSharp: SvgIconComponent;
    export const SettingsInputHdmiTwoTone: SvgIconComponent;
    export const SettingsInputSvideo: SvgIconComponent;
    export const SettingsInputSvideoOutlined: SvgIconComponent;
    export const SettingsInputSvideoRounded: SvgIconComponent;
    export const SettingsInputSvideoSharp: SvgIconComponent;
    export const SettingsInputSvideoTwoTone: SvgIconComponent;
    export const SettingsOutlined: SvgIconComponent;
    export const SettingsOverscan: SvgIconComponent;
    export const SettingsOverscanOutlined: SvgIconComponent;
    export const SettingsOverscanRounded: SvgIconComponent;
    export const SettingsOverscanSharp: SvgIconComponent;
    export const SettingsOverscanTwoTone: SvgIconComponent;
    export const SettingsPhone: SvgIconComponent;
    export const SettingsPhoneOutlined: SvgIconComponent;
    export const SettingsPhoneRounded: SvgIconComponent;
    export const SettingsPhoneSharp: SvgIconComponent;
    export const SettingsPhoneTwoTone: SvgIconComponent;
    export const SettingsPower: SvgIconComponent;
    export const SettingsPowerOutlined: SvgIconComponent;
    export const SettingsPowerRounded: SvgIconComponent;
    export const SettingsPowerSharp: SvgIconComponent;
    export const SettingsPowerTwoTone: SvgIconComponent;
    export const SettingsRemote: SvgIconComponent;
    export const SettingsRemoteOutlined: SvgIconComponent;
    export const SettingsRemoteRounded: SvgIconComponent;
    export const SettingsRemoteSharp: SvgIconComponent;
    export const SettingsRemoteTwoTone: SvgIconComponent;
    export const SettingsRounded: SvgIconComponent;
    export const SettingsSharp: SvgIconComponent;
    export const SettingsSuggest: SvgIconComponent;
    export const SettingsSuggestOutlined: SvgIconComponent;
    export const SettingsSuggestRounded: SvgIconComponent;
    export const SettingsSuggestSharp: SvgIconComponent;
    export const SettingsSuggestTwoTone: SvgIconComponent;
    export const SettingsSystemDaydream: SvgIconComponent;
    export const SettingsSystemDaydreamOutlined: SvgIconComponent;
    export const SettingsSystemDaydreamRounded: SvgIconComponent;
    export const SettingsSystemDaydreamSharp: SvgIconComponent;
    export const SettingsSystemDaydreamTwoTone: SvgIconComponent;
    export const SettingsTwoTone: SvgIconComponent;
    export const SettingsVoice: SvgIconComponent;
    export const SettingsVoiceOutlined: SvgIconComponent;
    export const SettingsVoiceRounded: SvgIconComponent;
    export const SettingsVoiceSharp: SvgIconComponent;
    export const SettingsVoiceTwoTone: SvgIconComponent;
    export const SevenK: SvgIconComponent;
    export const SevenKOutlined: SvgIconComponent;
    export const SevenKPlus: SvgIconComponent;
    export const SevenKPlusOutlined: SvgIconComponent;
    export const SevenKPlusRounded: SvgIconComponent;
    export const SevenKPlusSharp: SvgIconComponent;
    export const SevenKPlusTwoTone: SvgIconComponent;
    export const SevenKRounded: SvgIconComponent;
    export const SevenKSharp: SvgIconComponent;
    export const SevenKTwoTone: SvgIconComponent;
    export const SevenMp: SvgIconComponent;
    export const SevenMpOutlined: SvgIconComponent;
    export const SevenMpRounded: SvgIconComponent;
    export const SevenMpSharp: SvgIconComponent;
    export const SevenMpTwoTone: SvgIconComponent;
    export const SeventeenMp: SvgIconComponent;
    export const SeventeenMpOutlined: SvgIconComponent;
    export const SeventeenMpRounded: SvgIconComponent;
    export const SeventeenMpSharp: SvgIconComponent;
    export const SeventeenMpTwoTone: SvgIconComponent;
    export const Share: SvgIconComponent;
    export const ShareLocation: SvgIconComponent;
    export const ShareLocationOutlined: SvgIconComponent;
    export const ShareLocationRounded: SvgIconComponent;
    export const ShareLocationSharp: SvgIconComponent;
    export const ShareLocationTwoTone: SvgIconComponent;
    export const ShareOutlined: SvgIconComponent;
    export const ShareRounded: SvgIconComponent;
    export const ShareSharp: SvgIconComponent;
    export const ShareTwoTone: SvgIconComponent;
    export const Shield: SvgIconComponent;
    export const ShieldMoon: SvgIconComponent;
    export const ShieldMoonOutlined: SvgIconComponent;
    export const ShieldMoonRounded: SvgIconComponent;
    export const ShieldMoonSharp: SvgIconComponent;
    export const ShieldMoonTwoTone: SvgIconComponent;
    export const ShieldOutlined: SvgIconComponent;
    export const ShieldRounded: SvgIconComponent;
    export const ShieldSharp: SvgIconComponent;
    export const ShieldTwoTone: SvgIconComponent;
    export const Shop: SvgIconComponent;
    export const Shop2: SvgIconComponent;
    export const Shop2Outlined: SvgIconComponent;
    export const Shop2Rounded: SvgIconComponent;
    export const Shop2Sharp: SvgIconComponent;
    export const Shop2TwoTone: SvgIconComponent;
    export const ShopOutlined: SvgIconComponent;
    export const ShoppingBag: SvgIconComponent;
    export const ShoppingBagOutlined: SvgIconComponent;
    export const ShoppingBagRounded: SvgIconComponent;
    export const ShoppingBagSharp: SvgIconComponent;
    export const ShoppingBagTwoTone: SvgIconComponent;
    export const ShoppingBasket: SvgIconComponent;
    export const ShoppingBasketOutlined: SvgIconComponent;
    export const ShoppingBasketRounded: SvgIconComponent;
    export const ShoppingBasketSharp: SvgIconComponent;
    export const ShoppingBasketTwoTone: SvgIconComponent;
    export const ShoppingCart: SvgIconComponent;
    export const ShoppingCartCheckout: SvgIconComponent;
    export const ShoppingCartCheckoutOutlined: SvgIconComponent;
    export const ShoppingCartCheckoutRounded: SvgIconComponent;
    export const ShoppingCartCheckoutSharp: SvgIconComponent;
    export const ShoppingCartCheckoutTwoTone: SvgIconComponent;
    export const ShoppingCartOutlined: SvgIconComponent;
    export const ShoppingCartRounded: SvgIconComponent;
    export const ShoppingCartSharp: SvgIconComponent;
    export const ShoppingCartTwoTone: SvgIconComponent;
    export const ShopRounded: SvgIconComponent;
    export const ShopSharp: SvgIconComponent;
    export const ShopTwo: SvgIconComponent;
    export const ShopTwoOutlined: SvgIconComponent;
    export const ShopTwoRounded: SvgIconComponent;
    export const ShopTwoSharp: SvgIconComponent;
    export const ShopTwoTone: SvgIconComponent;
    export const ShopTwoTwoTone: SvgIconComponent;
    export const Shortcut: SvgIconComponent;
    export const ShortcutOutlined: SvgIconComponent;
    export const ShortcutRounded: SvgIconComponent;
    export const ShortcutSharp: SvgIconComponent;
    export const ShortcutTwoTone: SvgIconComponent;
    export const ShortText: SvgIconComponent;
    export const ShortTextOutlined: SvgIconComponent;
    export const ShortTextRounded: SvgIconComponent;
    export const ShortTextSharp: SvgIconComponent;
    export const ShortTextTwoTone: SvgIconComponent;
    export const ShowChart: SvgIconComponent;
    export const ShowChartOutlined: SvgIconComponent;
    export const ShowChartRounded: SvgIconComponent;
    export const ShowChartSharp: SvgIconComponent;
    export const ShowChartTwoTone: SvgIconComponent;
    export const Shower: SvgIconComponent;
    export const ShowerOutlined: SvgIconComponent;
    export const ShowerRounded: SvgIconComponent;
    export const ShowerSharp: SvgIconComponent;
    export const ShowerTwoTone: SvgIconComponent;
    export const Shuffle: SvgIconComponent;
    export const ShuffleOn: SvgIconComponent;
    export const ShuffleOnOutlined: SvgIconComponent;
    export const ShuffleOnRounded: SvgIconComponent;
    export const ShuffleOnSharp: SvgIconComponent;
    export const ShuffleOnTwoTone: SvgIconComponent;
    export const ShuffleOutlined: SvgIconComponent;
    export const ShuffleRounded: SvgIconComponent;
    export const ShuffleSharp: SvgIconComponent;
    export const ShuffleTwoTone: SvgIconComponent;
    export const ShutterSpeed: SvgIconComponent;
    export const ShutterSpeedOutlined: SvgIconComponent;
    export const ShutterSpeedRounded: SvgIconComponent;
    export const ShutterSpeedSharp: SvgIconComponent;
    export const ShutterSpeedTwoTone: SvgIconComponent;
    export const Sick: SvgIconComponent;
    export const SickOutlined: SvgIconComponent;
    export const SickRounded: SvgIconComponent;
    export const SickSharp: SvgIconComponent;
    export const SickTwoTone: SvgIconComponent;
    export const SignalCellular0Bar: SvgIconComponent;
    export const SignalCellular0BarOutlined: SvgIconComponent;
    export const SignalCellular0BarRounded: SvgIconComponent;
    export const SignalCellular0BarSharp: SvgIconComponent;
    export const SignalCellular0BarTwoTone: SvgIconComponent;
    export const SignalCellular1Bar: SvgIconComponent;
    export const SignalCellular1BarOutlined: SvgIconComponent;
    export const SignalCellular1BarRounded: SvgIconComponent;
    export const SignalCellular1BarSharp: SvgIconComponent;
    export const SignalCellular1BarTwoTone: SvgIconComponent;
    export const SignalCellular2Bar: SvgIconComponent;
    export const SignalCellular2BarOutlined: SvgIconComponent;
    export const SignalCellular2BarRounded: SvgIconComponent;
    export const SignalCellular2BarSharp: SvgIconComponent;
    export const SignalCellular2BarTwoTone: SvgIconComponent;
    export const SignalCellular3Bar: SvgIconComponent;
    export const SignalCellular3BarOutlined: SvgIconComponent;
    export const SignalCellular3BarRounded: SvgIconComponent;
    export const SignalCellular3BarSharp: SvgIconComponent;
    export const SignalCellular3BarTwoTone: SvgIconComponent;
    export const SignalCellular4Bar: SvgIconComponent;
    export const SignalCellular4BarOutlined: SvgIconComponent;
    export const SignalCellular4BarRounded: SvgIconComponent;
    export const SignalCellular4BarSharp: SvgIconComponent;
    export const SignalCellular4BarTwoTone: SvgIconComponent;
    export const SignalCellularAlt: SvgIconComponent;
    export const SignalCellularAltOutlined: SvgIconComponent;
    export const SignalCellularAltRounded: SvgIconComponent;
    export const SignalCellularAltSharp: SvgIconComponent;
    export const SignalCellularAltTwoTone: SvgIconComponent;
    export const SignalCellularConnectedNoInternet0Bar: SvgIconComponent;
    export const SignalCellularConnectedNoInternet0BarOutlined: SvgIconComponent;
    export const SignalCellularConnectedNoInternet0BarRounded: SvgIconComponent;
    export const SignalCellularConnectedNoInternet0BarSharp: SvgIconComponent;
    export const SignalCellularConnectedNoInternet0BarTwoTone: SvgIconComponent;
    export const SignalCellularConnectedNoInternet1Bar: SvgIconComponent;
    export const SignalCellularConnectedNoInternet1BarOutlined: SvgIconComponent;
    export const SignalCellularConnectedNoInternet1BarRounded: SvgIconComponent;
    export const SignalCellularConnectedNoInternet1BarSharp: SvgIconComponent;
    export const SignalCellularConnectedNoInternet1BarTwoTone: SvgIconComponent;
    export const SignalCellularConnectedNoInternet2Bar: SvgIconComponent;
    export const SignalCellularConnectedNoInternet2BarOutlined: SvgIconComponent;
    export const SignalCellularConnectedNoInternet2BarRounded: SvgIconComponent;
    export const SignalCellularConnectedNoInternet2BarSharp: SvgIconComponent;
    export const SignalCellularConnectedNoInternet2BarTwoTone: SvgIconComponent;
    export const SignalCellularConnectedNoInternet3Bar: SvgIconComponent;
    export const SignalCellularConnectedNoInternet3BarOutlined: SvgIconComponent;
    export const SignalCellularConnectedNoInternet3BarRounded: SvgIconComponent;
    export const SignalCellularConnectedNoInternet3BarSharp: SvgIconComponent;
    export const SignalCellularConnectedNoInternet3BarTwoTone: SvgIconComponent;
    export const SignalCellularConnectedNoInternet4Bar: SvgIconComponent;
    export const SignalCellularConnectedNoInternet4BarOutlined: SvgIconComponent;
    export const SignalCellularConnectedNoInternet4BarRounded: SvgIconComponent;
    export const SignalCellularConnectedNoInternet4BarSharp: SvgIconComponent;
    export const SignalCellularConnectedNoInternet4BarTwoTone: SvgIconComponent;
    export const SignalCellularNodata: SvgIconComponent;
    export const SignalCellularNodataOutlined: SvgIconComponent;
    export const SignalCellularNodataRounded: SvgIconComponent;
    export const SignalCellularNodataSharp: SvgIconComponent;
    export const SignalCellularNodataTwoTone: SvgIconComponent;
    export const SignalCellularNoSim: SvgIconComponent;
    export const SignalCellularNoSimOutlined: SvgIconComponent;
    export const SignalCellularNoSimRounded: SvgIconComponent;
    export const SignalCellularNoSimSharp: SvgIconComponent;
    export const SignalCellularNoSimTwoTone: SvgIconComponent;
    export const SignalCellularNull: SvgIconComponent;
    export const SignalCellularNullOutlined: SvgIconComponent;
    export const SignalCellularNullRounded: SvgIconComponent;
    export const SignalCellularNullSharp: SvgIconComponent;
    export const SignalCellularNullTwoTone: SvgIconComponent;
    export const SignalCellularOff: SvgIconComponent;
    export const SignalCellularOffOutlined: SvgIconComponent;
    export const SignalCellularOffRounded: SvgIconComponent;
    export const SignalCellularOffSharp: SvgIconComponent;
    export const SignalCellularOffTwoTone: SvgIconComponent;
    export const SignalWifi0Bar: SvgIconComponent;
    export const SignalWifi0BarOutlined: SvgIconComponent;
    export const SignalWifi0BarRounded: SvgIconComponent;
    export const SignalWifi0BarSharp: SvgIconComponent;
    export const SignalWifi0BarTwoTone: SvgIconComponent;
    export const SignalWifi1Bar: SvgIconComponent;
    export const SignalWifi1BarLock: SvgIconComponent;
    export const SignalWifi1BarLockOutlined: SvgIconComponent;
    export const SignalWifi1BarLockRounded: SvgIconComponent;
    export const SignalWifi1BarLockSharp: SvgIconComponent;
    export const SignalWifi1BarLockTwoTone: SvgIconComponent;
    export const SignalWifi1BarOutlined: SvgIconComponent;
    export const SignalWifi1BarRounded: SvgIconComponent;
    export const SignalWifi1BarSharp: SvgIconComponent;
    export const SignalWifi1BarTwoTone: SvgIconComponent;
    export const SignalWifi2Bar: SvgIconComponent;
    export const SignalWifi2BarLock: SvgIconComponent;
    export const SignalWifi2BarLockOutlined: SvgIconComponent;
    export const SignalWifi2BarLockRounded: SvgIconComponent;
    export const SignalWifi2BarLockSharp: SvgIconComponent;
    export const SignalWifi2BarLockTwoTone: SvgIconComponent;
    export const SignalWifi2BarOutlined: SvgIconComponent;
    export const SignalWifi2BarRounded: SvgIconComponent;
    export const SignalWifi2BarSharp: SvgIconComponent;
    export const SignalWifi2BarTwoTone: SvgIconComponent;
    export const SignalWifi3Bar: SvgIconComponent;
    export const SignalWifi3BarLock: SvgIconComponent;
    export const SignalWifi3BarLockOutlined: SvgIconComponent;
    export const SignalWifi3BarLockRounded: SvgIconComponent;
    export const SignalWifi3BarLockSharp: SvgIconComponent;
    export const SignalWifi3BarLockTwoTone: SvgIconComponent;
    export const SignalWifi3BarOutlined: SvgIconComponent;
    export const SignalWifi3BarRounded: SvgIconComponent;
    export const SignalWifi3BarSharp: SvgIconComponent;
    export const SignalWifi3BarTwoTone: SvgIconComponent;
    export const SignalWifi4Bar: SvgIconComponent;
    export const SignalWifi4BarLock: SvgIconComponent;
    export const SignalWifi4BarLockOutlined: SvgIconComponent;
    export const SignalWifi4BarLockRounded: SvgIconComponent;
    export const SignalWifi4BarLockSharp: SvgIconComponent;
    export const SignalWifi4BarLockTwoTone: SvgIconComponent;
    export const SignalWifi4BarOutlined: SvgIconComponent;
    export const SignalWifi4BarRounded: SvgIconComponent;
    export const SignalWifi4BarSharp: SvgIconComponent;
    export const SignalWifi4BarTwoTone: SvgIconComponent;
    export const SignalWifiBad: SvgIconComponent;
    export const SignalWifiBadOutlined: SvgIconComponent;
    export const SignalWifiBadRounded: SvgIconComponent;
    export const SignalWifiBadSharp: SvgIconComponent;
    export const SignalWifiBadTwoTone: SvgIconComponent;
    export const SignalWifiConnectedNoInternet4: SvgIconComponent;
    export const SignalWifiConnectedNoInternet4Outlined: SvgIconComponent;
    export const SignalWifiConnectedNoInternet4Rounded: SvgIconComponent;
    export const SignalWifiConnectedNoInternet4Sharp: SvgIconComponent;
    export const SignalWifiConnectedNoInternet4TwoTone: SvgIconComponent;
    export const SignalWifiOff: SvgIconComponent;
    export const SignalWifiOffOutlined: SvgIconComponent;
    export const SignalWifiOffRounded: SvgIconComponent;
    export const SignalWifiOffSharp: SvgIconComponent;
    export const SignalWifiOffTwoTone: SvgIconComponent;
    export const SignalWifiStatusbar4Bar: SvgIconComponent;
    export const SignalWifiStatusbar4BarOutlined: SvgIconComponent;
    export const SignalWifiStatusbar4BarRounded: SvgIconComponent;
    export const SignalWifiStatusbar4BarSharp: SvgIconComponent;
    export const SignalWifiStatusbar4BarTwoTone: SvgIconComponent;
    export const SignalWifiStatusbarConnectedNoInternet4: SvgIconComponent;
    export const SignalWifiStatusbarConnectedNoInternet4Outlined: SvgIconComponent;
    export const SignalWifiStatusbarConnectedNoInternet4Rounded: SvgIconComponent;
    export const SignalWifiStatusbarConnectedNoInternet4Sharp: SvgIconComponent;
    export const SignalWifiStatusbarConnectedNoInternet4TwoTone: SvgIconComponent;
    export const SignalWifiStatusbarNull: SvgIconComponent;
    export const SignalWifiStatusbarNullOutlined: SvgIconComponent;
    export const SignalWifiStatusbarNullRounded: SvgIconComponent;
    export const SignalWifiStatusbarNullSharp: SvgIconComponent;
    export const SignalWifiStatusbarNullTwoTone: SvgIconComponent;
    export const Signpost: SvgIconComponent;
    export const SignpostOutlined: SvgIconComponent;
    export const SignpostRounded: SvgIconComponent;
    export const SignpostSharp: SvgIconComponent;
    export const SignpostTwoTone: SvgIconComponent;
    export const SimCard: SvgIconComponent;
    export const SimCardAlert: SvgIconComponent;
    export const SimCardAlertOutlined: SvgIconComponent;
    export const SimCardAlertRounded: SvgIconComponent;
    export const SimCardAlertSharp: SvgIconComponent;
    export const SimCardAlertTwoTone: SvgIconComponent;
    export const SimCardDownload: SvgIconComponent;
    export const SimCardDownloadOutlined: SvgIconComponent;
    export const SimCardDownloadRounded: SvgIconComponent;
    export const SimCardDownloadSharp: SvgIconComponent;
    export const SimCardDownloadTwoTone: SvgIconComponent;
    export const SimCardOutlined: SvgIconComponent;
    export const SimCardRounded: SvgIconComponent;
    export const SimCardSharp: SvgIconComponent;
    export const SimCardTwoTone: SvgIconComponent;
    export const SingleBed: SvgIconComponent;
    export const SingleBedOutlined: SvgIconComponent;
    export const SingleBedRounded: SvgIconComponent;
    export const SingleBedSharp: SvgIconComponent;
    export const SingleBedTwoTone: SvgIconComponent;
    export const Sip: SvgIconComponent;
    export const SipOutlined: SvgIconComponent;
    export const SipRounded: SvgIconComponent;
    export const SipSharp: SvgIconComponent;
    export const SipTwoTone: SvgIconComponent;
    export const SixK: SvgIconComponent;
    export const SixKOutlined: SvgIconComponent;
    export const SixKPlus: SvgIconComponent;
    export const SixKPlusOutlined: SvgIconComponent;
    export const SixKPlusRounded: SvgIconComponent;
    export const SixKPlusSharp: SvgIconComponent;
    export const SixKPlusTwoTone: SvgIconComponent;
    export const SixKRounded: SvgIconComponent;
    export const SixKSharp: SvgIconComponent;
    export const SixKTwoTone: SvgIconComponent;
    export const SixMp: SvgIconComponent;
    export const SixMpOutlined: SvgIconComponent;
    export const SixMpRounded: SvgIconComponent;
    export const SixMpSharp: SvgIconComponent;
    export const SixMpTwoTone: SvgIconComponent;
    export const SixteenMp: SvgIconComponent;
    export const SixteenMpOutlined: SvgIconComponent;
    export const SixteenMpRounded: SvgIconComponent;
    export const SixteenMpSharp: SvgIconComponent;
    export const SixteenMpTwoTone: SvgIconComponent;
    export const SixtyFps: SvgIconComponent;
    export const SixtyFpsOutlined: SvgIconComponent;
    export const SixtyFpsRounded: SvgIconComponent;
    export const SixtyFpsSelect: SvgIconComponent;
    export const SixtyFpsSelectOutlined: SvgIconComponent;
    export const SixtyFpsSelectRounded: SvgIconComponent;
    export const SixtyFpsSelectSharp: SvgIconComponent;
    export const SixtyFpsSelectTwoTone: SvgIconComponent;
    export const SixtyFpsSharp: SvgIconComponent;
    export const SixtyFpsTwoTone: SvgIconComponent;
    export const Skateboarding: SvgIconComponent;
    export const SkateboardingOutlined: SvgIconComponent;
    export const SkateboardingRounded: SvgIconComponent;
    export const SkateboardingSharp: SvgIconComponent;
    export const SkateboardingTwoTone: SvgIconComponent;
    export const SkipNext: SvgIconComponent;
    export const SkipNextOutlined: SvgIconComponent;
    export const SkipNextRounded: SvgIconComponent;
    export const SkipNextSharp: SvgIconComponent;
    export const SkipNextTwoTone: SvgIconComponent;
    export const SkipPrevious: SvgIconComponent;
    export const SkipPreviousOutlined: SvgIconComponent;
    export const SkipPreviousRounded: SvgIconComponent;
    export const SkipPreviousSharp: SvgIconComponent;
    export const SkipPreviousTwoTone: SvgIconComponent;
    export const Sledding: SvgIconComponent;
    export const SleddingOutlined: SvgIconComponent;
    export const SleddingRounded: SvgIconComponent;
    export const SleddingSharp: SvgIconComponent;
    export const SleddingTwoTone: SvgIconComponent;
    export const Slideshow: SvgIconComponent;
    export const SlideshowOutlined: SvgIconComponent;
    export const SlideshowRounded: SvgIconComponent;
    export const SlideshowSharp: SvgIconComponent;
    export const SlideshowTwoTone: SvgIconComponent;
    export const SlowMotionVideo: SvgIconComponent;
    export const SlowMotionVideoOutlined: SvgIconComponent;
    export const SlowMotionVideoRounded: SvgIconComponent;
    export const SlowMotionVideoSharp: SvgIconComponent;
    export const SlowMotionVideoTwoTone: SvgIconComponent;
    export const SmartButton: SvgIconComponent;
    export const SmartButtonOutlined: SvgIconComponent;
    export const SmartButtonRounded: SvgIconComponent;
    export const SmartButtonSharp: SvgIconComponent;
    export const SmartButtonTwoTone: SvgIconComponent;
    export const SmartDisplay: SvgIconComponent;
    export const SmartDisplayOutlined: SvgIconComponent;
    export const SmartDisplayRounded: SvgIconComponent;
    export const SmartDisplaySharp: SvgIconComponent;
    export const SmartDisplayTwoTone: SvgIconComponent;
    export const Smartphone: SvgIconComponent;
    export const SmartphoneOutlined: SvgIconComponent;
    export const SmartphoneRounded: SvgIconComponent;
    export const SmartphoneSharp: SvgIconComponent;
    export const SmartphoneTwoTone: SvgIconComponent;
    export const SmartScreen: SvgIconComponent;
    export const SmartScreenOutlined: SvgIconComponent;
    export const SmartScreenRounded: SvgIconComponent;
    export const SmartScreenSharp: SvgIconComponent;
    export const SmartScreenTwoTone: SvgIconComponent;
    export const SmartToy: SvgIconComponent;
    export const SmartToyOutlined: SvgIconComponent;
    export const SmartToyRounded: SvgIconComponent;
    export const SmartToySharp: SvgIconComponent;
    export const SmartToyTwoTone: SvgIconComponent;
    export const SmokeFree: SvgIconComponent;
    export const SmokeFreeOutlined: SvgIconComponent;
    export const SmokeFreeRounded: SvgIconComponent;
    export const SmokeFreeSharp: SvgIconComponent;
    export const SmokeFreeTwoTone: SvgIconComponent;
    export const SmokingRooms: SvgIconComponent;
    export const SmokingRoomsOutlined: SvgIconComponent;
    export const SmokingRoomsRounded: SvgIconComponent;
    export const SmokingRoomsSharp: SvgIconComponent;
    export const SmokingRoomsTwoTone: SvgIconComponent;
    export const Sms: SvgIconComponent;
    export const SmsFailed: SvgIconComponent;
    export const SmsFailedOutlined: SvgIconComponent;
    export const SmsFailedRounded: SvgIconComponent;
    export const SmsFailedSharp: SvgIconComponent;
    export const SmsFailedTwoTone: SvgIconComponent;
    export const SmsOutlined: SvgIconComponent;
    export const SmsRounded: SvgIconComponent;
    export const SmsSharp: SvgIconComponent;
    export const SmsTwoTone: SvgIconComponent;
    export const SnippetFolder: SvgIconComponent;
    export const SnippetFolderOutlined: SvgIconComponent;
    export const SnippetFolderRounded: SvgIconComponent;
    export const SnippetFolderSharp: SvgIconComponent;
    export const SnippetFolderTwoTone: SvgIconComponent;
    export const Snooze: SvgIconComponent;
    export const SnoozeOutlined: SvgIconComponent;
    export const SnoozeRounded: SvgIconComponent;
    export const SnoozeSharp: SvgIconComponent;
    export const SnoozeTwoTone: SvgIconComponent;
    export const Snowboarding: SvgIconComponent;
    export const SnowboardingOutlined: SvgIconComponent;
    export const SnowboardingRounded: SvgIconComponent;
    export const SnowboardingSharp: SvgIconComponent;
    export const SnowboardingTwoTone: SvgIconComponent;
    export const Snowmobile: SvgIconComponent;
    export const SnowmobileOutlined: SvgIconComponent;
    export const SnowmobileRounded: SvgIconComponent;
    export const SnowmobileSharp: SvgIconComponent;
    export const SnowmobileTwoTone: SvgIconComponent;
    export const Snowshoeing: SvgIconComponent;
    export const SnowshoeingOutlined: SvgIconComponent;
    export const SnowshoeingRounded: SvgIconComponent;
    export const SnowshoeingSharp: SvgIconComponent;
    export const SnowshoeingTwoTone: SvgIconComponent;
    export const Soap: SvgIconComponent;
    export const SoapOutlined: SvgIconComponent;
    export const SoapRounded: SvgIconComponent;
    export const SoapSharp: SvgIconComponent;
    export const SoapTwoTone: SvgIconComponent;
    export const SocialDistance: SvgIconComponent;
    export const SocialDistanceOutlined: SvgIconComponent;
    export const SocialDistanceRounded: SvgIconComponent;
    export const SocialDistanceSharp: SvgIconComponent;
    export const SocialDistanceTwoTone: SvgIconComponent;
    export const Sort: SvgIconComponent;
    export const SortByAlpha: SvgIconComponent;
    export const SortByAlphaOutlined: SvgIconComponent;
    export const SortByAlphaRounded: SvgIconComponent;
    export const SortByAlphaSharp: SvgIconComponent;
    export const SortByAlphaTwoTone: SvgIconComponent;
    export const SortOutlined: SvgIconComponent;
    export const SortRounded: SvgIconComponent;
    export const SortSharp: SvgIconComponent;
    export const SortTwoTone: SvgIconComponent;
    export const SoupKitchen: SvgIconComponent;
    export const SoupKitchenOutlined: SvgIconComponent;
    export const SoupKitchenRounded: SvgIconComponent;
    export const SoupKitchenSharp: SvgIconComponent;
    export const SoupKitchenTwoTone: SvgIconComponent;
    export const Source: SvgIconComponent;
    export const SourceOutlined: SvgIconComponent;
    export const SourceRounded: SvgIconComponent;
    export const SourceSharp: SvgIconComponent;
    export const SourceTwoTone: SvgIconComponent;
    export const South: SvgIconComponent;
    export const SouthAmerica: SvgIconComponent;
    export const SouthAmericaOutlined: SvgIconComponent;
    export const SouthAmericaRounded: SvgIconComponent;
    export const SouthAmericaSharp: SvgIconComponent;
    export const SouthAmericaTwoTone: SvgIconComponent;
    export const SouthEast: SvgIconComponent;
    export const SouthEastOutlined: SvgIconComponent;
    export const SouthEastRounded: SvgIconComponent;
    export const SouthEastSharp: SvgIconComponent;
    export const SouthEastTwoTone: SvgIconComponent;
    export const SouthOutlined: SvgIconComponent;
    export const SouthRounded: SvgIconComponent;
    export const SouthSharp: SvgIconComponent;
    export const SouthTwoTone: SvgIconComponent;
    export const SouthWest: SvgIconComponent;
    export const SouthWestOutlined: SvgIconComponent;
    export const SouthWestRounded: SvgIconComponent;
    export const SouthWestSharp: SvgIconComponent;
    export const SouthWestTwoTone: SvgIconComponent;
    export const Spa: SvgIconComponent;
    export const SpaceBar: SvgIconComponent;
    export const SpaceBarOutlined: SvgIconComponent;
    export const SpaceBarRounded: SvgIconComponent;
    export const SpaceBarSharp: SvgIconComponent;
    export const SpaceBarTwoTone: SvgIconComponent;
    export const SpaOutlined: SvgIconComponent;
    export const SpaRounded: SvgIconComponent;
    export const SpaSharp: SvgIconComponent;
    export const SpaTwoTone: SvgIconComponent;
    export const Speaker: SvgIconComponent;
    export const SpeakerGroup: SvgIconComponent;
    export const SpeakerGroupOutlined: SvgIconComponent;
    export const SpeakerGroupRounded: SvgIconComponent;
    export const SpeakerGroupSharp: SvgIconComponent;
    export const SpeakerGroupTwoTone: SvgIconComponent;
    export const SpeakerNotes: SvgIconComponent;
    export const SpeakerNotesOff: SvgIconComponent;
    export const SpeakerNotesOffOutlined: SvgIconComponent;
    export const SpeakerNotesOffRounded: SvgIconComponent;
    export const SpeakerNotesOffSharp: SvgIconComponent;
    export const SpeakerNotesOffTwoTone: SvgIconComponent;
    export const SpeakerNotesOutlined: SvgIconComponent;
    export const SpeakerNotesRounded: SvgIconComponent;
    export const SpeakerNotesSharp: SvgIconComponent;
    export const SpeakerNotesTwoTone: SvgIconComponent;
    export const SpeakerOutlined: SvgIconComponent;
    export const SpeakerPhone: SvgIconComponent;
    export const SpeakerPhoneOutlined: SvgIconComponent;
    export const SpeakerPhoneRounded: SvgIconComponent;
    export const SpeakerPhoneSharp: SvgIconComponent;
    export const SpeakerPhoneTwoTone: SvgIconComponent;
    export const SpeakerRounded: SvgIconComponent;
    export const SpeakerSharp: SvgIconComponent;
    export const SpeakerTwoTone: SvgIconComponent;
    export const Speed: SvgIconComponent;
    export const SpeedOutlined: SvgIconComponent;
    export const SpeedRounded: SvgIconComponent;
    export const SpeedSharp: SvgIconComponent;
    export const SpeedTwoTone: SvgIconComponent;
    export const Spellcheck: SvgIconComponent;
    export const SpellcheckOutlined: SvgIconComponent;
    export const SpellcheckRounded: SvgIconComponent;
    export const SpellcheckSharp: SvgIconComponent;
    export const SpellcheckTwoTone: SvgIconComponent;
    export const Splitscreen: SvgIconComponent;
    export const SplitscreenOutlined: SvgIconComponent;
    export const SplitscreenRounded: SvgIconComponent;
    export const SplitscreenSharp: SvgIconComponent;
    export const SplitscreenTwoTone: SvgIconComponent;
    export const Spoke: SvgIconComponent;
    export const SpokeOutlined: SvgIconComponent;
    export const SpokeRounded: SvgIconComponent;
    export const SpokeSharp: SvgIconComponent;
    export const SpokeTwoTone: SvgIconComponent;
    export const Sports: SvgIconComponent;
    export const SportsBar: SvgIconComponent;
    export const SportsBarOutlined: SvgIconComponent;
    export const SportsBarRounded: SvgIconComponent;
    export const SportsBarSharp: SvgIconComponent;
    export const SportsBarTwoTone: SvgIconComponent;
    export const SportsBaseball: SvgIconComponent;
    export const SportsBaseballOutlined: SvgIconComponent;
    export const SportsBaseballRounded: SvgIconComponent;
    export const SportsBaseballSharp: SvgIconComponent;
    export const SportsBaseballTwoTone: SvgIconComponent;
    export const SportsBasketball: SvgIconComponent;
    export const SportsBasketballOutlined: SvgIconComponent;
    export const SportsBasketballRounded: SvgIconComponent;
    export const SportsBasketballSharp: SvgIconComponent;
    export const SportsBasketballTwoTone: SvgIconComponent;
    export const SportsCricket: SvgIconComponent;
    export const SportsCricketOutlined: SvgIconComponent;
    export const SportsCricketRounded: SvgIconComponent;
    export const SportsCricketSharp: SvgIconComponent;
    export const SportsCricketTwoTone: SvgIconComponent;
    export const SportsEsports: SvgIconComponent;
    export const SportsEsportsOutlined: SvgIconComponent;
    export const SportsEsportsRounded: SvgIconComponent;
    export const SportsEsportsSharp: SvgIconComponent;
    export const SportsEsportsTwoTone: SvgIconComponent;
    export const SportsFootball: SvgIconComponent;
    export const SportsFootballOutlined: SvgIconComponent;
    export const SportsFootballRounded: SvgIconComponent;
    export const SportsFootballSharp: SvgIconComponent;
    export const SportsFootballTwoTone: SvgIconComponent;
    export const SportsGolf: SvgIconComponent;
    export const SportsGolfOutlined: SvgIconComponent;
    export const SportsGolfRounded: SvgIconComponent;
    export const SportsGolfSharp: SvgIconComponent;
    export const SportsGolfTwoTone: SvgIconComponent;
    export const SportsHandball: SvgIconComponent;
    export const SportsHandballOutlined: SvgIconComponent;
    export const SportsHandballRounded: SvgIconComponent;
    export const SportsHandballSharp: SvgIconComponent;
    export const SportsHandballTwoTone: SvgIconComponent;
    export const SportsHockey: SvgIconComponent;
    export const SportsHockeyOutlined: SvgIconComponent;
    export const SportsHockeyRounded: SvgIconComponent;
    export const SportsHockeySharp: SvgIconComponent;
    export const SportsHockeyTwoTone: SvgIconComponent;
    export const SportsKabaddi: SvgIconComponent;
    export const SportsKabaddiOutlined: SvgIconComponent;
    export const SportsKabaddiRounded: SvgIconComponent;
    export const SportsKabaddiSharp: SvgIconComponent;
    export const SportsKabaddiTwoTone: SvgIconComponent;
    export const SportsMartialArts: SvgIconComponent;
    export const SportsMartialArtsOutlined: SvgIconComponent;
    export const SportsMartialArtsRounded: SvgIconComponent;
    export const SportsMartialArtsSharp: SvgIconComponent;
    export const SportsMartialArtsTwoTone: SvgIconComponent;
    export const SportsMma: SvgIconComponent;
    export const SportsMmaOutlined: SvgIconComponent;
    export const SportsMmaRounded: SvgIconComponent;
    export const SportsMmaSharp: SvgIconComponent;
    export const SportsMmaTwoTone: SvgIconComponent;
    export const SportsMotorsports: SvgIconComponent;
    export const SportsMotorsportsOutlined: SvgIconComponent;
    export const SportsMotorsportsRounded: SvgIconComponent;
    export const SportsMotorsportsSharp: SvgIconComponent;
    export const SportsMotorsportsTwoTone: SvgIconComponent;
    export const SportsOutlined: SvgIconComponent;
    export const SportsRounded: SvgIconComponent;
    export const SportsRugby: SvgIconComponent;
    export const SportsRugbyOutlined: SvgIconComponent;
    export const SportsRugbyRounded: SvgIconComponent;
    export const SportsRugbySharp: SvgIconComponent;
    export const SportsRugbyTwoTone: SvgIconComponent;
    export const SportsScore: SvgIconComponent;
    export const SportsScoreOutlined: SvgIconComponent;
    export const SportsScoreRounded: SvgIconComponent;
    export const SportsScoreSharp: SvgIconComponent;
    export const SportsScoreTwoTone: SvgIconComponent;
    export const SportsSharp: SvgIconComponent;
    export const SportsSoccer: SvgIconComponent;
    export const SportsSoccerOutlined: SvgIconComponent;
    export const SportsSoccerRounded: SvgIconComponent;
    export const SportsSoccerSharp: SvgIconComponent;
    export const SportsSoccerTwoTone: SvgIconComponent;
    export const SportsTennis: SvgIconComponent;
    export const SportsTennisOutlined: SvgIconComponent;
    export const SportsTennisRounded: SvgIconComponent;
    export const SportsTennisSharp: SvgIconComponent;
    export const SportsTennisTwoTone: SvgIconComponent;
    export const SportsTwoTone: SvgIconComponent;
    export const SportsVolleyball: SvgIconComponent;
    export const SportsVolleyballOutlined: SvgIconComponent;
    export const SportsVolleyballRounded: SvgIconComponent;
    export const SportsVolleyballSharp: SvgIconComponent;
    export const SportsVolleyballTwoTone: SvgIconComponent;
    export const Square: SvgIconComponent;
    export const SquareFoot: SvgIconComponent;
    export const SquareFootOutlined: SvgIconComponent;
    export const SquareFootRounded: SvgIconComponent;
    export const SquareFootSharp: SvgIconComponent;
    export const SquareFootTwoTone: SvgIconComponent;
    export const SquareOutlined: SvgIconComponent;
    export const SquareRounded: SvgIconComponent;
    export const SquareSharp: SvgIconComponent;
    export const SquareTwoTone: SvgIconComponent;
    export const SsidChart: SvgIconComponent;
    export const SsidChartOutlined: SvgIconComponent;
    export const SsidChartRounded: SvgIconComponent;
    export const SsidChartSharp: SvgIconComponent;
    export const SsidChartTwoTone: SvgIconComponent;
    export const StackedBarChart: SvgIconComponent;
    export const StackedBarChartOutlined: SvgIconComponent;
    export const StackedBarChartRounded: SvgIconComponent;
    export const StackedBarChartSharp: SvgIconComponent;
    export const StackedBarChartTwoTone: SvgIconComponent;
    export const StackedLineChart: SvgIconComponent;
    export const StackedLineChartOutlined: SvgIconComponent;
    export const StackedLineChartRounded: SvgIconComponent;
    export const StackedLineChartSharp: SvgIconComponent;
    export const StackedLineChartTwoTone: SvgIconComponent;
    export const Stadium: SvgIconComponent;
    export const StadiumOutlined: SvgIconComponent;
    export const StadiumRounded: SvgIconComponent;
    export const StadiumSharp: SvgIconComponent;
    export const StadiumTwoTone: SvgIconComponent;
    export const Stairs: SvgIconComponent;
    export const StairsOutlined: SvgIconComponent;
    export const StairsRounded: SvgIconComponent;
    export const StairsSharp: SvgIconComponent;
    export const StairsTwoTone: SvgIconComponent;
    export const Star: SvgIconComponent;
    export const StarBorder: SvgIconComponent;
    export const StarBorderOutlined: SvgIconComponent;
    export const StarBorderPurple500: SvgIconComponent;
    export const StarBorderPurple500Outlined: SvgIconComponent;
    export const StarBorderPurple500Rounded: SvgIconComponent;
    export const StarBorderPurple500Sharp: SvgIconComponent;
    export const StarBorderPurple500TwoTone: SvgIconComponent;
    export const StarBorderRounded: SvgIconComponent;
    export const StarBorderSharp: SvgIconComponent;
    export const StarBorderTwoTone: SvgIconComponent;
    export const StarHalf: SvgIconComponent;
    export const StarHalfOutlined: SvgIconComponent;
    export const StarHalfRounded: SvgIconComponent;
    export const StarHalfSharp: SvgIconComponent;
    export const StarHalfTwoTone: SvgIconComponent;
    export const StarOutline: SvgIconComponent;
    export const StarOutlined: SvgIconComponent;
    export const StarOutlineOutlined: SvgIconComponent;
    export const StarOutlineRounded: SvgIconComponent;
    export const StarOutlineSharp: SvgIconComponent;
    export const StarOutlineTwoTone: SvgIconComponent;
    export const StarPurple500: SvgIconComponent;
    export const StarPurple500Outlined: SvgIconComponent;
    export const StarPurple500Rounded: SvgIconComponent;
    export const StarPurple500Sharp: SvgIconComponent;
    export const StarPurple500TwoTone: SvgIconComponent;
    export const StarRate: SvgIconComponent;
    export const StarRateOutlined: SvgIconComponent;
    export const StarRateRounded: SvgIconComponent;
    export const StarRateSharp: SvgIconComponent;
    export const StarRateTwoTone: SvgIconComponent;
    export const StarRounded: SvgIconComponent;
    export const Stars: SvgIconComponent;
    export const StarSharp: SvgIconComponent;
    export const StarsOutlined: SvgIconComponent;
    export const StarsRounded: SvgIconComponent;
    export const StarsSharp: SvgIconComponent;
    export const StarsTwoTone: SvgIconComponent;
    export const Start: SvgIconComponent;
    export const StartOutlined: SvgIconComponent;
    export const StartRounded: SvgIconComponent;
    export const StartSharp: SvgIconComponent;
    export const StartTwoTone: SvgIconComponent;
    export const StarTwoTone: SvgIconComponent;
    export const StayCurrentLandscape: SvgIconComponent;
    export const StayCurrentLandscapeOutlined: SvgIconComponent;
    export const StayCurrentLandscapeRounded: SvgIconComponent;
    export const StayCurrentLandscapeSharp: SvgIconComponent;
    export const StayCurrentLandscapeTwoTone: SvgIconComponent;
    export const StayCurrentPortrait: SvgIconComponent;
    export const StayCurrentPortraitOutlined: SvgIconComponent;
    export const StayCurrentPortraitRounded: SvgIconComponent;
    export const StayCurrentPortraitSharp: SvgIconComponent;
    export const StayCurrentPortraitTwoTone: SvgIconComponent;
    export const StayPrimaryLandscape: SvgIconComponent;
    export const StayPrimaryLandscapeOutlined: SvgIconComponent;
    export const StayPrimaryLandscapeRounded: SvgIconComponent;
    export const StayPrimaryLandscapeSharp: SvgIconComponent;
    export const StayPrimaryLandscapeTwoTone: SvgIconComponent;
    export const StayPrimaryPortrait: SvgIconComponent;
    export const StayPrimaryPortraitOutlined: SvgIconComponent;
    export const StayPrimaryPortraitRounded: SvgIconComponent;
    export const StayPrimaryPortraitSharp: SvgIconComponent;
    export const StayPrimaryPortraitTwoTone: SvgIconComponent;
    export const StickyNote2: SvgIconComponent;
    export const StickyNote2Outlined: SvgIconComponent;
    export const StickyNote2Rounded: SvgIconComponent;
    export const StickyNote2Sharp: SvgIconComponent;
    export const StickyNote2TwoTone: SvgIconComponent;
    export const Stop: SvgIconComponent;
    export const StopCircle: SvgIconComponent;
    export const StopCircleOutlined: SvgIconComponent;
    export const StopCircleRounded: SvgIconComponent;
    export const StopCircleSharp: SvgIconComponent;
    export const StopCircleTwoTone: SvgIconComponent;
    export const StopOutlined: SvgIconComponent;
    export const StopRounded: SvgIconComponent;
    export const StopScreenShare: SvgIconComponent;
    export const StopScreenShareOutlined: SvgIconComponent;
    export const StopScreenShareRounded: SvgIconComponent;
    export const StopScreenShareSharp: SvgIconComponent;
    export const StopScreenShareTwoTone: SvgIconComponent;
    export const StopSharp: SvgIconComponent;
    export const StopTwoTone: SvgIconComponent;
    export const Storage: SvgIconComponent;
    export const StorageOutlined: SvgIconComponent;
    export const StorageRounded: SvgIconComponent;
    export const StorageSharp: SvgIconComponent;
    export const StorageTwoTone: SvgIconComponent;
    export const Store: SvgIconComponent;
    export const Storefront: SvgIconComponent;
    export const StorefrontOutlined: SvgIconComponent;
    export const StorefrontRounded: SvgIconComponent;
    export const StorefrontSharp: SvgIconComponent;
    export const StorefrontTwoTone: SvgIconComponent;
    export const StoreMallDirectory: SvgIconComponent;
    export const StoreMallDirectoryOutlined: SvgIconComponent;
    export const StoreMallDirectoryRounded: SvgIconComponent;
    export const StoreMallDirectorySharp: SvgIconComponent;
    export const StoreMallDirectoryTwoTone: SvgIconComponent;
    export const StoreOutlined: SvgIconComponent;
    export const StoreRounded: SvgIconComponent;
    export const StoreSharp: SvgIconComponent;
    export const StoreTwoTone: SvgIconComponent;
    export const Storm: SvgIconComponent;
    export const StormOutlined: SvgIconComponent;
    export const StormRounded: SvgIconComponent;
    export const StormSharp: SvgIconComponent;
    export const StormTwoTone: SvgIconComponent;
    export const Straight: SvgIconComponent;
    export const Straighten: SvgIconComponent;
    export const StraightenOutlined: SvgIconComponent;
    export const StraightenRounded: SvgIconComponent;
    export const StraightenSharp: SvgIconComponent;
    export const StraightenTwoTone: SvgIconComponent;
    export const StraightOutlined: SvgIconComponent;
    export const StraightRounded: SvgIconComponent;
    export const StraightSharp: SvgIconComponent;
    export const StraightTwoTone: SvgIconComponent;
    export const Stream: SvgIconComponent;
    export const StreamOutlined: SvgIconComponent;
    export const StreamRounded: SvgIconComponent;
    export const StreamSharp: SvgIconComponent;
    export const StreamTwoTone: SvgIconComponent;
    export const Streetview: SvgIconComponent;
    export const StreetviewOutlined: SvgIconComponent;
    export const StreetviewRounded: SvgIconComponent;
    export const StreetviewSharp: SvgIconComponent;
    export const StreetviewTwoTone: SvgIconComponent;
    export const StrikethroughS: SvgIconComponent;
    export const StrikethroughSOutlined: SvgIconComponent;
    export const StrikethroughSRounded: SvgIconComponent;
    export const StrikethroughSSharp: SvgIconComponent;
    export const StrikethroughSTwoTone: SvgIconComponent;
    export const Stroller: SvgIconComponent;
    export const StrollerOutlined: SvgIconComponent;
    export const StrollerRounded: SvgIconComponent;
    export const StrollerSharp: SvgIconComponent;
    export const StrollerTwoTone: SvgIconComponent;
    export const Style: SvgIconComponent;
    export const StyleOutlined: SvgIconComponent;
    export const StyleRounded: SvgIconComponent;
    export const StyleSharp: SvgIconComponent;
    export const StyleTwoTone: SvgIconComponent;
    export const SubdirectoryArrowLeft: SvgIconComponent;
    export const SubdirectoryArrowLeftOutlined: SvgIconComponent;
    export const SubdirectoryArrowLeftRounded: SvgIconComponent;
    export const SubdirectoryArrowLeftSharp: SvgIconComponent;
    export const SubdirectoryArrowLeftTwoTone: SvgIconComponent;
    export const SubdirectoryArrowRight: SvgIconComponent;
    export const SubdirectoryArrowRightOutlined: SvgIconComponent;
    export const SubdirectoryArrowRightRounded: SvgIconComponent;
    export const SubdirectoryArrowRightSharp: SvgIconComponent;
    export const SubdirectoryArrowRightTwoTone: SvgIconComponent;
    export const Subject: SvgIconComponent;
    export const SubjectOutlined: SvgIconComponent;
    export const SubjectRounded: SvgIconComponent;
    export const SubjectSharp: SvgIconComponent;
    export const SubjectTwoTone: SvgIconComponent;
    export const Subscript: SvgIconComponent;
    export const Subscriptions: SvgIconComponent;
    export const SubscriptionsOutlined: SvgIconComponent;
    export const SubscriptionsRounded: SvgIconComponent;
    export const SubscriptionsSharp: SvgIconComponent;
    export const SubscriptionsTwoTone: SvgIconComponent;
    export const SubscriptOutlined: SvgIconComponent;
    export const SubscriptRounded: SvgIconComponent;
    export const SubscriptSharp: SvgIconComponent;
    export const SubscriptTwoTone: SvgIconComponent;
    export const Subtitles: SvgIconComponent;
    export const SubtitlesOff: SvgIconComponent;
    export const SubtitlesOffOutlined: SvgIconComponent;
    export const SubtitlesOffRounded: SvgIconComponent;
    export const SubtitlesOffSharp: SvgIconComponent;
    export const SubtitlesOffTwoTone: SvgIconComponent;
    export const SubtitlesOutlined: SvgIconComponent;
    export const SubtitlesRounded: SvgIconComponent;
    export const SubtitlesSharp: SvgIconComponent;
    export const SubtitlesTwoTone: SvgIconComponent;
    export const Subway: SvgIconComponent;
    export const SubwayOutlined: SvgIconComponent;
    export const SubwayRounded: SvgIconComponent;
    export const SubwaySharp: SvgIconComponent;
    export const SubwayTwoTone: SvgIconComponent;
    export const Summarize: SvgIconComponent;
    export const SummarizeOutlined: SvgIconComponent;
    export const SummarizeRounded: SvgIconComponent;
    export const SummarizeSharp: SvgIconComponent;
    export const SummarizeTwoTone: SvgIconComponent;
    export const Superscript: SvgIconComponent;
    export const SuperscriptOutlined: SvgIconComponent;
    export const SuperscriptRounded: SvgIconComponent;
    export const SuperscriptSharp: SvgIconComponent;
    export const SuperscriptTwoTone: SvgIconComponent;
    export const SupervisedUserCircle: SvgIconComponent;
    export const SupervisedUserCircleOutlined: SvgIconComponent;
    export const SupervisedUserCircleRounded: SvgIconComponent;
    export const SupervisedUserCircleSharp: SvgIconComponent;
    export const SupervisedUserCircleTwoTone: SvgIconComponent;
    export const SupervisorAccount: SvgIconComponent;
    export const SupervisorAccountOutlined: SvgIconComponent;
    export const SupervisorAccountRounded: SvgIconComponent;
    export const SupervisorAccountSharp: SvgIconComponent;
    export const SupervisorAccountTwoTone: SvgIconComponent;
    export const Support: SvgIconComponent;
    export const SupportAgent: SvgIconComponent;
    export const SupportAgentOutlined: SvgIconComponent;
    export const SupportAgentRounded: SvgIconComponent;
    export const SupportAgentSharp: SvgIconComponent;
    export const SupportAgentTwoTone: SvgIconComponent;
    export const SupportOutlined: SvgIconComponent;
    export const SupportRounded: SvgIconComponent;
    export const SupportSharp: SvgIconComponent;
    export const SupportTwoTone: SvgIconComponent;
    export const Surfing: SvgIconComponent;
    export const SurfingOutlined: SvgIconComponent;
    export const SurfingRounded: SvgIconComponent;
    export const SurfingSharp: SvgIconComponent;
    export const SurfingTwoTone: SvgIconComponent;
    export const SurroundSound: SvgIconComponent;
    export const SurroundSoundOutlined: SvgIconComponent;
    export const SurroundSoundRounded: SvgIconComponent;
    export const SurroundSoundSharp: SvgIconComponent;
    export const SurroundSoundTwoTone: SvgIconComponent;
    export const SwapCalls: SvgIconComponent;
    export const SwapCallsOutlined: SvgIconComponent;
    export const SwapCallsRounded: SvgIconComponent;
    export const SwapCallsSharp: SvgIconComponent;
    export const SwapCallsTwoTone: SvgIconComponent;
    export const SwapHoriz: SvgIconComponent;
    export const SwapHorizontalCircle: SvgIconComponent;
    export const SwapHorizontalCircleOutlined: SvgIconComponent;
    export const SwapHorizontalCircleRounded: SvgIconComponent;
    export const SwapHorizontalCircleSharp: SvgIconComponent;
    export const SwapHorizontalCircleTwoTone: SvgIconComponent;
    export const SwapHorizOutlined: SvgIconComponent;
    export const SwapHorizRounded: SvgIconComponent;
    export const SwapHorizSharp: SvgIconComponent;
    export const SwapHorizTwoTone: SvgIconComponent;
    export const SwapVert: SvgIconComponent;
    export const SwapVerticalCircle: SvgIconComponent;
    export const SwapVerticalCircleOutlined: SvgIconComponent;
    export const SwapVerticalCircleRounded: SvgIconComponent;
    export const SwapVerticalCircleSharp: SvgIconComponent;
    export const SwapVerticalCircleTwoTone: SvgIconComponent;
    export const SwapVertOutlined: SvgIconComponent;
    export const SwapVertRounded: SvgIconComponent;
    export const SwapVertSharp: SvgIconComponent;
    export const SwapVertTwoTone: SvgIconComponent;
    export const Swipe: SvgIconComponent;
    export const SwipeDown: SvgIconComponent;
    export const SwipeDownAlt: SvgIconComponent;
    export const SwipeDownAltOutlined: SvgIconComponent;
    export const SwipeDownAltRounded: SvgIconComponent;
    export const SwipeDownAltSharp: SvgIconComponent;
    export const SwipeDownAltTwoTone: SvgIconComponent;
    export const SwipeDownOutlined: SvgIconComponent;
    export const SwipeDownRounded: SvgIconComponent;
    export const SwipeDownSharp: SvgIconComponent;
    export const SwipeDownTwoTone: SvgIconComponent;
    export const SwipeLeft: SvgIconComponent;
    export const SwipeLeftAlt: SvgIconComponent;
    export const SwipeLeftAltOutlined: SvgIconComponent;
    export const SwipeLeftAltRounded: SvgIconComponent;
    export const SwipeLeftAltSharp: SvgIconComponent;
    export const SwipeLeftAltTwoTone: SvgIconComponent;
    export const SwipeLeftOutlined: SvgIconComponent;
    export const SwipeLeftRounded: SvgIconComponent;
    export const SwipeLeftSharp: SvgIconComponent;
    export const SwipeLeftTwoTone: SvgIconComponent;
    export const SwipeOutlined: SvgIconComponent;
    export const SwipeRight: SvgIconComponent;
    export const SwipeRightAlt: SvgIconComponent;
    export const SwipeRightAltOutlined: SvgIconComponent;
    export const SwipeRightAltRounded: SvgIconComponent;
    export const SwipeRightAltSharp: SvgIconComponent;
    export const SwipeRightAltTwoTone: SvgIconComponent;
    export const SwipeRightOutlined: SvgIconComponent;
    export const SwipeRightRounded: SvgIconComponent;
    export const SwipeRightSharp: SvgIconComponent;
    export const SwipeRightTwoTone: SvgIconComponent;
    export const SwipeRounded: SvgIconComponent;
    export const SwipeSharp: SvgIconComponent;
    export const SwipeTwoTone: SvgIconComponent;
    export const SwipeUp: SvgIconComponent;
    export const SwipeUpAlt: SvgIconComponent;
    export const SwipeUpAltOutlined: SvgIconComponent;
    export const SwipeUpAltRounded: SvgIconComponent;
    export const SwipeUpAltSharp: SvgIconComponent;
    export const SwipeUpAltTwoTone: SvgIconComponent;
    export const SwipeUpOutlined: SvgIconComponent;
    export const SwipeUpRounded: SvgIconComponent;
    export const SwipeUpSharp: SvgIconComponent;
    export const SwipeUpTwoTone: SvgIconComponent;
    export const SwipeVertical: SvgIconComponent;
    export const SwipeVerticalOutlined: SvgIconComponent;
    export const SwipeVerticalRounded: SvgIconComponent;
    export const SwipeVerticalSharp: SvgIconComponent;
    export const SwipeVerticalTwoTone: SvgIconComponent;
    export const SwitchAccessShortcut: SvgIconComponent;
    export const SwitchAccessShortcutAdd: SvgIconComponent;
    export const SwitchAccessShortcutAddOutlined: SvgIconComponent;
    export const SwitchAccessShortcutAddRounded: SvgIconComponent;
    export const SwitchAccessShortcutAddSharp: SvgIconComponent;
    export const SwitchAccessShortcutAddTwoTone: SvgIconComponent;
    export const SwitchAccessShortcutOutlined: SvgIconComponent;
    export const SwitchAccessShortcutRounded: SvgIconComponent;
    export const SwitchAccessShortcutSharp: SvgIconComponent;
    export const SwitchAccessShortcutTwoTone: SvgIconComponent;
    export const SwitchAccount: SvgIconComponent;
    export const SwitchAccountOutlined: SvgIconComponent;
    export const SwitchAccountRounded: SvgIconComponent;
    export const SwitchAccountSharp: SvgIconComponent;
    export const SwitchAccountTwoTone: SvgIconComponent;
    export const SwitchCamera: SvgIconComponent;
    export const SwitchCameraOutlined: SvgIconComponent;
    export const SwitchCameraRounded: SvgIconComponent;
    export const SwitchCameraSharp: SvgIconComponent;
    export const SwitchCameraTwoTone: SvgIconComponent;
    export const SwitchLeft: SvgIconComponent;
    export const SwitchLeftOutlined: SvgIconComponent;
    export const SwitchLeftRounded: SvgIconComponent;
    export const SwitchLeftSharp: SvgIconComponent;
    export const SwitchLeftTwoTone: SvgIconComponent;
    export const SwitchRight: SvgIconComponent;
    export const SwitchRightOutlined: SvgIconComponent;
    export const SwitchRightRounded: SvgIconComponent;
    export const SwitchRightSharp: SvgIconComponent;
    export const SwitchRightTwoTone: SvgIconComponent;
    export const SwitchVideo: SvgIconComponent;
    export const SwitchVideoOutlined: SvgIconComponent;
    export const SwitchVideoRounded: SvgIconComponent;
    export const SwitchVideoSharp: SvgIconComponent;
    export const SwitchVideoTwoTone: SvgIconComponent;
    export const Synagogue: SvgIconComponent;
    export const SynagogueOutlined: SvgIconComponent;
    export const SynagogueRounded: SvgIconComponent;
    export const SynagogueSharp: SvgIconComponent;
    export const SynagogueTwoTone: SvgIconComponent;
    export const Sync: SvgIconComponent;
    export const SyncAlt: SvgIconComponent;
    export const SyncAltOutlined: SvgIconComponent;
    export const SyncAltRounded: SvgIconComponent;
    export const SyncAltSharp: SvgIconComponent;
    export const SyncAltTwoTone: SvgIconComponent;
    export const SyncDisabled: SvgIconComponent;
    export const SyncDisabledOutlined: SvgIconComponent;
    export const SyncDisabledRounded: SvgIconComponent;
    export const SyncDisabledSharp: SvgIconComponent;
    export const SyncDisabledTwoTone: SvgIconComponent;
    export const SyncLock: SvgIconComponent;
    export const SyncLockOutlined: SvgIconComponent;
    export const SyncLockRounded: SvgIconComponent;
    export const SyncLockSharp: SvgIconComponent;
    export const SyncLockTwoTone: SvgIconComponent;
    export const SyncOutlined: SvgIconComponent;
    export const SyncProblem: SvgIconComponent;
    export const SyncProblemOutlined: SvgIconComponent;
    export const SyncProblemRounded: SvgIconComponent;
    export const SyncProblemSharp: SvgIconComponent;
    export const SyncProblemTwoTone: SvgIconComponent;
    export const SyncRounded: SvgIconComponent;
    export const SyncSharp: SvgIconComponent;
    export const SyncTwoTone: SvgIconComponent;
    export const SystemSecurityUpdate: SvgIconComponent;
    export const SystemSecurityUpdateGood: SvgIconComponent;
    export const SystemSecurityUpdateGoodOutlined: SvgIconComponent;
    export const SystemSecurityUpdateGoodRounded: SvgIconComponent;
    export const SystemSecurityUpdateGoodSharp: SvgIconComponent;
    export const SystemSecurityUpdateGoodTwoTone: SvgIconComponent;
    export const SystemSecurityUpdateOutlined: SvgIconComponent;
    export const SystemSecurityUpdateRounded: SvgIconComponent;
    export const SystemSecurityUpdateSharp: SvgIconComponent;
    export const SystemSecurityUpdateTwoTone: SvgIconComponent;
    export const SystemSecurityUpdateWarning: SvgIconComponent;
    export const SystemSecurityUpdateWarningOutlined: SvgIconComponent;
    export const SystemSecurityUpdateWarningRounded: SvgIconComponent;
    export const SystemSecurityUpdateWarningSharp: SvgIconComponent;
    export const SystemSecurityUpdateWarningTwoTone: SvgIconComponent;
    export const SystemUpdate: SvgIconComponent;
    export const SystemUpdateAlt: SvgIconComponent;
    export const SystemUpdateAltOutlined: SvgIconComponent;
    export const SystemUpdateAltRounded: SvgIconComponent;
    export const SystemUpdateAltSharp: SvgIconComponent;
    export const SystemUpdateAltTwoTone: SvgIconComponent;
    export const SystemUpdateOutlined: SvgIconComponent;
    export const SystemUpdateRounded: SvgIconComponent;
    export const SystemUpdateSharp: SvgIconComponent;
    export const SystemUpdateTwoTone: SvgIconComponent;
    export const Tab: SvgIconComponent;
    export const TableBar: SvgIconComponent;
    export const TableBarOutlined: SvgIconComponent;
    export const TableBarRounded: SvgIconComponent;
    export const TableBarSharp: SvgIconComponent;
    export const TableBarTwoTone: SvgIconComponent;
    export const TableChart: SvgIconComponent;
    export const TableChartOutlined: SvgIconComponent;
    export const TableChartRounded: SvgIconComponent;
    export const TableChartSharp: SvgIconComponent;
    export const TableChartTwoTone: SvgIconComponent;
    export const TableRestaurant: SvgIconComponent;
    export const TableRestaurantOutlined: SvgIconComponent;
    export const TableRestaurantRounded: SvgIconComponent;
    export const TableRestaurantSharp: SvgIconComponent;
    export const TableRestaurantTwoTone: SvgIconComponent;
    export const TableRows: SvgIconComponent;
    export const TableRowsOutlined: SvgIconComponent;
    export const TableRowsRounded: SvgIconComponent;
    export const TableRowsSharp: SvgIconComponent;
    export const TableRowsTwoTone: SvgIconComponent;
    export const Tablet: SvgIconComponent;
    export const TabletAndroid: SvgIconComponent;
    export const TabletAndroidOutlined: SvgIconComponent;
    export const TabletAndroidRounded: SvgIconComponent;
    export const TabletAndroidSharp: SvgIconComponent;
    export const TabletAndroidTwoTone: SvgIconComponent;
    export const TabletMac: SvgIconComponent;
    export const TabletMacOutlined: SvgIconComponent;
    export const TabletMacRounded: SvgIconComponent;
    export const TabletMacSharp: SvgIconComponent;
    export const TabletMacTwoTone: SvgIconComponent;
    export const TabletOutlined: SvgIconComponent;
    export const TabletRounded: SvgIconComponent;
    export const TabletSharp: SvgIconComponent;
    export const TabletTwoTone: SvgIconComponent;
    export const TableView: SvgIconComponent;
    export const TableViewOutlined: SvgIconComponent;
    export const TableViewRounded: SvgIconComponent;
    export const TableViewSharp: SvgIconComponent;
    export const TableViewTwoTone: SvgIconComponent;
    export const TabOutlined: SvgIconComponent;
    export const TabRounded: SvgIconComponent;
    export const TabSharp: SvgIconComponent;
    export const TabTwoTone: SvgIconComponent;
    export const TabUnselected: SvgIconComponent;
    export const TabUnselectedOutlined: SvgIconComponent;
    export const TabUnselectedRounded: SvgIconComponent;
    export const TabUnselectedSharp: SvgIconComponent;
    export const TabUnselectedTwoTone: SvgIconComponent;
    export const Tag: SvgIconComponent;
    export const TagFaces: SvgIconComponent;
    export const TagFacesOutlined: SvgIconComponent;
    export const TagFacesRounded: SvgIconComponent;
    export const TagFacesSharp: SvgIconComponent;
    export const TagFacesTwoTone: SvgIconComponent;
    export const TagOutlined: SvgIconComponent;
    export const TagRounded: SvgIconComponent;
    export const TagSharp: SvgIconComponent;
    export const TagTwoTone: SvgIconComponent;
    export const TakeoutDining: SvgIconComponent;
    export const TakeoutDiningOutlined: SvgIconComponent;
    export const TakeoutDiningRounded: SvgIconComponent;
    export const TakeoutDiningSharp: SvgIconComponent;
    export const TakeoutDiningTwoTone: SvgIconComponent;
    export const TapAndPlay: SvgIconComponent;
    export const TapAndPlayOutlined: SvgIconComponent;
    export const TapAndPlayRounded: SvgIconComponent;
    export const TapAndPlaySharp: SvgIconComponent;
    export const TapAndPlayTwoTone: SvgIconComponent;
    export const Tapas: SvgIconComponent;
    export const TapasOutlined: SvgIconComponent;
    export const TapasRounded: SvgIconComponent;
    export const TapasSharp: SvgIconComponent;
    export const TapasTwoTone: SvgIconComponent;
    export const Task: SvgIconComponent;
    export const TaskAlt: SvgIconComponent;
    export const TaskAltOutlined: SvgIconComponent;
    export const TaskAltRounded: SvgIconComponent;
    export const TaskAltSharp: SvgIconComponent;
    export const TaskAltTwoTone: SvgIconComponent;
    export const TaskOutlined: SvgIconComponent;
    export const TaskRounded: SvgIconComponent;
    export const TaskSharp: SvgIconComponent;
    export const TaskTwoTone: SvgIconComponent;
    export const TaxiAlert: SvgIconComponent;
    export const TaxiAlertOutlined: SvgIconComponent;
    export const TaxiAlertRounded: SvgIconComponent;
    export const TaxiAlertSharp: SvgIconComponent;
    export const TaxiAlertTwoTone: SvgIconComponent;
    export const Telegram: SvgIconComponent;
    export const TempleBuddhist: SvgIconComponent;
    export const TempleBuddhistOutlined: SvgIconComponent;
    export const TempleBuddhistRounded: SvgIconComponent;
    export const TempleBuddhistSharp: SvgIconComponent;
    export const TempleBuddhistTwoTone: SvgIconComponent;
    export const TempleHindu: SvgIconComponent;
    export const TempleHinduOutlined: SvgIconComponent;
    export const TempleHinduRounded: SvgIconComponent;
    export const TempleHinduSharp: SvgIconComponent;
    export const TempleHinduTwoTone: SvgIconComponent;
    export const TenMp: SvgIconComponent;
    export const TenMpOutlined: SvgIconComponent;
    export const TenMpRounded: SvgIconComponent;
    export const TenMpSharp: SvgIconComponent;
    export const TenMpTwoTone: SvgIconComponent;
    export const Terminal: SvgIconComponent;
    export const TerminalOutlined: SvgIconComponent;
    export const TerminalRounded: SvgIconComponent;
    export const TerminalSharp: SvgIconComponent;
    export const TerminalTwoTone: SvgIconComponent;
    export const Terrain: SvgIconComponent;
    export const TerrainOutlined: SvgIconComponent;
    export const TerrainRounded: SvgIconComponent;
    export const TerrainSharp: SvgIconComponent;
    export const TerrainTwoTone: SvgIconComponent;
    export const TextDecrease: SvgIconComponent;
    export const TextDecreaseOutlined: SvgIconComponent;
    export const TextDecreaseRounded: SvgIconComponent;
    export const TextDecreaseSharp: SvgIconComponent;
    export const TextDecreaseTwoTone: SvgIconComponent;
    export const TextFields: SvgIconComponent;
    export const TextFieldsOutlined: SvgIconComponent;
    export const TextFieldsRounded: SvgIconComponent;
    export const TextFieldsSharp: SvgIconComponent;
    export const TextFieldsTwoTone: SvgIconComponent;
    export const TextFormat: SvgIconComponent;
    export const TextFormatOutlined: SvgIconComponent;
    export const TextFormatRounded: SvgIconComponent;
    export const TextFormatSharp: SvgIconComponent;
    export const TextFormatTwoTone: SvgIconComponent;
    export const TextIncrease: SvgIconComponent;
    export const TextIncreaseOutlined: SvgIconComponent;
    export const TextIncreaseRounded: SvgIconComponent;
    export const TextIncreaseSharp: SvgIconComponent;
    export const TextIncreaseTwoTone: SvgIconComponent;
    export const TextRotateUp: SvgIconComponent;
    export const TextRotateUpOutlined: SvgIconComponent;
    export const TextRotateUpRounded: SvgIconComponent;
    export const TextRotateUpSharp: SvgIconComponent;
    export const TextRotateUpTwoTone: SvgIconComponent;
    export const TextRotateVertical: SvgIconComponent;
    export const TextRotateVerticalOutlined: SvgIconComponent;
    export const TextRotateVerticalRounded: SvgIconComponent;
    export const TextRotateVerticalSharp: SvgIconComponent;
    export const TextRotateVerticalTwoTone: SvgIconComponent;
    export const TextRotationAngledown: SvgIconComponent;
    export const TextRotationAngledownOutlined: SvgIconComponent;
    export const TextRotationAngledownRounded: SvgIconComponent;
    export const TextRotationAngledownSharp: SvgIconComponent;
    export const TextRotationAngledownTwoTone: SvgIconComponent;
    export const TextRotationAngleup: SvgIconComponent;
    export const TextRotationAngleupOutlined: SvgIconComponent;
    export const TextRotationAngleupRounded: SvgIconComponent;
    export const TextRotationAngleupSharp: SvgIconComponent;
    export const TextRotationAngleupTwoTone: SvgIconComponent;
    export const TextRotationDown: SvgIconComponent;
    export const TextRotationDownOutlined: SvgIconComponent;
    export const TextRotationDownRounded: SvgIconComponent;
    export const TextRotationDownSharp: SvgIconComponent;
    export const TextRotationDownTwoTone: SvgIconComponent;
    export const TextRotationNone: SvgIconComponent;
    export const TextRotationNoneOutlined: SvgIconComponent;
    export const TextRotationNoneRounded: SvgIconComponent;
    export const TextRotationNoneSharp: SvgIconComponent;
    export const TextRotationNoneTwoTone: SvgIconComponent;
    export const Textsms: SvgIconComponent;
    export const TextsmsOutlined: SvgIconComponent;
    export const TextsmsRounded: SvgIconComponent;
    export const TextsmsSharp: SvgIconComponent;
    export const TextsmsTwoTone: SvgIconComponent;
    export const TextSnippet: SvgIconComponent;
    export const TextSnippetOutlined: SvgIconComponent;
    export const TextSnippetRounded: SvgIconComponent;
    export const TextSnippetSharp: SvgIconComponent;
    export const TextSnippetTwoTone: SvgIconComponent;
    export const Texture: SvgIconComponent;
    export const TextureOutlined: SvgIconComponent;
    export const TextureRounded: SvgIconComponent;
    export const TextureSharp: SvgIconComponent;
    export const TextureTwoTone: SvgIconComponent;
    export const TheaterComedy: SvgIconComponent;
    export const TheaterComedyOutlined: SvgIconComponent;
    export const TheaterComedyRounded: SvgIconComponent;
    export const TheaterComedySharp: SvgIconComponent;
    export const TheaterComedyTwoTone: SvgIconComponent;
    export const Theaters: SvgIconComponent;
    export const TheatersOutlined: SvgIconComponent;
    export const TheatersRounded: SvgIconComponent;
    export const TheatersSharp: SvgIconComponent;
    export const TheatersTwoTone: SvgIconComponent;
    export const Thermostat: SvgIconComponent;
    export const ThermostatAuto: SvgIconComponent;
    export const ThermostatAutoOutlined: SvgIconComponent;
    export const ThermostatAutoRounded: SvgIconComponent;
    export const ThermostatAutoSharp: SvgIconComponent;
    export const ThermostatAutoTwoTone: SvgIconComponent;
    export const ThermostatOutlined: SvgIconComponent;
    export const ThermostatRounded: SvgIconComponent;
    export const ThermostatSharp: SvgIconComponent;
    export const ThermostatTwoTone: SvgIconComponent;
    export const ThirteenMp: SvgIconComponent;
    export const ThirteenMpOutlined: SvgIconComponent;
    export const ThirteenMpRounded: SvgIconComponent;
    export const ThirteenMpSharp: SvgIconComponent;
    export const ThirteenMpTwoTone: SvgIconComponent;
    export const ThirtyFps: SvgIconComponent;
    export const ThirtyFpsOutlined: SvgIconComponent;
    export const ThirtyFpsRounded: SvgIconComponent;
    export const ThirtyFpsSelect: SvgIconComponent;
    export const ThirtyFpsSelectOutlined: SvgIconComponent;
    export const ThirtyFpsSelectRounded: SvgIconComponent;
    export const ThirtyFpsSelectSharp: SvgIconComponent;
    export const ThirtyFpsSelectTwoTone: SvgIconComponent;
    export const ThirtyFpsSharp: SvgIconComponent;
    export const ThirtyFpsTwoTone: SvgIconComponent;
    export const ThreeDRotation: SvgIconComponent;
    export const ThreeDRotationOutlined: SvgIconComponent;
    export const ThreeDRotationRounded: SvgIconComponent;
    export const ThreeDRotationSharp: SvgIconComponent;
    export const ThreeDRotationTwoTone: SvgIconComponent;
    export const ThreeGMobiledata: SvgIconComponent;
    export const ThreeGMobiledataOutlined: SvgIconComponent;
    export const ThreeGMobiledataRounded: SvgIconComponent;
    export const ThreeGMobiledataSharp: SvgIconComponent;
    export const ThreeGMobiledataTwoTone: SvgIconComponent;
    export const ThreeK: SvgIconComponent;
    export const ThreeKOutlined: SvgIconComponent;
    export const ThreeKPlus: SvgIconComponent;
    export const ThreeKPlusOutlined: SvgIconComponent;
    export const ThreeKPlusRounded: SvgIconComponent;
    export const ThreeKPlusSharp: SvgIconComponent;
    export const ThreeKPlusTwoTone: SvgIconComponent;
    export const ThreeKRounded: SvgIconComponent;
    export const ThreeKSharp: SvgIconComponent;
    export const ThreeKTwoTone: SvgIconComponent;
    export const ThreeMp: SvgIconComponent;
    export const ThreeMpOutlined: SvgIconComponent;
    export const ThreeMpRounded: SvgIconComponent;
    export const ThreeMpSharp: SvgIconComponent;
    export const ThreeMpTwoTone: SvgIconComponent;
    export const ThreeP: SvgIconComponent;
    export const ThreePOutlined: SvgIconComponent;
    export const ThreePRounded: SvgIconComponent;
    export const ThreePSharp: SvgIconComponent;
    export const ThreePTwoTone: SvgIconComponent;
    export const ThreeSixty: SvgIconComponent;
    export const ThreeSixtyOutlined: SvgIconComponent;
    export const ThreeSixtyRounded: SvgIconComponent;
    export const ThreeSixtySharp: SvgIconComponent;
    export const ThreeSixtyTwoTone: SvgIconComponent;
    export const ThumbDown: SvgIconComponent;
    export const ThumbDownAlt: SvgIconComponent;
    export const ThumbDownAltOutlined: SvgIconComponent;
    export const ThumbDownAltRounded: SvgIconComponent;
    export const ThumbDownAltSharp: SvgIconComponent;
    export const ThumbDownAltTwoTone: SvgIconComponent;
    export const ThumbDownOffAlt: SvgIconComponent;
    export const ThumbDownOffAltOutlined: SvgIconComponent;
    export const ThumbDownOffAltRounded: SvgIconComponent;
    export const ThumbDownOffAltSharp: SvgIconComponent;
    export const ThumbDownOffAltTwoTone: SvgIconComponent;
    export const ThumbDownOutlined: SvgIconComponent;
    export const ThumbDownRounded: SvgIconComponent;
    export const ThumbDownSharp: SvgIconComponent;
    export const ThumbDownTwoTone: SvgIconComponent;
    export const ThumbsUpDown: SvgIconComponent;
    export const ThumbsUpDownOutlined: SvgIconComponent;
    export const ThumbsUpDownRounded: SvgIconComponent;
    export const ThumbsUpDownSharp: SvgIconComponent;
    export const ThumbsUpDownTwoTone: SvgIconComponent;
    export const ThumbUp: SvgIconComponent;
    export const ThumbUpAlt: SvgIconComponent;
    export const ThumbUpAltOutlined: SvgIconComponent;
    export const ThumbUpAltRounded: SvgIconComponent;
    export const ThumbUpAltSharp: SvgIconComponent;
    export const ThumbUpAltTwoTone: SvgIconComponent;
    export const ThumbUpOffAlt: SvgIconComponent;
    export const ThumbUpOffAltOutlined: SvgIconComponent;
    export const ThumbUpOffAltRounded: SvgIconComponent;
    export const ThumbUpOffAltSharp: SvgIconComponent;
    export const ThumbUpOffAltTwoTone: SvgIconComponent;
    export const ThumbUpOutlined: SvgIconComponent;
    export const ThumbUpRounded: SvgIconComponent;
    export const ThumbUpSharp: SvgIconComponent;
    export const ThumbUpTwoTone: SvgIconComponent;
    export const Timelapse: SvgIconComponent;
    export const TimelapseOutlined: SvgIconComponent;
    export const TimelapseRounded: SvgIconComponent;
    export const TimelapseSharp: SvgIconComponent;
    export const TimelapseTwoTone: SvgIconComponent;
    export const Timeline: SvgIconComponent;
    export const TimelineOutlined: SvgIconComponent;
    export const TimelineRounded: SvgIconComponent;
    export const TimelineSharp: SvgIconComponent;
    export const TimelineTwoTone: SvgIconComponent;
    export const Timer: SvgIconComponent;
    export const Timer10: SvgIconComponent;
    export const Timer10Outlined: SvgIconComponent;
    export const Timer10Rounded: SvgIconComponent;
    export const Timer10Select: SvgIconComponent;
    export const Timer10SelectOutlined: SvgIconComponent;
    export const Timer10SelectRounded: SvgIconComponent;
    export const Timer10SelectSharp: SvgIconComponent;
    export const Timer10SelectTwoTone: SvgIconComponent;
    export const Timer10Sharp: SvgIconComponent;
    export const Timer10TwoTone: SvgIconComponent;
    export const Timer3: SvgIconComponent;
    export const Timer3Outlined: SvgIconComponent;
    export const Timer3Rounded: SvgIconComponent;
    export const Timer3Select: SvgIconComponent;
    export const Timer3SelectOutlined: SvgIconComponent;
    export const Timer3SelectRounded: SvgIconComponent;
    export const Timer3SelectSharp: SvgIconComponent;
    export const Timer3SelectTwoTone: SvgIconComponent;
    export const Timer3Sharp: SvgIconComponent;
    export const Timer3TwoTone: SvgIconComponent;
    export const TimerOff: SvgIconComponent;
    export const TimerOffOutlined: SvgIconComponent;
    export const TimerOffRounded: SvgIconComponent;
    export const TimerOffSharp: SvgIconComponent;
    export const TimerOffTwoTone: SvgIconComponent;
    export const TimerOutlined: SvgIconComponent;
    export const TimerRounded: SvgIconComponent;
    export const TimerSharp: SvgIconComponent;
    export const TimerTwoTone: SvgIconComponent;
    export const TimesOneMobiledata: SvgIconComponent;
    export const TimesOneMobiledataOutlined: SvgIconComponent;
    export const TimesOneMobiledataRounded: SvgIconComponent;
    export const TimesOneMobiledataSharp: SvgIconComponent;
    export const TimesOneMobiledataTwoTone: SvgIconComponent;
    export const TimeToLeave: SvgIconComponent;
    export const TimeToLeaveOutlined: SvgIconComponent;
    export const TimeToLeaveRounded: SvgIconComponent;
    export const TimeToLeaveSharp: SvgIconComponent;
    export const TimeToLeaveTwoTone: SvgIconComponent;
    export const TipsAndUpdates: SvgIconComponent;
    export const TipsAndUpdatesOutlined: SvgIconComponent;
    export const TipsAndUpdatesRounded: SvgIconComponent;
    export const TipsAndUpdatesSharp: SvgIconComponent;
    export const TipsAndUpdatesTwoTone: SvgIconComponent;
    export const Title: SvgIconComponent;
    export const TitleOutlined: SvgIconComponent;
    export const TitleRounded: SvgIconComponent;
    export const TitleSharp: SvgIconComponent;
    export const TitleTwoTone: SvgIconComponent;
    export const Toc: SvgIconComponent;
    export const TocOutlined: SvgIconComponent;
    export const TocRounded: SvgIconComponent;
    export const TocSharp: SvgIconComponent;
    export const TocTwoTone: SvgIconComponent;
    export const Today: SvgIconComponent;
    export const TodayOutlined: SvgIconComponent;
    export const TodayRounded: SvgIconComponent;
    export const TodaySharp: SvgIconComponent;
    export const TodayTwoTone: SvgIconComponent;
    export const ToggleOff: SvgIconComponent;
    export const ToggleOffOutlined: SvgIconComponent;
    export const ToggleOffRounded: SvgIconComponent;
    export const ToggleOffSharp: SvgIconComponent;
    export const ToggleOffTwoTone: SvgIconComponent;
    export const ToggleOn: SvgIconComponent;
    export const ToggleOnOutlined: SvgIconComponent;
    export const ToggleOnRounded: SvgIconComponent;
    export const ToggleOnSharp: SvgIconComponent;
    export const ToggleOnTwoTone: SvgIconComponent;
    export const Token: SvgIconComponent;
    export const TokenOutlined: SvgIconComponent;
    export const TokenRounded: SvgIconComponent;
    export const TokenSharp: SvgIconComponent;
    export const TokenTwoTone: SvgIconComponent;
    export const Toll: SvgIconComponent;
    export const TollOutlined: SvgIconComponent;
    export const TollRounded: SvgIconComponent;
    export const TollSharp: SvgIconComponent;
    export const TollTwoTone: SvgIconComponent;
    export const Tonality: SvgIconComponent;
    export const TonalityOutlined: SvgIconComponent;
    export const TonalityRounded: SvgIconComponent;
    export const TonalitySharp: SvgIconComponent;
    export const TonalityTwoTone: SvgIconComponent;
    export const Topic: SvgIconComponent;
    export const TopicOutlined: SvgIconComponent;
    export const TopicRounded: SvgIconComponent;
    export const TopicSharp: SvgIconComponent;
    export const TopicTwoTone: SvgIconComponent;
    export const TouchApp: SvgIconComponent;
    export const TouchAppOutlined: SvgIconComponent;
    export const TouchAppRounded: SvgIconComponent;
    export const TouchAppSharp: SvgIconComponent;
    export const TouchAppTwoTone: SvgIconComponent;
    export const Tour: SvgIconComponent;
    export const TourOutlined: SvgIconComponent;
    export const TourRounded: SvgIconComponent;
    export const TourSharp: SvgIconComponent;
    export const TourTwoTone: SvgIconComponent;
    export const Toys: SvgIconComponent;
    export const ToysOutlined: SvgIconComponent;
    export const ToysRounded: SvgIconComponent;
    export const ToysSharp: SvgIconComponent;
    export const ToysTwoTone: SvgIconComponent;
    export const TrackChanges: SvgIconComponent;
    export const TrackChangesOutlined: SvgIconComponent;
    export const TrackChangesRounded: SvgIconComponent;
    export const TrackChangesSharp: SvgIconComponent;
    export const TrackChangesTwoTone: SvgIconComponent;
    export const Traffic: SvgIconComponent;
    export const TrafficOutlined: SvgIconComponent;
    export const TrafficRounded: SvgIconComponent;
    export const TrafficSharp: SvgIconComponent;
    export const TrafficTwoTone: SvgIconComponent;
    export const Train: SvgIconComponent;
    export const TrainOutlined: SvgIconComponent;
    export const TrainRounded: SvgIconComponent;
    export const TrainSharp: SvgIconComponent;
    export const TrainTwoTone: SvgIconComponent;
    export const Tram: SvgIconComponent;
    export const TramOutlined: SvgIconComponent;
    export const TramRounded: SvgIconComponent;
    export const TramSharp: SvgIconComponent;
    export const TramTwoTone: SvgIconComponent;
    export const TransferWithinAStation: SvgIconComponent;
    export const TransferWithinAStationOutlined: SvgIconComponent;
    export const TransferWithinAStationRounded: SvgIconComponent;
    export const TransferWithinAStationSharp: SvgIconComponent;
    export const TransferWithinAStationTwoTone: SvgIconComponent;
    export const Transform: SvgIconComponent;
    export const TransformOutlined: SvgIconComponent;
    export const TransformRounded: SvgIconComponent;
    export const TransformSharp: SvgIconComponent;
    export const TransformTwoTone: SvgIconComponent;
    export const Transgender: SvgIconComponent;
    export const TransgenderOutlined: SvgIconComponent;
    export const TransgenderRounded: SvgIconComponent;
    export const TransgenderSharp: SvgIconComponent;
    export const TransgenderTwoTone: SvgIconComponent;
    export const TransitEnterexit: SvgIconComponent;
    export const TransitEnterexitOutlined: SvgIconComponent;
    export const TransitEnterexitRounded: SvgIconComponent;
    export const TransitEnterexitSharp: SvgIconComponent;
    export const TransitEnterexitTwoTone: SvgIconComponent;
    export const Translate: SvgIconComponent;
    export const TranslateOutlined: SvgIconComponent;
    export const TranslateRounded: SvgIconComponent;
    export const TranslateSharp: SvgIconComponent;
    export const TranslateTwoTone: SvgIconComponent;
    export const TravelExplore: SvgIconComponent;
    export const TravelExploreOutlined: SvgIconComponent;
    export const TravelExploreRounded: SvgIconComponent;
    export const TravelExploreSharp: SvgIconComponent;
    export const TravelExploreTwoTone: SvgIconComponent;
    export const TrendingDown: SvgIconComponent;
    export const TrendingDownOutlined: SvgIconComponent;
    export const TrendingDownRounded: SvgIconComponent;
    export const TrendingDownSharp: SvgIconComponent;
    export const TrendingDownTwoTone: SvgIconComponent;
    export const TrendingFlat: SvgIconComponent;
    export const TrendingFlatOutlined: SvgIconComponent;
    export const TrendingFlatRounded: SvgIconComponent;
    export const TrendingFlatSharp: SvgIconComponent;
    export const TrendingFlatTwoTone: SvgIconComponent;
    export const TrendingUp: SvgIconComponent;
    export const TrendingUpOutlined: SvgIconComponent;
    export const TrendingUpRounded: SvgIconComponent;
    export const TrendingUpSharp: SvgIconComponent;
    export const TrendingUpTwoTone: SvgIconComponent;
    export const TripOrigin: SvgIconComponent;
    export const TripOriginOutlined: SvgIconComponent;
    export const TripOriginRounded: SvgIconComponent;
    export const TripOriginSharp: SvgIconComponent;
    export const TripOriginTwoTone: SvgIconComponent;
    export const Try: SvgIconComponent;
    export const TryOutlined: SvgIconComponent;
    export const TryRounded: SvgIconComponent;
    export const TrySharp: SvgIconComponent;
    export const TryTwoTone: SvgIconComponent;
    export const Tty: SvgIconComponent;
    export const TtyOutlined: SvgIconComponent;
    export const TtyRounded: SvgIconComponent;
    export const TtySharp: SvgIconComponent;
    export const TtyTwoTone: SvgIconComponent;
    export const Tune: SvgIconComponent;
    export const TuneOutlined: SvgIconComponent;
    export const TuneRounded: SvgIconComponent;
    export const TuneSharp: SvgIconComponent;
    export const TuneTwoTone: SvgIconComponent;
    export const Tungsten: SvgIconComponent;
    export const TungstenOutlined: SvgIconComponent;
    export const TungstenRounded: SvgIconComponent;
    export const TungstenSharp: SvgIconComponent;
    export const TungstenTwoTone: SvgIconComponent;
    export const TurnedIn: SvgIconComponent;
    export const TurnedInNot: SvgIconComponent;
    export const TurnedInNotOutlined: SvgIconComponent;
    export const TurnedInNotRounded: SvgIconComponent;
    export const TurnedInNotSharp: SvgIconComponent;
    export const TurnedInNotTwoTone: SvgIconComponent;
    export const TurnedInOutlined: SvgIconComponent;
    export const TurnedInRounded: SvgIconComponent;
    export const TurnedInSharp: SvgIconComponent;
    export const TurnedInTwoTone: SvgIconComponent;
    export const TurnLeft: SvgIconComponent;
    export const TurnLeftOutlined: SvgIconComponent;
    export const TurnLeftRounded: SvgIconComponent;
    export const TurnLeftSharp: SvgIconComponent;
    export const TurnLeftTwoTone: SvgIconComponent;
    export const TurnRight: SvgIconComponent;
    export const TurnRightOutlined: SvgIconComponent;
    export const TurnRightRounded: SvgIconComponent;
    export const TurnRightSharp: SvgIconComponent;
    export const TurnRightTwoTone: SvgIconComponent;
    export const TurnSharpLeft: SvgIconComponent;
    export const TurnSharpLeftOutlined: SvgIconComponent;
    export const TurnSharpLeftRounded: SvgIconComponent;
    export const TurnSharpLeftSharp: SvgIconComponent;
    export const TurnSharpLeftTwoTone: SvgIconComponent;
    export const TurnSharpRight: SvgIconComponent;
    export const TurnSharpRightOutlined: SvgIconComponent;
    export const TurnSharpRightRounded: SvgIconComponent;
    export const TurnSharpRightSharp: SvgIconComponent;
    export const TurnSharpRightTwoTone: SvgIconComponent;
    export const TurnSlightLeft: SvgIconComponent;
    export const TurnSlightLeftOutlined: SvgIconComponent;
    export const TurnSlightLeftRounded: SvgIconComponent;
    export const TurnSlightLeftSharp: SvgIconComponent;
    export const TurnSlightLeftTwoTone: SvgIconComponent;
    export const TurnSlightRight: SvgIconComponent;
    export const TurnSlightRightOutlined: SvgIconComponent;
    export const TurnSlightRightRounded: SvgIconComponent;
    export const TurnSlightRightSharp: SvgIconComponent;
    export const TurnSlightRightTwoTone: SvgIconComponent;
    export const Tv: SvgIconComponent;
    export const TvOff: SvgIconComponent;
    export const TvOffOutlined: SvgIconComponent;
    export const TvOffRounded: SvgIconComponent;
    export const TvOffSharp: SvgIconComponent;
    export const TvOffTwoTone: SvgIconComponent;
    export const TvOutlined: SvgIconComponent;
    export const TvRounded: SvgIconComponent;
    export const TvSharp: SvgIconComponent;
    export const TvTwoTone: SvgIconComponent;
    export const TwelveMp: SvgIconComponent;
    export const TwelveMpOutlined: SvgIconComponent;
    export const TwelveMpRounded: SvgIconComponent;
    export const TwelveMpSharp: SvgIconComponent;
    export const TwelveMpTwoTone: SvgIconComponent;
    export const TwentyFourMp: SvgIconComponent;
    export const TwentyFourMpOutlined: SvgIconComponent;
    export const TwentyFourMpRounded: SvgIconComponent;
    export const TwentyFourMpSharp: SvgIconComponent;
    export const TwentyFourMpTwoTone: SvgIconComponent;
    export const TwentyOneMp: SvgIconComponent;
    export const TwentyOneMpOutlined: SvgIconComponent;
    export const TwentyOneMpRounded: SvgIconComponent;
    export const TwentyOneMpSharp: SvgIconComponent;
    export const TwentyOneMpTwoTone: SvgIconComponent;
    export const TwentyThreeMp: SvgIconComponent;
    export const TwentyThreeMpOutlined: SvgIconComponent;
    export const TwentyThreeMpRounded: SvgIconComponent;
    export const TwentyThreeMpSharp: SvgIconComponent;
    export const TwentyThreeMpTwoTone: SvgIconComponent;
    export const TwentyTwoMp: SvgIconComponent;
    export const TwentyTwoMpOutlined: SvgIconComponent;
    export const TwentyTwoMpRounded: SvgIconComponent;
    export const TwentyTwoMpSharp: SvgIconComponent;
    export const TwentyTwoMpTwoTone: SvgIconComponent;
    export const TwentyZeroMp: SvgIconComponent;
    export const TwentyZeroMpOutlined: SvgIconComponent;
    export const TwentyZeroMpRounded: SvgIconComponent;
    export const TwentyZeroMpSharp: SvgIconComponent;
    export const TwentyZeroMpTwoTone: SvgIconComponent;
    export const Twitter: SvgIconComponent;
    export const TwoK: SvgIconComponent;
    export const TwoKOutlined: SvgIconComponent;
    export const TwoKPlus: SvgIconComponent;
    export const TwoKPlusOutlined: SvgIconComponent;
    export const TwoKPlusRounded: SvgIconComponent;
    export const TwoKPlusSharp: SvgIconComponent;
    export const TwoKPlusTwoTone: SvgIconComponent;
    export const TwoKRounded: SvgIconComponent;
    export const TwoKSharp: SvgIconComponent;
    export const TwoKTwoTone: SvgIconComponent;
    export const TwoMp: SvgIconComponent;
    export const TwoMpOutlined: SvgIconComponent;
    export const TwoMpRounded: SvgIconComponent;
    export const TwoMpSharp: SvgIconComponent;
    export const TwoMpTwoTone: SvgIconComponent;
    export const TwoWheeler: SvgIconComponent;
    export const TwoWheelerOutlined: SvgIconComponent;
    export const TwoWheelerRounded: SvgIconComponent;
    export const TwoWheelerSharp: SvgIconComponent;
    export const TwoWheelerTwoTone: SvgIconComponent;
    export const Umbrella: SvgIconComponent;
    export const UmbrellaOutlined: SvgIconComponent;
    export const UmbrellaRounded: SvgIconComponent;
    export const UmbrellaSharp: SvgIconComponent;
    export const UmbrellaTwoTone: SvgIconComponent;
    export const Unarchive: SvgIconComponent;
    export const UnarchiveOutlined: SvgIconComponent;
    export const UnarchiveRounded: SvgIconComponent;
    export const UnarchiveSharp: SvgIconComponent;
    export const UnarchiveTwoTone: SvgIconComponent;
    export const Undo: SvgIconComponent;
    export const UndoOutlined: SvgIconComponent;
    export const UndoRounded: SvgIconComponent;
    export const UndoSharp: SvgIconComponent;
    export const UndoTwoTone: SvgIconComponent;
    export const UnfoldLess: SvgIconComponent;
    export const UnfoldLessOutlined: SvgIconComponent;
    export const UnfoldLessRounded: SvgIconComponent;
    export const UnfoldLessSharp: SvgIconComponent;
    export const UnfoldLessTwoTone: SvgIconComponent;
    export const UnfoldMore: SvgIconComponent;
    export const UnfoldMoreOutlined: SvgIconComponent;
    export const UnfoldMoreRounded: SvgIconComponent;
    export const UnfoldMoreSharp: SvgIconComponent;
    export const UnfoldMoreTwoTone: SvgIconComponent;
    export const Unpublished: SvgIconComponent;
    export const UnpublishedOutlined: SvgIconComponent;
    export const UnpublishedRounded: SvgIconComponent;
    export const UnpublishedSharp: SvgIconComponent;
    export const UnpublishedTwoTone: SvgIconComponent;
    export const Unsubscribe: SvgIconComponent;
    export const UnsubscribeOutlined: SvgIconComponent;
    export const UnsubscribeRounded: SvgIconComponent;
    export const UnsubscribeSharp: SvgIconComponent;
    export const UnsubscribeTwoTone: SvgIconComponent;
    export const Upcoming: SvgIconComponent;
    export const UpcomingOutlined: SvgIconComponent;
    export const UpcomingRounded: SvgIconComponent;
    export const UpcomingSharp: SvgIconComponent;
    export const UpcomingTwoTone: SvgIconComponent;
    export const Update: SvgIconComponent;
    export const UpdateDisabled: SvgIconComponent;
    export const UpdateDisabledOutlined: SvgIconComponent;
    export const UpdateDisabledRounded: SvgIconComponent;
    export const UpdateDisabledSharp: SvgIconComponent;
    export const UpdateDisabledTwoTone: SvgIconComponent;
    export const UpdateOutlined: SvgIconComponent;
    export const UpdateRounded: SvgIconComponent;
    export const UpdateSharp: SvgIconComponent;
    export const UpdateTwoTone: SvgIconComponent;
    export const Upgrade: SvgIconComponent;
    export const UpgradeOutlined: SvgIconComponent;
    export const UpgradeRounded: SvgIconComponent;
    export const UpgradeSharp: SvgIconComponent;
    export const UpgradeTwoTone: SvgIconComponent;
    export const Upload: SvgIconComponent;
    export const UploadFile: SvgIconComponent;
    export const UploadFileOutlined: SvgIconComponent;
    export const UploadFileRounded: SvgIconComponent;
    export const UploadFileSharp: SvgIconComponent;
    export const UploadFileTwoTone: SvgIconComponent;
    export const UploadOutlined: SvgIconComponent;
    export const UploadRounded: SvgIconComponent;
    export const UploadSharp: SvgIconComponent;
    export const UploadTwoTone: SvgIconComponent;
    export const Usb: SvgIconComponent;
    export const UsbOff: SvgIconComponent;
    export const UsbOffOutlined: SvgIconComponent;
    export const UsbOffRounded: SvgIconComponent;
    export const UsbOffSharp: SvgIconComponent;
    export const UsbOffTwoTone: SvgIconComponent;
    export const UsbOutlined: SvgIconComponent;
    export const UsbRounded: SvgIconComponent;
    export const UsbSharp: SvgIconComponent;
    export const UsbTwoTone: SvgIconComponent;
    export const UTurnLeft: SvgIconComponent;
    export const UTurnLeftOutlined: SvgIconComponent;
    export const UTurnLeftRounded: SvgIconComponent;
    export const UTurnLeftSharp: SvgIconComponent;
    export const UTurnLeftTwoTone: SvgIconComponent;
    export const UTurnRight: SvgIconComponent;
    export const UTurnRightOutlined: SvgIconComponent;
    export const UTurnRightRounded: SvgIconComponent;
    export const UTurnRightSharp: SvgIconComponent;
    export const UTurnRightTwoTone: SvgIconComponent;
    export const Vaccines: SvgIconComponent;
    export const VaccinesOutlined: SvgIconComponent;
    export const VaccinesRounded: SvgIconComponent;
    export const VaccinesSharp: SvgIconComponent;
    export const VaccinesTwoTone: SvgIconComponent;
    export const Verified: SvgIconComponent;
    export const VerifiedOutlined: SvgIconComponent;
    export const VerifiedRounded: SvgIconComponent;
    export const VerifiedSharp: SvgIconComponent;
    export const VerifiedTwoTone: SvgIconComponent;
    export const VerifiedUser: SvgIconComponent;
    export const VerifiedUserOutlined: SvgIconComponent;
    export const VerifiedUserRounded: SvgIconComponent;
    export const VerifiedUserSharp: SvgIconComponent;
    export const VerifiedUserTwoTone: SvgIconComponent;
    export const VerticalAlignBottom: SvgIconComponent;
    export const VerticalAlignBottomOutlined: SvgIconComponent;
    export const VerticalAlignBottomRounded: SvgIconComponent;
    export const VerticalAlignBottomSharp: SvgIconComponent;
    export const VerticalAlignBottomTwoTone: SvgIconComponent;
    export const VerticalAlignCenter: SvgIconComponent;
    export const VerticalAlignCenterOutlined: SvgIconComponent;
    export const VerticalAlignCenterRounded: SvgIconComponent;
    export const VerticalAlignCenterSharp: SvgIconComponent;
    export const VerticalAlignCenterTwoTone: SvgIconComponent;
    export const VerticalAlignTop: SvgIconComponent;
    export const VerticalAlignTopOutlined: SvgIconComponent;
    export const VerticalAlignTopRounded: SvgIconComponent;
    export const VerticalAlignTopSharp: SvgIconComponent;
    export const VerticalAlignTopTwoTone: SvgIconComponent;
    export const VerticalSplit: SvgIconComponent;
    export const VerticalSplitOutlined: SvgIconComponent;
    export const VerticalSplitRounded: SvgIconComponent;
    export const VerticalSplitSharp: SvgIconComponent;
    export const VerticalSplitTwoTone: SvgIconComponent;
    export const Vibration: SvgIconComponent;
    export const VibrationOutlined: SvgIconComponent;
    export const VibrationRounded: SvgIconComponent;
    export const VibrationSharp: SvgIconComponent;
    export const VibrationTwoTone: SvgIconComponent;
    export const VideoCall: SvgIconComponent;
    export const VideoCallOutlined: SvgIconComponent;
    export const VideoCallRounded: SvgIconComponent;
    export const VideoCallSharp: SvgIconComponent;
    export const VideoCallTwoTone: SvgIconComponent;
    export const Videocam: SvgIconComponent;
    export const VideoCameraBack: SvgIconComponent;
    export const VideoCameraBackOutlined: SvgIconComponent;
    export const VideoCameraBackRounded: SvgIconComponent;
    export const VideoCameraBackSharp: SvgIconComponent;
    export const VideoCameraBackTwoTone: SvgIconComponent;
    export const VideoCameraFront: SvgIconComponent;
    export const VideoCameraFrontOutlined: SvgIconComponent;
    export const VideoCameraFrontRounded: SvgIconComponent;
    export const VideoCameraFrontSharp: SvgIconComponent;
    export const VideoCameraFrontTwoTone: SvgIconComponent;
    export const VideocamOff: SvgIconComponent;
    export const VideocamOffOutlined: SvgIconComponent;
    export const VideocamOffRounded: SvgIconComponent;
    export const VideocamOffSharp: SvgIconComponent;
    export const VideocamOffTwoTone: SvgIconComponent;
    export const VideocamOutlined: SvgIconComponent;
    export const VideocamRounded: SvgIconComponent;
    export const VideocamSharp: SvgIconComponent;
    export const VideocamTwoTone: SvgIconComponent;
    export const VideoFile: SvgIconComponent;
    export const VideoFileOutlined: SvgIconComponent;
    export const VideoFileRounded: SvgIconComponent;
    export const VideoFileSharp: SvgIconComponent;
    export const VideoFileTwoTone: SvgIconComponent;
    export const VideogameAsset: SvgIconComponent;
    export const VideogameAssetOff: SvgIconComponent;
    export const VideogameAssetOffOutlined: SvgIconComponent;
    export const VideogameAssetOffRounded: SvgIconComponent;
    export const VideogameAssetOffSharp: SvgIconComponent;
    export const VideogameAssetOffTwoTone: SvgIconComponent;
    export const VideogameAssetOutlined: SvgIconComponent;
    export const VideogameAssetRounded: SvgIconComponent;
    export const VideogameAssetSharp: SvgIconComponent;
    export const VideogameAssetTwoTone: SvgIconComponent;
    export const VideoLabel: SvgIconComponent;
    export const VideoLabelOutlined: SvgIconComponent;
    export const VideoLabelRounded: SvgIconComponent;
    export const VideoLabelSharp: SvgIconComponent;
    export const VideoLabelTwoTone: SvgIconComponent;
    export const VideoLibrary: SvgIconComponent;
    export const VideoLibraryOutlined: SvgIconComponent;
    export const VideoLibraryRounded: SvgIconComponent;
    export const VideoLibrarySharp: SvgIconComponent;
    export const VideoLibraryTwoTone: SvgIconComponent;
    export const VideoSettings: SvgIconComponent;
    export const VideoSettingsOutlined: SvgIconComponent;
    export const VideoSettingsRounded: SvgIconComponent;
    export const VideoSettingsSharp: SvgIconComponent;
    export const VideoSettingsTwoTone: SvgIconComponent;
    export const VideoStable: SvgIconComponent;
    export const VideoStableOutlined: SvgIconComponent;
    export const VideoStableRounded: SvgIconComponent;
    export const VideoStableSharp: SvgIconComponent;
    export const VideoStableTwoTone: SvgIconComponent;
    export const ViewAgenda: SvgIconComponent;
    export const ViewAgendaOutlined: SvgIconComponent;
    export const ViewAgendaRounded: SvgIconComponent;
    export const ViewAgendaSharp: SvgIconComponent;
    export const ViewAgendaTwoTone: SvgIconComponent;
    export const ViewArray: SvgIconComponent;
    export const ViewArrayOutlined: SvgIconComponent;
    export const ViewArrayRounded: SvgIconComponent;
    export const ViewArraySharp: SvgIconComponent;
    export const ViewArrayTwoTone: SvgIconComponent;
    export const ViewCarousel: SvgIconComponent;
    export const ViewCarouselOutlined: SvgIconComponent;
    export const ViewCarouselRounded: SvgIconComponent;
    export const ViewCarouselSharp: SvgIconComponent;
    export const ViewCarouselTwoTone: SvgIconComponent;
    export const ViewColumn: SvgIconComponent;
    export const ViewColumnOutlined: SvgIconComponent;
    export const ViewColumnRounded: SvgIconComponent;
    export const ViewColumnSharp: SvgIconComponent;
    export const ViewColumnTwoTone: SvgIconComponent;
    export const ViewComfy: SvgIconComponent;
    export const ViewComfyAlt: SvgIconComponent;
    export const ViewComfyAltOutlined: SvgIconComponent;
    export const ViewComfyAltRounded: SvgIconComponent;
    export const ViewComfyAltSharp: SvgIconComponent;
    export const ViewComfyAltTwoTone: SvgIconComponent;
    export const ViewComfyOutlined: SvgIconComponent;
    export const ViewComfyRounded: SvgIconComponent;
    export const ViewComfySharp: SvgIconComponent;
    export const ViewComfyTwoTone: SvgIconComponent;
    export const ViewCompact: SvgIconComponent;
    export const ViewCompactAlt: SvgIconComponent;
    export const ViewCompactAltOutlined: SvgIconComponent;
    export const ViewCompactAltRounded: SvgIconComponent;
    export const ViewCompactAltSharp: SvgIconComponent;
    export const ViewCompactAltTwoTone: SvgIconComponent;
    export const ViewCompactOutlined: SvgIconComponent;
    export const ViewCompactRounded: SvgIconComponent;
    export const ViewCompactSharp: SvgIconComponent;
    export const ViewCompactTwoTone: SvgIconComponent;
    export const ViewCozy: SvgIconComponent;
    export const ViewCozyOutlined: SvgIconComponent;
    export const ViewCozyRounded: SvgIconComponent;
    export const ViewCozySharp: SvgIconComponent;
    export const ViewCozyTwoTone: SvgIconComponent;
    export const ViewDay: SvgIconComponent;
    export const ViewDayOutlined: SvgIconComponent;
    export const ViewDayRounded: SvgIconComponent;
    export const ViewDaySharp: SvgIconComponent;
    export const ViewDayTwoTone: SvgIconComponent;
    export const ViewHeadline: SvgIconComponent;
    export const ViewHeadlineOutlined: SvgIconComponent;
    export const ViewHeadlineRounded: SvgIconComponent;
    export const ViewHeadlineSharp: SvgIconComponent;
    export const ViewHeadlineTwoTone: SvgIconComponent;
    export const ViewInAr: SvgIconComponent;
    export const ViewInArOutlined: SvgIconComponent;
    export const ViewInArRounded: SvgIconComponent;
    export const ViewInArSharp: SvgIconComponent;
    export const ViewInArTwoTone: SvgIconComponent;
    export const ViewKanban: SvgIconComponent;
    export const ViewKanbanOutlined: SvgIconComponent;
    export const ViewKanbanRounded: SvgIconComponent;
    export const ViewKanbanSharp: SvgIconComponent;
    export const ViewKanbanTwoTone: SvgIconComponent;
    export const ViewList: SvgIconComponent;
    export const ViewListOutlined: SvgIconComponent;
    export const ViewListRounded: SvgIconComponent;
    export const ViewListSharp: SvgIconComponent;
    export const ViewListTwoTone: SvgIconComponent;
    export const ViewModule: SvgIconComponent;
    export const ViewModuleOutlined: SvgIconComponent;
    export const ViewModuleRounded: SvgIconComponent;
    export const ViewModuleSharp: SvgIconComponent;
    export const ViewModuleTwoTone: SvgIconComponent;
    export const ViewQuilt: SvgIconComponent;
    export const ViewQuiltOutlined: SvgIconComponent;
    export const ViewQuiltRounded: SvgIconComponent;
    export const ViewQuiltSharp: SvgIconComponent;
    export const ViewQuiltTwoTone: SvgIconComponent;
    export const ViewSidebar: SvgIconComponent;
    export const ViewSidebarOutlined: SvgIconComponent;
    export const ViewSidebarRounded: SvgIconComponent;
    export const ViewSidebarSharp: SvgIconComponent;
    export const ViewSidebarTwoTone: SvgIconComponent;
    export const ViewStream: SvgIconComponent;
    export const ViewStreamOutlined: SvgIconComponent;
    export const ViewStreamRounded: SvgIconComponent;
    export const ViewStreamSharp: SvgIconComponent;
    export const ViewStreamTwoTone: SvgIconComponent;
    export const ViewTimeline: SvgIconComponent;
    export const ViewTimelineOutlined: SvgIconComponent;
    export const ViewTimelineRounded: SvgIconComponent;
    export const ViewTimelineSharp: SvgIconComponent;
    export const ViewTimelineTwoTone: SvgIconComponent;
    export const ViewWeek: SvgIconComponent;
    export const ViewWeekOutlined: SvgIconComponent;
    export const ViewWeekRounded: SvgIconComponent;
    export const ViewWeekSharp: SvgIconComponent;
    export const ViewWeekTwoTone: SvgIconComponent;
    export const Vignette: SvgIconComponent;
    export const VignetteOutlined: SvgIconComponent;
    export const VignetteRounded: SvgIconComponent;
    export const VignetteSharp: SvgIconComponent;
    export const VignetteTwoTone: SvgIconComponent;
    export const Villa: SvgIconComponent;
    export const VillaOutlined: SvgIconComponent;
    export const VillaRounded: SvgIconComponent;
    export const VillaSharp: SvgIconComponent;
    export const VillaTwoTone: SvgIconComponent;
    export const Visibility: SvgIconComponent;
    export const VisibilityOff: SvgIconComponent;
    export const VisibilityOffOutlined: SvgIconComponent;
    export const VisibilityOffRounded: SvgIconComponent;
    export const VisibilityOffSharp: SvgIconComponent;
    export const VisibilityOffTwoTone: SvgIconComponent;
    export const VisibilityOutlined: SvgIconComponent;
    export const VisibilityRounded: SvgIconComponent;
    export const VisibilitySharp: SvgIconComponent;
    export const VisibilityTwoTone: SvgIconComponent;
    export const VoiceChat: SvgIconComponent;
    export const VoiceChatOutlined: SvgIconComponent;
    export const VoiceChatRounded: SvgIconComponent;
    export const VoiceChatSharp: SvgIconComponent;
    export const VoiceChatTwoTone: SvgIconComponent;
    export const Voicemail: SvgIconComponent;
    export const VoicemailOutlined: SvgIconComponent;
    export const VoicemailRounded: SvgIconComponent;
    export const VoicemailSharp: SvgIconComponent;
    export const VoicemailTwoTone: SvgIconComponent;
    export const VoiceOverOff: SvgIconComponent;
    export const VoiceOverOffOutlined: SvgIconComponent;
    export const VoiceOverOffRounded: SvgIconComponent;
    export const VoiceOverOffSharp: SvgIconComponent;
    export const VoiceOverOffTwoTone: SvgIconComponent;
    export const VolumeDown: SvgIconComponent;
    export const VolumeDownOutlined: SvgIconComponent;
    export const VolumeDownRounded: SvgIconComponent;
    export const VolumeDownSharp: SvgIconComponent;
    export const VolumeDownTwoTone: SvgIconComponent;
    export const VolumeMute: SvgIconComponent;
    export const VolumeMuteOutlined: SvgIconComponent;
    export const VolumeMuteRounded: SvgIconComponent;
    export const VolumeMuteSharp: SvgIconComponent;
    export const VolumeMuteTwoTone: SvgIconComponent;
    export const VolumeOff: SvgIconComponent;
    export const VolumeOffOutlined: SvgIconComponent;
    export const VolumeOffRounded: SvgIconComponent;
    export const VolumeOffSharp: SvgIconComponent;
    export const VolumeOffTwoTone: SvgIconComponent;
    export const VolumeUp: SvgIconComponent;
    export const VolumeUpOutlined: SvgIconComponent;
    export const VolumeUpRounded: SvgIconComponent;
    export const VolumeUpSharp: SvgIconComponent;
    export const VolumeUpTwoTone: SvgIconComponent;
    export const VolunteerActivism: SvgIconComponent;
    export const VolunteerActivismOutlined: SvgIconComponent;
    export const VolunteerActivismRounded: SvgIconComponent;
    export const VolunteerActivismSharp: SvgIconComponent;
    export const VolunteerActivismTwoTone: SvgIconComponent;
    export const VpnKey: SvgIconComponent;
    export const VpnKeyOff: SvgIconComponent;
    export const VpnKeyOffOutlined: SvgIconComponent;
    export const VpnKeyOffRounded: SvgIconComponent;
    export const VpnKeyOffSharp: SvgIconComponent;
    export const VpnKeyOffTwoTone: SvgIconComponent;
    export const VpnKeyOutlined: SvgIconComponent;
    export const VpnKeyRounded: SvgIconComponent;
    export const VpnKeySharp: SvgIconComponent;
    export const VpnKeyTwoTone: SvgIconComponent;
    export const VpnLock: SvgIconComponent;
    export const VpnLockOutlined: SvgIconComponent;
    export const VpnLockRounded: SvgIconComponent;
    export const VpnLockSharp: SvgIconComponent;
    export const VpnLockTwoTone: SvgIconComponent;
    export const Vrpano: SvgIconComponent;
    export const VrpanoOutlined: SvgIconComponent;
    export const VrpanoRounded: SvgIconComponent;
    export const VrpanoSharp: SvgIconComponent;
    export const VrpanoTwoTone: SvgIconComponent;
    export const Wallpaper: SvgIconComponent;
    export const WallpaperOutlined: SvgIconComponent;
    export const WallpaperRounded: SvgIconComponent;
    export const WallpaperSharp: SvgIconComponent;
    export const WallpaperTwoTone: SvgIconComponent;
    export const Warehouse: SvgIconComponent;
    export const WarehouseOutlined: SvgIconComponent;
    export const WarehouseRounded: SvgIconComponent;
    export const WarehouseSharp: SvgIconComponent;
    export const WarehouseTwoTone: SvgIconComponent;
    export const Warning: SvgIconComponent;
    export const WarningAmber: SvgIconComponent;
    export const WarningAmberOutlined: SvgIconComponent;
    export const WarningAmberRounded: SvgIconComponent;
    export const WarningAmberSharp: SvgIconComponent;
    export const WarningAmberTwoTone: SvgIconComponent;
    export const WarningOutlined: SvgIconComponent;
    export const WarningRounded: SvgIconComponent;
    export const WarningSharp: SvgIconComponent;
    export const WarningTwoTone: SvgIconComponent;
    export const Wash: SvgIconComponent;
    export const WashOutlined: SvgIconComponent;
    export const WashRounded: SvgIconComponent;
    export const WashSharp: SvgIconComponent;
    export const WashTwoTone: SvgIconComponent;
    export const Watch: SvgIconComponent;
    export const WatchLater: SvgIconComponent;
    export const WatchLaterOutlined: SvgIconComponent;
    export const WatchLaterRounded: SvgIconComponent;
    export const WatchLaterSharp: SvgIconComponent;
    export const WatchLaterTwoTone: SvgIconComponent;
    export const WatchOff: SvgIconComponent;
    export const WatchOffOutlined: SvgIconComponent;
    export const WatchOffRounded: SvgIconComponent;
    export const WatchOffSharp: SvgIconComponent;
    export const WatchOffTwoTone: SvgIconComponent;
    export const WatchOutlined: SvgIconComponent;
    export const WatchRounded: SvgIconComponent;
    export const WatchSharp: SvgIconComponent;
    export const WatchTwoTone: SvgIconComponent;
    export const Water: SvgIconComponent;
    export const WaterDamage: SvgIconComponent;
    export const WaterDamageOutlined: SvgIconComponent;
    export const WaterDamageRounded: SvgIconComponent;
    export const WaterDamageSharp: SvgIconComponent;
    export const WaterDamageTwoTone: SvgIconComponent;
    export const WaterfallChart: SvgIconComponent;
    export const WaterfallChartOutlined: SvgIconComponent;
    export const WaterfallChartRounded: SvgIconComponent;
    export const WaterfallChartSharp: SvgIconComponent;
    export const WaterfallChartTwoTone: SvgIconComponent;
    export const WaterOutlined: SvgIconComponent;
    export const WaterRounded: SvgIconComponent;
    export const WaterSharp: SvgIconComponent;
    export const WaterTwoTone: SvgIconComponent;
    export const Waves: SvgIconComponent;
    export const WavesOutlined: SvgIconComponent;
    export const WavesRounded: SvgIconComponent;
    export const WavesSharp: SvgIconComponent;
    export const WavesTwoTone: SvgIconComponent;
    export const WbAuto: SvgIconComponent;
    export const WbAutoOutlined: SvgIconComponent;
    export const WbAutoRounded: SvgIconComponent;
    export const WbAutoSharp: SvgIconComponent;
    export const WbAutoTwoTone: SvgIconComponent;
    export const WbCloudy: SvgIconComponent;
    export const WbCloudyOutlined: SvgIconComponent;
    export const WbCloudyRounded: SvgIconComponent;
    export const WbCloudySharp: SvgIconComponent;
    export const WbCloudyTwoTone: SvgIconComponent;
    export const WbIncandescent: SvgIconComponent;
    export const WbIncandescentOutlined: SvgIconComponent;
    export const WbIncandescentRounded: SvgIconComponent;
    export const WbIncandescentSharp: SvgIconComponent;
    export const WbIncandescentTwoTone: SvgIconComponent;
    export const WbIridescent: SvgIconComponent;
    export const WbIridescentOutlined: SvgIconComponent;
    export const WbIridescentRounded: SvgIconComponent;
    export const WbIridescentSharp: SvgIconComponent;
    export const WbIridescentTwoTone: SvgIconComponent;
    export const WbShade: SvgIconComponent;
    export const WbShadeOutlined: SvgIconComponent;
    export const WbShadeRounded: SvgIconComponent;
    export const WbShadeSharp: SvgIconComponent;
    export const WbShadeTwoTone: SvgIconComponent;
    export const WbSunny: SvgIconComponent;
    export const WbSunnyOutlined: SvgIconComponent;
    export const WbSunnyRounded: SvgIconComponent;
    export const WbSunnySharp: SvgIconComponent;
    export const WbSunnyTwoTone: SvgIconComponent;
    export const WbTwilight: SvgIconComponent;
    export const WbTwilightOutlined: SvgIconComponent;
    export const WbTwilightRounded: SvgIconComponent;
    export const WbTwilightSharp: SvgIconComponent;
    export const WbTwilightTwoTone: SvgIconComponent;
    export const Wc: SvgIconComponent;
    export const WcOutlined: SvgIconComponent;
    export const WcRounded: SvgIconComponent;
    export const WcSharp: SvgIconComponent;
    export const WcTwoTone: SvgIconComponent;
    export const Web: SvgIconComponent;
    export const WebAsset: SvgIconComponent;
    export const WebAssetOff: SvgIconComponent;
    export const WebAssetOffOutlined: SvgIconComponent;
    export const WebAssetOffRounded: SvgIconComponent;
    export const WebAssetOffSharp: SvgIconComponent;
    export const WebAssetOffTwoTone: SvgIconComponent;
    export const WebAssetOutlined: SvgIconComponent;
    export const WebAssetRounded: SvgIconComponent;
    export const WebAssetSharp: SvgIconComponent;
    export const WebAssetTwoTone: SvgIconComponent;
    export const Webhook: SvgIconComponent;
    export const WebhookOutlined: SvgIconComponent;
    export const WebhookRounded: SvgIconComponent;
    export const WebhookSharp: SvgIconComponent;
    export const WebhookTwoTone: SvgIconComponent;
    export const WebOutlined: SvgIconComponent;
    export const WebRounded: SvgIconComponent;
    export const WebSharp: SvgIconComponent;
    export const WebTwoTone: SvgIconComponent;
    export const Weekend: SvgIconComponent;
    export const WeekendOutlined: SvgIconComponent;
    export const WeekendRounded: SvgIconComponent;
    export const WeekendSharp: SvgIconComponent;
    export const WeekendTwoTone: SvgIconComponent;
    export const West: SvgIconComponent;
    export const WestOutlined: SvgIconComponent;
    export const WestRounded: SvgIconComponent;
    export const WestSharp: SvgIconComponent;
    export const WestTwoTone: SvgIconComponent;
    export const WhatsApp: SvgIconComponent;
    export const WhatsappOutlined: SvgIconComponent;
    export const WhatsappRounded: SvgIconComponent;
    export const WhatsappSharp: SvgIconComponent;
    export const WhatsappTwoTone: SvgIconComponent;
    export const Whatshot: SvgIconComponent;
    export const WhatshotOutlined: SvgIconComponent;
    export const WhatshotRounded: SvgIconComponent;
    export const WhatshotSharp: SvgIconComponent;
    export const WhatshotTwoTone: SvgIconComponent;
    export const WheelchairPickup: SvgIconComponent;
    export const WheelchairPickupOutlined: SvgIconComponent;
    export const WheelchairPickupRounded: SvgIconComponent;
    export const WheelchairPickupSharp: SvgIconComponent;
    export const WheelchairPickupTwoTone: SvgIconComponent;
    export const WhereToVote: SvgIconComponent;
    export const WhereToVoteOutlined: SvgIconComponent;
    export const WhereToVoteRounded: SvgIconComponent;
    export const WhereToVoteSharp: SvgIconComponent;
    export const WhereToVoteTwoTone: SvgIconComponent;
    export const Widgets: SvgIconComponent;
    export const WidgetsOutlined: SvgIconComponent;
    export const WidgetsRounded: SvgIconComponent;
    export const WidgetsSharp: SvgIconComponent;
    export const WidgetsTwoTone: SvgIconComponent;
    export const Wifi: SvgIconComponent;
    export const WifiCalling: SvgIconComponent;
    export const WifiCalling3: SvgIconComponent;
    export const WifiCalling3Outlined: SvgIconComponent;
    export const WifiCalling3Rounded: SvgIconComponent;
    export const WifiCalling3Sharp: SvgIconComponent;
    export const WifiCalling3TwoTone: SvgIconComponent;
    export const WifiCallingOutlined: SvgIconComponent;
    export const WifiCallingRounded: SvgIconComponent;
    export const WifiCallingSharp: SvgIconComponent;
    export const WifiCallingTwoTone: SvgIconComponent;
    export const WifiChannel: SvgIconComponent;
    export const WifiChannelOutlined: SvgIconComponent;
    export const WifiChannelRounded: SvgIconComponent;
    export const WifiChannelSharp: SvgIconComponent;
    export const WifiChannelTwoTone: SvgIconComponent;
    export const WifiFind: SvgIconComponent;
    export const WifiFindOutlined: SvgIconComponent;
    export const WifiFindRounded: SvgIconComponent;
    export const WifiFindSharp: SvgIconComponent;
    export const WifiFindTwoTone: SvgIconComponent;
    export const WifiLock: SvgIconComponent;
    export const WifiLockOutlined: SvgIconComponent;
    export const WifiLockRounded: SvgIconComponent;
    export const WifiLockSharp: SvgIconComponent;
    export const WifiLockTwoTone: SvgIconComponent;
    export const WifiOff: SvgIconComponent;
    export const WifiOffOutlined: SvgIconComponent;
    export const WifiOffRounded: SvgIconComponent;
    export const WifiOffSharp: SvgIconComponent;
    export const WifiOffTwoTone: SvgIconComponent;
    export const WifiOutlined: SvgIconComponent;
    export const WifiPassword: SvgIconComponent;
    export const WifiPasswordOutlined: SvgIconComponent;
    export const WifiPasswordRounded: SvgIconComponent;
    export const WifiPasswordSharp: SvgIconComponent;
    export const WifiPasswordTwoTone: SvgIconComponent;
    export const WifiProtectedSetup: SvgIconComponent;
    export const WifiProtectedSetupOutlined: SvgIconComponent;
    export const WifiProtectedSetupRounded: SvgIconComponent;
    export const WifiProtectedSetupSharp: SvgIconComponent;
    export const WifiProtectedSetupTwoTone: SvgIconComponent;
    export const WifiRounded: SvgIconComponent;
    export const WifiSharp: SvgIconComponent;
    export const WifiTethering: SvgIconComponent;
    export const WifiTetheringError: SvgIconComponent;
    export const WifiTetheringErrorOutlined: SvgIconComponent;
    export const WifiTetheringErrorRounded: SvgIconComponent;
    export const WifiTetheringErrorRoundedOutlined: SvgIconComponent;
    export const WifiTetheringErrorRoundedRounded: SvgIconComponent;
    export const WifiTetheringErrorRoundedSharp: SvgIconComponent;
    export const WifiTetheringErrorRoundedTwoTone: SvgIconComponent;
    export const WifiTetheringErrorSharp: SvgIconComponent;
    export const WifiTetheringErrorTwoTone: SvgIconComponent;
    export const WifiTetheringOff: SvgIconComponent;
    export const WifiTetheringOffOutlined: SvgIconComponent;
    export const WifiTetheringOffRounded: SvgIconComponent;
    export const WifiTetheringOffSharp: SvgIconComponent;
    export const WifiTetheringOffTwoTone: SvgIconComponent;
    export const WifiTetheringOutlined: SvgIconComponent;
    export const WifiTetheringRounded: SvgIconComponent;
    export const WifiTetheringSharp: SvgIconComponent;
    export const WifiTetheringTwoTone: SvgIconComponent;
    export const WifiTwoTone: SvgIconComponent;
    export const Window: SvgIconComponent;
    export const WindowOutlined: SvgIconComponent;
    export const WindowRounded: SvgIconComponent;
    export const WindowSharp: SvgIconComponent;
    export const WindowTwoTone: SvgIconComponent;
    export const WineBar: SvgIconComponent;
    export const WineBarOutlined: SvgIconComponent;
    export const WineBarRounded: SvgIconComponent;
    export const WineBarSharp: SvgIconComponent;
    export const WineBarTwoTone: SvgIconComponent;
    export const Woman: SvgIconComponent;
    export const WomanOutlined: SvgIconComponent;
    export const WomanRounded: SvgIconComponent;
    export const WomanSharp: SvgIconComponent;
    export const WomanTwoTone: SvgIconComponent;
    export const Work: SvgIconComponent;
    export const WorkOff: SvgIconComponent;
    export const WorkOffOutlined: SvgIconComponent;
    export const WorkOffRounded: SvgIconComponent;
    export const WorkOffSharp: SvgIconComponent;
    export const WorkOffTwoTone: SvgIconComponent;
    export const WorkOutline: SvgIconComponent;
    export const WorkOutlined: SvgIconComponent;
    export const WorkOutlineOutlined: SvgIconComponent;
    export const WorkOutlineRounded: SvgIconComponent;
    export const WorkOutlineSharp: SvgIconComponent;
    export const WorkOutlineTwoTone: SvgIconComponent;
    export const WorkRounded: SvgIconComponent;
    export const WorkSharp: SvgIconComponent;
    export const WorkspacePremium: SvgIconComponent;
    export const WorkspacePremiumOutlined: SvgIconComponent;
    export const WorkspacePremiumRounded: SvgIconComponent;
    export const WorkspacePremiumSharp: SvgIconComponent;
    export const WorkspacePremiumTwoTone: SvgIconComponent;
    export const Workspaces: SvgIconComponent;
    export const WorkspacesOutlined: SvgIconComponent;
    export const WorkspacesRounded: SvgIconComponent;
    export const WorkspacesSharp: SvgIconComponent;
    export const WorkspacesTwoTone: SvgIconComponent;
    export const WorkTwoTone: SvgIconComponent;
    export const WrapText: SvgIconComponent;
    export const WrapTextOutlined: SvgIconComponent;
    export const WrapTextRounded: SvgIconComponent;
    export const WrapTextSharp: SvgIconComponent;
    export const WrapTextTwoTone: SvgIconComponent;
    export const WrongLocation: SvgIconComponent;
    export const WrongLocationOutlined: SvgIconComponent;
    export const WrongLocationRounded: SvgIconComponent;
    export const WrongLocationSharp: SvgIconComponent;
    export const WrongLocationTwoTone: SvgIconComponent;
    export const Wysiwyg: SvgIconComponent;
    export const WysiwygOutlined: SvgIconComponent;
    export const WysiwygRounded: SvgIconComponent;
    export const WysiwygSharp: SvgIconComponent;
    export const WysiwygTwoTone: SvgIconComponent;
    export const Yard: SvgIconComponent;
    export const YardOutlined: SvgIconComponent;
    export const YardRounded: SvgIconComponent;
    export const YardSharp: SvgIconComponent;
    export const YardTwoTone: SvgIconComponent;
    export const YouTube: SvgIconComponent;
    export const YoutubeSearchedFor: SvgIconComponent;
    export const YoutubeSearchedForOutlined: SvgIconComponent;
    export const YoutubeSearchedForRounded: SvgIconComponent;
    export const YoutubeSearchedForSharp: SvgIconComponent;
    export const YoutubeSearchedForTwoTone: SvgIconComponent;
    export const ZoomIn: SvgIconComponent;
    export const ZoomInMap: SvgIconComponent;
    export const ZoomInMapOutlined: SvgIconComponent;
    export const ZoomInMapRounded: SvgIconComponent;
    export const ZoomInMapSharp: SvgIconComponent;
    export const ZoomInMapTwoTone: SvgIconComponent;
    export const ZoomInOutlined: SvgIconComponent;
    export const ZoomInRounded: SvgIconComponent;
    export const ZoomInSharp: SvgIconComponent;
    export const ZoomInTwoTone: SvgIconComponent;
    export const ZoomOut: SvgIconComponent;
    export const ZoomOutMap: SvgIconComponent;
    export const ZoomOutMapOutlined: SvgIconComponent;
    export const ZoomOutMapRounded: SvgIconComponent;
    export const ZoomOutMapSharp: SvgIconComponent;
    export const ZoomOutMapTwoTone: SvgIconComponent;
    export const ZoomOutOutlined: SvgIconComponent;
    export const ZoomOutRounded: SvgIconComponent;
    export const ZoomOutSharp: SvgIconComponent;
    export const ZoomOutTwoTone: SvgIconComponent;
    export {};
}
declare module "@mui/lab/Alert/Alert" {
    export { default } from "@mui/material/Alert/index";
    export * from "@mui/material/Alert/index";
}
declare module "@mui/lab/Alert/index" {
    export { default } from "@mui/lab/Alert/Alert";
    export * from "@mui/lab/Alert/Alert";
}
declare module "@mui/lab/AlertTitle/AlertTitle" {
    export { default } from "@mui/material/AlertTitle/index";
    export * from "@mui/material/AlertTitle/index";
}
declare module "@mui/lab/AlertTitle/index" {
    export { default } from "@mui/lab/AlertTitle/AlertTitle";
    export * from "@mui/lab/AlertTitle/AlertTitle";
}
declare module "@mui/lab/Autocomplete/Autocomplete" {
    export { default } from "@mui/material/Autocomplete/index";
}
declare module "@mui/lab/Autocomplete/index" {
    export { default } from "@mui/lab/Autocomplete/Autocomplete";
    export * from "@mui/lab/Autocomplete/Autocomplete";
}
declare module "@mui/lab/AvatarGroup/AvatarGroup" {
    export { default } from "@mui/material/AvatarGroup/index";
    export * from "@mui/material/AvatarGroup/index";
}
declare module "@mui/lab/AvatarGroup/index" {
    export { default } from "@mui/lab/AvatarGroup/AvatarGroup";
    export * from "@mui/lab/AvatarGroup/AvatarGroup";
}
declare module "@mui/lab/internal/pickers/typings/helpers" {
    /**
     * All standard components exposed by `material-ui` are `StyledComponents` with
     * certain `classes`, on which one can also set a top-level `className` and inline
     * `style`.
     */
    export type ExtendMui<C, Removals extends keyof C = never> = Omit<C, 'classes' | 'theme' | Removals>;
    export type MakeOptional<T, K extends keyof T> = {
        [P in K]?: T[P] | undefined;
    } & Omit<T, K>;
}
declare module "@mui/lab/internal/pickers/wrappers/WrapperVariantContext" {
    import * as React from 'react';
    export type WrapperVariant = 'mobile' | 'desktop' | null;
    /**
     * TODO consider getting rid from wrapper variant
     * @ignore - internal component.
     */
    export const WrapperVariantContext: React.Context<WrapperVariant>;
    /**
     * @ignore - internal component.
     */
    export const IsStaticVariantContext: React.Context<boolean>;
}
declare module "@mui/lab/LocalizationProvider/LocalizationProvider" {
    import * as React from 'react';
    import { DateIOFormats, IUtils } from '@date-io/core/IUtils';
    export type MuiPickersAdapter<TDate> = IUtils<TDate>;
    export interface MuiPickersAdapterContextValue<TDate> {
        defaultDates: {
            minDate: TDate;
            maxDate: TDate;
        };
        utils: MuiPickersAdapter<TDate>;
    }
    export const MuiPickersAdapterContext: React.Context<MuiPickersAdapterContextValue<unknown> | null>;
    export interface LocalizationProviderProps {
        children?: React.ReactNode;
        /** DateIO adapter class function */
        dateAdapter: new (...args: any) => MuiPickersAdapter<unknown>;
        /** Formats that are used for any child pickers */
        dateFormats?: Partial<DateIOFormats>;
        /**
         * Date library instance you are using, if it has some global overrides
         * ```jsx
         * dateLibInstance={momentTimeZone}
         * ```
         */
        dateLibInstance?: any;
        /** Locale for the date library you are using */
        locale?: string | object;
    }
    /**
     * @ignore - do not document.
     */
    function LocalizationProvider(props: LocalizationProviderProps): JSX.Element;
    namespace LocalizationProvider {
        var propTypes: any;
    }
    export default LocalizationProvider;
}
declare module "@mui/lab/LocalizationProvider/index" {
    export * from "@mui/lab/LocalizationProvider/LocalizationProvider";
    export { default } from "@mui/lab/LocalizationProvider/LocalizationProvider";
}
declare module "@mui/lab/internal/pickers/hooks/useUtils" {
    export type MuiPickersAdapter<TDate = unknown> = import("@mui/lab/LocalizationProvider/index").MuiPickersAdapter<TDate>;
    export function useUtils<T = unknown>(): import("@mui/lab/LocalizationProvider/index").MuiPickersAdapter<T>;
    export function useDefaultDates<T>(): {
        minDate: T;
        maxDate: T;
    };
    export function useNow<TDate = unknown>(): TDate;
}
declare module "@mui/lab/internal/pickers/hooks/usePickerState" {
    import { WrapperVariant } from "@mui/lab/internal/pickers/wrappers/WrapperVariantContext";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    export interface PickerStateValueManager<TInputValue, TDateValue> {
        areValuesEqual: (utils: MuiPickersAdapter, valueLeft: TDateValue, valueRight: TDateValue) => boolean;
        emptyValue: TDateValue;
        parseInput: (utils: MuiPickersAdapter, value: TInputValue) => TDateValue;
    }
    export type PickerSelectionState = 'partial' | 'shallow' | 'finish';
    export interface PickerStateProps<TInput, TDateValue> {
        disableCloseOnSelect?: boolean;
        open?: boolean;
        onAccept?: (date: TDateValue) => void;
        onChange: (date: TDateValue, keyboardInputValue?: string) => void;
        onClose?: () => void;
        onOpen?: () => void;
        value: TInput;
    }
    export function usePickerState<TInput, TDateValue>(props: PickerStateProps<TInput, TDateValue>, valueManager: PickerStateValueManager<TInput, TDateValue>): {
        pickerProps: {
            date: TDateValue;
            isMobileKeyboardViewOpen: boolean;
            toggleMobileKeyboardView: () => void;
            onDateChange: (newDate: TDateValue, wrapperVariant: WrapperVariant, selectionState?: PickerSelectionState) => void;
        };
        inputProps: {
            onChange: (date: TDateValue, keyboardInputValue?: string | undefined) => void;
            open: boolean;
            rawValue: TInput;
            openPicker: () => void;
        };
        wrapperProps: {
            open: boolean;
            onClear: () => void;
            onAccept: () => void;
            onDismiss: () => void;
            onSetToday: () => void;
        };
    };
}
declare module "@mui/lab/PickersDay/PickersDay" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { ButtonBaseProps } from "@mui/material/ButtonBase/index";
    import { Theme } from "@mui/material/styles/index";
    import { ExtendMui } from "@mui/lab/internal/pickers/typings/helpers";
    import { PickerSelectionState } from "@mui/lab/internal/pickers/hooks/usePickerState";
    export interface PickersDayProps<TDate> extends ExtendMui<ButtonBaseProps> {
        /**
         * If `true`, `onChange` is fired on click even if the same date is selected.
         * @default false
         */
        allowSameDateSelection?: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: {
            /** Styles applied to the root element. */
            root?: string;
            /** Styles applied to the root element if `disableMargin=false`. */
            dayWithMargin?: string;
            /** Styles applied to the root element if `outsideCurrentMonth=true` and `showDaysOutsideCurrentMonth=true`. */
            dayOutsideMonth?: string;
            /** Styles applied to the root element if `outsideCurrentMonth=true` and `showDaysOutsideCurrentMonth=false`. */
            hiddenDaySpacingFiller?: string;
            /** Styles applied to the root element if `disableHighlightToday=false` and `today=true`. */
            today?: string;
            /** State class applied to the root element if `selected=true`. */
            selected?: string;
            /** State class applied to the root element if `disabled=true`. */
            disabled?: string;
        };
        /**
         * The date to show.
         */
        day: TDate;
        /**
         * If `true`, renders as disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * If `true`, todays date is rendering without highlighting with circle.
         * @default false
         */
        disableHighlightToday?: boolean;
        /**
         * If `true`, days are rendering without margin. Useful for displaying linked range of days.
         * @default false
         */
        disableMargin?: boolean;
        isAnimating?: boolean;
        onDayFocus?: (day: TDate) => void;
        onDaySelect: (day: TDate, isFinish: PickerSelectionState) => void;
        /**
         * If `true`, day is outside of month and will be hidden.
         */
        outsideCurrentMonth: boolean;
        /**
         * If `true`, renders as selected.
         * @default false
         */
        selected?: boolean;
        /**
         * If `true`, days that have `outsideCurrentMonth={true}` are displayed.
         * @default false
         */
        showDaysOutsideCurrentMonth?: boolean;
        /**
         * If `true`, renders as today date.
         * @default false
         */
        today?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export type PickersDayClassKey = keyof NonNullable<PickersDayProps<unknown>['classes']>;
    export function getPickersDayUtilityClass(slot: string): string;
    export const pickersDayClasses: Record<"root" | "selected" | "disabled" | "dayWithMargin" | "dayOutsideMonth" | "hiddenDaySpacingFiller" | "today", string>;
    export const areDayPropsEqual: (prevProps: PickersDayProps<any>, nextProps: PickersDayProps<any>) => boolean;
    const _default: <TDate>(props: PickersDayProps<TDate> & React.RefAttributes<HTMLButtonElement>) => JSX.Element;
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [PickersDay API](https://mui.com/api/pickers-day/)
     */
    export default _default;
}
declare module "@mui/lab/internal/pickers/typings/Views" {
    export type AllAvailableViews = 'year' | 'day' | 'month' | 'hours' | 'minutes' | 'seconds';
}
declare module "@mui/lab/internal/pickers/hooks/useViews" {
    import { PickerSelectionState } from "@mui/lab/internal/pickers/hooks/usePickerState";
    import { AllAvailableViews } from "@mui/lab/internal/pickers/typings/Views";
    export type PickerOnChangeFn<TDate> = (date: TDate | null, selectionState?: PickerSelectionState) => void;
    interface UseViewsOptions<TDate, View extends AllAvailableViews> {
        onChange: PickerOnChangeFn<TDate>;
        onViewChange?: (newView: View) => void;
        openTo?: View;
        view: View | undefined;
        views: readonly View[];
    }
    export function useViews<TDate, View extends AllAvailableViews>({ onChange, onViewChange, openTo, view, views, }: UseViewsOptions<TDate, View>): {
        handleChangeAndOpenNext: (date: TDate, currentViewSelectionState?: PickerSelectionState | undefined) => void;
        nextView: View;
        previousView: View;
        openNext: () => void;
        openView: View;
        setOpenView: (newView: View) => void;
    };
    export {};
}
declare module "@mui/lab/CalendarPicker/PickersSlideTransition" {
    import * as React from 'react';
    import { CSSTransitionProps } from 'react-transition-group/CSSTransition';
    export type SlideDirection = 'right' | 'left';
    export interface SlideTransitionProps extends Omit<CSSTransitionProps, 'timeout'> {
        children: React.ReactElement;
        className?: string;
        reduceAnimations: boolean;
        slideDirection: SlideDirection;
        transKey: React.Key;
    }
    export const slideAnimationDuration = 350;
    /**
     * @ignore - do not document.
     */
    const PickersSlideTransition: ({ children, className, reduceAnimations, slideDirection, transKey, ...other }: SlideTransitionProps) => JSX.Element;
    export default PickersSlideTransition;
}
declare module "@mui/lab/CalendarPicker/PickersCalendar" {
    import * as React from 'react';
    import { PickersDayProps } from "@mui/lab/PickersDay/PickersDay";
    import { PickerOnChangeFn } from "@mui/lab/internal/pickers/hooks/useViews";
    import { SlideDirection, SlideTransitionProps } from "@mui/lab/CalendarPicker/PickersSlideTransition";
    export interface ExportedCalendarProps<TDate> extends Pick<PickersDayProps<TDate>, 'disableHighlightToday' | 'showDaysOutsideCurrentMonth' | 'allowSameDateSelection'> {
        autoFocus?: boolean;
        /**
         * If `true` renders `LoadingComponent` in calendar instead of calendar view.
         * Can be used to preload information and show it in calendar.
         * @default false
         */
        loading?: boolean;
        /**
         * Calendar onChange.
         */
        onChange: PickerOnChangeFn<TDate>;
        /**
         * Custom renderer for day. Check the [PickersDay](https://mui.com/api/pickers-day/) component.
         */
        renderDay?: (day: TDate, selectedDates: Array<TDate | null>, pickersDayProps: PickersDayProps<TDate>) => JSX.Element;
        /**
         * Component displaying when passed `loading` true.
         * @default () => "..."
         */
        renderLoading?: () => React.ReactNode;
    }
    export interface PickersCalendarProps<TDate> extends ExportedCalendarProps<TDate> {
        autoFocus?: boolean;
        className?: string;
        currentMonth: TDate;
        date: TDate | [TDate | null, TDate | null] | null;
        disabled?: boolean;
        focusedDay: TDate | null;
        isDateDisabled: (day: TDate) => boolean;
        isMonthSwitchingAnimating: boolean;
        onFocusedDayChange: (newFocusedDay: TDate) => void;
        onMonthSwitchingAnimationEnd: () => void;
        readOnly?: boolean;
        reduceAnimations: boolean;
        slideDirection: SlideDirection;
        TransitionProps?: Partial<SlideTransitionProps>;
    }
    /**
     * @ignore - do not document.
     */
    function PickersCalendar<TDate>(props: PickersCalendarProps<TDate>): JSX.Element;
    export default PickersCalendar;
}
declare module "@mui/lab/internal/pickers/constants/prop-types" {
    export type ParseableDate<TDate> = string | number | Date | null | undefined | TDate;
}
declare module "@mui/lab/DateRangePicker/RangeTypes" {
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    export type RangeInput<TDate> = [ParseableDate<TDate>, ParseableDate<TDate>];
    export type DateRange<TDate> = [TDate | null, TDate | null];
    export type NonEmptyDateRange<TDate> = [TDate, TDate];
    export interface CurrentlySelectingRangeEndProps {
        currentlySelectingRangeEnd: 'start' | 'end';
        setCurrentlySelectingRangeEnd: (newSelectingEnd: 'start' | 'end') => void;
    }
}
declare module "@mui/lab/internal/pickers/date-utils" {
    import { NonEmptyDateRange, DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    interface FindClosestDateParams<TDate> {
        date: TDate;
        disableFuture: boolean;
        disablePast: boolean;
        maxDate: TDate;
        minDate: TDate;
        shouldDisableDate: (date: TDate) => boolean;
        utils: MuiPickersAdapter<TDate>;
    }
    export const findClosestEnabledDate: <TDate>({ date, disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils, }: FindClosestDateParams<TDate>) => TDate;
    export function parsePickerInputValue(utils: MuiPickersAdapter, value: unknown): unknown;
    export type RangeInput<TDate> = import("@mui/lab/DateRangePicker/RangeTypes").RangeInput<TDate>;
    export function parseRangeInputValue<TDate>(utils: MuiPickersAdapter, value?: RangeInput<TDate>): DateRange<TDate>;
    export const isRangeValid: <TDate>(utils: MuiPickersAdapter<TDate>, range: DateRange<TDate> | null) => range is NonEmptyDateRange<TDate>;
    export const isWithinRange: <TDate>(utils: MuiPickersAdapter<TDate>, day: TDate, range: DateRange<TDate> | null) => boolean;
    export const isStartOfRange: <TDate>(utils: MuiPickersAdapter<TDate>, day: TDate, range: DateRange<TDate> | null) => boolean;
    export const isEndOfRange: <TDate>(utils: MuiPickersAdapter<TDate>, day: TDate, range: DateRange<TDate> | null) => boolean;
    export interface DateValidationProps<TDate> {
        /**
         * Disable past dates.
         * @default false
         */
        disablePast?: boolean;
        /**
         * Disable future dates.
         * @default false
         */
        disableFuture?: boolean;
        /**
         * Min selectable date. @DateIOType
         * @default Date(1900-01-01)
         */
        minDate?: TDate;
        /**
         * Max selectable date. @DateIOType
         * @default Date(2099-31-12)
         */
        maxDate?: TDate;
        /**
         * Disable specific date. @DateIOType
         */
        shouldDisableDate?: (day: TDate) => boolean;
    }
    export const validateDate: <TDate>(utils: MuiPickersAdapter<TDate>, value: ParseableDate<TDate>, { disablePast, disableFuture, minDate, maxDate, shouldDisableDate }: DateValidationProps<TDate>) => "invalidDate" | "shouldDisableDate" | "disableFuture" | "disablePast" | "minDate" | "maxDate" | null;
    export type DateValidationError = ReturnType<typeof validateDate>;
    type DateRangeValidationErrorValue = DateValidationError | 'invalidRange' | null;
    export const validateDateRange: <TDate>(utils: MuiPickersAdapter<TDate>, value: RangeInput<TDate>, dateValidationProps: DateValidationProps<TDate>) => [DateRangeValidationErrorValue, DateRangeValidationErrorValue];
    export type DateRangeValidationError = ReturnType<typeof validateDateRange>;
    export {};
}
declare module "@mui/lab/internal/pickers/PickersArrowSwitcher" {
    import * as React from 'react';
    export interface ExportedArrowSwitcherProps {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: {
            LeftArrowButton?: React.ElementType;
            LeftArrowIcon?: React.ElementType;
            RightArrowButton?: React.ElementType;
            RightArrowIcon?: React.ElementType;
        };
        /**
         * The props used for each slot inside.
         * @default {}
         */
        componentsProps?: {
            leftArrowButton?: Record<string, any>;
            rightArrowButton?: Record<string, any>;
        };
        /**
         * Left arrow icon aria-label text.
         */
        leftArrowButtonText?: string;
        /**
         * Right arrow icon aria-label text.
         */
        rightArrowButtonText?: string;
    }
    interface ArrowSwitcherProps extends ExportedArrowSwitcherProps, Omit<React.HTMLProps<HTMLDivElement>, 'ref'> {
        children?: React.ReactNode;
        isLeftDisabled: boolean;
        isLeftHidden?: boolean;
        isRightDisabled: boolean;
        isRightHidden?: boolean;
        onLeftClick: () => void;
        onRightClick: () => void;
    }
    const PickersArrowSwitcher: React.ForwardRefExoticComponent<Omit<ArrowSwitcherProps, "as"> & React.RefAttributes<HTMLDivElement>>;
    export default PickersArrowSwitcher;
}
declare module "@mui/lab/CalendarPicker/shared" {
    export type CalendarPickerView = 'year' | 'day' | 'month';
}
declare module "@mui/lab/CalendarPicker/PickersCalendarHeader" {
    import * as React from 'react';
    import IconButton from "@mui/material/IconButton/index";
    import { SlideDirection } from "@mui/lab/CalendarPicker/PickersSlideTransition";
    import { DateValidationProps } from "@mui/lab/internal/pickers/date-utils";
    import { ExportedArrowSwitcherProps } from "@mui/lab/internal/pickers/PickersArrowSwitcher";
    import { CalendarPickerView } from "@mui/lab/CalendarPicker/shared";
    export type ExportedCalendarHeaderProps<TDate> = Pick<PickersCalendarHeaderProps<TDate>, 'components' | 'componentsProps' | 'getViewSwitchingButtonText' | 'leftArrowButtonText' | 'rightArrowButtonText'>;
    export interface PickersCalendarHeaderComponentsPropsOverides {
    }
    export interface PickersCalendarHeaderProps<TDate> extends ExportedArrowSwitcherProps, Omit<DateValidationProps<TDate>, 'shouldDisableDate'> {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: ExportedArrowSwitcherProps['components'] & {
            SwitchViewButton?: React.ElementType;
            SwitchViewIcon?: React.ElementType;
        };
        /**
         * The props used for each slot inside.
         * @default {}
         */
        componentsProps?: ExportedArrowSwitcherProps['componentsProps'] & {
            switchViewButton?: React.ComponentPropsWithRef<typeof IconButton> & PickersCalendarHeaderComponentsPropsOverides;
        };
        currentMonth: TDate;
        disabled?: boolean;
        views: readonly CalendarPickerView[];
        /**
         * Get aria-label text for switching between views button.
         */
        getViewSwitchingButtonText?: (currentView: CalendarPickerView) => string;
        onMonthChange: (date: TDate, slideDirection: SlideDirection) => void;
        openView: CalendarPickerView;
        reduceAnimations: boolean;
        onViewChange?: (view: CalendarPickerView) => void;
    }
    /**
     * @ignore - do not document.
     */
    function PickersCalendarHeader<TDate>(props: PickersCalendarHeaderProps<TDate>): JSX.Element | null;
    export default PickersCalendarHeader;
}
declare module "@mui/lab/YearPicker/YearPicker" {
    import { PickerOnChangeFn } from "@mui/lab/internal/pickers/hooks/useViews";
    export interface ExportedYearPickerProps<TDate> {
        /**
         * Callback firing on year change @DateIOType.
         */
        onYearChange?: (date: TDate) => void;
        /**
         * Disable specific years dynamically.
         * Works like `shouldDisableDate` but for year selection view @DateIOType.
         */
        shouldDisableYear?: (day: TDate) => boolean;
    }
    export type YearPickerClassKey = keyof NonNullable<YearPickerProps<any>['classes']>;
    export interface YearPickerProps<TDate> extends ExportedYearPickerProps<TDate> {
        autoFocus?: boolean;
        className?: string;
        classes?: {
            /** Styles applied to the root element. */
            root?: string;
        };
        date: TDate | null;
        disabled?: boolean;
        disableFuture?: boolean | null;
        disablePast?: boolean | null;
        isDateDisabled: (day: TDate) => boolean;
        minDate: TDate;
        maxDate: TDate;
        onChange: PickerOnChangeFn<TDate>;
        onFocusedDayChange?: (day: TDate) => void;
        readOnly?: boolean;
    }
    const _default: <TDate>(props: YearPickerProps<TDate>) => JSX.Element;
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [YearPicker API](https://mui.com/api/year-picker/)
     */
    export default _default;
}
declare module "@mui/lab/CalendarPicker/CalendarPicker" {
    import * as React from 'react';
    import { ExportedCalendarProps } from "@mui/lab/CalendarPicker/PickersCalendar";
    import { PickerOnChangeFn } from "@mui/lab/internal/pickers/hooks/useViews";
    import { ExportedCalendarHeaderProps } from "@mui/lab/CalendarPicker/PickersCalendarHeader";
    import { ExportedYearPickerProps } from "@mui/lab/YearPicker/YearPicker";
    import { CalendarPickerView } from "@mui/lab/CalendarPicker/shared";
    export interface CalendarPickerClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the transition group element. */
        viewTransitionContainer: string;
    }
    export type CalendarPickerClassKey = keyof CalendarPickerClasses;
    export interface CalendarPickerProps<TDate> extends ExportedCalendarProps<TDate>, ExportedYearPickerProps<TDate>, ExportedCalendarHeaderProps<TDate> {
        className?: string;
        date: TDate | null;
        /**
         * Default calendar month displayed when `value={null}`.
         */
        defaultCalendarMonth?: TDate;
        /**
         * If `true`, the picker and text field are disabled.
         * @default false
         */
        disabled?: boolean;
        /**
         * @default false
         */
        disableFuture?: boolean;
        /**
         * @default false
         */
        disablePast?: boolean;
        /**
         * Max selectable date. @DateIOType
         */
        maxDate?: TDate;
        /**
         * Min selectable date. @DateIOType
         */
        minDate?: TDate;
        /**
         * Callback fired on view change.
         */
        onViewChange?: (view: CalendarPickerView) => void;
        /**
         * Callback fired on date change
         */
        onChange: PickerOnChangeFn<TDate>;
        /**
         * Callback firing on month change. @DateIOType
         */
        onMonthChange?: (date: TDate) => void;
        /**
         * Initially open view.
         * @default 'day'
         */
        openTo?: CalendarPickerView;
        /**
         * Make picker read only.
         * @default false
         */
        readOnly?: boolean;
        /**
         * Disable heavy animations.
         * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)
         */
        reduceAnimations?: boolean;
        /**
         * Component displaying when passed `loading` true.
         * @default () => <span data-mui-test="loading-progress">...</span>
         */
        renderLoading?: () => React.ReactNode;
        /**
         * Disable specific date. @DateIOType
         */
        shouldDisableDate?: (day: TDate) => boolean;
        /**
         * Controlled open view.
         */
        view?: CalendarPickerView;
        /**
         * Views for calendar picker.
         * @default ['year', 'day']
         */
        views?: readonly CalendarPickerView[];
    }
    export type ExportedCalendarPickerProps<TDate> = Omit<CalendarPickerProps<TDate>, 'date' | 'view' | 'views' | 'openTo' | 'onChange' | 'changeView' | 'slideDirection' | 'currentMonth' | 'className'>;
    interface CalendarPickerPropsWithClasses<TDate> extends CalendarPickerProps<TDate> {
        classes?: Partial<CalendarPickerClasses>;
    }
    export function getCalendarPickerUtilityClass(slot: string): string;
    export const calendarPickerClasses: CalendarPickerClasses;
    export const defaultReduceAnimations: boolean;
    const _default: <TDate>(props: CalendarPickerPropsWithClasses<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element;
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [CalendarPicker API](https://mui.com/api/calendar-picker/)
     */
    export default _default;
}
declare module "@mui/lab/CalendarPicker/index" {
    export { default, calendarPickerClasses } from "@mui/lab/CalendarPicker/CalendarPicker";
    export type CalendarPickerClassKey = import("@mui/lab/CalendarPicker/CalendarPicker").CalendarPickerClassKey;
    export type CalendarPickerClasses = import("@mui/lab/CalendarPicker/CalendarPicker").CalendarPickerClasses;
    export type CalendarPickerProps<TDate> = import("@mui/lab/CalendarPicker/CalendarPicker").CalendarPickerProps<TDate>;
    export type CalendarPickerView = NonNullable<CalendarPickerProps<unknown>['view']>;
}
declare module "@mui/lab/CalendarPickerSkeleton/CalendarPickerSkeleton" {
    import * as React from 'react';
    import { Theme } from "@mui/material/styles/index";
    import { SxProps } from "@mui/system/index";
    type HTMLDivProps = JSX.IntrinsicElements['div'];
    export interface CalendarPickerSkeletonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the week element. */
        week: string;
        /** Styles applied to the day element. */
        daySkeleton: string;
    }
    export interface CalendarPickerSkeletonProps extends HTMLDivProps {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<CalendarPickerSkeletonClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        ref?: React.Ref<HTMLDivElement>;
    }
    export type CalendarPickerSkeletonClassKey = keyof CalendarPickerSkeletonClasses;
    export function getCalendarPickerSkeletonUtilityClass(slot: string): string;
    export const calendarPickerSkeletonClasses: CalendarPickerSkeletonClasses;
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [CalendarPickerSkeleton API](https://mui.com/api/calendar-picker-skeleton/)
     */
    function CalendarPickerSkeleton(props: CalendarPickerSkeletonProps): JSX.Element;
    namespace CalendarPickerSkeleton {
        var propTypes: any;
    }
    export default CalendarPickerSkeleton;
}
declare module "@mui/lab/CalendarPickerSkeleton/index" {
    export { default, calendarPickerSkeletonClasses, getCalendarPickerSkeletonUtilityClass, } from "@mui/lab/CalendarPickerSkeleton/CalendarPickerSkeleton";
    export type CalendarPickerSkeletonClassKey = import("@mui/lab/CalendarPickerSkeleton/CalendarPickerSkeleton").CalendarPickerSkeletonClassKey;
    export type CalendarPickerSkeletonProps = import("@mui/lab/CalendarPickerSkeleton/CalendarPickerSkeleton").CalendarPickerSkeletonProps;
}
declare module "@mui/lab/internal/pickers/time-utils" {
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    type Meridiem = 'am' | 'pm' | null;
    export const getMeridiem: (date: unknown, utils: MuiPickersAdapter<unknown>) => Meridiem;
    export const convertValueToMeridiem: (value: number, meridiem: Meridiem, ampm: boolean) => number;
    export const convertToMeridiem: <TDate>(time: TDate, meridiem: 'am' | 'pm', ampm: boolean, utils: MuiPickersAdapter<TDate>) => TDate;
    export function getSecondsInDay(date: unknown, utils: MuiPickersAdapter): number;
    export const createIsAfterIgnoreDatePart: (disableIgnoringDatePartForTimeValidation: boolean, utils: MuiPickersAdapter<unknown>) => (dateLeft: unknown, dateRight: unknown) => boolean;
    export interface TimeValidationProps<TDate> {
        /**
         * Min time acceptable time.
         * For input validation date part of passed object will be ignored if `disableIgnoringDatePartForTimeValidation` not specified.
         */
        minTime?: TDate;
        /**
         * Max time acceptable time.
         * For input validation date part of passed object will be ignored if `disableIgnoringDatePartForTimeValidation` not specified.
         */
        maxTime?: TDate;
        /**
         * Dynamically check if time is disabled or not.
         * If returns `false` appropriate time point will ot be acceptable.
         */
        shouldDisableTime?: (timeValue: number, clockType: 'hours' | 'minutes' | 'seconds') => boolean;
        /**
         * Do not ignore date part when validating min/max time.
         * @default false
         */
        disableIgnoringDatePartForTimeValidation?: boolean;
    }
    export const validateTime: <TDate>(utils: MuiPickersAdapter<unknown>, value: ParseableDate<TDate>, { minTime, maxTime, shouldDisableTime, disableIgnoringDatePartForTimeValidation, }: TimeValidationProps<TDate>) => "invalidDate" | "minTime" | "maxTime" | "shouldDisableTime-hours" | "shouldDisableTime-minutes" | "shouldDisableTime-seconds" | null;
    export type TimeValidationError = ReturnType<typeof validateTime>;
    export {};
}
declare module "@mui/lab/ClockPicker/shared" {
    export const CLOCK_WIDTH = 220;
    export const CLOCK_HOUR_WIDTH = 36;
    export type ClockView = 'hours' | 'minutes' | 'seconds';
    export const getMinutes: (offsetX: number, offsetY: number, step?: number) => number;
    export const getHours: (offsetX: number, offsetY: number, ampm: boolean) => number;
}
declare module "@mui/lab/ClockPicker/ClockPicker" {
    import * as React from 'react';
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    import { TimeValidationProps } from "@mui/lab/internal/pickers/time-utils";
    import { PickerOnChangeFn } from "@mui/lab/internal/pickers/hooks/useViews";
    import { ClockView } from "@mui/lab/ClockPicker/shared";
    export interface ClockPickerClasses {
        /** Styles applied to the arrowSwitcher element. */
        arrowSwitcher: string;
    }
    export type ClockPickerClassKey = keyof ClockPickerClasses;
    export interface ClockPickerComponentsPropsOverrides {
    }
    export function getClockPickerUtilityClass(slot: string): string;
    export const clockPickerClasses: ClockPickerClasses;
    export interface ExportedClockPickerProps<TDate> extends TimeValidationProps<TDate> {
        /**
         * 12h/24h view for hour selection clock.
         * @default false
         */
        ampm?: boolean;
        /**
         * Step over minutes.
         * @default 1
         */
        minutesStep?: number;
        /**
         * Display ampm controls under the clock (instead of in the toolbar).
         * @default false
         */
        ampmInClock?: boolean;
        /**
         * Accessible text that helps user to understand which time and view is selected.
         * @default <TDate extends any>(
         *   view: ClockView,
         *   time: TDate | null,
         *   adapter: MuiPickersAdapter<TDate>,
         * ) =>
         *   `Select ${view}. ${
         *     time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`
         *   }`
         */
        getClockLabelText?: (view: ClockView, time: TDate | null, adapter: MuiPickersAdapter<TDate>) => string;
    }
    export interface ClockPickerProps<TDate> extends ExportedClockPickerProps<TDate> {
        /**
         * Set to `true` if focus should be moved to clock picker.
         */
        autoFocus?: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ClockPickerClasses>;
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         */
        components?: {
            LeftArrowButton?: React.ElementType;
            LeftArrowIcon?: React.ElementType;
            RightArrowButton?: React.ElementType;
            RightArrowIcon?: React.ElementType;
        };
        /**
         * The props used for each slot inside.
         */
        componentsProps?: {
            leftArrowButton?: React.SVGAttributes<SVGSVGElement> & ClockPickerComponentsPropsOverrides;
            rightArrowButton?: React.SVGAttributes<SVGSVGElement> & ClockPickerComponentsPropsOverrides;
        };
        /**
         * Selected date @DateIOType.
         */
        date: TDate | null;
        /**
         * Get clock number aria-text for hours.
         * @default (hours: string) => `${hours} hours`
         */
        getHoursClockNumberText?: (hours: string) => string;
        /**
         * Get clock number aria-text for minutes.
         * @default (minutes: string) => `${minutes} minutes`
         */
        getMinutesClockNumberText?: (minutes: string) => string;
        /**
         * Get clock number aria-text for seconds.
         * @default (seconds: string) => `${seconds} seconds`
         */
        getSecondsClockNumberText?: (seconds: string) => string;
        /**
         * Left arrow icon aria-label text.
         * @default 'open previous view'
         */
        leftArrowButtonText?: string;
        previousViewAvailable: boolean;
        nextViewAvailable: boolean;
        /**
         * On change callback @DateIOType.
         */
        onChange: PickerOnChangeFn<TDate>;
        openNextView: () => void;
        openPreviousView: () => void;
        /**
         * Right arrow icon aria-label text.
         * @default 'open next view'
         */
        rightArrowButtonText?: string;
        showViewSwitcher?: boolean;
        view: ClockView;
    }
    const _default: <TDate>(props: ClockPickerProps<TDate>) => JSX.Element;
    /**
     *
     * Demos:
     *
     * - [Time Picker](https://mui.com/components/time-picker/)
     *
     * API:
     *
     * - [ClockPicker API](https://mui.com/api/clock-picker/)
     */
    export default _default;
}
declare module "@mui/lab/ClockPicker/ClockPickerStandalone" {
    import * as React from 'react';
    import { ClockPickerProps } from "@mui/lab/ClockPicker/ClockPicker";
    import { ClockView } from "@mui/lab/ClockPicker/shared";
    export interface ClockPickerStandaloneProps<TDate> extends Omit<ClockPickerProps<TDate>, 'view' | 'openNextView' | 'openPreviousView' | 'nextViewAvailable' | 'previousViewAvailable'> {
        className?: string;
        /**
         * Callback fired on view change.
         */
        onViewChange?: (view: ClockView) => void;
        /**
         * Initially opened view.
         */
        openTo?: ClockView;
        /**
         * Controlled clock view.
         */
        view?: ClockView;
        /**
         * Available views for clock.
         */
        views?: readonly ClockView[];
    }
    const _default: <TDate>(props: ClockPickerStandaloneProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element;
    /**
     * Wrapping public API for better standalone usage of './ClockPicker'
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/ClockPicker/index" {
    export { default } from "@mui/lab/ClockPicker/ClockPickerStandalone";
    export { clockPickerClasses } from "@mui/lab/ClockPicker/ClockPicker";
    export type { ClockPickerClasses, ClockPickerClassKey } from "@mui/lab/ClockPicker/ClockPicker";
    export type ClockPickerProps<TDate> = import("@mui/lab/ClockPicker/ClockPickerStandalone").ClockPickerStandaloneProps<TDate>;
    export type ClockPickerView = NonNullable<ClockPickerProps<unknown>['view']>;
}
declare module "@mui/lab/internal/pickers/hooks/date-helpers-hooks" {
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { PickerOnChangeFn } from "@mui/lab/internal/pickers/hooks/useViews";
    export type OverrideParseableDateProps<TDate, TProps, TKey extends keyof TProps> = Omit<TProps, TKey> & Partial<Record<TKey, ParseableDate<TDate>>>;
    interface MonthValidationOptions {
        disablePast?: boolean;
        disableFuture?: boolean;
        minDate: unknown;
        maxDate: unknown;
    }
    export function useNextMonthDisabled(month: unknown, { disableFuture, maxDate }: Pick<MonthValidationOptions, 'disableFuture' | 'maxDate'>): boolean;
    export function usePreviousMonthDisabled(month: unknown, { disablePast, minDate }: Pick<MonthValidationOptions, 'disablePast' | 'minDate'>): boolean;
    export function useMeridiemMode<TDate>(date: TDate, ampm: boolean | undefined, onChange: PickerOnChangeFn<TDate>): {
        meridiemMode: "am" | "pm" | null;
        handleMeridiemChange: (mode: 'am' | 'pm') => void;
    };
    export {};
}
declare module "@mui/lab/internal/pickers/date-time-utils" {
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    import { DateValidationProps } from "@mui/lab/internal/pickers/date-utils";
    import { TimeValidationProps } from "@mui/lab/internal/pickers/time-utils";
    export interface DateTimeValidationProps<TDate> extends DateValidationProps<TDate>, TimeValidationProps<TDate> {
    }
    export function validateDateTime<TDate>(utils: MuiPickersAdapter<TDate>, value: ParseableDate<TDate>, { minDate, maxDate, disableFuture, shouldDisableDate, disablePast, ...timeValidationProps }: DateTimeValidationProps<TDate>): "invalidDate" | "shouldDisableDate" | "disableFuture" | "disablePast" | "minDate" | "maxDate" | "minTime" | "maxTime" | "shouldDisableTime-hours" | "shouldDisableTime-minutes" | "shouldDisableTime-seconds" | null;
    export type DateTimeValidationError = ReturnType<typeof validateDateTime>;
}
declare module "@mui/lab/internal/pickers/hooks/useValidation" {
    import { DateValidationProps, RangeInput } from "@mui/lab/internal/pickers/date-utils";
    import { DateTimeValidationProps } from "@mui/lab/internal/pickers/date-time-utils";
    import { TimeValidationProps } from "@mui/lab/internal/pickers/time-utils";
    export interface ValidationProps<TError, TDateValue> {
        /**
         * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).
         * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.
         * This can be used to render appropriate form error.
         *
         * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.
         * @DateIOType
         */
        onError?: (reason: TError, value: TDateValue) => void;
        value: TDateValue;
    }
    export type TimeValidationError = import("@mui/lab/internal/pickers/time-utils").TimeValidationError;
    export function useTimeValidation<TDate>(props: TimeValidationProps<TDate> & ValidationProps<TimeValidationError, TDate>): TimeValidationError;
    export type DateValidationError = import("@mui/lab/internal/pickers/date-utils").DateValidationError;
    export function useDateValidation<TDate>(props: DateValidationProps<TDate> & ValidationProps<DateValidationError, TDate>): DateValidationError;
    export type DateTimeValidationError = import("@mui/lab/internal/pickers/date-time-utils").DateTimeValidationError;
    export function useDateTimeValidation<TDate>(props: DateTimeValidationProps<TDate> & ValidationProps<DateTimeValidationError, TDate>): DateTimeValidationError;
    export type DateRangeValidationError = import("@mui/lab/internal/pickers/date-utils").DateRangeValidationError;
    export function useDateRangeValidation<TDate>(props: DateValidationProps<TDate> & ValidationProps<DateRangeValidationError, RangeInput<TDate>>): DateRangeValidationError;
}
declare module "@mui/lab/internal/pickers/PureDateInput" {
    import * as React from 'react';
    import { TextFieldProps as MuiTextFieldPropsType } from "@mui/material/TextField/index";
    import { IconButtonProps } from "@mui/material/IconButton/index";
    import { InputAdornmentProps } from "@mui/material/InputAdornment/index";
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    export type MuiTextFieldProps = MuiTextFieldPropsType | Omit<MuiTextFieldPropsType, 'variant'>;
    export interface DateInputProps<TInputValue = ParseableDate<unknown>, TDateValue = unknown> {
        /**
         * Regular expression to detect "accepted" symbols.
         * @default /\dap/gi
         */
        acceptRegex?: RegExp;
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         */
        components?: {
            OpenPickerIcon?: React.ElementType;
        };
        disabled?: boolean;
        /**
         * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.
         * @default false
         */
        disableMaskedInput?: boolean;
        /**
         * Do not render open picker button (renders only text field with validation).
         * @default false
         */
        disableOpenPicker?: boolean;
        /**
         * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType
         * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`
         */
        getOpenDialogAriaText?: (value: ParseableDate<TDateValue>, utils: MuiPickersAdapter<TDateValue>) => string;
        ignoreInvalidInputs?: boolean;
        /**
         * Props to pass to keyboard input adornment.
         */
        InputAdornmentProps?: Partial<InputAdornmentProps>;
        inputFormat: string;
        InputProps?: MuiTextFieldProps['InputProps'];
        /**
         * Pass a ref to the `input` element.
         */
        inputRef?: React.Ref<HTMLInputElement>;
        label?: MuiTextFieldProps['label'];
        /**
         * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).
         */
        mask?: string;
        onBlur?: () => void;
        onChange: (date: TDateValue, keyboardInputValue?: string) => void;
        open: boolean;
        openPicker: () => void;
        /**
         * Props to pass to keyboard adornment button.
         */
        OpenPickerButtonProps?: Partial<IconButtonProps>;
        rawValue: TInputValue;
        readOnly?: boolean;
        /**
         * The `renderInput` prop allows you to customize the rendered input.
         * The `props` argument of this render prop contains props of [TextField](https://mui.com/api/text-field/#textfield-api) that you need to forward.
         * Pay specific attention to the `ref` and `inputProps` keys.
         * @example ```jsx
         * renderInput={props => <TextField {...props} />}
         * ````
         */
        renderInput: (props: MuiTextFieldPropsType) => React.ReactElement;
        /**
         * Custom formatter to be passed into Rifm component.
         */
        rifmFormatter?: (str: string) => string;
        TextFieldProps?: Partial<MuiTextFieldProps>;
        validationError?: boolean;
    }
    export type ExportedDateInputProps<TInputValue, TDateValue> = Omit<DateInputProps<TInputValue, TDateValue>, 'inputFormat' | 'inputValue' | 'onBlur' | 'onChange' | 'open' | 'openPicker' | 'rawValue' | 'TextFieldProps' | 'validationError'>;
    export const PureDateInput: React.ForwardRefExoticComponent<DateInputProps<unknown, unknown> & React.RefAttributes<HTMLDivElement>>;
}
declare module "@mui/lab/internal/pickers/typings/BasePicker" {
    import React from 'react';
    import { AllAvailableViews } from "@mui/lab/internal/pickers/typings/Views";
    export type CalendarAndClockProps<TDate> = import("@mui/lab/CalendarPicker/CalendarPicker").ExportedCalendarPickerProps<TDate> & import("@mui/lab/ClockPicker/ClockPicker").ExportedClockPickerProps<TDate>;
    export type ToolbarComponentProps<TDate = unknown> = CalendarAndClockProps<TDate> & {
        ampmInClock?: boolean;
        date: TDate;
        dateRangeIcon?: React.ReactNode;
        getMobileKeyboardInputViewButtonText?: () => string;
        hideTabs?: boolean;
        isLandscape: boolean;
        isMobileKeyboardViewOpen: boolean;
        onChange: import("@mui/lab/internal/pickers/hooks/useViews").PickerOnChangeFn<TDate>;
        openView: AllAvailableViews;
        setOpenView: (view: AllAvailableViews) => void;
        timeIcon?: React.ReactNode;
        toggleMobileKeyboardView: () => void;
        toolbarFormat?: string;
        toolbarPlaceholder?: React.ReactNode;
        toolbarTitle?: React.ReactNode;
        views: readonly AllAvailableViews[];
    };
    export interface BasePickerProps<TInputValue, TDateValue> {
        /**
         * className applied to the root component.
         */
        className?: string;
        /**
         * If `true` the popup or dialog will immediately close after submitting full date.
         * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
         */
        disableCloseOnSelect?: boolean;
        /**
         * If `true`, the picker and text field are disabled.
         */
        disabled?: boolean;
        /**
         * Format string.
         */
        inputFormat?: string;
        /**
         * Callback fired when date is accepted @DateIOType.
         */
        onAccept?: (date: TDateValue) => void;
        /**
         * Callback fired when the value (the selected date) changes @DateIOType.
         */
        onChange: (date: TDateValue, keyboardInputValue?: string) => void;
        /**
         * Callback fired when the popup requests to be closed.
         * Use in controlled mode (see open).
         */
        onClose?: () => void;
        /**
         * Callback fired when the popup requests to be opened.
         * Use in controlled mode (see open).
         */
        onOpen?: () => void;
        /**
         * Force rendering in particular orientation.
         */
        orientation?: 'portrait' | 'landscape';
        /**
         * Control the popup or dialog open state.
         */
        open?: boolean;
        /**
         * Make picker read only.
         */
        readOnly?: boolean;
        /**
         * If `true`, show the toolbar even in desktop mode.
         */
        showToolbar?: boolean;
        /**
         * Component that will replace default toolbar renderer.
         */
        ToolbarComponent?: React.JSXElementConstructor<ToolbarComponentProps<TDateValue>>;
        /**
         * Date format, that is displaying in toolbar.
         */
        toolbarFormat?: string;
        /**
         * Mobile picker date value placeholder, displaying if `value` === `null`.
         * @default '–'
         */
        toolbarPlaceholder?: React.ReactNode;
        /**
         * Prop forwarded to the ToolbarComponent.
         */
        toolbarTitle?: React.ReactNode;
        /**
         * The value of the picker.
         */
        value: TInputValue;
    }
}
declare module "@mui/lab/DatePicker/shared" {
    import React from 'react';
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { OverrideParseableDateProps } from "@mui/lab/internal/pickers/hooks/date-helpers-hooks";
    import { CalendarPickerView } from "@mui/lab/CalendarPicker/index";
    import { ExportedCalendarPickerProps } from "@mui/lab/CalendarPicker/CalendarPicker";
    import { DateValidationError, ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { ExportedDateInputProps } from "@mui/lab/internal/pickers/PureDateInput";
    import { BasePickerProps, ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    export type DatePickerView = 'year' | 'day' | 'month';
    export interface BaseDatePickerProps<TDate> extends ExportedCalendarPickerProps<TDate>, BasePickerProps<ParseableDate<TDate>, TDate | null>, ValidationProps<DateValidationError, ParseableDate<TDate>>, ExportedDateInputProps<ParseableDate<TDate>, TDate | null> {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: OverrideParseableDateProps<TDate, ExportedCalendarPickerProps<TDate>, 'minDate' | 'maxDate'>['components'] & ExportedDateInputProps<ParseableDate<TDate>, TDate | null>['components'];
        /**
         * Callback fired on view change.
         */
        onViewChange?: (view: DatePickerView) => void;
        /**
         * First view to show.
         */
        openTo?: DatePickerView;
        /**
         * Component that will replace default toolbar renderer.
         * @default DatePickerToolbar
         */
        ToolbarComponent?: React.JSXElementConstructor<ToolbarComponentProps<TDate | null>>;
        /**
         * Mobile picker title, displaying in the toolbar.
         * @default 'Select date'
         */
        toolbarTitle?: React.ReactNode;
        /**
         * Array of views to show.
         */
        views?: readonly DatePickerView[];
    }
    export const isYearOnlyView: (views: readonly CalendarPickerView[]) => views is readonly "year"[];
    export const isYearAndMonthViews: (views: readonly CalendarPickerView[]) => views is readonly ("month" | "year")[];
    export type DefaultizedProps<Props> = Props & {
        inputFormat: string;
    };
    export function useDatePickerDefaultizedProps<Props extends BaseDatePickerProps<unknown>>({ openTo, views, minDate: minDateProp, maxDate: maxDateProp, ...other }: Props, name: string): DefaultizedProps<Props> & Required<Pick<BaseDatePickerProps<unknown>, 'openTo' | 'views'>>;
}
declare module "@mui/material/Unstable_TrapFocus/index" {
    export { default } from "@mui/core/Unstable_TrapFocus/index";
    export * from "@mui/core/Unstable_TrapFocus/index";
}
declare module "@mui/lab/internal/pickers/PickersPopper" {
    import * as React from 'react';
    import { PaperProps as MuiPaperProps } from "@mui/material/Paper/index";
    import { PopperProps as MuiPopperProps } from "@mui/material/Popper/index";
    import { TrapFocusProps as MuiTrapFocusProps } from "@mui/material/Unstable_TrapFocus/index";
    import { TransitionProps as MuiTransitionProps } from "@mui/material/transitions/index";
    export interface ExportedPickerPaperProps {
        /**
         * If `true`, it shows the clear action in the picker dialog.
         * @default false
         */
        clearable?: boolean;
        /**
         * Clear text message.
         * @default 'Clear'
         */
        clearText?: React.ReactNode;
        /**
         * Paper props passed down to [Paper](https://mui.com/api/paper/) component.
         */
        PaperProps?: Partial<MuiPaperProps>;
    }
    export interface ExportedPickerPopperProps {
        /**
         * Popper props passed down to [Popper](https://mui.com/api/popper/) component.
         */
        PopperProps?: Partial<MuiPopperProps>;
        /**
         * Custom component for popper [Transition](https://mui.com/components/transitions/#transitioncomponent-prop).
         */
        TransitionComponent?: React.JSXElementConstructor<MuiTransitionProps>;
    }
    export interface PickerPopperProps extends ExportedPickerPopperProps, ExportedPickerPaperProps {
        role: 'tooltip' | 'dialog';
        TrapFocusProps?: Partial<MuiTrapFocusProps>;
        anchorEl: MuiPopperProps['anchorEl'];
        open: MuiPopperProps['open'];
        containerRef?: React.Ref<HTMLDivElement>;
        children?: React.ReactNode;
        onClose: () => void;
        onBlur?: () => void;
        onClear?: () => void;
    }
    const PickersPopper: (props: PickerPopperProps) => JSX.Element;
    export default PickersPopper;
}
declare module "@mui/lab/internal/pickers/wrappers/WrapperProps" {
    import { DateInputProps } from "@mui/lab/internal/pickers/PureDateInput";
    export interface DateInputPropsLike extends Omit<DateInputProps<any, any>, 'renderInput' | 'validationError'> {
        renderInput: (...args: any) => JSX.Element;
        validationError?: any;
    }
    export interface PrivateWrapperProps {
        onAccept: () => void;
        onClear: () => void;
        onDismiss: () => void;
        onSetToday: () => void;
        open: boolean;
    }
}
declare module "@mui/lab/internal/pickers/wrappers/DesktopWrapper" {
    import * as React from 'react';
    import { ExportedPickerPopperProps, ExportedPickerPaperProps } from "@mui/lab/internal/pickers/PickersPopper";
    import { DateInputPropsLike, PrivateWrapperProps } from "@mui/lab/internal/pickers/wrappers/WrapperProps";
    export interface DesktopWrapperProps extends ExportedPickerPopperProps, ExportedPickerPaperProps {
        children?: React.ReactNode;
    }
    export interface InternalDesktopWrapperProps extends DesktopWrapperProps, PrivateWrapperProps {
        DateInputProps: DateInputPropsLike & {
            ref?: React.Ref<HTMLDivElement>;
        };
        KeyboardDateInputComponent: React.JSXElementConstructor<DateInputPropsLike & {
            ref?: React.Ref<HTMLDivElement>;
        }>;
    }
    function DesktopWrapper(props: InternalDesktopWrapperProps): JSX.Element;
    export default DesktopWrapper;
}
declare module "@mui/lab/DesktopDatePicker/DesktopDatePicker" {
    import * as React from 'react';
    import { BaseDatePickerProps } from "@mui/lab/DatePicker/shared";
    import { DesktopWrapperProps } from "@mui/lab/internal/pickers/wrappers/DesktopWrapper";
    export interface DesktopDatePickerProps<TDate = unknown> extends BaseDatePickerProps<TDate>, DesktopWrapperProps {
    }
    type DesktopDatePickerComponent = (<TDate>(props: DesktopDatePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [DesktopDatePicker API](https://mui.com/api/desktop-date-picker/)
     */
    const DesktopDatePicker: DesktopDatePickerComponent;
    export default DesktopDatePicker;
}
declare module "@mui/lab/DesktopDatePicker/index" {
    export * from "@mui/lab/DesktopDatePicker/DesktopDatePicker";
    export { default } from "@mui/lab/DesktopDatePicker/DesktopDatePicker";
}
declare module "@mui/lab/internal/pickers/PickersModalDialog" {
    import * as React from 'react';
    import { DialogProps as MuiDialogProps } from "@mui/material/Dialog/index";
    export interface ExportedPickerModalProps {
        /**
         * Ok button text.
         * @default 'OK'
         */
        okText?: React.ReactNode;
        /**
         * Cancel text message.
         * @default 'Cancel'
         */
        cancelText?: React.ReactNode;
        /**
         * Clear text message.
         * @default 'Clear'
         */
        clearText?: React.ReactNode;
        /**
         * Today text message.
         * @default 'Today'
         */
        todayText?: React.ReactNode;
        /**
         * If `true`, it shows the clear action in the picker dialog.
         * @default false
         */
        clearable?: boolean;
        /**
         * If `true`, the today button is displayed. **Note** that `showClearButton` has a higher priority.
         * @default false
         */
        showTodayButton?: boolean;
        /**
         * Props applied to the [`Dialog`](/api/dialog/) element.
         */
        DialogProps?: Partial<MuiDialogProps>;
    }
    export interface PickersModalDialogProps extends ExportedPickerModalProps {
        onAccept: () => void;
        onClear: () => void;
        onDismiss: () => void;
        onSetToday: () => void;
        open: boolean;
    }
    const PickersModalDialog: (props: React.PropsWithChildren<PickersModalDialogProps>) => JSX.Element;
    export default PickersModalDialog;
}
declare module "@mui/lab/internal/pickers/wrappers/MobileWrapper" {
    import * as React from 'react';
    import { ExportedPickerModalProps } from "@mui/lab/internal/pickers/PickersModalDialog";
    import { PrivateWrapperProps, DateInputPropsLike } from "@mui/lab/internal/pickers/wrappers/WrapperProps";
    export interface MobileWrapperProps extends ExportedPickerModalProps {
        children?: React.ReactNode;
    }
    export interface InternalMobileWrapperProps extends MobileWrapperProps, PrivateWrapperProps {
        DateInputProps: DateInputPropsLike & {
            ref?: React.Ref<HTMLDivElement>;
        };
        PureDateInputComponent: React.JSXElementConstructor<DateInputPropsLike>;
    }
    function MobileWrapper(props: InternalMobileWrapperProps): JSX.Element;
    export default MobileWrapper;
}
declare module "@mui/lab/MobileDatePicker/MobileDatePicker" {
    import * as React from 'react';
    import { BaseDatePickerProps } from "@mui/lab/DatePicker/shared";
    import { MobileWrapperProps } from "@mui/lab/internal/pickers/wrappers/MobileWrapper";
    export interface MobileDatePickerProps<TDate = unknown> extends BaseDatePickerProps<TDate>, MobileWrapperProps {
    }
    type MobileDatePickerComponent = (<TDate>(props: MobileDatePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [MobileDatePicker API](https://mui.com/api/mobile-date-picker/)
     */
    const MobileDatePicker: MobileDatePickerComponent;
    export default MobileDatePicker;
}
declare module "@mui/lab/MobileDatePicker/index" {
    export * from "@mui/lab/MobileDatePicker/MobileDatePicker";
    export { default } from "@mui/lab/MobileDatePicker/MobileDatePicker";
}
declare module "@mui/lab/DatePicker/DatePicker" {
    import * as React from 'react';
    import { DesktopDatePickerProps } from "@mui/lab/DesktopDatePicker/index";
    import { MobileDatePickerProps } from "@mui/lab/MobileDatePicker/index";
    export interface DatePickerProps<TDate = unknown> extends DesktopDatePickerProps<TDate>, MobileDatePickerProps<TDate> {
        /**
         * CSS media query when `Mobile` mode will be changed to `Desktop`.
         * @default '@media (pointer: fine)'
         * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
         */
        desktopModeMediaQuery?: string;
    }
    type DatePickerComponent = (<TDate>(props: DatePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     * - [Pickers](https://mui.com/components/pickers/)
     *
     * API:
     *
     * - [DatePicker API](https://mui.com/api/date-picker/)
     */
    const DatePicker: DatePickerComponent;
    export default DatePicker;
}
declare module "@mui/lab/DatePicker/index" {
    export { default } from "@mui/lab/DatePicker/DatePicker";
    export * from "@mui/lab/DatePicker/DatePicker";
}
declare module "@mui/lab/internal/pickers/wrappers/ResponsiveWrapper" {
    import * as React from 'react';
    import { MobileWrapperProps } from "@mui/lab/internal/pickers/wrappers/MobileWrapper";
    import { DesktopWrapperProps } from "@mui/lab/internal/pickers/wrappers/DesktopWrapper";
    import { DateInputPropsLike, PrivateWrapperProps } from "@mui/lab/internal/pickers/wrappers/WrapperProps";
    export interface ResponsiveWrapperProps extends MobileWrapperProps, DesktopWrapperProps {
        /**
         * CSS media query when `Mobile` mode will be changed to `Desktop`.
         * @default '@media (pointer: fine)'
         * @example '@media (min-width: 720px)' or theme.breakpoints.up('sm')
         */
        desktopModeMediaQuery?: string;
    }
    interface InternalResponsiveWrapperProps extends ResponsiveWrapperProps, PrivateWrapperProps {
        DateInputProps: DateInputPropsLike & {
            ref?: React.Ref<HTMLDivElement>;
        };
        KeyboardDateInputComponent: React.JSXElementConstructor<DateInputPropsLike & {
            ref?: React.Ref<HTMLDivElement>;
        }>;
        PureDateInputComponent: React.JSXElementConstructor<DateInputPropsLike>;
    }
    export function ResponsiveTooltipWrapper(props: InternalResponsiveWrapperProps): JSX.Element;
    export {};
}
declare module "@mui/lab/DateRangePicker/DateRangePickerInput" {
    import * as React from 'react';
    import { RangeInput, DateRange, CurrentlySelectingRangeEndProps } from "@mui/lab/DateRangePicker/RangeTypes";
    import { DateRangeValidationError } from "@mui/lab/internal/pickers/date-utils";
    import { DateInputProps, ExportedDateInputProps, MuiTextFieldProps } from "@mui/lab/internal/pickers/PureDateInput";
    export interface ExportedDateRangePickerInputProps extends Omit<ExportedDateInputProps<RangeInput<any>, DateRange<any>>, 'renderInput'> {
        /**
         * The `renderInput` prop allows you to customize the rendered input.
         * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://mui.com/api/text-field/#textfield-api),
         * that you need to forward to the range start/end inputs respectively.
         * Pay specific attention to the `ref` and `inputProps` keys.
         * @example
         * ```jsx
         * <DateRangePicker
         *  renderInput={(startProps, endProps) => (
         *   <React.Fragment>
         *     <TextField {...startProps} />
         *     <Box sx={{ mx: 2 }}> to </Box>
         *     <TextField {...endProps} />
         *   </React.Fragment>;
         *  )}
         * />
         * ````
         */
        renderInput: (startProps: MuiTextFieldProps, endProps: MuiTextFieldProps) => React.ReactElement;
    }
    export interface DateRangeInputProps extends ExportedDateRangePickerInputProps, CurrentlySelectingRangeEndProps, Omit<DateInputProps<RangeInput<any>, DateRange<any>>, 'validationError' | 'renderInput'> {
        startText: React.ReactNode;
        endText: React.ReactNode;
        validationError: DateRangeValidationError;
    }
    /**
     * @ignore - internal component.
     */
    const DateRangePickerInput: React.ForwardRefExoticComponent<DateRangeInputProps & React.RefAttributes<HTMLDivElement>>;
    export default DateRangePickerInput;
}
declare module "@mui/lab/DateRangePickerDay/DateRangePickerDay" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { PickersDayProps } from "@mui/lab/PickersDay/PickersDay";
    export interface DateRangePickerDayClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `isHighlighting=true` and `outsideCurrentMonth=false`. */
        rangeIntervalDayHighlight: string;
        /** Styles applied to the root element if `isStartOfHighlighting=true` or `day` is the start of the month. */
        rangeIntervalDayHighlightStart: string;
        /** Styles applied to the root element if `isEndOfHighlighting=true` or `day` is the end of the month. */
        rangeIntervalDayHighlightEnd: string;
        /** Styles applied to the preview element. */
        rangeIntervalPreview: string;
        /** Styles applied to the root element if `isPreviewing=true` and `outsideCurrentMonth=false`. */
        rangeIntervalDayPreview: string;
        /** Styles applied to the root element if `isStartOfPreviewing=true` or `day` is the start of the month. */
        rangeIntervalDayPreviewStart: string;
        /** Styles applied to the root element if `isEndOfPreviewing=true` or `day` is the end of the month. */
        rangeIntervalDayPreviewEnd: string;
        /** Styles applied to the day element. */
        day: string;
        /** Styles applied to the day element if `isHighlighting=false`. */
        dayOutsideRangeInterval: string;
        /** Styles applied to the day element if `selected=false` and `isHighlighting=true`. */
        dayInsideRangeInterval: string;
        /** Styles applied to the day element if `selected=false`. */
        notSelectedDate: string;
    }
    export type DateRangePickerDayClassKey = keyof DateRangePickerDayClasses;
    export interface DateRangePickerDayProps<TDate> extends Omit<PickersDayProps<TDate>, 'classes'> {
        /**
         * Set to `true` if the `day` is in a highlighted date range.
         */
        isHighlighting: boolean;
        /**
         * Set to `true` if the `day` is the end of a highlighted date range.
         */
        isEndOfHighlighting: boolean;
        /**
         * Set to `true` if the `day` is the start of a highlighted date range.
         */
        isStartOfHighlighting: boolean;
        /**
         * Set to `true` if the `day` is in a preview date range.
         */
        isPreviewing: boolean;
        /**
         * Set to `true` if the `day` is the start of a highlighted date range.
         */
        isEndOfPreviewing: boolean;
        /**
         * Set to `true` if the `day` is the end of a highlighted date range.
         */
        isStartOfPreviewing: boolean;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<DateRangePickerDayClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export function getDateRangePickerDayUtilityClass(slot: string): string;
    export const dateRangePickerDayClasses: DateRangePickerDayClasses;
    const _default: <TDate>(props: DateRangePickerDayProps<TDate> & React.RefAttributes<HTMLButtonElement>) => JSX.Element;
    /**
     *
     * Demos:
     *
     * - [Date Range Picker](https://mui.com/components/date-range-picker/)
     *
     * API:
     *
     * - [DateRangePickerDay API](https://mui.com/api/date-range-picker-day/)
     */
    export default _default;
}
declare module "@mui/lab/DateRangePickerDay/index" {
    export * from "@mui/lab/DateRangePickerDay/DateRangePickerDay";
    export { default } from "@mui/lab/DateRangePickerDay/DateRangePickerDay";
}
declare module "@mui/lab/DateRangePicker/DateRangePickerViewDesktop" {
    import { DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { PickersCalendarProps } from "@mui/lab/CalendarPicker/PickersCalendar";
    import { DateRangePickerDayProps } from "@mui/lab/DateRangePickerDay/index";
    import { ExportedArrowSwitcherProps } from "@mui/lab/internal/pickers/PickersArrowSwitcher";
    import { DateValidationProps } from "@mui/lab/internal/pickers/date-utils";
    export interface ExportedDesktopDateRangeCalendarProps<TDate> {
        /**
         * The number of calendars that render on **desktop**.
         * @default 2
         */
        calendars?: 1 | 2 | 3;
        /**
         * Custom renderer for `<DateRangePicker />` days. @DateIOType
         * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />
         */
        renderDay?: (date: TDate, dateRangePickerDayProps: DateRangePickerDayProps<TDate>) => JSX.Element;
    }
    interface DesktopDateRangeCalendarProps<TDate> extends ExportedDesktopDateRangeCalendarProps<TDate>, Omit<PickersCalendarProps<TDate>, 'renderDay' | 'onFocusedDayChange'>, DateValidationProps<TDate>, ExportedArrowSwitcherProps {
        calendars: 1 | 2 | 3;
        date: DateRange<TDate | null>;
        changeMonth: (date: TDate) => void;
        currentlySelectingRangeEnd: 'start' | 'end';
    }
    /**
     * @ignore - internal component.
     */
    function DateRangePickerViewDesktop<TDate>(props: DesktopDateRangeCalendarProps<TDate>): JSX.Element;
    export default DateRangePickerViewDesktop;
}
declare module "@mui/lab/DateRangePicker/DateRangePickerView" {
    import * as React from 'react';
    import PropTypes from 'prop-types';
    import { BasePickerProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    import { WrapperVariant } from "@mui/lab/internal/pickers/wrappers/WrapperVariantContext";
    import { DateRangeInputProps } from "@mui/lab/DateRangePicker/DateRangePickerInput";
    import { DateRange, CurrentlySelectingRangeEndProps, RangeInput } from "@mui/lab/DateRangePicker/RangeTypes";
    import { ExportedCalendarPickerProps } from "@mui/lab/CalendarPicker/CalendarPicker";
    import { ExportedDesktopDateRangeCalendarProps } from "@mui/lab/DateRangePicker/DateRangePickerViewDesktop";
    import { PickerSelectionState } from "@mui/lab/internal/pickers/hooks/usePickerState";
    type BaseCalendarPropsToReuse<TDate> = Omit<ExportedCalendarPickerProps<TDate>, 'onYearChange' | 'renderDay'>;
    export interface ExportedDateRangePickerViewProps<TDate> extends BaseCalendarPropsToReuse<TDate>, ExportedDesktopDateRangeCalendarProps<TDate>, Omit<BasePickerProps<RangeInput<TDate>, DateRange<TDate>>, 'value' | 'onChange'> {
        /**
         * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.
         * @default false
         */
        disableAutoMonthSwitching?: boolean;
        /**
         * Mobile picker title, displaying in the toolbar.
         * @default 'Select date range'
         */
        toolbarTitle?: React.ReactNode;
    }
    interface DateRangePickerViewProps<TDate> extends CurrentlySelectingRangeEndProps, ExportedDateRangePickerViewProps<TDate> {
        calendars: 1 | 2 | 3;
        open: boolean;
        startText: React.ReactNode;
        endText: React.ReactNode;
        isMobileKeyboardViewOpen: boolean;
        toggleMobileKeyboardView: () => void;
        DateInputProps: DateRangeInputProps;
        date: DateRange<TDate>;
        onDateChange: (date: DateRange<TDate>, currentWrapperVariant: WrapperVariant, isFinish?: PickerSelectionState) => void;
    }
    /**
     * @ignore - internal component.
     */
    export function DateRangePickerView<TDate>(props: DateRangePickerViewProps<TDate>): JSX.Element;
    export namespace DateRangePickerView {
        var propTypes: {
            calendars: PropTypes.Requireable<number>;
            disableAutoMonthSwitching: PropTypes.Requireable<boolean>;
        };
    }
    export {};
}
declare module "@mui/lab/DateRangePicker/DateRangePicker" {
    import * as React from 'react';
    import { ResponsiveWrapperProps } from "@mui/lab/internal/pickers/wrappers/ResponsiveWrapper";
    import { RangeInput, DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { ExportedDateRangePickerViewProps } from "@mui/lab/DateRangePicker/DateRangePickerView";
    import { ExportedDateRangePickerInputProps } from "@mui/lab/DateRangePicker/DateRangePickerInput";
    import { DateRangeValidationError } from "@mui/lab/internal/pickers/date-utils";
    interface BaseDateRangePickerProps<TDate> extends ExportedDateRangePickerViewProps<TDate>, ValidationProps<DateRangeValidationError, RangeInput<TDate>>, ExportedDateRangePickerInputProps {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: ExportedDateRangePickerViewProps<TDate>['components'] & ExportedDateRangePickerInputProps['components'];
        /**
         * Text for end input label and toolbar placeholder.
         * @default 'End'
         */
        endText?: React.ReactNode;
        /**
         * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).
         * @default '__/__/____'
         */
        mask?: ExportedDateRangePickerInputProps['mask'];
        /**
         * Min selectable date. @DateIOType
         * @default defaultMinDate
         */
        minDate?: TDate;
        /**
         * Max selectable date. @DateIOType
         * @default defaultMaxDate
         */
        maxDate?: TDate;
        /**
         * Callback fired when the value (the selected date range) changes @DateIOType.
         */
        onChange: (date: DateRange<TDate>, keyboardInputValue?: string) => void;
        /**
         * Text for start input label and toolbar placeholder.
         * @default 'Start'
         */
        startText?: React.ReactNode;
        /**
         * The value of the date range picker.
         */
        value: RangeInput<TDate>;
    }
    export interface DateRangePickerProps<TDate> extends BaseDateRangePickerProps<TDate>, ResponsiveWrapperProps {
    }
    type DateRangePickerComponent = (<TDate>(props: DateRangePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes: unknown;
    };
    /**
     *
     * Demos:
     *
     * - [Date Range Picker](https://mui.com/components/date-range-picker/)
     *
     * API:
     *
     * - [DateRangePicker API](https://mui.com/api/date-range-picker/)
     */
    const DateRangePicker: DateRangePickerComponent;
    export default DateRangePicker;
}
declare module "@mui/lab/DateRangePicker/index" {
    export * from "@mui/lab/DateRangePicker/DateRangePicker";
    export { default } from "@mui/lab/DateRangePicker/DateRangePicker";
    export type DateRange<TDate> = import("@mui/lab/DateRangePicker/RangeTypes").DateRange<TDate>;
}
declare module "@mui/lab/DateTimePicker/shared" {
    import * as React from 'react';
    import { ExportedClockPickerProps } from "@mui/lab/ClockPicker/ClockPicker";
    import { ExportedCalendarPickerProps } from "@mui/lab/CalendarPicker/CalendarPicker";
    import { DateTimeValidationError, ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { BasePickerProps, ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    import { ExportedDateInputProps } from "@mui/lab/internal/pickers/PureDateInput";
    export type DateTimePickerView = 'year' | 'day' | 'month' | 'hours' | 'minutes' | 'seconds';
    export interface BaseDateTimePickerProps<TDate> extends ExportedClockPickerProps<TDate>, ExportedCalendarPickerProps<TDate>, BasePickerProps<ParseableDate<TDate>, TDate | null>, ValidationProps<DateTimeValidationError, ParseableDate<TDate>>, ExportedDateInputProps<ParseableDate<TDate>, TDate | null> {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: ExportedCalendarPickerProps<TDate>['components'] & ExportedDateInputProps<ParseableDate<TDate>, TDate | null>['components'];
        /**
         * To show tabs.
         */
        hideTabs?: boolean;
        /**
         * Date tab icon.
         */
        dateRangeIcon?: React.ReactNode;
        /**
         * Time tab icon.
         */
        timeIcon?: React.ReactNode;
        /**
         * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
         */
        minDateTime?: TDate;
        /**
         * Minimal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
         */
        maxDateTime?: TDate;
        /**
         * Callback fired on view change.
         */
        onViewChange?: (view: DateTimePickerView) => void;
        /**
         * First view to show.
         */
        openTo?: DateTimePickerView;
        /**
         * Component that will replace default toolbar renderer.
         * @default DateTimePickerToolbar
         */
        ToolbarComponent?: React.JSXElementConstructor<ToolbarComponentProps<TDate | null>>;
        /**
         * Mobile picker title, displaying in the toolbar.
         * @default 'Select date & time'
         */
        toolbarTitle?: React.ReactNode;
        /**
         * Date format, that is displaying in toolbar.
         */
        toolbarFormat?: string;
        /**
         * Array of views to show.
         */
        views?: readonly DateTimePickerView[];
    }
    type DefaultizedProps<Props> = Props & {
        inputFormat: string;
    };
    export function useDateTimePickerDefaultizedProps<Props extends BaseDateTimePickerProps<unknown>>({ ampm, inputFormat, maxDate: maxDateProp, maxDateTime, maxTime, minDate: minDateProp, minDateTime, minTime, openTo, orientation, views, ...other }: Props, name: string): DefaultizedProps<Props> & Required<Pick<BaseDateTimePickerProps<unknown>, 'openTo' | 'views'>>;
    export {};
}
declare module "@mui/lab/DesktopDateTimePicker/DesktopDateTimePicker" {
    import * as React from 'react';
    import { BaseDateTimePickerProps } from "@mui/lab/DateTimePicker/shared";
    import { DesktopWrapperProps } from "@mui/lab/internal/pickers/wrappers/DesktopWrapper";
    export interface DesktopDateTimePickerProps<TDate = unknown> extends BaseDateTimePickerProps<TDate>, DesktopWrapperProps {
    }
    type DesktopDateTimePickerComponent = (<TDate>(props: DesktopDateTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Time Picker](https://mui.com/components/date-time-picker/)
     *
     * API:
     *
     * - [DesktopDateTimePicker API](https://mui.com/api/desktop-date-time-picker/)
     */
    const DesktopDateTimePicker: DesktopDateTimePickerComponent;
    export default DesktopDateTimePicker;
}
declare module "@mui/lab/DesktopDateTimePicker/index" {
    export * from "@mui/lab/DesktopDateTimePicker/DesktopDateTimePicker";
    export { default } from "@mui/lab/DesktopDateTimePicker/DesktopDateTimePicker";
}
declare module "@mui/lab/MobileDateTimePicker/MobileDateTimePicker" {
    import * as React from 'react';
    import { BaseDateTimePickerProps } from "@mui/lab/DateTimePicker/shared";
    import { MobileWrapperProps } from "@mui/lab/internal/pickers/wrappers/MobileWrapper";
    export interface MobileDateTimePickerProps<TDate = unknown> extends BaseDateTimePickerProps<TDate>, MobileWrapperProps {
    }
    type MobileDateTimePickerComponent = (<TDate>(props: MobileDateTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Time Picker](https://mui.com/components/date-time-picker/)
     *
     * API:
     *
     * - [MobileDateTimePicker API](https://mui.com/api/mobile-date-time-picker/)
     */
    const MobileDateTimePicker: MobileDateTimePickerComponent;
    export default MobileDateTimePicker;
}
declare module "@mui/lab/MobileDateTimePicker/index" {
    export * from "@mui/lab/MobileDateTimePicker/MobileDateTimePicker";
    export { default } from "@mui/lab/MobileDateTimePicker/MobileDateTimePicker";
}
declare module "@mui/lab/DateTimePicker/DateTimePicker" {
    import * as React from 'react';
    import { DesktopDateTimePickerProps } from "@mui/lab/DesktopDateTimePicker/index";
    import { MobileDateTimePickerProps } from "@mui/lab/MobileDateTimePicker/index";
    export interface DateTimePickerProps<TDate = unknown> extends DesktopDateTimePickerProps<TDate>, MobileDateTimePickerProps<TDate> {
        /**
         * CSS media query when `Mobile` mode will be changed to `Desktop`.
         * @default '@media (pointer: fine)'
         * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
         */
        desktopModeMediaQuery?: string;
    }
    type DateTimePickerComponent = (<TDate>(props: DateTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Time Picker](https://mui.com/components/date-time-picker/)
     * - [Pickers](https://mui.com/components/pickers/)
     *
     * API:
     *
     * - [DateTimePicker API](https://mui.com/api/date-time-picker/)
     */
    const DateTimePicker: DateTimePickerComponent;
    export default DateTimePicker;
}
declare module "@mui/lab/DateTimePicker/index" {
    export * from "@mui/lab/DateTimePicker/DateTimePicker";
    export { default } from "@mui/lab/DateTimePicker/DateTimePicker";
}
declare module "@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker" {
    import * as React from 'react';
    import { RangeInput, DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { DateRangeValidationError, ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { ExportedDateRangePickerViewProps } from "@mui/lab/DateRangePicker/DateRangePickerView";
    import { ExportedDateRangePickerInputProps } from "@mui/lab/DateRangePicker/DateRangePickerInput";
    import { DesktopWrapperProps } from "@mui/lab/internal/pickers/wrappers/DesktopWrapper";
    interface BaseDateRangePickerProps<TDate> extends ExportedDateRangePickerViewProps<TDate>, ValidationProps<DateRangeValidationError, RangeInput<TDate>>, ExportedDateRangePickerInputProps {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: ExportedDateRangePickerViewProps<TDate>['components'] & ExportedDateRangePickerInputProps['components'];
        /**
         * Text for end input label and toolbar placeholder.
         * @default 'End'
         */
        endText?: React.ReactNode;
        /**
         * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).
         * @default '__/__/____'
         */
        mask?: ExportedDateRangePickerInputProps['mask'];
        /**
         * Min selectable date. @DateIOType
         * @default defaultMinDate
         */
        minDate?: TDate;
        /**
         * Max selectable date. @DateIOType
         * @default defaultMaxDate
         */
        maxDate?: TDate;
        /**
         * Callback fired when the value (the selected date range) changes @DateIOType.
         */
        onChange: (date: DateRange<TDate>, keyboardInputValue?: string) => void;
        /**
         * Text for start input label and toolbar placeholder.
         * @default 'Start'
         */
        startText?: React.ReactNode;
        /**
         * The value of the date range picker.
         */
        value: RangeInput<TDate>;
    }
    export interface DesktopDateRangePickerProps<TDate = unknown> extends BaseDateRangePickerProps<TDate>, DesktopWrapperProps {
    }
    type DesktopDateRangePickerComponent = (<TDate>(props: DesktopDateRangePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes: unknown;
    };
    /**
     *
     * Demos:
     *
     * - [Date Range Picker](https://mui.com/components/date-range-picker/)
     *
     * API:
     *
     * - [DesktopDateRangePicker API](https://mui.com/api/desktop-date-range-picker/)
     */
    const DesktopDateRangePicker: DesktopDateRangePickerComponent;
    export default DesktopDateRangePicker;
}
declare module "@mui/lab/DesktopDateRangePicker/index" {
    export * from "@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker";
    export { default } from "@mui/lab/DesktopDateRangePicker/DesktopDateRangePicker";
}
declare module "@mui/lab/TimePicker/shared" {
    import * as React from 'react';
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { ExportedClockPickerProps } from "@mui/lab/ClockPicker/ClockPicker";
    import { TimeValidationError, ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { BasePickerProps, ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    import { ExportedDateInputProps } from "@mui/lab/internal/pickers/PureDateInput";
    export type TimePickerView = 'hours' | 'minutes' | 'seconds';
    export interface BaseTimePickerProps<TDate> extends ExportedClockPickerProps<TDate>, BasePickerProps<ParseableDate<TDate>, TDate | null>, ValidationProps<TimeValidationError, ParseableDate<TDate>>, ExportedDateInputProps<ParseableDate<TDate>, TDate | null> {
        /**
         * Callback fired on view change.
         */
        onViewChange?: (view: TimePickerView) => void;
        /**
         * First view to show.
         */
        openTo?: TimePickerView;
        /**
         * Component that will replace default toolbar renderer.
         * @default TimePickerToolbar
         */
        ToolbarComponent?: React.JSXElementConstructor<ToolbarComponentProps<TDate | null>>;
        /**
         * Mobile picker title, displaying in the toolbar.
         * @default 'Select time'
         */
        toolbarTitle?: React.ReactNode;
        /**
         * Array of views to show.
         */
        views?: readonly TimePickerView[];
    }
    type DefaultizedProps<Props> = Props & {
        inputFormat: string;
    };
    export function useTimePickerDefaultizedProps<Props extends BaseTimePickerProps<unknown>>({ ampm, components, inputFormat, openTo, views, ...other }: Props, name: string): DefaultizedProps<Props> & Required<Pick<BaseTimePickerProps<unknown>, 'openTo' | 'views'>>;
    export {};
}
declare module "@mui/lab/DesktopTimePicker/DesktopTimePicker" {
    import * as React from 'react';
    import { BaseTimePickerProps } from "@mui/lab/TimePicker/shared";
    import { DesktopWrapperProps } from "@mui/lab/internal/pickers/wrappers/DesktopWrapper";
    export interface DesktopTimePickerProps<TDate = unknown> extends BaseTimePickerProps<TDate>, DesktopWrapperProps {
    }
    type DesktopTimePickerComponent = (<TDate>(props: DesktopTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Time Picker](https://mui.com/components/time-picker/)
     *
     * API:
     *
     * - [DesktopTimePicker API](https://mui.com/api/desktop-time-picker/)
     */
    const DesktopTimePicker: DesktopTimePickerComponent;
    export default DesktopTimePicker;
}
declare module "@mui/lab/DesktopTimePicker/index" {
    export { default } from "@mui/lab/DesktopTimePicker/DesktopTimePicker";
    export * from "@mui/lab/DesktopTimePicker/DesktopTimePicker";
}
declare module "@mui/lab/LoadingButton/LoadingButton" {
    import { ExtendButton, ExtendButtonTypeMap, ButtonClasses } from "@mui/material/Button/index";
    import { OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { SxProps } from "@mui/system/index";
    export type LoadingButtonTypeMap<P = {}, D extends React.ElementType = 'button'> = ExtendButtonTypeMap<{
        props: P & {
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<ButtonClasses> & {
                /** Styles applied to the root element. */
                root?: string;
                /** Styles applied to the root element if `loading={true}`. */
                loading?: string;
                /** Styles applied to the loadingIndicator element. */
                loadingIndicator?: string;
                /** Styles applied to the loadingIndicator element if `loadingPosition="center"`. */
                loadingIndicatorCenter?: string;
                /** Styles applied to the loadingIndicator element if `loadingPosition="start"`. */
                loadingIndicatorStart?: string;
                /** Styles applied to the loadingIndicator element if `loadingPosition="end"`. */
                loadingIndicatorEnd?: string;
                /** Styles applied to the endIcon element if `loading={true}` and `loadingPosition="end"`. */
                endIconLoadingEnd?: string;
                /** Styles applied to the startIcon element if `loading={true}` and `loadingPosition="start"`. */
                startIconLoadingStart?: string;
            };
            /**
             * If `true`, the loading indicator is shown.
             * @default false
             */
            loading?: boolean;
            /**
             * Element placed before the children if the button is in loading state.
             * The node should contain an element with `role="progressbar"` with an accessible name.
             * By default we render a `CircularProgress` that is labelled by the button itself.
             * @default <CircularProgress color="inherit" size={16} />
             */
            loadingIndicator?: React.ReactNode;
            /**
             * The loading indicator can be positioned on the start, end, or the center of the button.
             * @default 'center'
             */
            loadingPosition?: 'start' | 'end' | 'center';
            /**
             * The system prop that allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }>;
    /**
     *
     * Demos:
     *
     * - [Buttons](https://mui.com/components/buttons/)
     *
     * API:
     *
     * - [LoadingButton API](https://mui.com/api/loading-button/)
     * - inherits [Button API](https://mui.com/api/button/)
     */
    const LoadingButton: ExtendButton<LoadingButtonTypeMap>;
    export type LoadingButtonProps<D extends React.ElementType = LoadingButtonTypeMap['defaultComponent'], P = {}> = OverrideProps<LoadingButtonTypeMap<P, D>, D>;
    export default LoadingButton;
}
declare module "@mui/lab/LoadingButton/loadingButtonClasses" {
    export interface LoadingButtonClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `loading={true}`. */
        loading: string;
        /** Styles applied to the loadingIndicator element. */
        loadingIndicator: string;
        /** Styles applied to the loadingIndicator element if `loadingPosition="center"`. */
        loadingIndicatorCenter: string;
        /** Styles applied to the loadingIndicator element if `loadingPosition="start"`. */
        loadingIndicatorStart: string;
        /** Styles applied to the loadingIndicator element if `loadingPosition="end"`. */
        loadingIndicatorEnd: string;
        /** Styles applied to the endIcon element if `loading={true}` and `loadingPosition="end"`. */
        endIconLoadingEnd: string;
        /** Styles applied to the startIcon element if `loading={true}` and `loadingPosition="start"`. */
        startIconLoadingStart: string;
    }
    export type LoadingButtonClassKey = keyof LoadingButtonClasses;
    export function getLoadingButtonUtilityClass(slot: string): string;
    const loadingButtonClasses: LoadingButtonClasses;
    export default loadingButtonClasses;
}
declare module "@mui/lab/LoadingButton/index" {
    export { default } from "@mui/lab/LoadingButton/LoadingButton";
    export * from "@mui/lab/LoadingButton/LoadingButton";
    export { default as loadingButtonClasses } from "@mui/lab/LoadingButton/loadingButtonClasses";
    export * from "@mui/lab/LoadingButton/loadingButtonClasses";
}
declare module "@mui/lab/MobileDateRangePicker/MobileDateRangePicker" {
    import * as React from 'react';
    import { MobileWrapperProps } from "@mui/lab/internal/pickers/wrappers/MobileWrapper";
    import { RangeInput, DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { DateRangeValidationError, ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { ExportedDateRangePickerViewProps } from "@mui/lab/DateRangePicker/DateRangePickerView";
    import { ExportedDateRangePickerInputProps } from "@mui/lab/DateRangePicker/DateRangePickerInput";
    interface BaseDateRangePickerProps<TDate> extends ExportedDateRangePickerViewProps<TDate>, ValidationProps<DateRangeValidationError, RangeInput<TDate>>, ExportedDateRangePickerInputProps {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: ExportedDateRangePickerViewProps<TDate>['components'] & ExportedDateRangePickerInputProps['components'];
        /**
         * Text for end input label and toolbar placeholder.
         * @default 'End'
         */
        endText?: React.ReactNode;
        /**
         * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).
         * @default '__/__/____'
         */
        mask?: ExportedDateRangePickerInputProps['mask'];
        /**
         * Min selectable date. @DateIOType
         * @default defaultMinDate
         */
        minDate?: TDate;
        /**
         * Max selectable date. @DateIOType
         * @default defaultMaxDate
         */
        maxDate?: TDate;
        /**
         * Callback fired when the value (the selected date range) changes @DateIOType.
         */
        onChange: (date: DateRange<TDate>, keyboardInputValue?: string) => void;
        /**
         * Text for start input label and toolbar placeholder.
         * @default 'Start'
         */
        startText?: React.ReactNode;
        /**
         * The value of the date range picker.
         */
        value: RangeInput<TDate>;
    }
    export interface MobileDateRangePickerProps<TDate = unknown> extends BaseDateRangePickerProps<TDate>, MobileWrapperProps {
    }
    type MobileDateRangePickerComponent = (<TDate>(props: MobileDateRangePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes: unknown;
    };
    /**
     *
     * Demos:
     *
     * - [Date Range Picker](https://mui.com/components/date-range-picker/)
     *
     * API:
     *
     * - [MobileDateRangePicker API](https://mui.com/api/mobile-date-range-picker/)
     */
    const MobileDateRangePicker: MobileDateRangePickerComponent;
    export default MobileDateRangePicker;
}
declare module "@mui/lab/MobileDateRangePicker/index" {
    export * from "@mui/lab/MobileDateRangePicker/MobileDateRangePicker";
    export { default } from "@mui/lab/MobileDateRangePicker/MobileDateRangePicker";
}
declare module "@mui/lab/MobileTimePicker/MobileTimePicker" {
    import * as React from 'react';
    import { BaseTimePickerProps } from "@mui/lab/TimePicker/shared";
    import { MobileWrapperProps } from "@mui/lab/internal/pickers/wrappers/MobileWrapper";
    export interface MobileTimePickerProps<TDate = unknown> extends BaseTimePickerProps<TDate>, MobileWrapperProps {
    }
    type MobileTimePickerComponent = (<TDate>(props: MobileTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Time Picker](https://mui.com/components/time-picker/)
     *
     * API:
     *
     * - [MobileTimePicker API](https://mui.com/api/mobile-time-picker/)
     */
    const MobileTimePicker: MobileTimePickerComponent;
    export default MobileTimePicker;
}
declare module "@mui/lab/MobileTimePicker/index" {
    export * from "@mui/lab/MobileTimePicker/MobileTimePicker";
    export { default } from "@mui/lab/MobileTimePicker/MobileTimePicker";
}
declare module "@mui/lab/MonthPicker/MonthPicker" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { PickerOnChangeFn } from "@mui/lab/internal/pickers/hooks/useViews";
    export interface MonthPickerProps<TDate> {
        /**
         * className applied to the root element.
         */
        className?: string;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: {
            /** Styles applied to the root element. */
            root?: string;
        };
        /** Date value for the MonthPicker */
        date: TDate | null;
        /** If `true` picker is disabled */
        disabled?: boolean;
        /** If `true` past days are disabled. */
        disablePast?: boolean | null;
        /** If `true` future days are disabled. */
        disableFuture?: boolean | null;
        /** Minimal selectable date. */
        minDate: TDate;
        /** Maximal selectable date. */
        maxDate: TDate;
        /** Callback fired on date change. */
        onChange: PickerOnChangeFn<TDate>;
        onMonthChange?: (date: TDate) => void | Promise<void>;
        /** If `true` picker is readonly */
        readOnly?: boolean;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export function getMonthPickerUtilityClass(slot: string): string;
    export type MonthPickerClassKey = keyof NonNullable<MonthPickerProps<unknown>['classes']>;
    export const monthPickerClasses: Record<"root", string>;
    const _default: <TDate>(props: MonthPickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element;
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [MonthPicker API](https://mui.com/api/month-picker/)
     */
    export default _default;
}
declare module "@mui/lab/MonthPicker/index" {
    export { default, getMonthPickerUtilityClass, monthPickerClasses } from "@mui/lab/MonthPicker/MonthPicker";
    export type MonthPickerClassKey = import("@mui/lab/MonthPicker/MonthPicker").MonthPickerClassKey;
    export type MonthPickerProps<TDate> = import("@mui/lab/MonthPicker/MonthPicker").MonthPickerProps<TDate>;
}
declare module "@mui/lab/Pagination/Pagination" {
    export { default } from "@mui/material/Pagination/index";
    export * from "@mui/material/Pagination/index";
}
declare module "@mui/material/usePagination/index" {
    export { default } from "@mui/material/usePagination/usePagination";
    export * from "@mui/material/usePagination/usePagination";
}
declare module "@mui/lab/Pagination/usePagination" {
    export { default } from "@mui/material/usePagination/index";
    export * from "@mui/material/usePagination/index";
}
declare module "@mui/lab/Pagination/index" {
    export { default } from "@mui/lab/Pagination/Pagination";
    export * from "@mui/lab/Pagination/Pagination";
    export { default as usePagination } from "@mui/lab/Pagination/usePagination";
    export * from "@mui/lab/Pagination/usePagination";
}
declare module "@mui/lab/PaginationItem/PaginationItem" {
    export { default } from "@mui/material/PaginationItem/index";
    export * from "@mui/material/PaginationItem/index";
}
declare module "@mui/lab/PaginationItem/index" {
    export { default } from "@mui/lab/PaginationItem/PaginationItem";
    export * from "@mui/lab/PaginationItem/PaginationItem";
}
declare module "@mui/lab/PickersDay/index" {
    export { default } from "@mui/lab/PickersDay/PickersDay";
    export { pickersDayClasses, getPickersDayUtilityClass } from "@mui/lab/PickersDay/PickersDay";
    export type PickersDayClassKey = import("@mui/lab/PickersDay/PickersDay").PickersDayClassKey;
    export type PickersDayProps<TDate> = import("@mui/lab/PickersDay/PickersDay").PickersDayProps<TDate>;
}
declare module "@mui/lab/Rating/Rating" {
    export { default } from "@mui/material/Rating/index";
    export * from "@mui/material/Rating/index";
}
declare module "@mui/lab/Rating/index" {
    export { default } from "@mui/lab/Rating/Rating";
    export * from "@mui/lab/Rating/Rating";
}
declare module "@mui/lab/Skeleton/Skeleton" {
    export { default } from "@mui/material/Skeleton/index";
    export * from "@mui/material/Skeleton/index";
}
declare module "@mui/lab/Skeleton/index" {
    export { default } from "@mui/lab/Skeleton/Skeleton";
    export * from "@mui/lab/Skeleton/Skeleton";
}
declare module "@mui/lab/SpeedDial/SpeedDial" {
    export { default } from "@mui/material/SpeedDial/index";
    export * from "@mui/material/SpeedDial/index";
}
declare module "@mui/lab/SpeedDial/index" {
    export { default } from "@mui/lab/SpeedDial/SpeedDial";
    export * from "@mui/lab/SpeedDial/SpeedDial";
}
declare module "@mui/lab/SpeedDialAction/SpeedDialAction" {
    export { default } from "@mui/material/Alert/index";
    export * from "@mui/material/Alert/index";
}
declare module "@mui/lab/SpeedDialAction/index" {
    export { default } from "@mui/lab/SpeedDialAction/SpeedDialAction";
    export * from "@mui/lab/SpeedDialAction/SpeedDialAction";
}
declare module "@mui/lab/SpeedDialIcon/SpeedDialIcon" {
    export { default } from "@mui/material/SpeedDialIcon/index";
    export * from "@mui/material/SpeedDialIcon/index";
}
declare module "@mui/lab/SpeedDialIcon/index" {
    export { default } from "@mui/lab/SpeedDialIcon/SpeedDialIcon";
    export * from "@mui/lab/SpeedDialIcon/SpeedDialIcon";
}
declare module "@mui/lab/internal/pickers/wrappers/PickerStaticWrapper" {
    import * as React from 'react';
    export interface PickerStaticWrapperClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type PickerStaticWrapperClassKey = keyof PickerStaticWrapperClasses;
    export function getStaticWrapperUtilityClass(slot: string): string;
    export const pickerStaticWrapperClasses: PickerStaticWrapperClasses;
    export interface PickerStaticWrapperProps {
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<PickerStaticWrapperClasses>;
        /**
         * Force static wrapper inner components to be rendered in mobile or desktop mode.
         */
        displayStaticWrapperAs: 'desktop' | 'mobile';
    }
    function PickerStaticWrapper(inProps: PickerStaticWrapperProps): JSX.Element;
    export default PickerStaticWrapper;
}
declare module "@mui/lab/StaticDatePicker/StaticDatePicker" {
    import * as React from 'react';
    import { BaseDatePickerProps } from "@mui/lab/DatePicker/shared";
    import { PickerStaticWrapperProps } from "@mui/lab/internal/pickers/wrappers/PickerStaticWrapper";
    export interface StaticDatePickerProps<TDate = unknown> extends BaseDatePickerProps<TDate> {
        /**
         * Force static wrapper inner components to be rendered in mobile or desktop mode.
         * @default 'mobile'
         */
        displayStaticWrapperAs?: PickerStaticWrapperProps['displayStaticWrapperAs'];
    }
    type StaticDatePickerComponent = (<TDate>(props: StaticDatePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Picker](https://mui.com/components/date-picker/)
     *
     * API:
     *
     * - [StaticDatePicker API](https://mui.com/api/static-date-picker/)
     */
    const StaticDatePicker: StaticDatePickerComponent;
    export default StaticDatePicker;
}
declare module "@mui/lab/StaticDatePicker/index" {
    export * from "@mui/lab/StaticDatePicker/StaticDatePicker";
    export { default } from "@mui/lab/StaticDatePicker/StaticDatePicker";
}
declare module "@mui/lab/StaticDateRangePicker/StaticDateRangePicker" {
    import * as React from 'react';
    import { PickerStaticWrapperProps } from "@mui/lab/internal/pickers/wrappers/PickerStaticWrapper";
    import { RangeInput, DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { DateRangeValidationError, ValidationProps } from "@mui/lab/internal/pickers/hooks/useValidation";
    import { ExportedDateRangePickerViewProps } from "@mui/lab/DateRangePicker/DateRangePickerView";
    import { ExportedDateRangePickerInputProps } from "@mui/lab/DateRangePicker/DateRangePickerInput";
    interface BaseDateRangePickerProps<TDate> extends ExportedDateRangePickerViewProps<TDate>, ValidationProps<DateRangeValidationError, RangeInput<TDate>>, ExportedDateRangePickerInputProps {
        /**
         * The components used for each slot.
         * Either a string to use a HTML element or a component.
         * @default {}
         */
        components?: ExportedDateRangePickerViewProps<TDate>['components'] & ExportedDateRangePickerInputProps['components'];
        /**
         * Text for end input label and toolbar placeholder.
         * @default 'End'
         */
        endText?: React.ReactNode;
        /**
         * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).
         * @default '__/__/____'
         */
        mask?: ExportedDateRangePickerInputProps['mask'];
        /**
         * Min selectable date. @DateIOType
         */
        minDate?: TDate;
        /**
         * Max selectable date. @DateIOType
         */
        maxDate?: TDate;
        /**
         * Callback fired when the value (the selected date range) changes @DateIOType.
         */
        onChange: (date: DateRange<TDate>, keyboardInputValue?: string) => void;
        /**
         * Text for start input label and toolbar placeholder.
         * @default 'Start'
         */
        startText?: React.ReactNode;
        /**
         * The value of the date range picker.
         */
        value: RangeInput<TDate>;
    }
    export interface StaticDateRangePickerProps<TDate = unknown> extends BaseDateRangePickerProps<TDate> {
        /**
         * Force static wrapper inner components to be rendered in mobile or desktop mode.
         * @default 'mobile'
         */
        displayStaticWrapperAs?: PickerStaticWrapperProps['displayStaticWrapperAs'];
    }
    type StaticDateRangePickerComponent = (<TDate>(props: StaticDateRangePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes: unknown;
    };
    /**
     *
     * Demos:
     *
     * - [Date Range Picker](https://mui.com/components/date-range-picker/)
     *
     * API:
     *
     * - [StaticDateRangePicker API](https://mui.com/api/static-date-range-picker/)
     */
    const StaticDateRangePicker: StaticDateRangePickerComponent;
    export default StaticDateRangePicker;
}
declare module "@mui/lab/StaticDateRangePicker/index" {
    export * from "@mui/lab/StaticDateRangePicker/StaticDateRangePicker";
    export { default } from "@mui/lab/StaticDateRangePicker/StaticDateRangePicker";
}
declare module "@mui/lab/StaticDateTimePicker/StaticDateTimePicker" {
    import * as React from 'react';
    import { BaseDateTimePickerProps } from "@mui/lab/DateTimePicker/shared";
    import { PickerStaticWrapperProps } from "@mui/lab/internal/pickers/wrappers/PickerStaticWrapper";
    export interface StaticDateTimePickerProps<TDate = unknown> extends BaseDateTimePickerProps<TDate> {
        /**
         * Force static wrapper inner components to be rendered in mobile or desktop mode.
         * @default 'mobile'
         */
        displayStaticWrapperAs?: PickerStaticWrapperProps['displayStaticWrapperAs'];
    }
    type StaticDateTimePickerComponent = (<TDate>(props: StaticDateTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Date Time Picker](https://mui.com/components/date-time-picker/)
     *
     * API:
     *
     * - [StaticDateTimePicker API](https://mui.com/api/static-date-time-picker/)
     */
    const StaticDateTimePicker: StaticDateTimePickerComponent;
    export default StaticDateTimePicker;
}
declare module "@mui/lab/StaticDateTimePicker/index" {
    export * from "@mui/lab/StaticDateTimePicker/StaticDateTimePicker";
    export { default } from "@mui/lab/StaticDateTimePicker/StaticDateTimePicker";
}
declare module "@mui/lab/StaticTimePicker/StaticTimePicker" {
    import * as React from 'react';
    import { BaseTimePickerProps } from "@mui/lab/TimePicker/shared";
    import { PickerStaticWrapperProps } from "@mui/lab/internal/pickers/wrappers/PickerStaticWrapper";
    export interface StaticTimePickerProps<TDate = unknown> extends BaseTimePickerProps<TDate> {
        /**
         * Force static wrapper inner components to be rendered in mobile or desktop mode.
         * @default 'mobile'
         */
        displayStaticWrapperAs?: PickerStaticWrapperProps['displayStaticWrapperAs'];
    }
    type StaticTimePickerComponent = (<TDate>(props: StaticTimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Time Picker](https://mui.com/components/time-picker/)
     *
     * API:
     *
     * - [StaticTimePicker API](https://mui.com/api/static-time-picker/)
     */
    const StaticTimePicker: StaticTimePickerComponent;
    export default StaticTimePicker;
}
declare module "@mui/lab/StaticTimePicker/index" {
    export * from "@mui/lab/StaticTimePicker/StaticTimePicker";
    export { default } from "@mui/lab/StaticTimePicker/StaticTimePicker";
}
declare module "@mui/lab/TabContext/TabContext" {
    import * as React from 'react';
    export interface TabContextValue {
        idPrefix: string;
        value: string;
    }
    export interface TabContextProps {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * The value of the currently selected `Tab`.
         */
        value: string;
    }
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabContext API](https://mui.com/api/tab-context/)
     */
    export type TabContext = (props: TabContextProps) => JSX.Element;
    export default TabContext;
    export function useTabContext(): TabContextValue | null;
    export function getPanelId(context: TabContextValue, tabValue: string): string;
    export function getTabId(context: TabContextValue, tabValue: string): string;
}
declare module "@mui/lab/TabContext/index" {
    export { default } from "@mui/lab/TabContext/TabContext";
    export * from "@mui/lab/TabContext/TabContext";
}
declare module "@mui/lab/TabList/TabList" {
    import * as React from 'react';
    import { TabsTypeMap } from "@mui/material/Tabs/index";
    import { DistributiveOmit } from "@mui/types/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    export interface TabListTypeMap<P = {}, D extends React.ElementType = TabsTypeMap['defaultComponent']> {
        props: P & {
            /**
             * A list of `<Tab />` elements.
             */
            children?: React.ReactNode;
        } & DistributiveOmit<TabsTypeMap['props'], 'children' | 'value'>;
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabList API](https://mui.com/api/tab-list/)
     * - inherits [Tabs API](https://mui.com/api/tabs/)
     */
    const TabList: OverridableComponent<TabListTypeMap>;
    export type TabListClassKey = keyof NonNullable<TabListTypeMap['props']['classes']>;
    export type TabListProps<D extends React.ElementType = TabListTypeMap['defaultComponent'], P = {}> = OverrideProps<TabListTypeMap<P, D>, D>;
    export default TabList;
}
declare module "@mui/lab/TabList/index" {
    export { default } from "@mui/lab/TabList/TabList";
    export * from "@mui/lab/TabList/TabList";
}
declare module "@mui/lab/TabPanel/tabPanelClasses" {
    export interface TabPanelClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TabPanelClassKey = keyof TabPanelClasses;
    export function getTabPanelUtilityClass(slot: string): string;
    const tabPanelClasses: TabPanelClasses;
    export default tabPanelClasses;
}
declare module "@mui/lab/TabPanel/TabPanel" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { SxProps } from "@mui/system/index";
    import { TabPanelClasses } from "@mui/lab/TabPanel/tabPanelClasses";
    export interface TabPanelProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TabPanelClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when
         * no `value` was passed to `Tab`.
         */
        value: string;
    }
    /**
     *
     * Demos:
     *
     * - [Tabs](https://mui.com/components/tabs/)
     *
     * API:
     *
     * - [TabPanel API](https://mui.com/api/tab-panel/)
     */
    export type TabPanel = (props: TabPanelProps) => JSX.Element;
    export default TabPanel;
}
declare module "@mui/lab/TabPanel/index" {
    export { default } from "@mui/lab/TabPanel/TabPanel";
    export * from "@mui/lab/TabPanel/TabPanel";
    export { default as tabPanelClasses } from "@mui/lab/TabPanel/tabPanelClasses";
    export * from "@mui/lab/TabPanel/tabPanelClasses";
}
declare module "@mui/lab/TimePicker/TimePicker" {
    import * as React from 'react';
    import { DesktopTimePickerProps } from "@mui/lab/DesktopTimePicker/index";
    import { MobileTimePickerProps } from "@mui/lab/MobileTimePicker/index";
    export interface TimePickerProps<TDate = unknown> extends DesktopTimePickerProps<TDate>, MobileTimePickerProps<TDate> {
        /**
         * CSS media query when `Mobile` mode will be changed to `Desktop`.
         * @default '@media (pointer: fine)'
         * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
         */
        desktopModeMediaQuery?: string;
    }
    type TimePickerComponent = (<TDate>(props: TimePickerProps<TDate> & React.RefAttributes<HTMLDivElement>) => JSX.Element) & {
        propTypes?: any;
    };
    /**
     *
     * Demos:
     *
     * - [Pickers](https://mui.com/components/pickers/)
     * - [Time Picker](https://mui.com/components/time-picker/)
     *
     * API:
     *
     * - [TimePicker API](https://mui.com/api/time-picker/)
     */
    const TimePicker: TimePickerComponent;
    export default TimePicker;
}
declare module "@mui/lab/TimePicker/index" {
    export * from "@mui/lab/TimePicker/TimePicker";
    export { default } from "@mui/lab/TimePicker/TimePicker";
}
declare module "@mui/lab/Timeline/Timeline" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    export type TimelineClassKey = keyof NonNullable<TimelineProps['classes']>;
    export interface TimelineProps extends StandardProps<React.HTMLAttributes<HTMLUListElement>> {
        /**
         * The position where the TimelineContent should appear relative to the time axis.
         * @default 'right'
         */
        position?: 'left' | 'right' | 'alternate';
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: {
            /** Styles applied to the root element. */
            root?: string;
            /** Styles applied to the root element if `position="left"`. */
            positionLeft?: string;
            /** Styles applied to the root element if `position="right"`. */
            positionRight?: string;
            /** Styles applied to the root element if `position="alternate"`. */
            positionAlternate?: string;
        };
        /**
         * className applied to the root element.
         */
        className?: string;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [Timeline API](https://mui.com/api/timeline/)
     */
    const Timeline: React.ForwardRefExoticComponent<Pick<TimelineProps, "slot" | "style" | "title" | "hidden" | "className" | "color" | "position" | "translate" | "classes" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "sx"> & React.RefAttributes<HTMLUListElement>>;
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [Timeline API](https://mui.com/api/timeline/)
     */
    export default Timeline;
}
declare module "@mui/lab/Timeline/timelineClasses" {
    export function getTimelineUtilityClass(slot: string): string;
    const timelineClasses: Record<"root" | "positionLeft" | "positionRight" | "positionAlternate", string>;
    export default timelineClasses;
}
declare module "@mui/lab/Timeline/index" {
    export { default } from "@mui/lab/Timeline/Timeline";
    export type TimelineClassKey = import("@mui/lab/Timeline/Timeline").TimelineClassKey;
    export type TimelineProps = import("@mui/lab/Timeline/Timeline").TimelineProps;
    export { default as timelineClasses } from "@mui/lab/Timeline/timelineClasses";
    export * from "@mui/lab/Timeline/timelineClasses";
}
declare module "@mui/lab/TimelineConnector/timelineConnectorClasses" {
    export interface TimelineConnectorClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TimelineConnectorClassKey = keyof TimelineConnectorClasses;
    export function getTimelineConnectorUtilityClass(slot: string): string;
    const timelineConnectorClasses: TimelineConnectorClasses;
    export default timelineConnectorClasses;
}
declare module "@mui/lab/TimelineConnector/TimelineConnector" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { SxProps } from "@mui/system/index";
    import { TimelineConnectorClasses } from "@mui/lab/TimelineConnector/timelineConnectorClasses";
    export interface TimelineConnectorProps extends StandardProps<React.HTMLAttributes<HTMLSpanElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TimelineConnectorClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [TimelineConnector API](https://mui.com/api/timeline-connector/)
     */
    export type TimelineConnector = (props: TimelineConnectorProps) => JSX.Element;
    export default TimelineConnector;
}
declare module "@mui/lab/TimelineConnector/index" {
    export { default } from "@mui/lab/TimelineConnector/TimelineConnector";
    export * from "@mui/lab/TimelineConnector/TimelineConnector";
    export { default as timelineConnectorClasses } from "@mui/lab/TimelineConnector/timelineConnectorClasses";
    export * from "@mui/lab/TimelineConnector/timelineConnectorClasses";
}
declare module "@mui/lab/TimelineContent/timelineContentClasses" {
    export interface TimelineContentClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `position="right"`. */
        positionRight: string;
        /** Styles applied to the root element if `position="left"`. */
        positionLeft: string;
        /** Styles applied to the root element if `position="alternate"`. */
        positionAlternate: string;
    }
    export type TimelineContentClassKey = keyof TimelineContentClasses;
    export function getTimelineContentUtilityClass(slot: string): string;
    const timelineContentClasses: TimelineContentClasses;
    export default timelineContentClasses;
}
declare module "@mui/lab/TimelineContent/TimelineContent" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps, TypographyProps } from "@mui/material/index";
    import { TimelineContentClasses } from "@mui/lab/TimelineContent/timelineContentClasses";
    export interface TimelineContentProps extends StandardProps<TypographyProps> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TimelineContentClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [TimelineContent API](https://mui.com/api/timeline-content/)
     * - inherits [Typography API](https://mui.com/api/typography/)
     */
    export type TimelineContent = (props: TimelineContentProps) => JSX.Element;
    export default TimelineContent;
}
declare module "@mui/lab/TimelineContent/index" {
    export { default } from "@mui/lab/TimelineContent/TimelineContent";
    export * from "@mui/lab/TimelineContent/TimelineContent";
    export { default as timelineContentClasses } from "@mui/lab/TimelineContent/timelineContentClasses";
    export * from "@mui/lab/TimelineContent/timelineContentClasses";
}
declare module "@mui/lab/TimelineDot/timelineDotClasses" {
    export interface TimelineDotClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `variant="filled"`. */
        filled: string;
        /** Styles applied to the root element if `variant="outlined"`. */
        outlined: string;
        /** Styles applied to the root element if `color="grey"` and `variant="filled"`. */
        filledGrey: string;
        /** Styles applied to the root element if `color="grey"` and `variant="outlined"`. */
        outlinedGrey: string;
        /** Styles applied to the root element if `color="primary"` and `variant="filled"`. */
        filledPrimary: string;
        /** Styles applied to the root element if `color="primary"` and `variant="outlined"`. */
        outlinedPrimary: string;
        /** Styles applied to the root element if `color="secondary"` and `variant="filled"`. */
        filledSecondary: string;
        /** Styles applied to the root element if `color="secondary"` and `variant="outlined"`. */
        outlinedSecondary: string;
    }
    export type TimelineDotClassKey = keyof TimelineDotClasses;
    export function getTimelineDotUtilityClass(slot: string): string;
    const timelineDotClasses: TimelineDotClasses;
    export default timelineDotClasses;
}
declare module "@mui/lab/TimelineDot/TimelineDot" {
    import * as React from 'react';
    import { OverridableStringUnion } from "@mui/types/index";
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { TimelineDotClasses } from "@mui/lab/TimelineDot/timelineDotClasses";
    export interface TimelineDotPropsVariantOverrides {
    }
    export interface TimelineDotProps extends StandardProps<React.HTMLAttributes<HTMLSpanElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TimelineDotClasses>;
        /**
         * The dot can have a different colors.
         * @default 'grey'
         */
        color?: 'inherit' | 'grey' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning';
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * The dot can appear filled or outlined.
         * @default 'filled'
         */
        variant?: OverridableStringUnion<'filled' | 'outlined', TimelineDotPropsVariantOverrides>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [TimelineDot API](https://mui.com/api/timeline-dot/)
     */
    export type TimelineDot = (props: TimelineDotProps) => JSX.Element;
    export default TimelineDot;
}
declare module "@mui/lab/TimelineDot/index" {
    export { default } from "@mui/lab/TimelineDot/TimelineDot";
    export * from "@mui/lab/TimelineDot/TimelineDot";
    export { default as timelineDotClasses } from "@mui/lab/TimelineDot/timelineDotClasses";
    export * from "@mui/lab/TimelineDot/timelineDotClasses";
}
declare module "@mui/lab/TimelineItem/timelineItemClasses" {
    export interface TimelineItemClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `position="left"`. */
        positionLeft: string;
        /** Styles applied to the root element if `position="right"`. */
        positionRight: string;
        /** Styles applied to the root element if `position="alternate"`. */
        positionAlternate: string;
        /** Styles applied to the root element if TimelineOppositeContent isn't provided. */
        missingOppositeContent: string;
    }
    export type TimelineItemClassKey = keyof TimelineItemClasses;
    export function getTimelineItemUtilityClass(slot: string): string;
    const timelineItemClasses: TimelineItemClasses;
    export default timelineItemClasses;
}
declare module "@mui/lab/TimelineItem/TimelineItem" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { TimelineItemClasses } from "@mui/lab/TimelineItem/timelineItemClasses";
    export interface TimelineItemProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The position where the timeline's item should appear.
         */
        position?: 'left' | 'right';
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TimelineItemClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [TimelineItem API](https://mui.com/api/timeline-item/)
     */
    export type TimelineItem = (props: TimelineItemProps) => JSX.Element;
    export default TimelineItem;
}
declare module "@mui/lab/TimelineItem/index" {
    export { default } from "@mui/lab/TimelineItem/TimelineItem";
    export * from "@mui/lab/TimelineItem/TimelineItem";
    export { default as timelineItemClasses } from "@mui/lab/TimelineItem/timelineItemClasses";
    export * from "@mui/lab/TimelineItem/timelineItemClasses";
}
declare module "@mui/lab/TimelineOppositeContent/timelineOppositeContentClasses" {
    export interface TimelineOppositeContentClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the root element if `position="right"`. */
        positionRight: string;
        /** Styles applied to the root element if `position="left"`. */
        positionLeft: string;
        /** Styles applied to the root element if `position="alternate"`. */
        positionAlternate: string;
    }
    export type TimelineOppositeContentClassKey = keyof TimelineOppositeContentClasses;
    export function getTimelineOppositeContentUtilityClass(slot: string): string;
    const timelineOppositeContentClasses: TimelineOppositeContentClasses;
    export default timelineOppositeContentClasses;
}
declare module "@mui/lab/TimelineOppositeContent/TimelineOppositeContent" {
    import * as React from 'react';
    import { SxProps } from "@mui/system/index";
    import { Theme } from "@mui/material/styles/index";
    import { InternalStandardProps as StandardProps, TypographyProps } from "@mui/material/index";
    import { TimelineOppositeContentClasses } from "@mui/lab/TimelineOppositeContent/timelineOppositeContentClasses";
    export interface TimelineOppositeContentProps extends StandardProps<TypographyProps> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TimelineOppositeContentClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [TimelineOppositeContent API](https://mui.com/api/timeline-opposite-content/)
     * - inherits [Typography API](https://mui.com/api/typography/)
     */
    const TimelineOppositeContent: ((props: TimelineOppositeContentProps) => JSX.Element) & {
        muiName: string;
    };
    export default TimelineOppositeContent;
}
declare module "@mui/lab/TimelineOppositeContent/index" {
    export { default } from "@mui/lab/TimelineOppositeContent/TimelineOppositeContent";
    export * from "@mui/lab/TimelineOppositeContent/TimelineOppositeContent";
    export { default as timelineOppositeContentClasses } from "@mui/lab/TimelineOppositeContent/timelineOppositeContentClasses";
    export * from "@mui/lab/TimelineOppositeContent/timelineOppositeContentClasses";
}
declare module "@mui/lab/TimelineSeparator/timelineSeparatorClasses" {
    export interface TimelineSeparatorClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TimelineSeparatorClassKey = keyof TimelineSeparatorClasses;
    export function getTimelineSeparatorUtilityClass(slot: string): string;
    const timelineSeparatorClasses: TimelineSeparatorClasses;
    export default timelineSeparatorClasses;
}
declare module "@mui/lab/TimelineSeparator/TimelineSeparator" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { SxProps } from "@mui/system/index";
    import { TimelineSeparatorClasses } from "@mui/lab/TimelineSeparator/timelineSeparatorClasses";
    export interface TimelineSeparatorProps extends StandardProps<React.HTMLAttributes<HTMLDivElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TimelineSeparatorClasses>;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Timeline](https://mui.com/components/timeline/)
     *
     * API:
     *
     * - [TimelineSeparator API](https://mui.com/api/timeline-separator/)
     */
    export type TimelineSeparator = (props: TimelineSeparatorProps) => JSX.Element;
    export default TimelineSeparator;
}
declare module "@mui/lab/TimelineSeparator/index" {
    export { default } from "@mui/lab/TimelineSeparator/TimelineSeparator";
    export * from "@mui/lab/TimelineSeparator/TimelineSeparator";
    export { default as timelineSeparatorClasses } from "@mui/lab/TimelineSeparator/timelineSeparatorClasses";
    export * from "@mui/lab/TimelineSeparator/timelineSeparatorClasses";
}
declare module "@mui/lab/ToggleButton/ToggleButton" {
    export { default } from "@mui/material/ToggleButton/index";
    export * from "@mui/material/ToggleButton/index";
}
declare module "@mui/lab/ToggleButton/index" {
    export { default } from "@mui/lab/ToggleButton/ToggleButton";
    export * from "@mui/lab/ToggleButton/ToggleButton";
}
declare module "@mui/lab/ToggleButtonGroup/ToggleButtonGroup" {
    export { default } from "@mui/material/ToggleButtonGroup/index";
    export * from "@mui/material/ToggleButtonGroup/index";
}
declare module "@mui/lab/ToggleButtonGroup/index" {
    export { default } from "@mui/lab/ToggleButtonGroup/ToggleButtonGroup";
    export * from "@mui/lab/ToggleButtonGroup/ToggleButtonGroup";
}
declare module "@mui/lab/TreeItem/TreeItemContent" {
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import * as React from 'react';
    export interface TreeItemContentProps extends StandardProps<React.HTMLAttributes<HTMLElement>> {
        /**
         * className applied to the root element.
         */
        className?: string;
        /**
         * Override or extend the styles applied to the component.
         */
        classes: {
            /** Styles applied to the root element. */
            root: string;
            /** State class applied to the content element when expanded. */
            expanded: string;
            /** State class applied to the content element when selected. */
            selected: string;
            /** State class applied to the content element when focused. */
            focused: string;
            /** State class applied to the element when disabled. */
            disabled: string;
            /** Styles applied to the tree node icon and collapse/expand icon. */
            iconContainer: string;
            /** Styles applied to the label element. */
            label: string;
        };
        /**
         * The tree node label.
         */
        label?: React.ReactNode;
        /**
         * The id of the node.
         */
        nodeId: string;
        /**
         * The icon to display next to the tree node's label.
         */
        icon?: React.ReactNode;
        /**
         * The icon to display next to the tree node's label. Either an expansion or collapse icon.
         */
        expansionIcon?: React.ReactNode;
        /**
         * The icon to display next to the tree node's label. Either a parent or end icon.
         */
        displayIcon?: React.ReactNode;
    }
    export type TreeItemContentClassKey = keyof NonNullable<TreeItemContentProps['classes']>;
}
declare module "@mui/lab/TreeItem/treeItemClasses" {
    export interface TreeItemClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the transition component. */
        group: string;
        /** Styles applied to the content element. */
        content: string;
        /** State class applied to the content element when expanded. */
        expanded: string;
        /** State class applied to the content element when selected. */
        selected: string;
        /** State class applied to the content element when focused. */
        focused: string;
        /** State class applied to the element when disabled. */
        disabled: string;
        /** Styles applied to the tree node icon. */
        iconContainer: string;
        /** Styles applied to the label element. */
        label: string;
    }
    export type TreeItemClassKey = keyof TreeItemClasses;
    export function getTreeItemUtilityClass(slot: string): string;
    const treeItemClasses: TreeItemClasses;
    export default treeItemClasses;
}
declare module "@mui/lab/TreeItem/TreeItem" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps, Theme } from "@mui/material/index";
    import { TransitionProps } from "@mui/material/transitions/index";
    import { SxProps } from "@mui/system/index";
    import { TreeItemContentProps } from "@mui/lab/TreeItem/TreeItemContent";
    import { TreeItemClasses } from "@mui/lab/TreeItem/treeItemClasses";
    export interface TreeItemProps extends StandardProps<React.HTMLAttributes<HTMLLIElement>, 'onFocus'> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TreeItemClasses>;
        /**
         * The icon used to collapse the node.
         */
        collapseIcon?: React.ReactNode;
        /**
         * The component used for the content node.
         * @default TreeItemContent
         */
        ContentComponent?: React.JSXElementConstructor<TreeItemContentProps>;
        /**
         * Props applied to ContentComponent
         */
        ContentProps?: React.HTMLAttributes<HTMLElement>;
        /**
         * If `true`, the node is disabled.
         */
        disabled?: boolean;
        /**
         * The icon displayed next to a end node.
         */
        endIcon?: React.ReactNode;
        /**
         * The icon used to expand the node.
         */
        expandIcon?: React.ReactNode;
        /**
         * The icon to display next to the tree node's label.
         */
        icon?: React.ReactNode;
        /**
         * This prop isn't supported.
         * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.
         */
        onFocus?: null;
        /**
         * The tree node label.
         */
        label?: React.ReactNode;
        /**
         * The id of the node.
         */
        nodeId: string;
        /**
         * The component used for the transition.
         * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
         * @default Collapse
         */
        TransitionComponent?: React.JSXElementConstructor<TransitionProps>;
        /**
         * Props applied to the transition element.
         * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.
         */
        TransitionProps?: TransitionProps;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    /**
     *
     * Demos:
     *
     * - [Tree View](https://mui.com/components/tree-view/)
     *
     * API:
     *
     * - [TreeItem API](https://mui.com/api/tree-item/)
     */
    export type TreeItem = (props: TreeItemProps) => JSX.Element;
    export default TreeItem;
}
declare module "@mui/lab/TreeItem/useTreeItem" {
    import * as React from 'react';
    export type useTreeItem = (nodeId: string) => {
        disabled: boolean;
        expanded: boolean;
        selected: boolean;
        focused: boolean;
        handleExpansion: (event: React.SyntheticEvent) => void;
        handleSelection: (event: React.SyntheticEvent) => void;
        preventSelection: (event: React.SyntheticEvent) => void;
    };
    export default useTreeItem;
}
declare module "@mui/lab/TreeItem/index" {
    export { default } from "@mui/lab/TreeItem/TreeItem";
    export * from "@mui/lab/TreeItem/TreeItem";
    export * from "@mui/lab/TreeItem/TreeItemContent";
    export { default as useTreeItem } from "@mui/lab/TreeItem/useTreeItem";
    export { default as treeItemClasses } from "@mui/lab/TreeItem/treeItemClasses";
    export * from "@mui/lab/TreeItem/treeItemClasses";
}
declare module "@mui/lab/TreeView/treeViewClasses" {
    export interface TreeViewClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type TreeViewClassKey = keyof TreeViewClasses;
    export function getTreeViewUtilityClass(slot: string): string;
    const treeViewClasses: TreeViewClasses;
    export default treeViewClasses;
}
declare module "@mui/lab/TreeView/TreeView" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    import { Theme } from "@mui/material/styles/index";
    import { SxProps } from "@mui/system/index";
    import { TreeViewClasses } from "@mui/lab/TreeView/treeViewClasses";
    export interface TreeViewPropsBase extends StandardProps<React.HTMLAttributes<HTMLUListElement>> {
        /**
         * The content of the component.
         */
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<TreeViewClasses>;
        /**
         * The default icon used to collapse the node.
         */
        defaultCollapseIcon?: React.ReactNode;
        /**
         * The default icon displayed next to a end node. This is applied to all
         * tree nodes and can be overridden by the TreeItem `icon` prop.
         */
        defaultEndIcon?: React.ReactNode;
        /**
         * Expanded node ids. (Uncontrolled)
         * @default []
         */
        defaultExpanded?: string[];
        /**
         * The default icon used to expand the node.
         */
        defaultExpandIcon?: React.ReactNode;
        /**
         * The default icon displayed next to a parent node. This is applied to all
         * parent nodes and can be overridden by the TreeItem `icon` prop.
         */
        defaultParentIcon?: React.ReactNode;
        /**
         * If `true`, will allow focus on disabled items.
         * @default false
         */
        disabledItemsFocusable?: boolean;
        /**
         * If `true` selection is disabled.
         * @default false
         */
        disableSelection?: boolean;
        /**
         * Expanded node ids. (Controlled)
         */
        expanded?: string[];
        /**
         * This prop is used to help implement the accessibility logic.
         * If you don't provide this prop. It falls back to a randomly generated id.
         */
        id?: string;
        /**
         * Callback fired when tree items are focused.
         *
         * @param {React.SyntheticEvent} event The event source of the callback **Warning**: This is a generic event not a focus event.
         * @param {string} value of the focused node.
         */
        onNodeFocus?: (event: React.SyntheticEvent, nodeId: string) => void;
        /**
         * Callback fired when tree items are expanded/collapsed.
         *
         * @param {React.SyntheticEvent} event The event source of the callback.
         * @param {array} nodeIds The ids of the expanded nodes.
         */
        onNodeToggle?: (event: React.SyntheticEvent, nodeIds: string[]) => void;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    export interface MultiSelectTreeViewProps extends TreeViewPropsBase {
        /**
         * Selected node ids. (Uncontrolled)
         * When `multiSelect` is true this takes an array of strings; when false (default) a string.
         * @default []
         */
        defaultSelected?: string[];
        /**
         * Selected node ids. (Controlled)
         * When `multiSelect` is true this takes an array of strings; when false (default) a string.
         */
        selected?: string[];
        /**
         * If true `ctrl` and `shift` will trigger multiselect.
         * @default false
         */
        multiSelect?: true;
        /**
         * Callback fired when tree items are selected/unselected.
         *
         * @param {React.SyntheticEvent} event The event source of the callback
         * @param {string[] | string} nodeIds Ids of the selected nodes. When `multiSelect` is true
         * this is an array of strings; when false (default) a string.
         */
        onNodeSelect?: (event: React.SyntheticEvent, nodeIds: string[]) => void;
    }
    export interface SingleSelectTreeViewProps extends TreeViewPropsBase {
        /**
         * Selected node ids. (Uncontrolled)
         * When `multiSelect` is true this takes an array of strings; when false (default) a string.
         * @default []
         */
        defaultSelected?: string;
        /**
         * Selected node ids. (Controlled)
         * When `multiSelect` is true this takes an array of strings; when false (default) a string.
         */
        selected?: string;
        /**
         * If true `ctrl` and `shift` will trigger multiselect.
         * @default false
         */
        multiSelect?: false;
        /**
         * Callback fired when tree items are selected/unselected.
         *
         * @param {React.SyntheticEvent} event The event source of the callback
         * @param {string[] | string} nodeIds Ids of the selected nodes. When `multiSelect` is true
         * this is an array of strings; when false (default) a string.
         */
        onNodeSelect?: (event: React.SyntheticEvent, nodeIds: string) => void;
    }
    export type TreeViewProps = SingleSelectTreeViewProps | MultiSelectTreeViewProps;
    /**
     *
     * Demos:
     *
     * - [Tree View](https://mui.com/components/tree-view/)
     *
     * API:
     *
     * - [TreeView API](https://mui.com/api/tree-view/)
     */
    export type TreeView = (props: TreeViewProps) => JSX.Element;
    export default TreeView;
}
declare module "@mui/lab/TreeView/index" {
    export { default } from "@mui/lab/TreeView/TreeView";
    export * from "@mui/lab/TreeView/TreeView";
    export { default as treeViewClasses } from "@mui/lab/TreeView/treeViewClasses";
    export * from "@mui/lab/TreeView/treeViewClasses";
}
declare module "@mui/lab/YearPicker/yearPickerClasses" {
    export function getYearPickerUtilityClass(slot: string): string;
    const yearPickerClasses: Record<"root", string>;
    export default yearPickerClasses;
}
declare module "@mui/lab/YearPicker/index" {
    export { default } from "@mui/lab/YearPicker/YearPicker";
    export type YearPickerClassKey = import("@mui/lab/YearPicker/YearPicker").YearPickerClassKey;
    export type YearPickerProps<TDate> = import("@mui/lab/YearPicker/YearPicker").YearPickerProps<TDate>;
    export { default as yearPickerClasses } from "@mui/lab/YearPicker/yearPickerClasses";
    export * from "@mui/lab/YearPicker/yearPickerClasses";
}
declare module "@mui/lab/useAutocomplete/index" {
    export { useAutocomplete as default } from "@mui/core/index";
}
declare module "@mui/lab/Masonry/masonryClasses" {
    export interface MasonryClasses {
        /** Styles applied to the root element. */
        root: string;
    }
    export type MasonryClassKey = keyof MasonryClasses;
    export function getMasonryUtilityClass(slot: string): string;
    const masonryClasses: MasonryClasses;
    export default masonryClasses;
}
declare module "@mui/lab/Masonry/Masonry" {
    import { ResponsiveStyleValue, SxProps } from "@mui/system/index";
    import { OverridableComponent, OverrideProps } from "@mui/material/OverridableComponent";
    import { Theme } from "@mui/material/styles/index";
    import { MasonryClasses } from "@mui/lab/Masonry/masonryClasses";
    export interface MasonryTypeMap<P = {}, D extends React.ElementType = 'div'> {
        props: P & {
            /**
             * The content of the component.
             */
            children: NonNullable<React.ReactNode>;
            /**
             * Override or extend the styles applied to the component.
             */
            classes?: Partial<MasonryClasses>;
            /**
             * Number of columns.
             * @default 4
             */
            columns?: ResponsiveStyleValue<number | string>;
            /**
             * The default number of columns of the component. This is provided for server-side rendering.
             */
            defaultColumns?: number;
            /**
             * The default height of the component in px. This is provided for server-side rendering.
             */
            defaultHeight?: number;
            /**
             * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.
             */
            defaultSpacing?: number;
            /**
             * Defines the space between children. It is a factor of the theme's spacing.
             * @default 1
             */
            spacing?: ResponsiveStyleValue<number | string>;
            /**
             * Allows defining system overrides as well as additional CSS styles.
             */
            sx?: SxProps<Theme>;
        };
        defaultComponent: D;
    }
    /**
     *
     * Demos:
     *
     * - [Masonry](https://mui.com/components/masonry/)
     *
     * API:
     *
     * - [Masonry API](https://mui.com/api/masonry/)
     */
    const Masonry: OverridableComponent<MasonryTypeMap>;
    export type MasonryProps<D extends React.ElementType = MasonryTypeMap['defaultComponent'], P = {}> = OverrideProps<MasonryTypeMap<P, D>, D>;
    export default Masonry;
}
declare module "@mui/lab/Masonry/index" {
    export * from "@mui/lab/Masonry/Masonry";
    export { default } from "@mui/lab/Masonry/Masonry";
    export * from "@mui/lab/Masonry/masonryClasses";
    export { default as masonryClasses } from "@mui/lab/Masonry/masonryClasses";
}
declare module "@mui/lab/index" {
    export { default as Alert } from "@mui/lab/Alert/index";
    export * from "@mui/lab/Alert/index";
    export { default as AlertTitle } from "@mui/lab/AlertTitle/index";
    export * from "@mui/lab/AlertTitle/index";
    export { default as Autocomplete } from "@mui/lab/Autocomplete/index";
    export * from "@mui/lab/Autocomplete/index";
    export { default as AvatarGroup } from "@mui/lab/AvatarGroup/index";
    export * from "@mui/lab/AvatarGroup/index";
    export { default as CalendarPicker } from "@mui/lab/CalendarPicker/index";
    export * from "@mui/lab/CalendarPicker/index";
    export { default as CalendarPickerSkeleton } from "@mui/lab/CalendarPickerSkeleton/index";
    export * from "@mui/lab/CalendarPickerSkeleton/index";
    export { default as ClockPicker } from "@mui/lab/ClockPicker/index";
    export * from "@mui/lab/ClockPicker/index";
    export { default as DatePicker } from "@mui/lab/DatePicker/index";
    export * from "@mui/lab/DatePicker/index";
    export { default as DateRangePicker } from "@mui/lab/DateRangePicker/index";
    export * from "@mui/lab/DateRangePicker/index";
    export { default as DateRangePickerDay } from "@mui/lab/DateRangePickerDay/index";
    export * from "@mui/lab/DateRangePickerDay/index";
    export { default as DateTimePicker } from "@mui/lab/DateTimePicker/index";
    export * from "@mui/lab/DateTimePicker/index";
    export { default as DesktopDatePicker } from "@mui/lab/DesktopDatePicker/index";
    export * from "@mui/lab/DesktopDatePicker/index";
    export { default as DesktopDateRangePicker } from "@mui/lab/DesktopDateRangePicker/index";
    export * from "@mui/lab/DesktopDateRangePicker/index";
    export { default as DesktopDateTimePicker } from "@mui/lab/DesktopDateTimePicker/index";
    export * from "@mui/lab/DesktopDateTimePicker/index";
    export { default as DesktopTimePicker } from "@mui/lab/DesktopTimePicker/index";
    export * from "@mui/lab/DesktopTimePicker/index";
    export { default as LoadingButton } from "@mui/lab/LoadingButton/index";
    export * from "@mui/lab/LoadingButton/index";
    export { default as LocalizationProvider } from "@mui/lab/LocalizationProvider/index";
    export * from "@mui/lab/LocalizationProvider/index";
    export { default as MobileDatePicker } from "@mui/lab/MobileDatePicker/index";
    export * from "@mui/lab/MobileDatePicker/index";
    export { default as MobileDateRangePicker } from "@mui/lab/MobileDateRangePicker/index";
    export * from "@mui/lab/MobileDateRangePicker/index";
    export { default as MobileDateTimePicker } from "@mui/lab/MobileDateTimePicker/index";
    export * from "@mui/lab/MobileDateTimePicker/index";
    export { default as MobileTimePicker } from "@mui/lab/MobileTimePicker/index";
    export * from "@mui/lab/MobileTimePicker/index";
    export { default as MonthPicker } from "@mui/lab/MonthPicker/index";
    export * from "@mui/lab/MonthPicker/index";
    export { default as Pagination } from "@mui/lab/Pagination/index";
    export * from "@mui/lab/Pagination/index";
    export { default as PaginationItem } from "@mui/lab/PaginationItem/index";
    export * from "@mui/lab/PaginationItem/index";
    export { default as PickersDay } from "@mui/lab/PickersDay/index";
    export * from "@mui/lab/PickersDay/index";
    export { default as Rating } from "@mui/lab/Rating/index";
    export * from "@mui/lab/Rating/index";
    export { default as Skeleton } from "@mui/lab/Skeleton/index";
    export * from "@mui/lab/Skeleton/index";
    export { default as SpeedDial } from "@mui/lab/SpeedDial/index";
    export * from "@mui/lab/SpeedDial/index";
    export { default as SpeedDialAction } from "@mui/lab/SpeedDialAction/index";
    export * from "@mui/lab/SpeedDialAction/index";
    export { default as SpeedDialIcon } from "@mui/lab/SpeedDialIcon/index";
    export * from "@mui/lab/SpeedDialIcon/index";
    export { default as StaticDatePicker } from "@mui/lab/StaticDatePicker/index";
    export * from "@mui/lab/StaticDatePicker/index";
    export { default as StaticDateRangePicker } from "@mui/lab/StaticDateRangePicker/index";
    export * from "@mui/lab/StaticDateRangePicker/index";
    export { default as StaticDateTimePicker } from "@mui/lab/StaticDateTimePicker/index";
    export * from "@mui/lab/StaticDateTimePicker/index";
    export { default as StaticTimePicker } from "@mui/lab/StaticTimePicker/index";
    export * from "@mui/lab/StaticTimePicker/index";
    export { default as TabContext } from "@mui/lab/TabContext/index";
    export * from "@mui/lab/TabContext/index";
    export { default as TabList } from "@mui/lab/TabList/index";
    export * from "@mui/lab/TabList/index";
    export { default as TabPanel } from "@mui/lab/TabPanel/index";
    export * from "@mui/lab/TabPanel/index";
    export { default as TimePicker } from "@mui/lab/TimePicker/index";
    export * from "@mui/lab/TimePicker/index";
    export { default as Timeline } from "@mui/lab/Timeline/index";
    export * from "@mui/lab/Timeline/index";
    export { default as TimelineConnector } from "@mui/lab/TimelineConnector/index";
    export * from "@mui/lab/TimelineConnector/index";
    export { default as TimelineContent } from "@mui/lab/TimelineContent/index";
    export * from "@mui/lab/TimelineContent/index";
    export { default as TimelineDot } from "@mui/lab/TimelineDot/index";
    export * from "@mui/lab/TimelineDot/index";
    export { default as TimelineItem } from "@mui/lab/TimelineItem/index";
    export * from "@mui/lab/TimelineItem/index";
    export { default as TimelineOppositeContent } from "@mui/lab/TimelineOppositeContent/index";
    export * from "@mui/lab/TimelineOppositeContent/index";
    export { default as TimelineSeparator } from "@mui/lab/TimelineSeparator/index";
    export * from "@mui/lab/TimelineSeparator/index";
    export { default as ToggleButton } from "@mui/lab/ToggleButton/index";
    export * from "@mui/lab/ToggleButton/index";
    export { default as ToggleButtonGroup } from "@mui/lab/ToggleButtonGroup/index";
    export * from "@mui/lab/ToggleButtonGroup/index";
    export { default as TreeItem } from "@mui/lab/TreeItem/index";
    export * from "@mui/lab/TreeItem/index";
    export { default as TreeView } from "@mui/lab/TreeView/index";
    export * from "@mui/lab/TreeView/index";
    export { default as YearPicker } from "@mui/lab/YearPicker/index";
    export * from "@mui/lab/YearPicker/index";
    export { default as useAutocomplete } from "@mui/lab/useAutocomplete/index";
    export * from "@mui/lab/useAutocomplete/index";
    export { default as Masonry } from "@mui/lab/Masonry/index";
    export * from "@mui/lab/Masonry/index";
}
declare module "@mui/lab/AdapterDateFns/index" {
    export { default } from '@date-io/date-fns';
}
declare module "@mui/lab/AdapterDayjs/index" {
    export { default } from '@date-io/dayjs';
}
declare module "@mui/lab/AdapterLuxon/index" {
    export { default } from '@date-io/luxon';
}
declare module "@mui/lab/AdapterMoment/index" {
    export { default } from '@date-io/moment';
}
declare module "@mui/lab/CalendarPicker/PickersFadeTransitionGroup" {
    import * as React from 'react';
    interface FadeTransitionProps {
        children: React.ReactElement;
        className?: string;
        reduceAnimations: boolean;
        transKey: React.Key;
    }
    /**
     * @ignore - do not document.
     */
    const PickersFadeTransitionGroup: ({ children, className, reduceAnimations, transKey, }: FadeTransitionProps) => JSX.Element;
    export default PickersFadeTransitionGroup;
}
declare module "@mui/lab/CalendarPicker/useCalendarState" {
    import { SlideDirection } from "@mui/lab/CalendarPicker/PickersSlideTransition";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    interface CalendarState<TDate> {
        currentMonth: TDate;
        focusedDay: TDate | null;
        isMonthSwitchingAnimating: boolean;
        slideDirection: SlideDirection;
    }
    type ReducerAction<TType, TAdditional = {}> = {
        type: TType;
    } & TAdditional;
    interface ChangeMonthPayload<TDate> {
        direction: SlideDirection;
        newMonth: TDate;
    }
    export const createCalendarStateReducer: <TDate extends unknown>(reduceAnimations: boolean, disableSwitchToMonthOnDayFocus: boolean, utils: MuiPickersAdapter<TDate>) => (state: CalendarState<TDate>, action: {
        type: "finishMonthSwitchingAnimation";
    } | ReducerAction<"changeMonth", ChangeMonthPayload<TDate>> | ReducerAction<"changeFocusedDay", {
        focusedDay: TDate;
    }>) => CalendarState<TDate>;
    type CalendarStateInput<TDate> = Pick<import("@mui/lab/CalendarPicker/CalendarPicker").CalendarPickerProps<TDate>, 'date' | 'defaultCalendarMonth' | 'disableFuture' | 'disablePast' | 'minDate' | 'maxDate' | 'onMonthChange' | 'reduceAnimations' | 'shouldDisableDate'> & {
        disableSwitchToMonthOnDayFocus?: boolean;
    };
    export function useCalendarState<TDate>({ date, defaultCalendarMonth, disableFuture, disablePast, disableSwitchToMonthOnDayFocus, maxDate, minDate, onMonthChange, reduceAnimations, shouldDisableDate, }: CalendarStateInput<TDate>): {
        calendarState: CalendarState<TDate>;
        changeMonth: (newDate: TDate) => void;
        changeFocusedDay: (newFocusedDate: TDate) => void;
        isDateDisabled: (day: TDate | null) => boolean;
        onMonthSwitchingAnimationEnd: () => void;
        handleChangeMonth: (payload: ChangeMonthPayload<TDate>) => void;
    };
    export {};
}
declare module "@mui/lab/ClockPicker/Clock" {
    import * as React from 'react';
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    import { PickerSelectionState } from "@mui/lab/internal/pickers/hooks/usePickerState";
    import { useMeridiemMode } from "@mui/lab/internal/pickers/hooks/date-helpers-hooks";
    import { ClockView } from "@mui/lab/ClockPicker/shared";
    export interface ClockProps<TDate> extends ReturnType<typeof useMeridiemMode> {
        ampm: boolean;
        ampmInClock: boolean;
        autoFocus?: boolean;
        children: readonly React.ReactNode[];
        date: TDate | null;
        getClockLabelText: (view: ClockView, time: TDate | null, adapter: MuiPickersAdapter<TDate>) => string;
        isTimeDisabled: (timeValue: number, type: ClockView) => boolean;
        minutesStep?: number;
        onChange: (value: number, isFinish?: PickerSelectionState) => void;
        /**
         * DOM id that the selected option should have
         * Should only be `undefined` on the server
         */
        selectedId: string | undefined;
        type: ClockView;
        value: number;
    }
    /**
     * @ignore - internal component.
     */
    function Clock<TDate>(props: ClockProps<TDate>): JSX.Element;
    export default Clock;
}
declare module "@mui/lab/ClockPicker/ClockNumber" {
    import * as React from 'react';
    export interface ClockNumberProps extends React.HTMLAttributes<HTMLSpanElement> {
        'aria-label': string;
        disabled: boolean;
        /**
         * Make sure callers pass an id which. It should be defined if selected.
         */
        id: string | undefined;
        index: number;
        inner: boolean;
        label: string;
        selected: boolean;
    }
    export const classes: Record<"selected" | "disabled", string>;
    /**
     * @ignore - internal component.
     */
    function ClockNumber(props: ClockNumberProps): JSX.Element;
    export default ClockNumber;
}
declare module "@mui/lab/ClockPicker/ClockNumbers" {
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    import { PickerSelectionState } from "@mui/lab/internal/pickers/hooks/usePickerState";
    interface GetHourNumbersOptions {
        ampm: boolean;
        date: unknown;
        getClockNumberText: (hour: string) => string;
        isDisabled: (value: number) => boolean;
        onChange: (value: number, isFinish?: PickerSelectionState) => void;
        /**
         * DOM id that the selected option should have
         * Should only be `undefined` on the server
         */
        selectedId: string | undefined;
        utils: MuiPickersAdapter;
    }
    /**
     * @ignore - internal component.
     */
    export const getHourNumbers: ({ ampm, date, getClockNumberText, isDisabled, selectedId, utils, }: GetHourNumbersOptions) => JSX.Element[];
    export const getMinutesNumbers: ({ utils, value, isDisabled, getClockNumberText, selectedId, }: Omit<GetHourNumbersOptions, "date" | "ampm"> & {
        value: number;
    }) => JSX.Element[];
    export {};
}
declare module "@mui/lab/ClockPicker/ClockPointer" {
    import * as React from 'react';
    import { ClockView } from "@mui/lab/ClockPicker/shared";
    export interface ClockPointerProps extends React.HTMLAttributes<HTMLDivElement> {
        hasSelected: boolean;
        isInner: boolean;
        type: ClockView;
        value: number;
    }
    /**
     * @ignore - internal component.
     */
    class ClockPointer extends React.Component<ClockPointerProps> {
        static getDerivedStateFromProps: (nextProps: ClockPointerProps, state: ClockPointer['state']) => {
            toAnimateTransform: boolean;
            previousType: ClockView;
        };
        state: {
            toAnimateTransform: boolean;
            previousType: undefined;
        };
        render(): JSX.Element;
    }
    export default ClockPointer;
}
declare module "@mui/lab/DatePicker/DatePickerToolbar" {
    import * as React from 'react';
    /**
     * @ignore - internal component.
     */
    const DatePickerToolbar: React.ForwardRefExoticComponent<import("@mui/lab/CalendarPicker/CalendarPicker").ExportedCalendarPickerProps<unknown> & import("@mui/lab/ClockPicker/ClockPicker").ExportedClockPickerProps<unknown> & {
        ampmInClock?: boolean | undefined;
        date: unknown;
        dateRangeIcon?: React.ReactNode;
        getMobileKeyboardInputViewButtonText?: (() => string) | undefined;
        hideTabs?: boolean | undefined;
        isLandscape: boolean;
        isMobileKeyboardViewOpen: boolean;
        onChange: import("@mui/lab/internal/pickers/hooks/useViews").PickerOnChangeFn<unknown>;
        openView: import("@mui/lab/internal/pickers/typings/Views").AllAvailableViews;
        setOpenView: (view: import("@mui/lab/internal/pickers/typings/Views").AllAvailableViews) => void;
        timeIcon?: React.ReactNode;
        toggleMobileKeyboardView: () => void;
        toolbarFormat?: string | undefined;
        toolbarPlaceholder?: React.ReactNode;
        toolbarTitle?: React.ReactNode;
        views: readonly import("@mui/lab/internal/pickers/typings/Views").AllAvailableViews[];
    } & React.RefAttributes<HTMLDivElement>>;
    export default DatePickerToolbar;
}
declare module "@mui/lab/DateRangePicker/DateRangePickerToolbar" {
    import * as React from 'react';
    import { ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    import { DateRange, CurrentlySelectingRangeEndProps } from "@mui/lab/DateRangePicker/RangeTypes";
    interface DateRangePickerToolbarProps extends CurrentlySelectingRangeEndProps, Pick<ToolbarComponentProps, 'isMobileKeyboardViewOpen' | 'toggleMobileKeyboardView' | 'toolbarTitle' | 'toolbarFormat'> {
        date: DateRange<unknown>;
        startText: React.ReactNode;
        endText: React.ReactNode;
        currentlySelectingRangeEnd: 'start' | 'end';
        setCurrentlySelectingRangeEnd: (newSelectingEnd: 'start' | 'end') => void;
    }
    /**
     * @ignore - internal component.
     */
    const DateRangePickerToolbar: ({ currentlySelectingRangeEnd, date: [start, end], endText, isMobileKeyboardViewOpen, setCurrentlySelectingRangeEnd, startText, toggleMobileKeyboardView, toolbarFormat, toolbarTitle, }: DateRangePickerToolbarProps) => JSX.Element;
    export default DateRangePickerToolbar;
}
declare module "@mui/lab/DateRangePicker/DateRangePickerViewMobile" {
    import { ExportedCalendarHeaderProps } from "@mui/lab/CalendarPicker/PickersCalendarHeader";
    import { DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { PickersCalendarProps } from "@mui/lab/CalendarPicker/PickersCalendar";
    import { ExportedDesktopDateRangeCalendarProps } from "@mui/lab/DateRangePicker/DateRangePickerViewDesktop";
    import { DateValidationProps } from "@mui/lab/internal/pickers/date-utils";
    export interface ExportedMobileDateRangeCalendarProps<TDate> extends Pick<ExportedDesktopDateRangeCalendarProps<TDate>, 'renderDay'> {
    }
    interface DesktopDateRangeCalendarProps<TDate> extends ExportedMobileDateRangeCalendarProps<TDate>, Omit<PickersCalendarProps<TDate>, 'date' | 'renderDay' | 'onFocusedDayChange'>, DateValidationProps<TDate>, ExportedCalendarHeaderProps<TDate> {
        date: DateRange<TDate>;
        changeMonth: (date: TDate) => void;
    }
    /**
     * @ignore - internal component.
     */
    export function DateRangePickerViewMobile<TDate>(props: DesktopDateRangeCalendarProps<TDate>): JSX.Element;
    export {};
}
declare module "@mui/lab/DateRangePicker/date-range-manager" {
    import { DateRange } from "@mui/lab/DateRangePicker/RangeTypes";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    interface CalculateRangeChangeOptions<TDate> {
        utils: MuiPickersAdapter<TDate>;
        range: DateRange<TDate>;
        newDate: TDate;
        currentlySelectingRangeEnd: 'start' | 'end';
    }
    export function calculateRangeChange<TDate>({ utils, range, newDate: selectedDate, currentlySelectingRangeEnd, }: CalculateRangeChangeOptions<TDate>): {
        nextSelection: 'start' | 'end';
        newRange: DateRange<TDate>;
    };
    export function calculateRangePreview<TDate>(options: CalculateRangeChangeOptions<TDate>): DateRange<TDate>;
    export {};
}
declare module "@mui/lab/DateTimePicker/DateTimePickerTabs" {
    import * as React from 'react';
    import { DateTimePickerView } from "@mui/lab/DateTimePicker/shared";
    export interface DateTimePickerTabsProps {
        dateRangeIcon?: React.ReactNode;
        onChange: (view: DateTimePickerView) => void;
        timeIcon?: React.ReactNode;
        view: DateTimePickerView;
    }
    /**
     * @ignore - internal component.
     */
    const DateTimePickerTabs: (props: DateTimePickerTabsProps) => JSX.Element;
    export default DateTimePickerTabs;
}
declare module "@mui/lab/DateTimePicker/DateTimePickerToolbar" {
    import { ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    /**
     * @ignore - internal component.
     */
    const DateTimePickerToolbar: (props: ToolbarComponentProps) => JSX.Element;
    export default DateTimePickerToolbar;
}
declare module "@mui/lab/MonthPicker/PickersMonth" {
    import * as React from 'react';
    const classes: Record<"root" | "selected", string>;
    export interface MonthProps {
        children: React.ReactNode;
        disabled?: boolean;
        onSelect: (value: any) => void;
        selected?: boolean;
        value: any;
    }
    export type PickersMonthClassKey = keyof typeof classes;
    /**
     * @ignore - do not document.
     */
    const PickersMonth: React.FC<MonthProps>;
    export default PickersMonth;
}
declare module "@mui/lab/TimePicker/TimePickerToolbar" {
    import * as React from 'react';
    import { ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    export interface TimePickerToolbarClasses {
        separator: string;
        hourMinuteLabel: string;
        hourMinuteLabelLandscape: string;
        hourMinuteLabelReverse: string;
        ampmSelection: string;
        ampmLandscape: string;
        ampmLabel: string;
        penIconLandscape: string;
    }
    export interface TimePickerToolbarProps extends ToolbarComponentProps {
        classes?: Partial<TimePickerToolbarClasses>;
    }
    export type TimePickerToolbarClassKey = keyof TimePickerToolbarClasses;
    export function getTimePickerToolbarUtilityClass(slot: string): string;
    export const timePickerToolbarClasses: TimePickerToolbarClasses;
    /**
     * @ignore - internal component.
     */
    const TimePickerToolbar: React.FC<ToolbarComponentProps>;
    export default TimePickerToolbar;
}
declare module "@mui/lab/Timeline/TimelineContext" {
    import * as React from 'react';
    /**
     * @ignore - internal component.
     */
    const TimelineContext: React.Context<{}>;
    export default TimelineContext;
}
declare module "@mui/lab/YearPicker/PickersYear" {
    import * as React from 'react';
    export interface YearProps {
        autoFocus?: boolean;
        children: React.ReactNode;
        classes?: {
            root?: string;
            modeDesktop?: string;
            modeMobile?: string;
            yearButton?: string;
            disabled?: string;
            selected?: string;
        };
        className?: string;
        disabled?: boolean;
        forwardedRef?: React.Ref<HTMLButtonElement>;
        onClick: (event: React.MouseEvent, value: number) => void;
        onKeyDown: (event: React.KeyboardEvent, value: number) => void;
        selected: boolean;
        value: number;
    }
    export function getPickersYearUtilityClass(slot: string): string;
    export type PickersYearClassKey = keyof NonNullable<YearProps['classes']>;
    export const pickersYearClasses: Record<"root" | "selected" | "disabled" | "modeDesktop" | "modeMobile" | "yearButton", string>;
    /**
     * @ignore - internal component.
     */
    const PickersYear: React.ForwardRefExoticComponent<YearProps & React.RefAttributes<HTMLButtonElement>>;
    export default PickersYear;
}
declare module "@mui/lab/internal/pickers/KeyboardDateInput" {
    import * as React from 'react';
    import { DateInputProps } from "@mui/lab/internal/pickers/PureDateInput";
    export const KeyboardDateInput: React.ForwardRefExoticComponent<DateInputProps<unknown, unknown> & React.RefAttributes<HTMLDivElement>>;
    export default KeyboardDateInput;
}
declare module "@mui/lab/internal/pickers/PickersToolbar" {
    import * as React from 'react';
    import { ToolbarComponentProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    export interface PickersToolbarProps extends Pick<ToolbarComponentProps, 'getMobileKeyboardInputViewButtonText' | 'isMobileKeyboardViewOpen' | 'toggleMobileKeyboardView'> {
        className?: string;
        viewType?: 'calendar' | 'clock';
        isLandscape: boolean;
        landscapeDirection?: 'row' | 'column';
        penIconClassName?: string;
        toolbarTitle: React.ReactNode;
    }
    const PickersToolbar: React.ForwardRefExoticComponent<PickersToolbarProps & {
        children?: React.ReactNode;
    } & React.RefAttributes<HTMLDivElement>>;
    export default PickersToolbar;
}
declare module "@mui/lab/internal/pickers/PickersToolbarButton" {
    import * as React from 'react';
    import { ButtonProps } from "@mui/material/Button/index";
    import { TypographyProps } from "@mui/material/Typography/index";
    import { ExtendMui } from "@mui/lab/internal/pickers/typings/helpers";
    export interface PickersToolbarButtonProps extends ExtendMui<ButtonProps, 'value' | 'variant'> {
        align?: TypographyProps['align'];
        selected: boolean;
        typographyClassName?: string;
        value: React.ReactNode;
        variant: TypographyProps['variant'];
    }
    const PickersToolbarButton: React.FunctionComponent<PickersToolbarButtonProps>;
    export default PickersToolbarButton;
}
declare module "@mui/lab/internal/pickers/PickersToolbarText" {
    import * as React from 'react';
    import { TypographyProps } from "@mui/material/Typography/index";
    export interface PickersToolbarTextProps extends Omit<TypographyProps, 'classes'> {
        selected?: boolean;
        value: React.ReactNode;
    }
    const PickersToolbarText: React.ForwardRefExoticComponent<Pick<PickersToolbarTextProps, "p" | "slot" | "style" | "title" | "hidden" | "className" | "selected" | "border" | "borderTop" | "borderRight" | "borderBottom" | "borderLeft" | "borderColor" | "borderRadius" | "display" | "displayPrint" | "overflow" | "textOverflow" | "visibility" | "whiteSpace" | "flexBasis" | "flexDirection" | "flexWrap" | "justifyContent" | "alignItems" | "alignContent" | "order" | "flex" | "flexGrow" | "flexShrink" | "alignSelf" | "justifyItems" | "justifySelf" | "gap" | "columnGap" | "rowGap" | "gridColumn" | "gridRow" | "gridAutoFlow" | "gridAutoColumns" | "gridAutoRows" | "gridTemplateColumns" | "gridTemplateRows" | "gridTemplateAreas" | "gridArea" | "bgcolor" | "color" | "zIndex" | "position" | "top" | "right" | "bottom" | "left" | "boxShadow" | "width" | "maxWidth" | "minWidth" | "height" | "maxHeight" | "minHeight" | "boxSizing" | "m" | "mt" | "mr" | "mb" | "ml" | "mx" | "my" | "pt" | "pr" | "pb" | "pl" | "px" | "py" | "margin" | "marginTop" | "marginRight" | "marginBottom" | "marginLeft" | "marginX" | "marginY" | "padding" | "paddingTop" | "paddingRight" | "paddingBottom" | "paddingLeft" | "paddingX" | "paddingY" | "typography" | "fontFamily" | "fontSize" | "fontStyle" | "fontWeight" | "letterSpacing" | "lineHeight" | "textAlign" | "textTransform" | "translate" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "align" | "gutterBottom" | "noWrap" | "paragraph" | "sx" | "variant" | "variantMapping" | "value"> & React.RefAttributes<HTMLSpanElement>>;
    export default PickersToolbarText;
}
declare module "@mui/lab/internal/pickers/text-field-helper" {
    import { ParseableDate } from "@mui/lab/internal/pickers/constants/prop-types";
    import { MuiPickersAdapter } from "@mui/lab/internal/pickers/hooks/useUtils";
    export function getTextFieldAriaText<TDate>(rawValue: ParseableDate<TDate>, utils: MuiPickersAdapter<TDate>): string;
    export const getDisplayDate: <TDate>(utils: MuiPickersAdapter<TDate>, value: ParseableDate<TDate>, inputFormat: string) => string;
    export function pick12hOr24hFormat(userFormat: string | undefined, ampm: boolean | undefined, formats: {
        localized: string;
        '12h': string;
        '24h': string;
    }): string;
    export function checkMaskIsValidForCurrentFormat(mask: string, format: string, acceptRegex: RegExp, utils: MuiPickersAdapter): boolean;
    export const maskedDateFormatter: (mask: string, acceptRegexp: RegExp) => (value: string) => string;
}
declare module "@mui/lab/internal/pickers/utils" {
    import * as React from 'react';
    export function arrayIncludes<T>(array: T[] | readonly T[], itemOrItems: T | T[]): boolean;
    export const onSpaceOrEnter: (innerFn: () => void, onFocus?: ((event: React.KeyboardEvent<any>) => void) | undefined) => (event: React.KeyboardEvent) => void;
    export const pipe: (...fns: ((...args: any[]) => any)[]) => (...args: any[]) => any;
    export const executeInTheNextEventLoopTick: (fn: () => void) => void;
    export function createDelegatedEventHandler<TEvent>(fn: (event: TEvent) => void, onEvent?: (event: TEvent) => void): (event: TEvent) => void;
    export const doNothing: () => void;
}
declare module "@mui/lab/internal/pickers/Picker/Picker" {
    import * as React from 'react';
    import { WrapperVariant } from "@mui/lab/internal/pickers/wrappers/WrapperVariantContext";
    import { DateInputPropsLike } from "@mui/lab/internal/pickers/wrappers/WrapperProps";
    import { PickerSelectionState } from "@mui/lab/internal/pickers/hooks/usePickerState";
    import { BasePickerProps, CalendarAndClockProps } from "@mui/lab/internal/pickers/typings/BasePicker";
    import { AllAvailableViews } from "@mui/lab/internal/pickers/typings/Views";
    export interface ExportedPickerProps<View extends AllAvailableViews> extends Omit<BasePickerProps<unknown, unknown>, 'value' | 'onChange'>, Omit<CalendarAndClockProps<unknown>, 'onViewChange' | 'openTo' | 'view'> {
        dateRangeIcon?: React.ReactNode;
        /**
         * Callback fired on view change.
         */
        onViewChange?: (view: View) => void;
        /**
         * First view to show.
         */
        openTo: View;
        timeIcon?: React.ReactNode;
        /**
         * Array of views to show.
         */
        views: readonly View[];
    }
    export interface PickerProps<View extends AllAvailableViews> extends ExportedPickerProps<View> {
        autoFocus?: boolean;
        date: any;
        DateInputProps: DateInputPropsLike;
        isMobileKeyboardViewOpen: boolean;
        onDateChange: (date: any, currentWrapperVariant: WrapperVariant, isFinish?: PickerSelectionState) => void;
        toggleMobileKeyboardView: () => void;
    }
    export const MobileKeyboardInputView: import("@emotion/styled/index").StyledComponent<import("@mui/system/index").MUIStyledCommonProps<import("@mui/material/styles/index").Theme>, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
    function Picker<View extends AllAvailableViews>(props: PickerProps<View>): JSX.Element;
    export default Picker;
}
declare module "@mui/lab/internal/pickers/Picker/PickerView" {
    const PickerView: import("@emotion/styled/index").StyledComponent<import("@mui/system/index").MUIStyledCommonProps<import("@mui/material/styles/index").Theme>, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
    export default PickerView;
}
declare module "@mui/lab/internal/pickers/constants/dimensions" {
    export const DAY_SIZE = 36;
    export const DAY_MARGIN = 2;
    export const DIALOG_WIDTH = 320;
    export const VIEW_HEIGHT = 358;
}
declare module "@mui/lab/internal/pickers/hooks/useIsLandscape" {
    import { AllAvailableViews } from "@mui/lab/internal/pickers/typings/Views";
    type Orientation = 'portrait' | 'landscape';
    export function useIsLandscape(views: readonly AllAvailableViews[], customOrientation: Orientation | undefined): boolean;
    export default useIsLandscape;
}
declare module "@mui/lab/internal/pickers/hooks/useMaskedInput" {
    import * as React from 'react';
    import { DateInputProps, MuiTextFieldProps } from "@mui/lab/internal/pickers/PureDateInput";
    type MaskedInputProps = Omit<DateInputProps, 'adornmentPosition' | 'disableOpenPicker' | 'getOpenDialogAriaText' | 'InputAdornmentProps' | 'InputProps' | 'open' | 'openPicker' | 'OpenPickerButtonProps' | 'renderInput'> & {
        inputProps?: Partial<React.HTMLProps<HTMLInputElement>>;
    };
    export function useMaskedInput({ acceptRegex, disabled, disableMaskedInput, ignoreInvalidInputs, inputFormat, inputProps, label, mask, onChange, rawValue, readOnly, rifmFormatter, TextFieldProps, validationError, }: MaskedInputProps): MuiTextFieldProps;
    export default useMaskedInput;
}
declare module "@mui/lab/internal/pickers/hooks/useOpenState" {
    export interface OpenStateProps {
        open?: boolean;
        onOpen?: () => void;
        onClose?: () => void;
    }
    export function useOpenState({ open, onOpen, onClose }: OpenStateProps): {
        isOpen: boolean;
        setIsOpen: (newIsOpen: boolean) => void;
    };
    export default useOpenState;
}
declare module "@mui/lab/internal/pickers/wrappers/DesktopTooltipWrapper" {
    import { InternalDesktopWrapperProps } from "@mui/lab/internal/pickers/wrappers/DesktopWrapper";
    function DesktopTooltipWrapper(props: InternalDesktopWrapperProps): JSX.Element;
    export default DesktopTooltipWrapper;
}
declare module "@mui/lab/internal/svg-icons/ArrowDropDown" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/ArrowLeft" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/ArrowRight" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/Calendar" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/Clock" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/DateRange" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/Pen" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/lab/internal/svg-icons/Time" {
    const _default: import("@mui/material/OverridableComponent").OverridableComponent<import("@mui/material/index").SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    /**
     * @ignore - internal component.
     */
    export default _default;
}
declare module "@mui/material/ButtonGroup/ButtonGroupContext" {
    import * as React from 'react';
    import type { ButtonGroupProps } from "@mui/material/ButtonGroup/ButtonGroup";
    interface IButtonGroupContext {
        className?: string;
        color?: ButtonGroupProps['color'];
        disabled?: boolean;
        disableElevation?: boolean;
        disableFocusRipple?: boolean;
        disableRipple?: boolean;
        fullWidth?: boolean;
        size?: ButtonGroupProps['size'];
        variant?: ButtonGroupProps['variant'];
    }
    /**
     * @ignore - internal component.
     */
    const ButtonGroupContext: React.Context<IButtonGroupContext>;
    export default ButtonGroupContext;
}
declare module "@mui/material/Dialog/DialogContext" {
    interface DialogContextValue {
        titleId?: string;
    }
    const DialogContext: import("react").Context<DialogContextValue>;
    export default DialogContext;
}
declare module "@mui/material/Hidden/HiddenCss" {
    import * as React from 'react';
    import { Breakpoint } from "@mui/system/index";
    export interface HiddenCssProps {
        lgDown?: boolean;
        lgUp?: boolean;
        mdDown?: boolean;
        mdUp?: boolean;
        only?: Breakpoint | Breakpoint[];
        smDown?: boolean;
        smUp?: boolean;
        xlDown?: boolean;
        xlUp?: boolean;
        xsDown?: boolean;
        xsUp?: boolean;
    }
    const HiddenCss: React.JSXElementConstructor<HiddenCssProps>;
    export default HiddenCss;
}
declare module "@mui/material/Hidden/HiddenJs" {
    import * as React from 'react';
    import { Breakpoint } from "@mui/system/index";
    export interface HiddenJsProps {
        initialWidth?: Breakpoint;
        lgDown?: boolean;
        lgUp?: boolean;
        mdDown?: boolean;
        mdUp?: boolean;
        only?: Breakpoint | Breakpoint[];
        smDown?: boolean;
        smUp?: boolean;
        xlDown?: boolean;
        xlUp?: boolean;
        xsDown?: boolean;
        xsUp?: boolean;
    }
    const HiddenJs: React.JSXElementConstructor<HiddenJsProps>;
    export default HiddenJs;
}
declare module "@mui/material/Hidden/withWidth" {
    import { Breakpoint } from "@mui/system/index";
    import { PropInjector } from "@mui/types/index";
    export interface WithWidthOptions {
        withTheme?: boolean;
        noSSR?: boolean;
        initialWidth?: Breakpoint;
        resizeInterval?: number;
    }
    export interface WithWidth {
        width: Breakpoint;
    }
    export interface WithWidthProps extends Partial<WithWidth> {
        innerRef?: React.Ref<any>;
    }
    export function isWidthDown(breakpoint: Breakpoint, screenWidth: Breakpoint, inclusive?: boolean): boolean;
    export function isWidthUp(breakpoint: Breakpoint, screenWidth: Breakpoint, inclusive?: boolean): boolean;
    export type withWidth = (options?: WithWidthOptions) => PropInjector<WithWidth, WithWidthProps>;
    export default withWidth;
}
declare module "@mui/material/List/ListContext" {
    import * as React from 'react';
    const ListContext: React.Context<{
        dense?: boolean;
    }>;
    export default ListContext;
}
declare module "@mui/material/OutlinedInput/NotchedOutline" {
    import * as React from 'react';
    import { InternalStandardProps as StandardProps } from "@mui/material/index";
    export interface NotchedOutlineProps extends StandardProps<React.FieldsetHTMLAttributes<HTMLFieldSetElement>> {
        disabled?: boolean;
        error?: boolean;
        focused?: boolean;
        label?: React.ReactNode;
        notched: boolean;
    }
    export type NotchedOutlineClassKey = keyof NonNullable<NotchedOutlineProps['classes']>;
    const NotchedOutline: React.JSXElementConstructor<NotchedOutlineProps>;
    export default NotchedOutline;
}
declare module "@mui/material/StyledEngineProvider/index" {
    /**
     * @deprecated will be removed in v5.beta, please use StyledEngineProvider from @mui/material/styles instead
     */
    export { StyledEngineProvider as default } from "@mui/system/index";
}
declare module "@mui/material/Table/TableContext" {
    import * as React from 'react';
    interface TableContextProps {
        padding: 'default' | 'checkbox' | 'none';
        size: 'default' | 'checkbox' | 'none';
    }
    const TableContext: React.Context<TableContextProps | undefined>;
    export default TableContext;
}
declare module "@mui/material/Table/Tablelvl2Context" {
    import * as React from 'react';
    interface Tablelvl2ContextProps {
        variant: 'head' | 'body' | 'footer';
    }
    const Tablelvl2Context: React.Context<Tablelvl2ContextProps | undefined>;
    export default Tablelvl2Context;
}
declare module "@mui/material/locale/index" {
    import { ComponentsPropsList } from "@mui/material/styles/props";
    export interface Localization {
        components?: {
            MuiAlert?: {
                defaultProps: Pick<ComponentsPropsList['MuiAlert'], 'closeText'>;
            };
            MuiBreadcrumbs?: {
                defaultProps: Pick<ComponentsPropsList['MuiBreadcrumbs'], 'expandText'>;
            };
            MuiTablePagination?: {
                defaultProps: Pick<ComponentsPropsList['MuiTablePagination'], 'labelRowsPerPage' | 'labelDisplayedRows' | 'getItemAriaLabel'>;
            };
            MuiRating?: {
                defaultProps: Pick<ComponentsPropsList['MuiRating'], 'emptyLabelText' | 'getLabelText'>;
            };
            MuiAutocomplete?: {
                defaultProps: Pick<ComponentsPropsList['MuiAutocomplete'], 'clearText' | 'closeText' | 'loadingText' | 'noOptionsText' | 'openText'>;
            };
            MuiPagination?: {
                defaultProps: Pick<ComponentsPropsList['MuiPagination'], 'aria-label' | 'getItemAriaLabel'>;
            };
        };
    }
    export const amET: Localization;
    export const arEG: Localization;
    export const arSD: Localization;
    export const azAZ: Localization;
    export const bnBD: Localization;
    export const bgBG: Localization;
    export const caES: Localization;
    export const csCZ: Localization;
    export const daDK: Localization;
    export const deDE: Localization;
    export const elGR: Localization;
    export const enUS: Localization;
    export const esES: Localization;
    export const etEE: Localization;
    export const faIR: Localization;
    export const fiFI: Localization;
    export const frFR: Localization;
    export const heIL: Localization;
    export const hiIN: Localization;
    export const huHU: Localization;
    export const hyAM: Localization;
    export const idID: Localization;
    export const isIS: Localization;
    export const itIT: Localization;
    export const jaJP: Localization;
    export const khKH: Localization;
    export const koKR: Localization;
    export const kzKZ: Localization;
    export const nbNO: Localization;
    export const nlNL: Localization;
    export const plPL: Localization;
    export const ptBR: Localization;
    export const ptPT: Localization;
    export const roRO: Localization;
    export const ruRU: Localization;
    export const siLK: Localization;
    export const skSK: Localization;
    export const svSE: Localization;
    export const thTH: Localization;
    export const trTR: Localization;
    export const ukUA: Localization;
    export const viVN: Localization;
    export const zhCN: Localization;
    export const zhHK: Localization;
    export const zhTW: Localization;
}
declare module "@mui/material/transitions/utils" {
    import * as React from 'react';
    export const reflow: (node: Element) => number;
    interface ComponentProps {
        easing: string | {
            enter?: string;
            exit?: string;
        } | undefined;
        style: React.CSSProperties | undefined;
        timeout: number | {
            enter?: number;
            exit?: number;
        };
    }
    interface Options {
        mode: 'enter' | 'exit';
    }
    interface TransitionProps {
        duration: string | number;
        easing: string | undefined;
        delay: string | undefined;
    }
    export function getTransitionProps(props: ComponentProps, options: Options): TransitionProps;
    export {};
}
declare module "@mui/material/useMediaQuery/useMediaQueryTheme" {
    import useMediaQuery from "@mui/material/useMediaQuery/useMediaQuery";
    export default useMediaQuery;
}
declare module "@mui/material/useTouchRipple/useTouchRipple" {
    import * as React from 'react';
    import { TouchRippleActions } from "@mui/material/ButtonBase/TouchRipple";
    interface UseTouchRippleProps {
        disabled: boolean;
        disableFocusRipple?: boolean;
        disableRipple?: boolean;
        disableTouchRipple?: boolean;
        focusVisible: boolean;
        rippleRef: React.RefObject<TouchRippleActions>;
    }
    interface RippleEventHandlers {
        onBlur: React.FocusEventHandler;
        onContextMenu: React.MouseEventHandler;
        onDragLeave: React.DragEventHandler;
        onKeyDown: React.KeyboardEventHandler;
        onKeyUp: React.KeyboardEventHandler;
        onMouseDown: React.MouseEventHandler;
        onMouseLeave: React.MouseEventHandler;
        onMouseUp: React.MouseEventHandler;
        onTouchEnd: React.TouchEventHandler;
        onTouchMove: React.TouchEventHandler;
        onTouchStart: React.TouchEventHandler;
    }
    const useTouchRipple: (props: UseTouchRippleProps) => {
        enableTouchRipple: boolean;
        getRippleHandlers: (otherEvents?: Partial<RippleEventHandlers>) => RippleEventHandlers;
    };
    export default useTouchRipple;
}
declare module "@mui/material/useTouchRipple/index" {
    export { default } from "@mui/material/useTouchRipple/useTouchRipple";
}
declare module "@mui/material/utils/getScrollbarSize" {
    import { unstable_getScrollbarSize as getScrollbarSize } from "@mui/utils/index";
    export default getScrollbarSize;
}
declare module "@mui/styles/createGenerateClassName/createGenerateClassName" {
    import { GenerateId } from 'jss';
    export interface GenerateClassNameOptions {
        disableGlobal?: boolean;
        productionPrefix?: string;
        seed?: string;
    }
    export type createGenerateClassName = (options?: GenerateClassNameOptions) => GenerateId;
    export default createGenerateClassName;
}
declare module "@mui/styles/createGenerateClassName/index" {
    export { default } from "@mui/styles/createGenerateClassName/createGenerateClassName";
    export * from "@mui/styles/createGenerateClassName/createGenerateClassName";
}
declare module "@mui/styles/defaultTheme/index" {
    export { DefaultTheme } from "@mui/private-theming/index";
}
declare module "@mui/styles/withStyles/withStyles" {
    import { PropInjector } from "@mui/types/index";
    import * as CSS from 'csstype';
    import * as JSS from 'jss';
    import { DefaultTheme } from "@mui/styles/defaultTheme/index";
    export {};
    type JSSNormalCssProperties = CSS.Properties<number | string>;
    type JSSFontface = CSS.AtRule.FontFace & {
        fallbacks?: CSS.AtRule.FontFace[];
    };
    export type PropsFunc<Props extends object, T> = (props: Props) => T;
    /**
     * Allows the user to augment the properties available
     */
    export interface BaseCSSProperties extends JSSNormalCssProperties {
        '@font-face'?: JSSFontface | JSSFontface[];
    }
    export interface CSSProperties extends BaseCSSProperties {
        [k: string]: unknown | CSSProperties;
    }
    export type BaseCreateCSSProperties<Props extends object = {}> = {
        [P in keyof BaseCSSProperties]: BaseCSSProperties[P] | PropsFunc<Props, BaseCSSProperties[P]>;
    };
    export interface CreateCSSProperties<Props extends object = {}> extends BaseCreateCSSProperties<Props> {
        [k: string]: BaseCreateCSSProperties<Props>[keyof BaseCreateCSSProperties<Props>] | CreateCSSProperties<Props>;
    }
    /**
     * This is basically the API of JSS. It defines a Map<string, CSS>,
     * where
     * - the `keys` are the class (names) that will be created
     * - the `values` are objects that represent CSS rules (`React.CSSProperties`).
     *
     * if only `CSSProperties` are matched `Props` are inferred to `any`
     */
    export type StyleRules<Props extends object = {}, ClassKey extends string = string> = Record<ClassKey, CSSProperties | CreateCSSProperties<Props> | PropsFunc<Props, CreateCSSProperties<Props>>>;
    /**
     * @internal
     */
    export type StyleRulesCallback<Theme, Props extends object, ClassKey extends string = string> = (theme: Theme) => StyleRules<Props, ClassKey>;
    export type Styles<Theme, Props extends object, ClassKey extends string = string> = StyleRules<Props, ClassKey> | StyleRulesCallback<Theme, Props, ClassKey>;
    export interface WithStylesOptions<Theme = DefaultTheme> extends JSS.StyleSheetFactoryOptions {
        defaultTheme?: Theme;
        flip?: boolean;
        withTheme?: boolean;
        name?: string;
    }
    export type ClassNameMap<ClassKey extends string = string> = Record<ClassKey, string>;
    /**
     * @internal
     */
    export type ClassKeyInferable<Theme, Props extends object> = string | Styles<Theme, Props>;
    export type ClassKeyOfStyles<StylesOrClassKey> = StylesOrClassKey extends string ? StylesOrClassKey : StylesOrClassKey extends StyleRulesCallback<any, any, infer ClassKey> ? ClassKey : StylesOrClassKey extends StyleRules<any, infer ClassKey> ? ClassKey : never;
    /**
     * infers the type of the props used in the styles
     */
    export type PropsOfStyles<StylesType> = StylesType extends Styles<any, infer Props> ? Props : {};
    /**
     * infers the type of the theme used in the styles
     */
    export type ThemeOfStyles<StylesType> = StylesType extends Styles<infer Theme, any> ? Theme : {};
    export type WithStyles<StylesType extends ClassKeyInferable<any, any>, IncludeTheme extends boolean | undefined = false> = (IncludeTheme extends true ? {
        theme: ThemeOfStyles<StylesType>;
    } : {}) & {
        classes: ClassNameMap<ClassKeyOfStyles<StylesType>>;
    } & PropsOfStyles<StylesType>;
    export interface StyledComponentProps<ClassKey extends string = string> {
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<ClassNameMap<ClassKey>>;
    }
    export type withStyles = <StylesType extends Styles<any, any>, Options extends WithStylesOptions<ThemeOfStyles<StylesType>> = {}>(style: StylesType, options?: Options) => PropInjector<WithStyles<StylesType, Options['withTheme']>, StyledComponentProps<ClassKeyOfStyles<StylesType>> & PropsOfStyles<StylesType>>;
    export default withStyles;
}
declare module "@mui/styles/withStyles/index" {
    export { default } from "@mui/styles/withStyles/withStyles";
    export * from "@mui/styles/withStyles/withStyles";
}
declare module "@mui/styles/createStyles/createStyles" {
    import { StyleRules } from "@mui/styles/withStyles/index";
    /**
     * This function doesn't really "do anything" at runtime, it's just the identity
     * function. Its only purpose is to defeat TypeScript's type widening when providing
     * style rules to `withStyles` which are a function of the `Theme`.
     * @param styles a set of style mappings
     * @returns the same styles that were passed in
     */
    export type createStyles = <ClassKey extends string, Props extends {}>(styles: StyleRules<Props, ClassKey>) => StyleRules<Props, ClassKey>;
    export default createStyles;
}
declare module "@mui/styles/createStyles/index" {
    export { default } from "@mui/styles/createStyles/createStyles";
    export * from "@mui/styles/createStyles/createStyles";
}
declare module "@mui/styles/getThemeProps/getThemeProps" {
    export {};
    interface ThemeWithProps<Components> {
        components?: {
            [K in keyof Components]: {
                defaultProps?: Partial<Components[K]>;
            };
        };
    }
    type ThemedProps<Theme, Name extends keyof any> = Theme extends {
        components: Record<Name, {
            defaultProps: infer Props;
        }>;
    } ? Props : {};
    export type getThemeProps = <Theme extends ThemeWithProps<any>, Props, Name extends keyof any>(params: {
        props: Props;
        name: Name;
        theme?: Theme;
    }) => Props & ThemedProps<Theme, Name>;
    export default getThemeProps;
}
declare module "@mui/styles/getThemeProps/index" {
    export { default } from "@mui/styles/getThemeProps/getThemeProps";
    export * from "@mui/styles/getThemeProps/getThemeProps";
}
declare module "@mui/styles/jssPreset/jssPreset" {
    import { JssOptions } from 'jss';
    export type jssPreset = () => JssOptions;
    export default jssPreset;
}
declare module "@mui/styles/jssPreset/index" {
    export { default } from "@mui/styles/jssPreset/jssPreset";
    export * from "@mui/styles/jssPreset/jssPreset";
}
declare module "@mui/styles/makeStyles/makeStyles" {
    import { ClassNameMap, Styles, WithStylesOptions } from "@mui/styles/withStyles/index";
    import { DefaultTheme } from "@mui/styles/defaultTheme/index";
    export type makeStyles = <Theme = DefaultTheme, Props extends object = {}, ClassKey extends string = string>(styles: Styles<Theme, Props, ClassKey>, options?: Omit<WithStylesOptions<Theme>, 'withTheme'>) => keyof Props extends never ? (props?: any) => ClassNameMap<ClassKey> : (props: Props) => ClassNameMap<ClassKey>;
    export default makeStyles;
}
declare module "@mui/styles/makeStyles/index" {
    export { default } from "@mui/styles/makeStyles/makeStyles";
    export * from "@mui/styles/makeStyles/makeStyles";
}
declare module "@mui/styles/mergeClasses/mergeClasses" {
    import * as React from 'react';
    export interface Classes {
        [k: string]: string | undefined | null;
    }
    export interface MergeClassesOption {
        baseClasses: Classes;
        newClasses?: Classes;
        Component?: React.ElementType | null;
    }
    export type mergeClasses = (options?: MergeClassesOption) => Classes;
    export default mergeClasses;
}
declare module "@mui/styles/mergeClasses/index" {
    export { default } from "@mui/styles/mergeClasses/mergeClasses";
}
declare module "@mui/styles/StylesProvider/StylesProvider" {
    import React from 'react';
    import { GenerateId, Jss } from 'jss';
    export interface StylesOptions {
        disableGeneration?: boolean;
        generateClassName?: GenerateId;
        injectFirst?: boolean;
        jss?: Jss;
        sheetsCache?: {};
        sheetsManager?: {};
        sheetsRegistry?: {};
    }
    export const StylesContext: React.Context<StylesOptions>;
    export interface StylesProviderProps extends StylesOptions {
        children?: React.ReactNode;
    }
    const StylesProvider: React.JSXElementConstructor<StylesProviderProps>;
    export default StylesProvider;
}
declare module "@mui/styles/StylesProvider/index" {
    export { default } from "@mui/styles/StylesProvider/StylesProvider";
    export * from "@mui/styles/StylesProvider/StylesProvider";
}
declare module "@mui/styles/ServerStyleSheets/ServerStyleSheets" {
    import * as React from 'react';
    import { StylesProviderProps } from "@mui/styles/StylesProvider/index";
    class ServerStyleSheets {
        constructor(options?: object);
        collect(children: React.ReactNode, options?: object): React.ReactElement<StylesProviderProps>;
        toString(): string;
        getStyleElement(props?: object): React.ReactElement;
    }
    export default ServerStyleSheets;
}
declare module "@mui/styles/ServerStyleSheets/index" {
    export { default } from "@mui/styles/ServerStyleSheets/ServerStyleSheets";
    export * from "@mui/styles/ServerStyleSheets/ServerStyleSheets";
}
declare module "@mui/styles/styled/styled" {
    import { DistributiveOmit, Overwrite } from "@mui/types/index";
    import { CreateCSSProperties, StyledComponentProps, WithStylesOptions } from "@mui/styles/withStyles/index";
    import * as React from 'react';
    import { DefaultTheme } from "@mui/styles/defaultTheme/index";
    export type StyledComponent<P extends {}> = (props: P) => React.ReactElement<P, any> | null;
    /**
     * @internal
     */
    export type ComponentCreator<Component extends React.ElementType> = <Theme = DefaultTheme, Props extends {} = React.ComponentPropsWithoutRef<Component>>(styles: CreateCSSProperties<Props> | ((props: {
        theme: Theme;
    } & Props) => CreateCSSProperties<Props>), options?: WithStylesOptions<Theme>) => StyledComponent<DistributiveOmit<JSX.LibraryManagedAttributes<Component, React.ComponentProps<Component>>, 'classes' | 'className'> & StyledComponentProps<'root'> & Overwrite<Props, {
        className?: string;
        theme?: Theme;
    }>>;
    export interface StyledProps {
        className: string;
    }
    export type styled = <Component extends React.ElementType>(Component: Component) => ComponentCreator<Component>;
    export default styled;
}
declare module "@mui/styles/styled/index" {
    export { default } from "@mui/styles/styled/styled";
    export * from "@mui/styles/styled/styled";
}
declare module "@mui/styles/ThemeProvider/index" {
    export { default } from "@mui/private-theming/ThemeProvider/index";
    export * from "@mui/private-theming/ThemeProvider/index";
}
declare module "@mui/styles/useTheme/index" {
    export { default } from "@mui/private-theming/useTheme/index";
    export * from "@mui/private-theming/useTheme/index";
}
declare module "@mui/styles/useThemeVariants/useThemeVariants" {
    export type useThemeVariants = (props: object, name: string) => string;
    export default useThemeVariants;
}
declare module "@mui/styles/useThemeVariants/index" {
    export { default } from "@mui/styles/useThemeVariants/useThemeVariants";
    export * from "@mui/styles/useThemeVariants/useThemeVariants";
}
declare module "@mui/styles/propsToClassKey/propsToClassKey" {
    export type propsToClassKey = (props: object) => string;
    export default propsToClassKey;
}
declare module "@mui/styles/propsToClassKey/index" {
    export { default } from "@mui/styles/propsToClassKey/propsToClassKey";
    export * from "@mui/styles/propsToClassKey/propsToClassKey";
}
declare module "@mui/styles/withTheme/withTheme" {
    import * as React from 'react';
    import { ConsistentWith, DistributiveOmit, PropInjector } from "@mui/types/index";
    import { DefaultTheme } from "@mui/styles/defaultTheme/index";
    export interface WithThemeCreatorOption<Theme = DefaultTheme> {
        defaultTheme?: Theme;
    }
    export interface WithTheme<Theme = DefaultTheme> {
        theme: Theme;
    }
    export interface ThemedComponentProps extends Partial<WithTheme> {
        ref?: React.Ref<unknown>;
    }
    export function withThemeCreator<Theme = DefaultTheme>(option?: WithThemeCreatorOption<Theme>): PropInjector<WithTheme<Theme>, ThemedComponentProps>;
    export type withTheme = <Theme, C extends React.JSXElementConstructor<ConsistentWith<React.ComponentProps<C>, WithTheme<Theme>>>>(component: C) => React.JSXElementConstructor<DistributiveOmit<JSX.LibraryManagedAttributes<C, React.ComponentProps<C>>, keyof WithTheme<Theme>> & Partial<WithTheme<Theme>> & ThemedComponentProps>;
    export default withTheme;
}
declare module "@mui/styles/withTheme/index" {
    export { default } from "@mui/styles/withTheme/withTheme";
    export * from "@mui/styles/withTheme/withTheme";
}
declare module "@mui/styles/index" {
    export { default as createGenerateClassName } from "@mui/styles/createGenerateClassName/index";
    export * from "@mui/styles/createGenerateClassName/index";
    export { default as createStyles } from "@mui/styles/createStyles/index";
    export * from "@mui/styles/createStyles/index";
    export { default as getThemeProps } from "@mui/styles/getThemeProps/index";
    export * from "@mui/styles/getThemeProps/index";
    export { default as jssPreset } from "@mui/styles/jssPreset/index";
    export * from "@mui/styles/jssPreset/index";
    export { default as makeStyles } from "@mui/styles/makeStyles/index";
    export * from "@mui/styles/makeStyles/index";
    export { default as mergeClasses } from "@mui/styles/mergeClasses/index";
    export * from "@mui/styles/mergeClasses/index";
    export { default as ServerStyleSheets } from "@mui/styles/ServerStyleSheets/index";
    export * from "@mui/styles/ServerStyleSheets/index";
    export { default as styled } from "@mui/styles/styled/index";
    export * from "@mui/styles/styled/index";
    export { default as StylesProvider } from "@mui/styles/StylesProvider/index";
    export * from "@mui/styles/StylesProvider/index";
    export { default as ThemeProvider } from "@mui/styles/ThemeProvider/index";
    export * from "@mui/styles/ThemeProvider/index";
    export { default as useTheme } from "@mui/styles/useTheme/index";
    export * from "@mui/styles/useTheme/index";
    export { default as useThemeVariants } from "@mui/styles/useThemeVariants/index";
    export * from "@mui/styles/useThemeVariants/index";
    export { default as propsToClassKey } from "@mui/styles/propsToClassKey/index";
    export * from "@mui/styles/propsToClassKey/index";
    export { default as withStyles } from "@mui/styles/withStyles/index";
    export * from "@mui/styles/withStyles/index";
    export { default as withTheme } from "@mui/styles/withTheme/index";
    export * from "@mui/styles/withTheme/index";
    export { DefaultTheme } from "@mui/styles/defaultTheme/index";
}
declare module "@mui/styles/getStylesCreator/getStylesCreator" {
    import { StyleRules, Styles } from "@mui/styles/withStyles/index";
    export interface StylesCreator<Theme, Props extends object, ClassKey extends string = string> {
        create: (theme: Theme, name?: string) => StyleRules<Props, ClassKey>;
        options: {};
        themingEnabled: boolean;
    }
    export type getStylesCreator = <S extends Styles<any, any>>(style: S) => StylesCreator<any, any>;
    export default getStylesCreator;
}
declare module "@mui/styles/getStylesCreator/index" {
    export { default } from "@mui/styles/getStylesCreator/getStylesCreator";
    export * from "@mui/styles/getStylesCreator/getStylesCreator";
}
declare module "@mui/system/CSSProperties" {
    import * as CSS from 'csstype';
    /**
     * All non-vendor-prefixed CSS properties. (Also allows `number` in order to support CSS-in-JS libs,
     * since they are converted to `px`.)
     */
    export interface CSSProperties extends CSS.StandardProperties<number | string>, CSS.SvgProperties<number | string> {
    }
}
declare module "@mui/system/merge" {
    export type merge = (acc: object, item: object) => object;
    export default merge;
}
declare module "@mui/system/propsToClassKey" {
    export type propsToClassKey = (props: object) => string;
    export default propsToClassKey;
}
declare module "@mui/system/cssVars/cssVarsParser" {
    type NestedRecord<V = any> = {
        [k: string | number]: NestedRecord<V> | V;
    };
    /**
     * This function create an object from keys, value and then assign to target
     *
     * @param {Object} obj : the target object to be assigned
     * @param {string[]} keys
     * @param {string | number} value
     *
     * @example
     * const source = {}
     * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')
     * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }
     *
     * @example
     * const source = { palette: { primary: 'var(--palette-primary)' } }
     * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')
     * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }
     */
    export const assignNestedKeys: <Object_1 = NestedRecord<any>, Value = any>(obj: Object_1, keys: Array<string>, value: Value) => void;
    /**
     *
     * @param {Object} obj : source object
     * @param {Function} callback : a function that will be called when
     *                   - the deepest key in source object is reached
     *                   - the value of the deepest key is NOT `undefined` | `null`
     *
     * @example
     * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)
     * // ['palette', 'primary', 'main'] '#000000'
     */
    export const walkObjectDeep: <Value, T = Record<string, any>>(obj: T, callback: (keys: Array<string>, value: Value, scope: Record<string, string | number>) => void, shouldSkipPaths?: ((keys: Array<string>) => boolean) | undefined) => void;
    /**
     * a function that parse theme and return { css, vars }
     *
     * @param {Object} theme
     * @param {{
     *  prefix?: string,
     *  basePrefix?: string,
     *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean
     * }} options.
     *  `basePrefix`: defined by design system.
     *  `prefix`: defined by application
     *
     *   the CSS variable value will be adjusted based on the provided `basePrefix` & `prefix` which can be found in `parsedTheme`.
     *
     * @returns {{ css: Object, vars: Object, parsedTheme: typeof theme }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme), and `parsedTheme` is the cloned version of theme.
     *
     * @example
     * const { css, vars, parsedTheme } = parser({
     *   fontSize: 12,
     *   lineHeight: 1.2,
     *   palette: { primary: { 500: 'var(--color)' } }
     * }, { prefix: 'foo' })
     *
     * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--foo-color)' }
     * console.log(vars) // { fontSize: '--foo-fontSize', lineHeight: '--foo-lineHeight', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }
     * console.log(parsedTheme) // { fontSize: 12, lineHeight: 1.2, palette: { primary: { 500: 'var(--foo-color)' } } }
     */
    export type cssVarsParser = <T extends Record<string, any>>(theme: T, options?: {
        prefix?: string;
        basePrefix?: string;
        shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean;
    }) => {
        css: NestedRecord<string>;
        vars: NestedRecord<string>;
        parsedTheme: T;
    };
    export default cssVarsParser;
    export {};
}
declare module "@mui/system/cssVars/getInitColorSchemeScript" {
    export const DEFAULT_MODE_STORAGE_KEY = "mui-mode";
    export const DEFAULT_COLOR_SCHEME_STORAGE_KEY = "mui-color-scheme";
    export const DEFAULT_ATTRIBUTE = "data-mui-color-scheme";
    export type getInitColorSchemeScript = (options?: {
        enableSystem?: boolean;
        defaultLightColorScheme?: string;
        defaultDarkColorScheme?: string;
        modeStorageKey?: string;
        colorSchemeStorageKey?: string;
        attribute?: string;
    }) => JSX.Element;
    export default getInitColorSchemeScript;
}
declare module "@mui/x-data-grid/index" {
    import React from 'react';
    import { Theme, ComponentsPropsList, SxProps as SxProps$1 } from "@mui/material/styles/index";
    import { AutocompleteProps } from "@mui/material/Autocomplete/index";
    import { IconButtonProps } from "@mui/material/IconButton/index";
    import { MenuItemProps } from "@mui/material/MenuItem/index";
    import { InputBaseProps } from "@mui/material/InputBase/index";
    import { SelectProps } from "@mui/material/Select/index";
    import { ClickAwayListenerProps } from "@mui/material/ClickAwayListener/index";
    import { GrowProps } from "@mui/material/Grow/index";
    import { PopperProps } from "@mui/material/Popper/index";
    import { SxProps, MUIStyledCommonProps } from "@mui/system/index";
    import * as _mui_material_OverridableComponent from "@mui/material/OverridableComponent";
    import { CommonProps } from "@mui/material/OverridableComponent";
    import * as _mui_material from "@mui/material/index";
    import { InternalStandardProps } from "@mui/material/index";
    import { TextFieldProps } from "@mui/material/TextField/index";
    import { ButtonProps } from "@mui/material/Button/index";
    import { TooltipProps } from "@mui/material/Tooltip/index";
    interface GridBodyProps {
        children?: React.ReactNode;
        VirtualScrollerComponent: React.JSXElementConstructor<React.HTMLAttributes<HTMLDivElement> & {
            ref: React.Ref<HTMLDivElement>;
            disableVirtualization: boolean;
        }>;
        ColumnHeadersComponent: React.JSXElementConstructor<React.HTMLAttributes<HTMLDivElement> & {
            ref: React.Ref<HTMLDivElement>;
            innerRef: React.Ref<HTMLDivElement>;
        }>;
    }
    function GridBody(props: GridBodyProps): JSX.Element;
    namespace GridBody {
        var propTypes: any;
    }
    function GridErrorHandler(props: any): JSX.Element;
    function GridFooterPlaceholder(): JSX.Element | null;
    function GridHeaderPlaceholder(): JSX.Element;
    function GridOverlays(): JSX.Element | null;
    /**
     * Filter item definition interface.
     */
    interface GridFilterItem {
        /**
         * Must be unique.
         * Only useful when the model contains several items.
         */
        id?: number | string;
        /**
         * The column from which we want to filter the rows.
         */
        columnField: string;
        /**
         * The filtering value.
         * The operator filtering function will decide for each row if the row values is correct compared to this value.
         */
        value?: any;
        /**
         * The name of the operator we want to apply.
         */
        operatorValue?: string;
    }
    enum GridLinkOperator {
        And = "and",
        Or = "or"
    }
    interface GridFilterInputValueProps {
        item: GridFilterItem;
        applyValue: (value: GridFilterItem) => void;
        apiRef: any;
        focusElementRef?: React.Ref<any>;
    }
    type GridFilterInputMultipleValueProps = {
        item: GridFilterItem;
        applyValue: (value: GridFilterItem) => void;
        apiRef: any;
        focusElementRef?: React.Ref<any>;
        type?: 'text' | 'number';
    } & Omit<AutocompleteProps<any[], true, false, true>, 'options' | 'renderInput'>;
    function GridFilterInputMultipleValue(props: GridFilterInputMultipleValueProps): JSX.Element;
    namespace GridFilterInputMultipleValue {
        var propTypes: any;
    }
    type GridFilterInputMultipleSingleSelectProps = {
        item: GridFilterItem;
        applyValue: (value: GridFilterItem) => void;
        apiRef: any;
        focusElementRef?: React.Ref<any>;
        type?: 'singleSelect';
    } & Omit<AutocompleteProps<any[], true, false, true>, 'options' | 'renderInput'>;
    function GridFilterInputMultipleSingleSelect(props: GridFilterInputMultipleSingleSelectProps): JSX.Element;
    namespace GridFilterInputMultipleSingleSelect {
        var propTypes: any;
    }
    /**
     * The mode of the cell.
     */
    type GridCellMode = 'edit' | 'view';
    /**
     * The mode of the row.
     */
    type GridRowMode = 'edit' | 'view';
    /**
     * The cell value type.
     */
    type GridCellValue = string | number | boolean | Date | null | undefined | object;
    /**
     * The coordinates of cell represented by their row and column indexes.
     */
    interface GridCellIndexCoordinates {
        colIndex: number;
        rowIndex: number;
    }
    /**
     * The coordinates of column header represented by their row and column indexes.
     */
    interface GridColumnHeaderIndexCoordinates {
        colIndex: number;
    }
    type GridRowsProp = Readonly<GridRowModel[]>;
    /**
     * @deprecated prefer GridRowModel.
     */
    type GridRowData<T = {
        [key: string]: any;
    }> = T;
    /**
     * The key value object representing the data of a row.
     */
    type GridRowModel<T = {
        [key: string]: any;
    }> = T;
    type GridUpdateAction = 'delete';
    interface GridRowModelUpdate extends GridRowModel {
        _action?: GridUpdateAction;
    }
    interface GridRowTreeNodeConfig {
        /**
         * The grid row id.
         */
        id: GridRowId;
        /**
         * The id of the row children.
         * @default []
         */
        children?: GridRowId[];
        /**
         * The row id of the parent (null if this row is a top level row).
         */
        parent: GridRowId | null;
        /**
         * Current expansion status of the row.
         * @default false
         */
        childrenExpanded?: boolean;
        /**
         * 0-based depth of the row in the tree.
         */
        depth: number;
        /**
         * The key used to group the children of this row.
         */
        groupingKey: GridKeyValue;
        /**
         * The field used to group the children of this row.
         * Is `null` if no field has been used to group the children of this row.
         */
        groupingField: string | null;
        /**
         * If `true`, this node has been automatically added to fill a gap in the tree structure.
         * @default false
         */
        isAutoGenerated?: boolean;
    }
    /**
     * The grid rows total height and row possitions.
     */
    interface GridRowsMeta {
        /**
         * The sum of of all grid rows.
         */
        totalHeight: number;
        /**
         * The grid rows possitions.
         */
        positions: number[];
    }
    type GridRowTreeConfig = Record<GridRowId, GridRowTreeNodeConfig>;
    type GridRowsLookup = Record<GridRowId, GridRowModel>;
    /**
     * The type of Id supported by the grid.
     */
    type GridRowId = string | number;
    type GridRowEntry = {
        id: GridRowId;
        model: GridRowModel;
    };
    /**
     * The function to retrieve the id of a [[GridRowModel]].
     */
    type GridRowIdGetter = (row: GridRowModel) => GridRowId;
    /**
     * An helper function to check if the id provided is valid.
     * @param {GridRowId} id Id as [[GridRowId]].
     * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].
     * @param {string} detailErrorMessage A custom error message to display for invalid IDs
     */
    function checkGridRowIdIsValid(id: GridRowId, row: GridRowModel | Partial<GridRowModel>, detailErrorMessage?: string): void;
    interface GridEditCellProps {
        value: GridCellValue;
        isValidating?: boolean;
        [prop: string]: any;
    }
    type GridEditRowProps = {
        [field: string]: GridEditCellProps;
    };
    type GridEditRowsModel = {
        [rowId: string]: GridEditRowProps;
    };
    type GridEditMode = 'cell' | 'row';
    enum GridEditModes {
        Cell = "cell",
        Row = "row"
    }
    enum GridCellModes {
        Edit = "edit",
        View = "view"
    }
    enum GridRowModes {
        Edit = "edit",
        View = "view"
    }
    /**
     * A function used to process cellClassName params.
     */
    type GridCellClassFn = (params: GridCellParams) => string;
    /**
     * The union type representing the [[GridColDef]] cell class type.
     */
    type GridCellClassNamePropType = string | GridCellClassFn;
    /**
     * Object passed as parameter in the column [[GridColDef]] header renderer.
     */
    interface GridColumnHeaderParams {
        /**
         * The column field of the column that triggered the event
         */
        field: string;
        /**
         * The column of the current header component.
         */
        colDef: GridStateColDef;
    }
    /**
     * A function used to process headerClassName params.
     */
    type GridColumnHeaderClassFn = (params: GridColumnHeaderParams) => string;
    /**
     * The union type representing the [[GridColDef]] column header class type.
     */
    type GridColumnHeaderClassNamePropType = string | GridColumnHeaderClassFn;
    interface GridEditCellPropsParams {
        id: GridRowId;
        field: string;
        props: GridEditCellProps;
    }
    interface GridEditCellValueParams {
        id: GridRowId;
        field: string;
        value: GridCellValue;
        debounceMs?: number;
    }
    interface GridCommitCellChangeParams {
        id: GridRowId;
        field: string;
    }
    interface GridCellEditCommitParams {
        id: GridRowId;
        field: string;
        value: GridCellValue;
    }
    type MuiBaseEvent = React.SyntheticEvent<HTMLElement> | DocumentEventMap[keyof DocumentEventMap] | {};
    type MuiEvent<E extends MuiBaseEvent = MuiBaseEvent> = E & {
        defaultMuiPrevented?: boolean;
    };
    /**
     * The shared methods used by the cell and row editing API.
     */
    interface GridEditingSharedApi {
        /**
         * Set the edit rows model of the grid.
         * @param {GridEditRowsModel} model The new edit rows model.
         */
        setEditRowsModel: (model: GridEditRowsModel) => void;
        /**
         * Gets the edit rows model of the grid.
         * @returns {GridEditRowsModel} The edit rows model.
         */
        getEditRowsModel: () => GridEditRowsModel;
        /**
         * Controls if a cell is editable.
         * @param {GridCellParams} params The cell params.
         * @returns {boolean} A boolean value determining if the cell is editable.
         */
        isCellEditable: (params: GridCellParams) => boolean;
        /**
         * Sets the value of the edit cell.
         * Commonly used inside the edit cell component.
         * @param {GridEditCellValueParams} params Contains the id, field and value to set.
         * @param {React.SyntheticEvent} event The event to pass forward.
         * @returns {Promise<boolean> | void} A promise with the validation status if `preventCommitWhileValidating` is `true`. Otherwise, void.
         */
        setEditCellValue: (params: GridEditCellValueParams, event?: MuiBaseEvent) => Promise<boolean> | void;
        /**
         * Immediatelly updates the value of the cell, without waiting for the debounce.
         * @param {GridRowId} id The row id.
         * @param {string} field The field to update. If not passed, updates all fields in the given row id.
         * @ignore - do not document.
         */
        unstable_runPendingEditCellValueChangeDebounce: (id: GridRowId, field?: string) => void;
        /**
         * @ignore - do not document.
         */
        unstable_setEditCellProps: (params: GridEditCellPropsParams) => GridEditCellProps;
        /**
         * @ignore - do not document.
         */
        unstable_parseValue: (id: GridRowId, field: string, value: GridCellValue) => GridCellValue;
    }
    /**
     * The row editing API interface.
     */
    interface GridRowEditingApi extends GridEditingSharedApi {
        /**
         * Sets the mode of a row.
         * @param {GridRowId} id The id of the row.
         * @param {GridRowMode} mode Can be: `"edit"`, `"view"`.
         */
        setRowMode: (id: GridRowId, mode: GridRowMode) => void;
        /**
         * Gets the mode of a row.
         * @param {GridRowId} id The id of the row.
         * @returns {GridRowMode} Returns `"edit"` or `"view"`.
         */
        getRowMode: (id: GridRowId) => GridRowMode;
        /**
         * Updates the row at the given id with the values stored in the edit row model.
         * @param {GridRowId} id The id to commit to.
         * @param {React.SyntheticEvent} event The event to pass forward.
         * @returns {boolean} A boolean indicating if there is an error.
         */
        commitRowChange: (id: GridRowId, event?: MuiBaseEvent) => boolean | Promise<boolean>;
        /**
         * Updates the value of a cell and calls all `preProcessEditCellProps` if necessary.
         * @param {GridCommitCellChangeParams} params Object with the new value and id and field to update.
         * @returns {Promise<boolean>} Resolves with `true` when all values in the row are valid.
         * @ignore - do not document.
         */
        unstable_setRowEditingEditCellValue: (params: GridEditCellValueParams) => Promise<boolean>;
    }
    /**
     * The cell editing API interface.
     */
    interface GridCellEditingApi extends GridEditingSharedApi {
        /**
         * Updates the field at the given id with the value stored in the edit row model.
         * @param {GridCommitCellChangeParams} params The id and field to commit to.
         * @param {React.SyntheticEvent} event The event to pass forward.
         * @returns {boolean} A boolean indicating if there is an error.
         */
        commitCellChange: (params: GridCommitCellChangeParams, event?: MuiBaseEvent) => boolean | Promise<boolean>;
        /**
         * Sets the mode of a cell.
         * @param {GridRowId} id The id of the row.
         * @param {string} field The field to change the mode.
         * @param {GridCellMode} mode Can be: `"edit"`, `"view"`.
         */
        setCellMode: (id: GridRowId, field: string, mode: GridCellMode) => void;
        /**
         * Gets the mode of a cell.
         * @param {GridRowId} id The id of the row.
         * @param {string} field The field to get the mode.
         * @returns {GridCellMode} Returns `"edit"` or `"view"`.
         */
        getCellMode: (id: GridRowId, field: string) => GridCellMode;
        /**
         * Updates the value of a cell and calls `preProcessEditCellProps` if necessary.
         * @param {GridCommitCellChangeParams} params Object with the new value and id and field to update.
         * @returns {Promise<boolean>} Resolves with `true` when the new value is valid.
         * @ignore - do not document.
         */
        unstable_setCellEditingEditCellValue: (params: GridEditCellValueParams) => Promise<boolean>;
    }
    /**
     * The editing API interface that is available in the grid `apiRef`.
     */
    interface GridEditingApi extends GridCellEditingApi, GridRowEditingApi {
    }
    /**
     * The apiRef component prop type.
     */
    type GridApiRef = React.MutableRefObject<GridApi>;
    /**
     * Object passed as parameter in the row callbacks.
     */
    interface GridRowParams<R extends GridRowModel = GridRowModel> {
        /**
         * The grid row id.
         */
        id: GridRowId;
        /**
         * The row model of the row that the current cell belongs to.
         */
        row: R;
        /**
         * All grid columns.
         */
        columns: GridColumns;
        /**
         * Get the cell value of a row and field.
         * @param {GridRowId} id The row id.
         * @param {string} field The field.
         * @returns {GridCellValue} The cell value.
         * @deprecated Use `params.row` to directly access the fields you want instead.
         */
        getValue: (id: GridRowId, field: string) => GridCellValue;
    }
    /**
     * Object passed as parameter in the row getRowHeight callback.
     */
    interface GridRowHeightParams extends GridRowEntry {
        /**
         * The grid current density factor.
         */
        densityFactor: number;
    }
    /**
     * The getRowHeight return value.
     */
    type GridRowHeightReturnValue = number | null | undefined;
    interface GridParamsApi {
        /**
         * Gets the value of a cell at the given `id` and `field`.
         * @param {GridRowId} id The id of the row.
         * @param {string} field The column field.
         * @returns {GridCellValue} The cell value.
         */
        getCellValue: (id: GridRowId, field: string) => GridCellValue;
        /**
         * Gets the underlying DOM element for a cell at the given `id` and `field`.
         * @param {GridRowId} id The id of the row.
         * @param {string} field The column field.
         * @returns {HTMLDivElement | null} The DOM element or `null`.
         */
        getCellElement: (id: GridRowId, field: string) => HTMLDivElement | null;
        /**
         * Gets the [[GridCellParams]] object that is passed as argument in events.
         * @param {GridRowId} id The id of the row.
         * @param {string} field The column field.
         * @returns {GridCellParams} The cell params.
         */
        getCellParams: (id: GridRowId, field: string) => GridCellParams;
        /**
         * Gets the [[GridRowParams]] object that is passed as argument in events.
         * @param {GridRowId} id The id of the row.
         * @param {string} field The column field.
         * @returns {GridRowParams} The row params.
         */
        getRowParams: (id: GridRowId) => GridRowParams;
        /**
         * Gets the underlying DOM element for a row at the given `id`.
         * @param {GridRowId} id The id of the row.
         * @returns {HTMLDivElement | null} The DOM element or `null`.
         */
        getRowElement: (id: GridRowId) => HTMLDivElement | null;
        /**
         * Gets the underlying DOM element for the column header with the given `field`.
         * @param {string} field The column field.
         * @returns {HTMLDivElement | null} The DOM element or `null`.
         */
        getColumnHeaderElement: (field: string) => HTMLDivElement | null;
        /**
         * Gets the [[GridColumnHeaderParams]] object that is passed as argument in events.
         * @param {string} field The column field.
         * @returns {GridColumnHeaderParams} The cell params.
         */
        getColumnHeaderParams: (field: string) => GridColumnHeaderParams;
    }
    /**
     * Additional details passed to the callbacks
     */
    interface GridCallbackDetails {
        /**
         * Provided only if `DataGridPro` is being used.
         */
        api?: GridApi;
    }
    enum GridEvents {
        /**
         * Fired when the grid is resized.
         */
        resize = "resize",
        /**
         * Fired when the grid is resized with a debounced time of 60ms.
         */
        debouncedResize = "debouncedResize",
        /**
         * Fired when the inner size of the viewport changes. Called with an [[ElementSize]] object.
         */
        viewportInnerSizeChange = "viewportInnerSizeChange",
        /**
         * Fired when an exception is thrown in the grid.
         */
        componentError = "componentError",
        /**
         * Fired when the grid is unmounted.
         */
        unmount = "unmount",
        /**
         * Fired when the mode of a cell changes.
         * @ignore - do not document
         */
        cellModeChange = "cellModeChange",
        /**
         * Fired when a cell is clicked.
         */
        cellClick = "cellClick",
        /**
         * Fired when a cell is double-clicked.
         */
        cellDoubleClick = "cellDoubleClick",
        /**
         * Fired when a `mousedown` event happens in a cell..
         */
        cellMouseDown = "cellMouseDown",
        /**
         * Fired when a `mouseup` event happens in a cell..
         */
        cellMouseUp = "cellMouseUp",
        /**
         * Fired when a `keydown` event happens in a cell.
         */
        cellKeyDown = "cellKeyDown",
        /**
         * Fired when a cell gains focus.
         */
        cellFocusIn = "cellFocusIn",
        /**
         * Fired when a cell loses focus.
         */
        cellFocusOut = "cellFocusOut",
        /**
         * Fired when the dragged cell enters a valid drop target. It's mapped to the `dragend` DOM event.
         * @ignore - do not document.
         */
        cellDragEnter = "cellDragEnter",
        /**
         * Fired while an element or text selection is dragged over the cell.
         * It's mapped to the `dragover` DOM event.
         * @ignore - do not document.
         */
        cellDragOver = "cellDragOver",
        /**
         * Fired when the props of the edit cell changes.
         */
        editCellPropsChange = "editCellPropsChange",
        /**
         * Fired when the props of the edit input are committed.
         */
        cellEditCommit = "cellEditCommit",
        /**
         * Fired when the cell turns to edit mode.
         */
        cellEditStart = "cellEditStart",
        /**
         * Fired when the cell turns back to view mode.
         */
        cellEditStop = "cellEditStop",
        /**
         * Fired when the row turns to edit mode.
         */
        rowEditStart = "rowEditStart",
        /**
         * Fired when the row turns back to view mode.
         */
        rowEditStop = "rowEditStop",
        /**
         * Fired when the props of the edit input are committed.
         */
        rowEditCommit = "rowEditCommit",
        /**
         * Fired when a [navigation key](/components/data-grid/accessibility#keyboard-navigation) is pressed in a cell.
         * @ignore - do not document.
         */
        cellNavigationKeyDown = "cellNavigationKeyDown",
        /**
         * Fired when a row is clicked.
         */
        rowClick = "rowClick",
        /**
         * Fired when a row is double-clicked.
         */
        rowDoubleClick = "rowDoubleClick",
        /**
         * Fired when the mouse enters the row. Called with a [[GridRowParams]] object.
         */
        rowMouseEnter = "rowMouseEnter",
        /**
         * Fired when the mouse leaves the row. Called with a [[GridRowParams]] object.
         */
        rowMouseLeave = "rowMouseLeave",
        /**
         * Fired when the row editing model changes.
         */
        editRowsModelChange = "editRowsModelChange",
        /**
         * Fired when a column header loses focus.
         * @ignore - do not document.
         */
        columnHeaderBlur = "columnHeaderBlur",
        /**
         * Fired when a column header gains focus.
         * @ignore - do not document.
         */
        columnHeaderFocus = "columnHeaderFocus",
        /**
         * Fired when a [navigation key](/components/data-grid/accessibility#keyboard-navigation) is pressed in a column header.
         * @ignore - do not document.
         */
        columnHeaderNavigationKeyDown = "columnHeaderNavigationKeyDown",
        /**
         * Fired when a key is pressed in a column header. It's mapped do the `keydown` DOM event.
         */
        columnHeaderKeyDown = "columnHeaderKeyDown",
        /**
         * Fired when a column header is clicked
         */
        columnHeaderClick = "columnHeaderClick",
        /**
         * Fired when a column header is double-clicked.
         */
        columnHeaderDoubleClick = "columnHeaderDoubleClick",
        /**
         * Fired when a `mouseover` event happens in a column header.
         * @ignore - do not document.
         */
        columnHeaderOver = "columnHeaderOver",
        /**
         * Fired when a `mouseout` event happens in a column header.
         * @ignore - do not document.
         */
        columnHeaderOut = "columnHeaderOut",
        /**
         * Fired when a `mouseenter` event happens in a column header.
         * @ignore - do not document.
         */
        columnHeaderEnter = "columnHeaderEnter",
        /**
         * Fired when a `mouseleave` event happens in a column header.
         * @ignore - do not document.*
         */
        columnHeaderLeave = "columnHeaderLeave",
        /**
         * Fired when the user starts dragging a column header. It's mapped to the `dragstart` DOM event.
         * @ignore - do not document.
         */
        columnHeaderDragStart = "columnHeaderDragStart",
        /**
         * Fired while an element or text selection is dragged over the column header.
         * It's mapped to the `dragover` DOM event.
         * @ignore - do not document.
         */
        columnHeaderDragOver = "columnHeaderDragOver",
        /**
         * Fired when the dragged column header enters a valid drop target.
         * It's mapped to the `dragend` DOM event.
         * @ignore - do not document.
         */
        columnHeaderDragEnter = "columnHeaderDragEnter",
        /**
         * Fired when the dragging of a column header ends.
         * @ignore - do not document.
         */
        columnHeaderDragEnd = "columnHeaderDragEnd",
        /**
         * Fired when the selection state of one or multiple rows changes.
         */
        selectionChange = "selectionChange",
        /**
         * Fired when the value of the selection checkbox of the header is changed
         */
        headerSelectionCheckboxChange = "headerSelectionCheckboxChange",
        /**
         * Fired when the value of the selection checkbox of a row is changed
         */
        rowSelectionCheckboxChange = "rowSelectionCheckboxChange",
        /**
         * Fired when the page changes.
         */
        pageChange = "pageChange",
        /**
         * Fired when the page size changes.
         */
        pageSizeChange = "pageSizeChange",
        /**
         * Fired when the row grouping model changes.
         */
        rowGroupingModelChange = "rowGroupingModelChange",
        /**
         * Fired during the scroll of the grid viewport.
         */
        rowsScroll = "rowsScroll",
        /**
         * Fired when scrolling to the bottom of the grid viewport.
         */
        rowsScrollEnd = "rowsScrollEnd",
        /**
         * Fired when a `mousedown` DOM event happens in the column header separator.
         * @ignore - do not document.
         */
        columnSeparatorMouseDown = "columnSeparatorMouseDown",
        /**
         * Fired during the resizing of a column.
         */
        columnResize = "columnResize",
        /**
         * Fired when the width of a column is changed.
         */
        columnWidthChange = "columnWidthChange",
        /**
         * Fired when the user starts resizing a column.
         */
        columnResizeStart = "columnResizeStart",
        /**
         * Fired when the user stops resizing a column.
         */
        columnResizeStop = "columnResizeStop",
        /**
         * Fired when the user ends reordering a column.
         */
        columnOrderChange = "columnOrderChange",
        /**
         * Fired when the rows are updated.
         * @ignore - do not document.
         */
        rowsSet = "rowsSet",
        /**
         * Fired when the expansion of a row is changed. Called with a [[GridRowTreeNodeConfig]] object.
         * @ignore - do not document.
         */
        rowExpansionChange = "rowExpansionChange",
        /**
         * Fired when the visible rows are updated
         * @ignore - do not document.
         */
        visibleRowsSet = "visibleRowsSet",
        /**
         * Fired when the columns state is changed.
         */
        columnsChange = "columnsChange",
        /**
         * Fired when the open detail panels are changed.
         * @ignore - do not document.
         */
        detailPanelsExpandedRowIdsChange = "detailPanelsExpandedRowIdsChange",
        /**
         * Fired when the pinned columns is changed.
         * @ignore - do not document.
         */
        pinnedColumnsChange = "pinnedColumnsChange",
        /**
         * Fired when a pre-processor is registered.
         * @ignore - do not document.
         */
        preProcessorRegister = "preProcessorRegister",
        /**
         * Fired when a pre-processor is unregistered.
         * @ignore - do not document.
         */
        preProcessorUnregister = "preProcessorUnregister",
        /**
         * Fired when the row grouping function is changed
         * @ignore - do not document.
         */
        rowGroupsPreProcessingChange = "rowGroupsPreProcessingChange",
        /**
         * Fired when the sort model changes.
         */
        sortModelChange = "sortModelChange",
        /**
         * Fired when the filter model changes.
         */
        filterModelChange = "filterModelChange",
        /**
         * Fired when the column visibility model changes.
         */
        columnVisibilityModelChange = "columnVisibilityModelChange",
        /**
         * Fired when the state of the grid is updated.
         */
        stateChange = "stateChange",
        /**
         * Fired when a column visibility changes.
         * It is not fired when the `columnVisibilityModel` is controlled or initialized.
         * It is not fired when toggling all column's visibility at once.
         * @deprecated Use `GridEvents.columnVisibilityModelChange` instead.
         */
        columnVisibilityChange = "columnVisibilityChange",
        /**
         * Fired when the content size used by the `GridVirtualScroller` changes.
         * @ignore - do not document.
         */
        virtualScrollerContentSizeChange = "virtualScrollerContentSizeChange"
    }
    type GridEventsStr = keyof typeof GridEvents;
    /**
     * Object passed as parameter of the column order change event.
     */
    interface GridColumnOrderChangeParams {
        /**
         * The HTMLElement column header element.
         */
        element?: HTMLElement | null;
        /**
         * The column field of the column that triggered the event.
         */
        field: string;
        /**
         * The column of the current header component.
         */
        colDef: GridStateColDef;
        /**
         * The target column index.
         */
        targetIndex: number;
        /**
         * The old column index.
         */
        oldIndex: number;
    }
    /**
     * Object passed as parameter of the column resize event.
     */
    interface GridColumnResizeParams {
        /**
         * The HTMLElement column header element.
         */
        element?: HTMLElement | null;
        /**
         * The column of the current header component.
         */
        colDef: GridStateColDef;
        /**
         * The width of the column.
         */
        width: number;
    }
    /**
     * Object passed as parameter of the column visibility change event.
     */
    interface GridColumnVisibilityChangeParams {
        /**
         * The field of the column which visibility changed.
         */
        field: string;
        /**
         * The column of the current header component.
         */
        colDef: GridStateColDef;
        /**
         * The visibility state of the column.
         */
        isVisible: boolean;
    }
    /**
     * Object passed as parameter in the onRowsScrollEnd callback.
     */
    interface GridRowScrollEndParams {
        /**
         * The number of rows that fit in the viewport.
         */
        viewportPageSize: number;
        /**
         * The number of rows allocated for the rendered zone.
         */
        virtualRowsCount: number;
        /**
         * The grid visible columns.
         */
        visibleColumns: GridColumns;
    }
    interface GridRenderContext {
        firstRowIndex: number;
        lastRowIndex: number;
        firstColumnIndex: number;
        lastColumnIndex: number;
    }
    interface GridScrollParams {
        left: number;
        top: number;
        renderContext?: GridRenderContext;
    }
    type GridScrollFn = (v: GridScrollParams) => void;
    /**
     * Object passed as parameter of the column sorted event.
     */
    interface GridSortModelParams {
        /**
         * The sort model used to sort the grid.
         */
        sortModel: GridSortModel;
        /**
         * The full set of columns.
         */
        columns: GridColumns;
        /**
         * Api that let you manipulate the grid.
         */
        api: GridApi;
    }
    type GridColumnLookup = {
        [field: string]: GridStateColDef;
    };
    type GridColumnRawLookup = {
        [field: string]: GridColDef | GridStateColDef;
    };
    interface GridColumnsState {
        all: string[];
        lookup: GridColumnLookup;
        columnVisibilityModel: GridColumnVisibilityModel;
    }
    interface GridColumnsInitialState {
        columnVisibilityModel?: GridColumnVisibilityModel;
    }
    type GridColumnsRawState = Omit<GridColumnsState, 'lookup'> & {
        lookup: GridColumnRawLookup;
    };
    type GridColumnVisibilityModel = Record<GridRowId, boolean>;
    interface GridColumnMenuState {
        open: boolean;
        field?: string;
    }
    interface OutputSelector<Result> {
        (apiRef: GridApiRef): Result;
        (state: GridState, instanceId?: number): Result;
        cache: object;
    }
    interface GridColumnReorderState {
        dragCol: string;
    }
    interface GridCanBeReorderedPreProcessingContext {
        targetIndex: number;
    }
    const gridColumnReorderSelector: (state: GridState) => GridColumnReorderState;
    const gridColumnReorderDragColSelector: OutputSelector<string>;
    interface GridColumnResizeState {
        resizingColumnField: string;
    }
    /**
     * Available densities.
     */
    type GridDensity = 'compact' | 'standard' | 'comfortable';
    /**
     * Density enum.
     */
    enum GridDensityTypes {
        Compact = "compact",
        Standard = "standard",
        Comfortable = "comfortable"
    }
    interface GridDensityState {
        value: GridDensity;
        rowHeight: number;
        headerHeight: number;
        factor: number;
    }
    type GridCellIdentifier = {
        id: GridRowId;
        field: string;
    };
    type GridColumnIdentifier = {
        field: string;
    };
    interface GridFocusState {
        cell: GridCellIdentifier | null;
        columnHeader: GridColumnIdentifier | null;
    }
    interface GridTabIndexState {
        cell: GridCellIdentifier | null;
        columnHeader: GridColumnIdentifier | null;
    }
    enum GridPreferencePanelsValue {
        filters = "filters",
        columns = "columns"
    }
    interface GridPreferencePanelState {
        open: boolean;
        openedPanelValue?: GridPreferencePanelsValue;
    }
    type GridPreferencePanelInitialState = GridPreferencePanelState;
    interface GridRowGroupParams {
        ids: GridRowId[];
        idRowsLookup: GridRowsLookup;
        previousTree: GridRowTreeConfig | null;
    }
    interface GridRowGroupingResult {
        /**
         * Name of the algorithm used to group the rows
         * It is useful to decide which filtering / sorting algorithm to apply, to avoid applying tree-data filtering on a grouping-by-column dataset for instance.
         */
        groupingName: string;
        tree: GridRowTreeConfig;
        treeDepth: number;
        ids: GridRowId[];
        idRowsLookup: GridRowsLookup;
    }
    type GridRowGroupingPreProcessing = (params: GridRowGroupParams) => GridRowGroupingResult | null;
    interface GridRowGroupsPreProcessingApi {
        /**
         * Register a column pre-processing and emit an event to re-apply the row grouping pre-processing.
         * @param {string} processingName Name of the pre-processing. Used to clean the previous version of the pre-processing.
         * @param {GridRowGroupingPreProcessing} columnsPreProcessing Pre-processing to register.
         * @ignore - do not document.
         */
        unstable_registerRowGroupsBuilder: (processingName: string, groupingFunction: GridRowGroupingPreProcessing | null) => void;
        /**
         * Apply the first row grouping pre-processing that does not return null.
         * @param {GridRowsLookup} rowsLookup. Lookup of the rows to group.
         * @param {GridRowId[]} List of the rows IDs.
         * @returns {GridRowGroupingResult} The grouped rows.
         * @ignore - do not document.
         */
        unstable_groupRows: (params: GridRowGroupParams) => GridRowGroupingResult;
    }
    interface GridRowsState extends GridRowGroupingResult {
        /**
         * Amount of rows before applying the filtering.
         * It also count the expanded and collapsed children rows.
         */
        totalRowCount: number;
        /**
         * Amount of rows before applying the filtering.
         * It does not count the expanded children rows.
         */
        totalTopLevelRowCount: number;
    }
    type GridInputSelectionModel = GridRowId[] | GridRowId;
    type GridSelectionModel = GridRowId[];
    interface GridSortingState {
        sortedRows: GridRowId[];
        sortModel: GridSortModel;
    }
    interface GridSortingInitialState {
        sortModel?: GridSortModel;
    }
    type GridSortingModelApplier = (rowList: GridRowTreeNodeConfig[]) => GridRowId[];
    interface GridSortingParams {
        sortRowList: GridSortingModelApplier | null;
    }
    type GridSortingMethod = (params: GridSortingParams) => GridRowId[];
    type GridSortingMethodCollection = {
        [methodName: string]: GridSortingMethod;
    };
    interface GridPaginationState {
        pageSize: number;
        page: number;
        pageCount: number;
        rowCount: number;
    }
    interface GridPaginationInitialState {
        pageSize?: number;
        page?: number;
    }
    /**
     * The apiRef methods handled by `useGridPageSize`
     */
    interface GridPageSizeApi {
        /**
         * Sets the number of displayed rows to the value given by `pageSize`.
         * @param {number} pageSize The new number of displayed rows.
         */
        setPageSize: (pageSize: number) => void;
    }
    /**
     * The apiRef methods handled by `useGridPage`
     */
    interface GridPageApi {
        /**
         * Sets the displayed page to the value given by `page`.
         * @param {number} page The new page number.
         */
        setPage: (page: number) => void;
    }
    /**
     * The pagination API interface that is available in the grid [[apiRef]].
     */
    interface GridPaginationApi extends GridPageApi, GridPageSizeApi {
    }
    /**
     * @category Pagination
     * @ignore - do not document.
     */
    const gridPaginationSelector: (state: GridState) => GridPaginationState;
    /**
     * Get the index of the page to render if the pagination is enabled
     * @category Pagination
     */
    const gridPageSelector: OutputSelector<number>;
    /**
     * Get the maximum amount of rows to display on a single page if the pagination is enabled
     * @category Pagination
     */
    const gridPageSizeSelector: OutputSelector<number>;
    /**
     * Get the amount of pages needed to display all the rows if the pagination is enabled
     * @category Pagination
     */
    const gridPageCountSelector: OutputSelector<number>;
    /**
     * Get the index of the first and the last row to include in the current page if the pagination is enabled.
     * @category Pagination
     */
    const gridPaginationRowRangeSelector: OutputSelector<{
        firstRowIndex: number;
        lastRowIndex: number;
    } | null>;
    /**
     * Get the id and the model of each row to include in the current page if the pagination is enabled.
     * @category Pagination
     */
    const gridPaginatedVisibleSortedGridRowEntriesSelector: OutputSelector<{
        id: GridRowId;
        model: {
            [key: string]: any;
        };
    }[]>;
    /**
     * Get the id of each row to include in the current page if the pagination is enabled.
     * @category Pagination
     */
    const gridPaginatedVisibleSortedGridRowIdsSelector: OutputSelector<GridRowId[]>;
    /**
     * Model describing the filters to apply to the grid.
     */
    interface GridFilterModel {
        /**
         * @default []
         */
        items: GridFilterItem[];
        /**
         * - `GridLinkOperator.And`: the row must pass all the filter items.
         * - `GridLinkOperator.Or`: the row must pass at least on filter item.
         * @default `GridLinkOperator.Or`
         */
        linkOperator?: GridLinkOperator;
    }
    const getDefaultGridFilterModel: () => GridFilterModel;
    interface GridFilterState {
        filterModel: GridFilterModel;
        /**
         * Filtering status for each row.
         * A row is filtered if it is passing the filters, whether its parents are expanded or not.
         * If a row is not registered in this lookup, it is filtered.
         * This is the equivalent of the `visibleRowsLookup` if all the groups were expanded.
         */
        filteredRowsLookup: Record<GridRowId, boolean>;
        /**
         * Visibility status for each row.
         * A row is visible if it is passing the filters AND if its parents are expanded.
         * If a row is not registered in this lookup, it is visible.
         */
        visibleRowsLookup: Record<GridRowId, boolean>;
        /**
         * Amount of descendants that are passing the filters.
         * For the Tree Data, it includes all the intermediate depth levels (= amount of children + amount of grand children + ...).
         * For the Row Grouping by Column, it does not include the intermediate depth levels (= amount of descendant of maximum depth).
         * If a row is not registered in this lookup, it is supposed to have no descendant passing the filters.
         */
        filteredDescendantCountLookup: Record<GridRowId, number>;
    }
    interface GridFilterInitialState {
        filterModel?: GridFilterModel;
    }
    /**
     * @param {GridRowId} rowId The id of the row we want to filter.
     * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.
     */
    type GridAggregatedFilterItemApplier = (rowId: GridRowId, shouldApplyItem?: (filterItem: GridFilterItem) => boolean) => boolean;
    interface GridFilteringParams {
        isRowMatchingFilters: GridAggregatedFilterItemApplier | null;
    }
    type GridFilteringMethod = (params: GridFilteringParams) => Omit<GridFilterState, 'filterModel'>;
    type GridFilteringMethodCollection = {
        [methodName: string]: GridFilteringMethod;
    };
    type GridRowGroupingModel = string[];
    interface GridRowGroupingState {
        model: GridRowGroupingModel;
    }
    interface GridRowGroupingInitialState {
        model?: GridRowGroupingModel;
    }
    interface GridRowGroupingApi {
        /**
         * Sets the columns to use as grouping criteria.
         * @param {GridRowGroupingModel} model The columns to use as grouping criteria.
         */
        setRowGroupingModel: (model: GridRowGroupingModel) => void;
        /**
         * Adds the field to the row grouping model.
         * @param {string} groupingCriteriaField The field from which we want to group the rows.
         * @param {number | undefined} groupingIndex The grouping index at which we want to insert the new grouping criteria. By default, it will be inserted at the end of the model.
         */
        addRowGroupingCriteria: (groupingCriteriaField: string, groupingIndex?: number) => void;
        /**
         * sRemove the field from the row grouping model.
         * @param {string} groupingCriteriaField The field from which we want to stop grouping the rows.
         */
        removeRowGroupingCriteria: (groupingCriteriaField: string) => void;
        /**
         * Sets the grouping index of a grouping criteria.
         * @param {string} groupingCriteriaField The field of the grouping criteria from which we want to change the grouping index.
         * @param {number} groupingIndex The new grouping index of this grouping criteria.
         */
        setRowGroupingCriteriaIndex: (groupingCriteriaField: string, groupingIndex: number) => void;
    }
    const gridRowGroupingStateSelector: (state: GridState) => GridRowGroupingState;
    const gridRowGroupingModelSelector: OutputSelector<GridRowGroupingModel>;
    const gridRowGroupingSanitizedModelSelector: OutputSelector<string[]>;
    /**
     * @category Filtering
     */
    const gridFilterStateSelector: (state: GridState) => GridFilterState;
    /**
     * Get the current filter model.
     * @category Filtering
     */
    const gridFilterModelSelector: OutputSelector<GridFilterModel>;
    /**
     * @category Filtering
     * @ignore - do not document.
     */
    const gridVisibleRowsLookupSelector: OutputSelector<Record<GridRowId, boolean>>;
    /**
     * @category Filtering
     * @ignore - do not document.
     */
    const gridFilteredRowsLookupSelector: OutputSelector<Record<GridRowId, boolean>>;
    /**
     * @category Filtering
     * @ignore - do not document.
     */
    const gridFilteredDescendantCountLookupSelector: OutputSelector<Record<GridRowId, number>>;
    /**
     * Get the id and the model of the rows accessible after the filtering process.
     * Does not contain the collapsed children.
     * @category Filtering
     */
    const gridVisibleSortedRowEntriesSelector: OutputSelector<{
        id: GridRowId;
        model: {
            [key: string]: any;
        };
    }[]>;
    /**
     * Get the id of the rows accessible after the filtering process.
     * Does not contain the collapsed children.
     * @category Filtering
     */
    const gridVisibleSortedRowIdsSelector: OutputSelector<GridRowId[]>;
    /**
     * Get the id and the model of the rows accessible after the filtering process.
     * Contains the collapsed children.
     * @category Filtering
     */
    const gridFilteredSortedRowEntriesSelector: OutputSelector<{
        id: GridRowId;
        model: {
            [key: string]: any;
        };
    }[]>;
    /**
     * Get the id of the rows accessible after the filtering process.
     * Contains the collapsed children.
     * @category Filtering
     */
    const gridFilteredSortedRowIdsSelector: OutputSelector<GridRowId[]>;
    /**
     * @category Filtering
     * @deprecated Use `gridVisibleSortedRowIdsSelector` instead
     * @ignore - do not document.
     */
    const gridVisibleRowsSelector: OutputSelector<GridRowId[]>;
    /**
     * Get the id and the model of the top level rows accessible after the filtering process.
     * @category Filtering
     */
    const gridVisibleSortedTopLevelRowEntriesSelector: OutputSelector<{
        id: GridRowId;
        model: {
            [key: string]: any;
        };
    }[]>;
    /**
     * Get the amount of rows accessible after the filtering process.
     * @category Filtering
     */
    const gridVisibleRowCountSelector: OutputSelector<number>;
    /**
     * Get the amount of top level rows accessible after the filtering process.
     * @category Filtering
     */
    const gridVisibleTopLevelRowCountSelector: OutputSelector<number>;
    /**
     * @category Filtering
     * @ignore - do not document.
     */
    const gridFilterActiveItemsSelector: OutputSelector<GridFilterItem[]>;
    type GridFilterActiveItemsLookup = {
        [columnField: string]: GridFilterItem[];
    };
    /**
     * @category Filtering
     * @ignore - do not document.
     */
    const gridFilterActiveItemsLookupSelector: OutputSelector<GridFilterActiveItemsLookup>;
    const GridFeatureModeConstant: {
        client: "client";
        server: "server";
    };
    type GridFeatureMode = 'client' | 'server';
    interface Logger {
        debug: (...args: any[]) => void;
        info: (...args: any[]) => void;
        warn: (...args: any[]) => void;
        error: (...args: any[]) => void;
    }
    /**
     * Set of icons used in the grid component UI.
     * TODO: Differentiate community and pro interface
     */
    interface GridIconSlotsComponent {
        /**
         * Icon displayed on the boolean cell to represent the true value.
         * @default GridCheckIcon
         */
        BooleanCellTrueIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the boolean cell to represent the false value.
         * @default GridCloseIcon
         */
        BooleanCellFalseIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the side of the column header title to display the filter input component.
         * @default GridTripleDotsVerticalIcon
         */
        ColumnMenuIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the open filter button present in the toolbar by default.
         * @default GridFilterListIcon
         */
        OpenFilterButtonIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the column header menu to show that a filter has been applied to the column.
         * @default GridFilterAltIcon
         */
        ColumnFilteredIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the column menu selector tab.
         * @default GridColumnIcon
         */
        ColumnSelectorIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the side of the column header title when unsorted.
         * @default GridColumnUnsortedIcon
         */
        ColumnUnsortedIcon: React.JSXElementConstructor<any> | null;
        /**
         * Icon displayed on the side of the column header title when sorted in ascending order.
         * @default GridArrowUpwardIcon
         */
        ColumnSortedAscendingIcon: React.JSXElementConstructor<any> | null;
        /**
         * Icon displayed on the side of the column header title when sorted in descending order.
         * @default GridArrowDownwardIcon
         */
        ColumnSortedDescendingIcon: React.JSXElementConstructor<any> | null;
        /**
         * Icon displayed in between two column headers that allows to resize the column header.
         * @default GridSeparatorIcon
         */
        ColumnResizeIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the compact density option in the toolbar.
         * @default GridViewHeadlineIcon
         */
        DensityCompactIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the standard density option in the toolbar.
         * @default GridTableRowsIcon
         */
        DensityStandardIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the "comfortable" density option in the toolbar.
         * @default GridViewStreamIcon
         */
        DensityComfortableIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the open export declare button present in the toolbar by default.
         * @default GridSaveAltIcon
         */
        ExportIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the `actions` column type to open the menu.
         * @default GridMoreVertIcon
         */
        MoreActionsIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the tree data toggling column when the children are collapsed
         * @default GridKeyboardArrowRight
         */
        TreeDataExpandIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the tree data toggling column when the children are expanded
         * @default GridExpandMoreIcon
         */
        TreeDataCollapseIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the grouping column when the children are collapsed
         * @default GridKeyboardArrowRight
         */
        GroupingCriteriaExpandIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the grouping column when the children are expanded
         * @default GridExpandMoreIcon
         */
        GroupingCriteriaCollapseIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the detail panel toggle column when collapsed.
         * @default GridAddIcon
         */
        DetailPanelExpandIcon: React.JSXElementConstructor<any>;
        /**
         * Icon displayed on the detail panel toggle column when expanded.
         * @default GridRemoveIcon
         */
        DetailPanelCollapseIcon: React.JSXElementConstructor<any>;
    }
    /**
     * Grid components React prop interface containing all the overridable components.
     * TODO: Differentiate community and pro interface
     */
    interface GridSlotsComponent extends GridIconSlotsComponent {
        /**
         * The custom Checkbox component used in the grid for both header and cells.
         * @default Checkbox
         */
        BaseCheckbox: React.JSXElementConstructor<any>;
        /**
         * The custom TextField component used in the grid.
         * @default TextField
         */
        BaseTextField: React.JSXElementConstructor<any>;
        /**
         * The custom FormControl component used in the grid.
         * @default FormControl
         */
        BaseFormControl: React.JSXElementConstructor<any>;
        /**
         * The custom Select component used in the grid.
         * @default Select
         */
        BaseSelect: React.JSXElementConstructor<any>;
        /**
         * The custom Switch component used in the grid.
         * @default Switch
         */
        BaseSwitch: React.JSXElementConstructor<any>;
        /**
         * The custom Button component used in the grid.
         * @default Button
         */
        BaseButton: React.JSXElementConstructor<any>;
        /**
         * The custom Tooltip component used in the grid.
         * @default Tooltip
         */
        BaseTooltip: React.JSXElementConstructor<any>;
        /**
         * The custom Popper component used in the grid.
         * @default Popper
         */
        BasePopper: React.JSXElementConstructor<any>;
        /**
         * Component rendered for each cell.
         * @default GridCell
         */
        Cell: React.JSXElementConstructor<any>;
        /**
         * Column menu component rendered by clicking on the 3 dots "kebab" icon in column headers.
         * @default GridColumnMenu
         */
        ColumnMenu: React.JSXElementConstructor<any>;
        /**
         * Error overlay component rendered above the grid when an error is caught.
         * @default ErrorOverlay
         */
        ErrorOverlay: React.JSXElementConstructor<any>;
        /**
         * Footer component rendered at the bottom of the grid viewport.
         * @default GridFooter
         */
        Footer: React.JSXElementConstructor<any>;
        /**
         * Header component rendered above the grid column header bar.
         * Prefer using the `Toolbar` slot. You should never need to use this slot.
         * @default GridHeader
         */
        Header: React.JSXElementConstructor<any>;
        /**
         * Toolbar component rendered inside the Header component.
         * @default null
         */
        Toolbar: React.JSXElementConstructor<any> | null;
        /**
         * PreferencesPanel component rendered inside the Header component.
         * @default GridPreferencesPanel
         */
        PreferencesPanel: React.JSXElementConstructor<any>;
        /**
         * Loading overlay component rendered when the grid is in a loading state.
         * @default GridLoadingOverlay
         */
        LoadingOverlay: React.JSXElementConstructor<any>;
        /**
         * No results overlay component rendered when the grid has no results after filtering.
         * @default GridNoResultsOverlay
         */
        NoResultsOverlay: React.JSXElementConstructor<any>;
        /**
         * No rows overlay component rendered when the grid has no rows.
         * @default GridNoRowsOverlay
         */
        NoRowsOverlay: React.JSXElementConstructor<any>;
        /**
         * Pagination component rendered in the grid footer by default.
         * @default Pagination
         */
        Pagination: React.JSXElementConstructor<any> | null;
        /**
         * Filter panel component rendered when clicking the filter button.
         * @default GridFilterPanel
         */
        FilterPanel: React.JSXElementConstructor<any>;
        /**
         * GridColumns panel component rendered when clicking the columns button.
         * @default GridColumnsPanel
         */
        ColumnsPanel: React.JSXElementConstructor<any>;
        /**
         * Panel component wrapping the filters and columns panels.
         * @default GridPanel
         */
        Panel: React.JSXElementConstructor<any>;
        /**
         * Component rendered for each row.
         * @default GridRow
         */
        Row: React.JSXElementConstructor<any>;
    }
    interface GridClasses {
        /**
         * Styles applied to the root element if `autoHeight={true}`.
         */
        autoHeight: string;
        /**
         * Styles applied to the icon of the boolean cell.
         */
        booleanCell: string;
        /**
         * Styles applied to the cell element if the cell is editable.
         */
        'cell--editable': string;
        /**
         * Styles applied to the cell element if the cell is in edit mode.
         */
        'cell--editing': string;
        /**
         * Styles applied to the cell element if `align="center"`.
         */
        'cell--textCenter': string;
        /**
         * Styles applied to the cell element if `align="left"`.
         */
        'cell--textLeft': string;
        /**
         * Styles applied to the cell element if `align="right"`.
         */
        'cell--textRight': string;
        /**
         * Styles applied to the cell element if the cell has a custom renderer.
         */
        'cell--withRenderer': string;
        /**
         * Styles applied to the cell element.
         */
        cell: string;
        /**
         * Styles applied to the cell checkbox element.
         */
        cellCheckbox: string;
        /**
         * Styles applied to the selection checkbox element.
         */
        checkboxInput: string;
        /**
         * Styles applied to the column header if `headerAlign="center"`.
         */
        'columnHeader--alignCenter': string;
        /**
         * Styles applied to the column header if `headerAlign="left"`.
         */
        'columnHeader--alignLeft': string;
        /**
         * Styles applied to the column header if `headerAlign="right"`.
         */
        'columnHeader--alignRight': string;
        /**
         * Styles applied to the floating column header element when it is dragged.
         */
        'columnHeader--dragging': string;
        /**
         * Styles applied to the column header if it is being dragged.
         */
        'columnHeader--moving': string;
        /**
         * Styles applied to the column header if the type of the column is `number`.
         */
        'columnHeader--numeric': string;
        /**
         * Styles applied to the column header if the column is sortable.
         */
        'columnHeader--sortable': string;
        /**
         * Styles applied to the column header if the column is sorted.
         */
        'columnHeader--sorted': string;
        /**
         * Styles applied to the column header element.
         */
        columnHeader: string;
        /**
         * Styles applied to the header checkbox cell element.
         */
        columnHeaderCheckbox: string;
        /**
         * Styles applied to the column header's draggable container element.
         */
        columnHeaderDraggableContainer: string;
        /**
         * Styles applied to the column headers wrapper if a column is being dragged.
         */
        columnHeaderDropZone: string;
        /**
         * Styles applied to the column header's title element;
         */
        columnHeaderTitle: string;
        /**
         * Styles applied to the column header's title container element.
         */
        columnHeaderTitleContainer: string;
        /**
         * Styles applied to the column headers.
         */
        columnHeaders: string;
        /**
         * Styles applied to the column headers's inner element.
         */
        columnHeadersInner: string;
        /**
         * Styles applied to the column headers's inner element if there is a horizontal scrollbar.
         */
        'columnHeadersInner--scrollable': string;
        /**
         * Styles applied to the column header separator if the column is resizable.
         */
        'columnSeparator--resizable': string;
        /**
         * Styles applied to the column header separator if the column is being resized.
         */
        'columnSeparator--resizing': string;
        /**
         * Styles applied to the column header separator if the side is "left".
         */
        'columnSeparator--sideLeft': string;
        /**
         * Styles applied to the column header separator if the side is "right".
         */
        'columnSeparator--sideRight': string;
        /**
         * Styles applied to the column header separator element.
         */
        columnSeparator: string;
        /**
         * Styles applied to the columns panel element.
         */
        columnsPanel: string;
        /**
         * Styles applied to the columns panel row element.
         */
        columnsPanelRow: string;
        /**
         * Styles applied to the detail panel element.
         */
        detailPanel: string;
        /**
         * Styles applied to the detail panels wrapper element.
         */
        detailPanels: string;
        /**
         * Styles applied to the detail panel toggle cell element.
         */
        detailPanelToggleCell: string;
        /**
         * Styles applied to the detail panel toggle cell element if expanded.
         */
        'detailPanelToggleCell--expanded': string;
        /**
         * Styles applied to the panel element.
         */
        panel: string;
        /**
         * Styles applied to the panel header element.
         */
        panelHeader: string;
        /**
         * Styles applied to the panel wrapper element.
         */
        panelWrapper: string;
        /**
         * Styles applied to the panel content element.
         */
        panelContent: string;
        /**
         * Styles applied to the panel footer element.
         */
        panelFooter: string;
        /**
         * Styles applied to the paper element.
         */
        paper: string;
        /**
         * Styles applied to root of the boolean edit component.
         */
        editBooleanCell: string;
        /**
         * Styles applied to the root of the filter form component.
         */
        filterForm: string;
        /**
         * Styles applied to the delete icon of the filter form component.
         */
        filterFormDeleteIcon: string;
        /**
         * Styles applied to the link operator inout of the filter form component.
         */
        filterFormLinkOperatorInput: string;
        /**
         * Styles applied to the column input of the filter form component.
         */
        filterFormColumnInput: string;
        /**
         * Styles applied to the operator input of the filter form component.
         */
        filterFormOperatorInput: string;
        /**
         * Styles applied to the value input of the filter form component.
         */
        filterFormValueInput: string;
        /**
         * Styles applied to the root of the input component.
         */
        editInputCell: string;
        /**
         * Styles applied to the filter icon element.
         */
        filterIcon: string;
        /**
         * Styles applied to the footer container element.
         */
        footerContainer: string;
        /**
         * Styles applied to the column header icon's container.
         */
        iconButtonContainer: string;
        /**
         * Styles applied to the column header separator icon element.
         */
        iconSeparator: string;
        /**
         * Styles applied to the main container element.
         */
        main: string;
        /**
         * Styles applied to the menu element.
         */
        menu: string;
        /**
         * Styles applied to the menu icon element.
         */
        menuIcon: string;
        /**
         * Styles applied to the menu icon button element.
         */
        menuIconButton: string;
        /**
         * Styles applied to the menu icon element if the menu is open.
         */
        menuOpen: string;
        /**
         * Styles applied to the menu list element.
         */
        menuList: string;
        /**
         * Styles applied to the overlay element.
         */
        overlay: string;
        /**
         * Styles applied to the virtualization container.
         */
        virtualScroller: string;
        /**
         * Styles applied to the virtualization content.
         */
        virtualScrollerContent: string;
        /**
         * Styles applied to the virtualization render zone.
         */
        virtualScrollerRenderZone: string;
        /**
         * Styles applied to the pinned columns.
         */
        pinnedColumns: string;
        /**
         * Styles applied to the left pinned columns.
         */
        'pinnedColumns--left': string;
        /**
         * Styles applied to the right pinned columns.
         */
        'pinnedColumns--right': string;
        /**
         * Styles applied to the pinned column headers.
         */
        pinnedColumnHeaders: string;
        /**
         * Styles applied to the left pinned column headers.
         */
        'pinnedColumnHeaders--left': string;
        /**
         * Styles applied to the right pinned column headers.
         */
        'pinnedColumnHeaders--right': string;
        /**
         * Styles applied to the root element.
         */
        root: string;
        /**
         * Styles applied to the row element if the row is editable.
         */
        'row--editable': string;
        /**
         * Styles applied to the row element if the row is in edit mode.
         */
        'row--editing': string;
        /**
         * Styles applied to the row element.
         */
        row: string;
        /**
         * Styles applied to the footer row count element to show the total number of rows.
         * Only works when pagination is disabled.
         */
        rowCount: string;
        /**
         * Styles applied to both scroll area elements.
         */
        scrollArea: string;
        /**
         * Styles applied to the left scroll area element.
         */
        'scrollArea--left': string;
        /**
         * Styles applied to the right scroll area element.
         */
        'scrollArea--right': string;
        /**
         * Styles applied to the footer selected row count element.
         */
        selectedRowCount: string;
        /**
         * Styles applied to the sort icon element.
         */
        sortIcon: string;
        /**
         * Styles applied to the toolbar container element.
         */
        toolbarContainer: string;
        /**
         * Styles applied to the toolbar filter list element.
         */
        toolbarFilterList: string;
        /**
         * Styles applied to both the cell and the column header if `showColumnRightBorder={true}`.
         */
        withBorder: string;
        /**
         * Styles applied to the root of the grouping column of the tree data.
         */
        treeDataGroupingCell: string;
        /**
         * Styles applied to the toggle of the grouping column of the tree data.
         */
        treeDataGroupingCellToggle: string;
    }
    type GridClassKey = keyof GridClasses;
    function getDataGridUtilityClass(slot: string): string;
    const gridClasses: Record<"actionsCell" | "autoHeight" | "booleanCell" | "cell--editable" | "cell--editing" | "cell--textCenter" | "cell--textLeft" | "cell--textRight" | "cell--withRenderer" | "cell" | "cellCheckbox" | "checkboxInput" | "columnHeader--alignCenter" | "columnHeader--alignLeft" | "columnHeader--alignRight" | "columnHeader--dragging" | "columnHeader--moving" | "columnHeader--numeric" | "columnHeader--sortable" | "columnHeader--sorted" | "columnHeader" | "columnHeaderCheckbox" | "columnHeaderDraggableContainer" | "columnHeaderDropZone" | "columnHeaderTitle" | "columnHeaderTitleContainer" | "columnHeaders" | "columnHeadersInner" | "columnHeadersInner--scrollable" | "columnSeparator--resizable" | "columnSeparator--resizing" | "columnSeparator--sideLeft" | "columnSeparator--sideRight" | "columnSeparator" | "columnsPanel" | "columnsPanelRow" | "detailPanel" | "detailPanels" | "detailPanelToggleCell" | "detailPanelToggleCell--expanded" | "panel" | "panelHeader" | "panelWrapper" | "panelContent" | "panelFooter" | "paper" | "editBooleanCell" | "editInputCell" | "filterForm" | "filterFormDeleteIcon" | "filterFormLinkOperatorInput" | "filterFormColumnInput" | "filterFormOperatorInput" | "filterFormValueInput" | "filterIcon" | "footerContainer" | "iconButtonContainer" | "iconSeparator" | "main" | "menu" | "menuIcon" | "menuIconButton" | "menuOpen" | "menuList" | "overlay" | "root" | "row--editable" | "row--editing" | "row" | "rowCount" | "scrollArea--left" | "scrollArea--right" | "scrollArea" | "selectedRowCount" | "sortIcon" | "toolbarContainer" | "toolbarFilterList" | "virtualScroller" | "virtualScrollerContent" | "virtualScrollerRenderZone" | "pinnedColumns" | "pinnedColumns--left" | "pinnedColumns--right" | "pinnedColumnHeaders" | "pinnedColumnHeaders--left" | "pinnedColumnHeaders--right" | "withBorder" | "treeDataGroupingCell" | "treeDataGroupingCellToggle" | "groupingCriteriaCell" | "groupingCriteriaCellToggle", string>;
    /**
     * Overrideable components props dynamically passed to the component at rendering.
     */
    interface GridSlotsComponentsProps {
        baseCheckbox?: any;
        baseTextField?: any;
        baseFormControl?: any;
        baseSelect?: any;
        baseSwitch?: any;
        baseButton?: any;
        basePopper?: any;
        baseTooltip?: any;
        cell?: any;
        columnMenu?: any;
        columnsPanel?: any;
        errorOverlay?: any;
        filterPanel?: any;
        footer?: any;
        header?: any;
        loadingOverlay?: any;
        noResultsOverlay?: any;
        noRowsOverlay?: any;
        pagination?: any;
        panel?: any;
        preferencesPanel?: any;
        row?: any;
        toolbar?: any;
    }
    interface GridExperimentalFeatures {
        /**
         * Will be part of the premium-plan when fully ready.
         */
        preventCommitWhileValidating: boolean;
    }
    /**
     * The props users can give to the `DataGrid` component.
     */
    type DataGridProps = Omit<Partial<DataGridPropsWithDefaultValues> & DataGridPropsWithComplexDefaultValueBeforeProcessing & DataGridPropsWithoutDefaultValue, DataGridForcedPropsKey> & {
        pagination?: true;
    };
    /**
     * The props of the `DataGrid` component after the pre-processing phase.
     */
    interface DataGridProcessedProps extends DataGridPropsWithDefaultValues, DataGridPropsWithComplexDefaultValueAfterProcessing, DataGridPropsWithoutDefaultValue {
    }
    /**
     * The props of the `DataGrid` component after the pre-processing phase that the user should not be able to override.
     * Those are usually used in feature-hook for which the pro-plan has more advanced features (eg: multi-sorting, multi-filtering, ...).
     */
    type DataGridForcedPropsKey = 'apiRef' | 'checkboxSelectionVisibleOnly' | 'disableMultipleColumnsFiltering' | 'disableMultipleColumnsSorting' | 'disableMultipleSelection' | 'disableColumnReorder' | 'disableColumnResize' | 'throttleRowsMs' | 'hideFooterRowCount' | 'pagination' | 'signature';
    /**
     * The `DataGrid` options with a default value that must be merged with the value given through props.
     */
    interface DataGridPropsWithComplexDefaultValueAfterProcessing {
        components: GridSlotsComponent;
        localeText: GridLocaleText;
    }
    /**
     * The `DataGrid` options with a default value that must be merged with the value given through props.
     */
    interface DataGridPropsWithComplexDefaultValueBeforeProcessing {
        /**
         * Overrideable components.
         */
        components?: Partial<GridSlotsComponent>;
        /**
         * Set the locale text of the grid.
         * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/_modules_/grid/constants/localeTextConstants.ts) in the GitHub repository.
         */
        localeText?: Partial<GridLocaleText>;
    }
    /**
     * The `DataGrid` options with a default value overridable through props
     * None of the entry of this interface should be optional, they all have default values and `DataGridProps` already applies a `Partial<DataGridSimpleOptions>` for the public interface
     * The controlled model do not have a default value at the prop processing level, so they must be defined in `DataGridOtherProps`
     * TODO: add multiSortKey
     */
    interface DataGridPropsWithDefaultValues {
        /**
         * If `true`, the grid height is dynamic and follow the number of rows in the grid.
         * @default false
         */
        autoHeight: boolean;
        /**
         * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.
         * @default false
         */
        autoPageSize: boolean;
        /**
         * If `true`, the grid get a first column with a checkbox that allows to select rows.
         * @default false
         */
        checkboxSelection: boolean;
        /**
         * If `true`, the "Select All" header checkbox selects only the rows on the current page. To be used in combination with `checkboxSelection`.
         * It only works if the pagination is enabled.
         * @default false
         */
        checkboxSelectionVisibleOnly: boolean;
        /**
         * Number of extra columns to be rendered before/after the visible slice.
         * @default 3
         */
        columnBuffer: number;
        /**
         * Number of extra rows to be rendered before/after the visible slice.
         * @default 3
         */
        rowBuffer: number;
        /**
         * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.
         * @default 3
         */
        rowThreshold: number;
        /**
         * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.
         * @default 3
         */
        columnThreshold: number;
        /**
         * Set the density of the grid.
         * @default "standard"
         */
        density: GridDensity;
        /**
         * If `true`, rows will not be extended to fill the full width of the grid container.
         * @default false
         */
        disableExtendRowFullWidth: boolean;
        /**
         * If `true`, column filters are disabled.
         * @default false
         */
        disableColumnFilter: boolean;
        /**
         * If `true`, the column menu is disabled.
         * @default false
         */
        disableColumnMenu: boolean;
        /**
         * If `true`, hiding/showing columns is disabled.
         * @default false
         */
        disableColumnSelector: boolean;
        /**
         * If `true`, the density selector is disabled.
         * @default false
         */
        disableDensitySelector: boolean;
        /**
         * If `true`, filtering with multiple columns is disabled.
         * @default false
         */
        disableMultipleColumnsFiltering: boolean;
        /**
         * If `true`, multiple selection using the CTRL or CMD key is disabled.
         * @default false
         */
        disableMultipleSelection: boolean;
        /**
         * If `true`, sorting with multiple columns is disabled.
         * @default false
         */
        disableMultipleColumnsSorting: boolean;
        /**
         * If `true`, the selection on click on a row or cell is disabled.
         * @default false
         */
        disableSelectionOnClick: boolean;
        /**
         * If `true`, the virtualization is disabled.
         * @default false
         */
        disableVirtualization: boolean;
        /**
         * Controls whether to use the cell or row editing.
         * @default "cell"
         */
        editMode: GridEditMode;
        /**
         * Filtering can be processed on the server or client-side.
         * Set it to 'server' if you would like to handle filtering on the server-side.
         * @default "client"
         */
        filterMode: GridFeatureMode;
        /**
         * Set the height in pixel of the column headers in the grid.
         * @default 56
         */
        headerHeight: number;
        /**
         * If `true`, the footer component is hidden.
         * @default false
         */
        hideFooter: boolean;
        /**
         * If `true`, the pagination component in the footer is hidden.
         * @default false
         */
        hideFooterPagination: boolean;
        /**
         * If `true`, the row count in the footer is hidden.
         * It has no effect if the pagination is enabled.
         * @default false
         */
        hideFooterRowCount: boolean;
        /**
         * If `true`, the selected row count in the footer is hidden.
         * @default false
         */
        hideFooterSelectedRowCount: boolean;
        /**
         * Pass a custom logger in the components that implements the [[Logger]] interface.
         * @default console
         */
        logger: Logger;
        /**
         * Allows to pass the logging level or false to turn off logging.
         * @default "debug"
         */
        logLevel: keyof Logger | false;
        /**
         * If `true`, pagination is enabled.
         * @default false
         */
        pagination: boolean;
        /**
         * Pagination can be processed on the server or client-side.
         * Set it to 'client' if you would like to handle the pagination on the client-side.
         * Set it to 'server' if you would like to handle the pagination on the server-side.
         * @default "client"
         */
        paginationMode: GridFeatureMode;
        /**
         * Set the height in pixel of a row in the grid.
         * @default 52
         */
        rowHeight: number;
        /**
         * Select the pageSize dynamically using the component UI.
         * @default [25, 50, 100]
         */
        rowsPerPageOptions: number[];
        /**
         * If `true`, the right border of the cells are displayed.
         * @default false
         */
        showCellRightBorder: boolean;
        /**
         * If `true`, the right border of the column headers are displayed.
         * @default false
         */
        showColumnRightBorder: boolean;
        /**
         * The order of the sorting sequence.
         * @default ['asc', 'desc', null]
         */
        sortingOrder: GridSortDirection[];
        /**
         * Sorting can be processed on the server or client-side.
         * Set it to 'client' if you would like to handle sorting on the client-side.
         * Set it to 'server' if you would like to handle sorting on the server-side.
         * @default "client"
         */
        sortingMode: GridFeatureMode;
        /**
         * If positive, the Grid will throttle updates coming from `apiRef.current.updateRows` and `apiRef.current.setRows`.
         * It can be useful if you have a high update rate but do not want to do heavy work like filtering / sorting or rendering on each  individual update.
         * @default 0
         */
        throttleRowsMs: number;
        /**
         * If `true`, reordering columns is disabled.
         * @default false
         */
        disableColumnReorder: boolean;
        /**
         * If `true`, resizing columns is disabled.
         * @default false
         */
        disableColumnResize: boolean;
    }
    /**
     * The `DataGrid` props with no default value.
     */
    interface DataGridPropsWithoutDefaultValue extends CommonProps {
        /**
         * The ref object that allows grid manipulation. Can be instantiated with [[useGridApiRef()]].
         */
        apiRef?: GridApiRef;
        /**
         * Signal to the underlying logic what version of the public component API
         * of the data grid is exposed [[GridSignature]].
         * @internal
         */
        signature?: string;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<GridClasses>;
        /**
         * Extend native column types with your new column types.
         */
        columnTypes?: GridColumnTypesRecord;
        /**
         * Set the total number of rows, if it is different than the length of the value `rows` prop.
         * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows.
         */
        rowCount?: number;
        /**
         * Override the height/width of the grid inner scrollbar.
         */
        scrollbarSize?: number;
        /**
         * Function that applies CSS classes dynamically on cells.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @returns {string} The CSS class to apply to the cell.
         */
        getCellClassName?: (params: GridCellParams) => string;
        /**
         * Function that applies CSS classes dynamically on rows.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @returns {string} The CSS class to apply to the row.
         */
        getRowClassName?: (params: GridRowParams) => string;
        /**
         * Function that sets the row height per row.
         * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].
         * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied.
         */
        getRowHeight?: (params: GridRowHeightParams) => GridRowHeightReturnValue;
        /**
         * Function that returns the element to render in row detail.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @returns {JSX.Element} The row detail element.
         */
        getDetailPanelContent?: (params: GridRowParams) => React.ReactNode;
        /**
         * Callback fired when a cell is rendered, returns true if the cell is editable.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @returns {boolean} A boolean indicating if the cell is editable.
         */
        isCellEditable?: (params: GridCellParams) => boolean;
        /**
         * Determines if a row can be selected.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @returns {boolean} A boolean indicating if the cell is selectable.
         */
        isRowSelectable?: (params: GridRowParams) => boolean;
        /**
         * Callback fired when the edit cell value changes.
         * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].
         * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.
         * @param {GridCallbackDetails} details Additional details for this callback.
         * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/api/data-grid/grid-col-def/)
         */
        onEditCellPropsChange?: GridEventListener<GridEvents.editCellPropsChange>;
        /**
         * Callback fired when the cell changes are committed.
         * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].
         * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onCellEditCommit?: GridEventListener<GridEvents.cellEditCommit>;
        /**
         * Callback fired when the cell turns to edit mode.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
         */
        onCellEditStart?: GridEventListener<GridEvents.cellEditStart>;
        /**
         * Callback fired when the cell turns to view mode.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
         */
        onCellEditStop?: GridEventListener<GridEvents.cellEditStop>;
        /**
         * Callback fired when the row changes are committed.
         * @param {GridRowId} id The row id.
         * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
         */
        onRowEditCommit?: GridEventListener<GridEvents.rowEditCommit>;
        /**
         * Callback fired when the row turns to edit mode.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.
         */
        onRowEditStart?: GridEventListener<GridEvents.rowEditStart>;
        /**
         * Callback fired when the row turns to view mode.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.
         */
        onRowEditStop?: GridEventListener<GridEvents.rowEditStop>;
        /**
         * Callback fired when an exception is thrown in the grid.
         * @param {any} args The arguments passed to the `showError` call.
         * @param {MuiEvent<{}>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onError?: GridEventListener<GridEvents.componentError>;
        /**
         * Callback fired when a click event comes from a cell element.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onCellClick?: GridEventListener<GridEvents.cellClick>;
        /**
         * Callback fired when a double click event comes from a cell element.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onCellDoubleClick?: GridEventListener<GridEvents.cellDoubleClick>;
        /**
         * Callback fired when a cell loses focus.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @param {MuiEvent<MuiBaseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onCellFocusOut?: GridEventListener<GridEvents.cellFocusOut>;
        /**
         * Callback fired when a keydown event comes from a cell element.
         * @param {GridCellParams} params With all properties from [[GridCellParams]].
         * @param {MuiEvent<React.KeyboardEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onCellKeyDown?: GridEventListener<GridEvents.cellKeyDown>;
        /**
         * Callback fired when a click event comes from a column header element.
         * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnHeaderClick?: GridEventListener<GridEvents.columnHeaderClick>;
        /**
         * Callback fired when a double click event comes from a column header element.
         * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnHeaderDoubleClick?: GridEventListener<GridEvents.columnHeaderDoubleClick>;
        /**
         * Callback fired when a mouseover event comes from a column header element.
         * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnHeaderOver?: GridEventListener<GridEvents.columnHeaderOver>;
        /**
         * Callback fired when a mouseout event comes from a column header element.
         * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnHeaderOut?: GridEventListener<GridEvents.columnHeaderOut>;
        /**
         * Callback fired when a mouse enter event comes from a column header element.
         * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnHeaderEnter?: GridEventListener<GridEvents.columnHeaderEnter>;
        /**
         * Callback fired when a mouse leave event comes from a column header element.
         * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnHeaderLeave?: GridEventListener<GridEvents.columnHeaderLeave>;
        /**
         * Callback fired when a column is reordered.
         * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].
         * @param {MuiEvent<{}>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnOrderChange?: GridEventListener<GridEvents.columnOrderChange>;
        /**
         * Callback fired when a column visibility changes.
         * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.
         * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].
         * @param {MuiEvent<{}>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         * @deprecated Use `onColumnVisibilityModelChange` instead.
         */
        onColumnVisibilityChange?: GridEventListener<GridEvents.columnVisibilityChange>;
        /**
         * Callback fired when a click event comes from a row container element.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onRowClick?: GridEventListener<GridEvents.rowClick>;
        /**
         * Callback fired when a double click event comes from a row container element.
         * @param {GridRowParams} params With all properties from [[RowParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onRowDoubleClick?: GridEventListener<GridEvents.rowDoubleClick>;
        /**
         * Callback fired when the grid is resized.
         * @param {ElementSize} containerSize With all properties from [[ElementSize]].
         * @param {MuiEvent<{}>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onResize?: GridEventListener<GridEvents.debouncedResize>;
        /**
         * Callback fired when the state of the grid is updated.
         * @param {GridState} state The new state.
         * @param {MuiEvent<{}>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         * @internal
         */
        onStateChange?: GridEventListener<GridEvents.stateChange>;
        /**
         * The zero-based index of the current page.
         * @default 0
         */
        page?: number;
        /**
         * Callback fired when the current page has changed.
         * @param {number} page Index of the page displayed on the Grid.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onPageChange?: (page: number, details: GridCallbackDetails) => void;
        /**
         * Set the number of rows in one page.
         * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.
         * @default 100
         */
        pageSize?: number;
        /**
         * Callback fired when the page size has changed.
         * @param {number} pageSize Size of the page displayed on the Grid.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onPageSizeChange?: (pageSize: number, details: GridCallbackDetails) => void;
        /**
         * Set the edit rows model of the grid.
         */
        editRowsModel?: GridEditRowsModel;
        /**
         * Callback fired when the `editRowsModel` changes.
         * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onEditRowsModelChange?: (editRowsModel: GridEditRowsModel, details: GridCallbackDetails) => void;
        /**
         * Set the filter model of the grid.
         */
        filterModel?: GridFilterModel;
        /**
         * Callback fired when the Filter model changes before the filters are applied.
         * @param {GridFilterModel} model With all properties from [[GridFilterModel]].
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onFilterModelChange?: (model: GridFilterModel, details: GridCallbackDetails) => void;
        /**
         * Set the selection model of the grid.
         */
        selectionModel?: GridInputSelectionModel;
        /**
         * Callback fired when the selection state of one or multiple rows changes.
         * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onSelectionModelChange?: (selectionModel: GridSelectionModel, details: GridCallbackDetails) => void;
        /**
         * Set the column visibility model of the grid.
         * If defined, the grid will ignore the `hide` property in [[GridColDef]].
         */
        columnVisibilityModel?: GridColumnVisibilityModel;
        /**
         * Callback fired when the column visibility model changes.
         * @param {GridColumnVisibilityModel} model The new model.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnVisibilityModelChange?: (model: GridColumnVisibilityModel, details: GridCallbackDetails) => void;
        /**
         * Set the sort model of the grid.
         */
        sortModel?: GridSortModel;
        /**
         * Callback fired when the sort model changes before a column is sorted.
         * @param {GridSortModel} model With all properties from [[GridSortModel]].
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onSortModelChange?: (model: GridSortModel, details: GridCallbackDetails) => void;
        /**
         * The label of the grid.
         */
        'aria-label'?: string;
        /**
         * The id of the element containing a label for the grid.
         */
        'aria-labelledby'?: string;
        /**
         * Set of columns of type [[GridColumns]].
         */
        columns: GridColumns;
        /**
         * An error that will turn the grid into its error state and display the error component.
         */
        error?: any;
        /**
         * Return the id of a given [[GridRowModel]].
         */
        getRowId?: GridRowIdGetter;
        /**
         * If `true`, a  loading overlay is displayed.
         */
        loading?: boolean;
        /**
         * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).
         */
        nonce?: string;
        /**
         * Set of rows of type [[GridRowsProp]].
         */
        rows: GridRowsProp;
        /**
         * The initial state of the DataGrid.
         * The data in it will be set in the state on initialization but will not be controlled.
         * If one of the data in `initialState` is also being controlled, then the control state wins.
         */
        initialState?: GridInitialState;
        /**
         * Overrideable components props dynamically passed to the component at rendering.
         */
        componentsProps?: GridSlotsComponentsProps;
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
        /**
         * Features under development.
         * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.
         */
        experimentalFeatures?: Partial<GridExperimentalFeatures>;
    }
    /**
     * The props of the `DataGridPro` component after the pre-processing phase.
     */
    interface DataGridProProcessedProps extends DataGridProPropsWithDefaultValue, DataGridPropsWithComplexDefaultValueAfterProcessing, DataGridProPropsWithoutDefaultValue {
    }
    /**
     * The `DataGridPro` options with a default value overridable through props
     * None of the entry of this interface should be optional, they all have default values and `DataGridProps` already applies a `Partial<DataGridSimpleOptions>` for the public interface
     * The controlled model do not have a default value at the prop processing level, so they must be defined in `DataGridOtherProps`
     */
    interface DataGridProPropsWithDefaultValue extends DataGridPropsWithDefaultValues {
        /**
         * Set the area in `px` at the bottom of the grid viewport where onRowsScrollEnd is called.
         * @default 80
         */
        scrollEndThreshold: number;
        /**
         * If `true`, the rows will be gathered in a tree structure according to the `getTreeDataPath` prop.
         * @default false
         */
        treeData: boolean;
        /**
         * If above 0, the row children will be expanded up to this depth.
         * If equal to -1, all the row children will be expanded.
         * @default 0
         */
        defaultGroupingExpansionDepth: number;
        /**
         * Determines if a group should be expanded after its creation.
         * This prop takes priority over the `defaultGroupingExpansionDepth` prop.
         * @param {GridRowTreeNodeConfig} node The node of the group to test.
         * @returns {boolean} A boolean indicating if the group is expanded.
         */
        isGroupExpandedByDefault?: (node: GridRowTreeNodeConfig) => boolean;
        /**
         * If `true`, the column pinning is disabled.
         * @default false
         */
        disableColumnPinning: boolean;
        /**
         * If `true`, the filtering will only be applied to the top level rows when grouping rows with the `treeData` prop.
         * @default false
         */
        disableChildrenFiltering: boolean;
        /**
         * If `true`, the sorting will only be applied to the top level rows when grouping rows with the `treeData` prop.
         * @default false
         */
        disableChildrenSorting: boolean;
        /**
         * If `true`, the row grouping is disabled.
         * @default false
         */
        disableRowGrouping: boolean;
        /**
         * If `single`, all column we are grouping by will be represented in the same grouping the same column.
         * If `multiple`, each column we are grouping by will be represented in its own column.
         * @default 'single'
         */
        rowGroupingColumnMode: 'single' | 'multiple';
        /**
         * Function that returns the height of the row detail panel.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @returns {number} The height in pixels.
         * @default "() => 500"
         */
        getDetailPanelHeight: (params: GridRowParams) => number;
    }
    interface DataGridProPropsWithoutDefaultValue extends DataGridPropsWithoutDefaultValue {
        /**
         * Determines the path of a row in the tree data.
         * For instance, a row with the path ["A", "B"] is the child of the row with the path ["A"].
         * Note that all paths must contain at least one element.
         * @param {GridRowModel} row The row from which we want the path.
         * @returns {string[]} The path to the row.
         */
        getTreeDataPath?: (row: GridRowModel) => string[];
        /**
         * Callback fired while a column is being resized.
         * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnResize?: GridEventListener<GridEvents.columnResize>;
        /**
         * Callback fired when the width of a column is changed.
         * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].
         * @param {MuiEvent<React.MouseEvent>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onColumnWidthChange?: GridEventListener<GridEvents.columnWidthChange>;
        /**
         * Callback fired when scrolling to the bottom of the grid viewport.
         * @param {GridRowScrollEndParams} params With all properties from [[GridRowScrollEndParams]].
         * @param {MuiEvent<{}>} event The event object.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onRowsScrollEnd?: GridEventListener<GridEvents.rowsScrollEnd>;
        /**
         * The column fields to display pinned to left or right.
         */
        pinnedColumns?: GridPinnedColumns;
        /**
         * Callback fired when the pinned columns have changed.
         * @param {GridPinnedColumns} pinnedColumns The changed pinned columns.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onPinnedColumnsChange?: (pinnedColumns: GridPinnedColumns, details: GridCallbackDetails) => void;
        /**
         * Set the row grouping model of the grid.
         */
        rowGroupingModel?: GridRowGroupingModel;
        /**
         * Callback fired when the row grouping model changes.
         * @param {GridRowGroupingModel} model Columns used as grouping criteria.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onRowGroupingModelChange?: (model: GridRowGroupingModel, details: GridCallbackDetails) => void;
        /**
         * The grouping column used by the tree data.
         */
        groupingColDef?: GridGroupingColDefOverride | ((params: GridGroupingColDefOverrideParams) => GridGroupingColDefOverride | undefined | null);
        /**
         * The row ids to show the detail panel.
         */
        detailPanelExpandedRowIds?: GridRowId[];
        /**
         * Callback fired when the detail panel of a row is opened or closed.
         * @param {GridRowId[]} ids The ids of the rows which have the detail panel open.
         * @param {GridCallbackDetails} details Additional details for this callback.
         */
        onDetailPanelExpandedRowIdsChange?: (ids: GridRowId[], details: GridCallbackDetails) => void;
        /**
         * Function that returns the element to render in row detail.
         * @param {GridRowParams} params With all properties from [[GridRowParams]].
         * @returns {JSX.Element} The row detail element.
         */
        getDetailPanelContent?: (params: GridRowParams) => React.ReactNode;
    }
    const GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD = "__row_group_by_columns_group__";
    const getRowGroupingFieldFromGroupingCriteria: (groupingCriteria: string | null) => string;
    interface GridPinnedColumns {
        left?: string[];
        right?: string[];
    }
    enum GridPinnedPosition {
        left = "left",
        right = "right"
    }
    /**
     * The column pinning API interface that is available in the grid [[apiRef]].
     */
    interface GridColumnPinningApi {
        /**
         * Pins a column to the left or right side of the grid.
         * @param {string} field The column field to pin.
         * @param {GridPinnedPosition} side Which side to pin the column.
         */
        pinColumn: (field: string, side: GridPinnedPosition) => void;
        /**
         * Unpins a column.
         * @param {string} field The column field to unpin.
         */
        unpinColumn: (field: string) => void;
        /**
         * Returns which columns are pinned.
         * @returns {GridPinnedColumns} An object containing the pinned columns.
         */
        getPinnedColumns: () => GridPinnedColumns;
        /**
         * Changes the pinned columns.
         * @param {GridPinnedColumns} pinnedColumns An object containing the columns to pin.
         */
        setPinnedColumns: (pinnedColumns: GridPinnedColumns) => void;
        /**
         * Returns which side a column is pinned to.
         * @param {string} field The column field to check.
         * @returns {string | false} Which side the column is pinned or `false` if not pinned.
         */
        isColumnPinned: (field: string) => GridPinnedPosition | false;
    }
    type GridColumnPinningState = GridPinnedColumns;
    /**
     * The grid rows total height and row possitions.
     */
    interface GridRowsMetaState {
        /**
         * The sum of of all visible grid rows in the current rows.
         */
        currentPageTotalHeight: number;
        /**
         * The grid rows possitions.
         */
        positions: number[];
    }
    interface GridDetailPanelState {
        expandedRowIds: GridRowId[];
        contentCache: Record<GridRowId, React.ReactNode>;
        heightCache: Record<GridRowId, number>;
    }
    type GridDetailPanelInitialState = Pick<GridDetailPanelState, 'expandedRowIds'>;
    /**
     * TODO: Distinguish pro and community states
     */
    interface GridState {
        rows: GridRowsState;
        rowsMeta: GridRowsMetaState;
        editRows: GridEditRowsModel;
        pagination: GridPaginationState;
        columns: GridColumnsState;
        columnReorder: GridColumnReorderState;
        columnResize: GridColumnResizeState;
        columnMenu: GridColumnMenuState;
        sorting: GridSortingState;
        focus: GridFocusState;
        tabIndex: GridTabIndexState;
        selection: GridSelectionModel;
        filter: GridFilterState;
        preferencePanel: GridPreferencePanelState;
        density: GridDensityState;
        rowGrouping: GridRowGroupingState;
        error?: any;
        pinnedColumns: GridColumnPinningState;
        detailPanel: GridDetailPanelState;
    }
    interface GridInitialState {
        pagination?: GridPaginationInitialState;
        sorting?: GridSortingInitialState;
        filter?: GridFilterInitialState;
        columns?: GridColumnsInitialState;
        preferencePanel?: GridPreferencePanelInitialState;
        rowGrouping?: GridRowGroupingInitialState;
        pinnedColumns?: GridColumnPinningState;
        detailPanel?: GridDetailPanelInitialState;
    }
    interface GridStateChangeParams {
        state: GridState;
        api: GridApi;
    }
    interface GridRowSelectionCheckboxParams {
        value: boolean;
        id: GridRowId;
    }
    interface GridHeaderSelectionCheckboxParams {
        value: boolean;
    }
    /**
     * Object passed as parameter of the valueOptions function for singleSelect column.
     */
    interface GridValueOptionsParams {
        /**
         * The field of the column to which options will be provided
         */
        field: string;
        /**
         * The grid row id.
         */
        id?: GridRowId;
        /**
         * The row model of the row that the current cell belongs to.
         */
        row?: GridRowModel;
    }
    /**
     * The size of a container.
     */
    interface ElementSize {
        /**
         * The height of a container or HTMLElement.
         */
        height: number;
        /**
         * The width of a container or HTMLElement.
         */
        width: number;
    }
    interface GridStatePersistenceApi {
        /**
         * Generates a serializable object containing the exportable parts of the DataGrid state.
         * These values can then be passed to the `initialState` prop or injected using the `restoreState` method.
         * @returns {GridInitialState} The exported state.
         */
        exportState: () => GridInitialState;
        /**
         * Inject the given values into the state of the DataGrid.
         * @param {GridInitialState} stateToRestore The exported state to restore.
         */
        restoreState: (stateToRestore: GridInitialState) => void;
    }
    interface GridRestoreStatePreProcessingValue {
        /**
         * Functions to run after the state has been updated but before re-rendering.
         * This is usually used to apply derived states like `applyFilters` or `applySorting`
         */
        callbacks: (() => void)[];
    }
    interface GridRestoreStatePreProcessingContext {
        stateToRestore: GridInitialState;
    }
    type PreProcessorCallback = (value: any, params?: any) => any;
    type GridPreProcessingGroup = keyof GridPreProcessingGroupLookup;
    interface GridPreProcessingGroupLookup {
        hydrateColumns: {
            value: Omit<GridColumnsRawState, 'columnVisibilityModel'>;
        };
        scrollToIndexes: {
            value: Partial<GridScrollParams>;
            context: Partial<GridCellIndexCoordinates>;
        };
        columnMenu: {
            value: JSX.Element[];
            context: GridColDef;
        };
        canBeReordered: {
            value: boolean;
            context: GridCanBeReorderedPreProcessingContext;
        };
        filteringMethod: {
            value: GridFilteringMethodCollection;
        };
        sortingMethod: {
            value: GridSortingMethodCollection;
        };
        exportState: {
            value: GridInitialState;
        };
        restoreState: {
            value: GridRestoreStatePreProcessingValue;
            context: GridRestoreStatePreProcessingContext;
        };
        rowHeight: {
            value: Record<string, number>;
            context: GridRowEntry;
        };
    }
    type GridPreProcessorsApplierArg<P extends GridPreProcessingGroup, T extends {
        value: any;
    }> = T extends {
        context: any;
    } ? [P, T['value'], T['context']] : [P, T['value']];
    type GridPreProcessorsApplier = <P extends GridPreProcessingGroup>(...params: GridPreProcessorsApplierArg<P, GridPreProcessingGroupLookup[P]>) => GridPreProcessingGroupLookup[P]['value'];
    interface GridPreProcessingApi {
        /**
         * Register a pre-processor and emit an event to notify the agents to re-apply the pre-processors.
         * @param {GridPreProcessingGroup} group The name of the group to bind this pre-processor to.
         * @param {number} id An unique and static identifier of the pre-processor.
         * @param {PreProcessorCallback} callback The pre-processor to register.
         * @returns {() => void} A function to unregister the pre-processor.
         * @ignore - do not document.
         */
        unstable_registerPreProcessor: (group: GridPreProcessingGroup, id: string, callback: PreProcessorCallback) => () => void;
        /**
         * Apply on the value the pre-processors registered on the given group.
         * @param {GridPreProcessingGroup} group The name of the processing group.
         * @param {any} value The value to pass to the first pre-processor.
         * @param {any} params Additional params to pass to the pre-processors.
         * @returns {any} The value after passing through all pre-processors.
         * @ignore - do not document.
         */
        unstable_applyPreProcessors: GridPreProcessorsApplier;
    }
    interface GridRowEventLookup {
        rowClick: {
            params: GridRowParams;
            event: React.MouseEvent<HTMLElement>;
        };
        rowDoubleClick: {
            params: GridRowParams;
            event: React.MouseEvent<HTMLElement>;
        };
        rowMouseEnter: {
            params: GridRowParams;
            event: React.MouseEvent<HTMLElement>;
        };
        rowMouseLeave: {
            params: GridRowParams;
            event: React.MouseEvent<HTMLElement>;
        };
    }
    interface GridColumnHeaderEventLookup {
        columnHeaderClick: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
        columnHeaderDoubleClick: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
        columnHeaderOver: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
        columnHeaderOut: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
        columnHeaderEnter: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
        columnHeaderLeave: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
        columnHeaderKeyDown: {
            params: GridColumnHeaderParams;
            event: React.KeyboardEvent<HTMLElement>;
        };
        columnHeaderFocus: {
            params: GridColumnHeaderParams;
            event: React.FocusEvent<HTMLElement>;
        };
        columnHeaderBlur: {
            params: GridColumnHeaderParams;
            event: React.FocusEvent<HTMLElement>;
        };
        columnHeaderDragStart: {
            params: GridColumnHeaderParams;
            event: React.DragEvent<HTMLElement>;
        };
        columnHeaderDragEnter: {
            params: GridColumnHeaderParams;
            event: React.DragEvent<HTMLElement>;
        };
        columnHeaderDragOver: {
            params: GridColumnHeaderParams;
            event: React.DragEvent<HTMLElement>;
        };
        columnHeaderDragEnd: {
            params: GridColumnHeaderParams;
            event: React.DragEvent<HTMLElement>;
        };
        columnSeparatorMouseDown: {
            params: GridColumnHeaderParams;
            event: React.MouseEvent<HTMLElement>;
        };
    }
    interface GridCellEventLookup {
        cellClick: {
            params: GridCellParams;
            event: React.MouseEvent<HTMLElement>;
        };
        cellDoubleClick: {
            params: GridCellParams;
            event: React.MouseEvent<HTMLElement>;
        };
        cellMouseDown: {
            params: GridCellParams;
            event: React.MouseEvent<HTMLElement>;
        };
        cellMouseUp: {
            params: GridCellParams;
            event: React.MouseEvent<HTMLElement>;
        };
        cellKeyDown: {
            params: GridCellParams;
            event: React.KeyboardEvent<HTMLElement>;
        };
        cellDragEnter: {
            params: GridCellParams;
            event: React.DragEvent<HTMLElement>;
        };
        cellDragOver: {
            params: GridCellParams;
            event: React.DragEvent<HTMLElement>;
        };
    }
    interface GridControlledStateEventLookup {
        pageSizeChange: {
            params: number;
        };
        pageChange: {
            params: number;
        };
        filterModelChange: {
            params: GridFilterModel;
        };
        sortModelChange: {
            params: GridSortModel;
        };
        editRowsModelChange: {
            params: GridEditRowsModel;
        };
        selectionChange: {
            params: GridSelectionModel;
        };
        rowGroupingModelChange: {
            params: GridRowGroupingModel;
        };
        pinnedColumnsChange: {
            params: GridPinnedColumns;
        };
        columnVisibilityModelChange: {
            params: GridColumnVisibilityModel;
        };
        detailPanelsExpandedRowIdsChange: {
            params: GridRowId[];
        };
    }
    interface GridEventLookup extends GridRowEventLookup, GridColumnHeaderEventLookup, GridCellEventLookup, GridControlledStateEventLookup {
        unmount: {};
        componentError: {
            params: any;
        };
        stateChange: {
            params: GridState;
        };
        resize: {
            params: ElementSize;
        };
        viewportInnerSizeChange: {
            params: ElementSize;
        };
        debouncedResize: {
            params: ElementSize;
        };
        rowGroupsPreProcessingChange: {};
        preProcessorRegister: {
            params: GridPreProcessingGroup;
        };
        preProcessorUnregister: {
            params: GridPreProcessingGroup;
        };
        columnsChange: {
            params: string[];
        };
        columnWidthChange: {
            params: GridColumnResizeParams;
            event: MouseEvent | {};
        };
        columnResizeStart: {
            params: {
                field: string;
            };
            event: React.MouseEvent<HTMLElement>;
        };
        columnResizeStop: {
            params: null;
            event: MouseEvent;
        };
        columnVisibilityChange: {
            params: GridColumnVisibilityChangeParams;
        };
        columnResize: {
            params: GridColumnResizeParams;
            event: MouseEvent;
        };
        columnOrderChange: {
            params: GridColumnOrderChangeParams;
        };
        rowsSet: {};
        visibleRowsSet: {};
        rowExpansionChange: {
            params: GridRowTreeNodeConfig;
        };
        cellModeChange: {
            params: GridCellParams;
        };
        cellEditStart: {
            params: GridCellParams;
            event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;
        };
        cellEditStop: {
            params: GridCellParams;
            event: MuiBaseEvent;
        };
        cellEditCommit: {
            params: GridCellEditCommitParams;
            event: MuiBaseEvent;
        };
        editCellPropsChange: {
            params: GridEditCellPropsParams;
            event: React.SyntheticEvent<HTMLElement> | {};
        };
        rowEditStart: {
            params: GridRowParams;
            event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;
        };
        rowEditStop: {
            params: GridRowParams;
            event: MuiBaseEvent;
        };
        rowEditCommit: {
            params: GridRowId;
            event: MuiBaseEvent;
        };
        cellFocusIn: {
            params: GridCellParams;
        };
        cellFocusOut: {
            params: GridCellParams;
            event: MuiBaseEvent;
        };
        cellNavigationKeyDown: {
            params: GridCellParams | GridRowParams;
            event: React.KeyboardEvent<HTMLElement>;
        };
        columnHeaderNavigationKeyDown: {
            params: GridColumnHeaderParams;
            event: React.KeyboardEvent<HTMLElement>;
        };
        rowsScroll: {
            params: GridScrollParams;
        };
        rowsScrollEnd: {
            params: GridRowScrollEndParams;
        };
        virtualScrollerContentSizeChange: {};
        headerSelectionCheckboxChange: {
            params: GridHeaderSelectionCheckboxParams;
        };
        rowSelectionCheckboxChange: {
            params: GridRowSelectionCheckboxParams;
            event: React.ChangeEvent<HTMLElement>;
        };
    }
    type GridEventListener<E extends GridEventsStr> = (params: GridEventLookup[E] extends {
        params: any;
    } ? GridEventLookup[E]['params'] : undefined, event: GridEventLookup[E] extends {
        event: MuiBaseEvent;
    } ? MuiEvent<GridEventLookup[E]['event']> : MuiEvent<{}>, details: GridCallbackDetails) => void;
    type PublisherArgsNoEvent<E extends GridEventsStr, T extends {
        params: any;
    }> = [E, T['params']];
    type PublisherArgsRequiredEvent<E extends GridEventsStr, T extends {
        params: any;
        event: MuiBaseEvent;
    }> = [E, T['params'], T['event']];
    type PublisherArgsOptionalEvent<E extends GridEventsStr, T extends {
        params: any;
        event: MuiBaseEvent;
    }> = PublisherArgsRequiredEvent<E, T> | PublisherArgsNoEvent<E, T>;
    type PublisherArgsEvent<E extends GridEventsStr, T extends {
        params: any;
        event: MuiBaseEvent;
    }> = {} extends T['event'] ? PublisherArgsOptionalEvent<E, T> : PublisherArgsRequiredEvent<E, T>;
    type PublisherArgsParams<E extends GridEventsStr, T extends {
        params: any;
    }> = [E, T['params']];
    type PublisherArgsNoParams<E extends GridEventsStr> = [E];
    type GridEventPublisherArg<E extends GridEventsStr, T> = T extends {
        params: any;
        event: MuiBaseEvent;
    } ? PublisherArgsEvent<E, T> : T extends {
        params: any;
    } ? PublisherArgsParams<E, T> : PublisherArgsNoParams<E>;
    type GridEventPublisher = <E extends GridEventsStr>(...params: GridEventPublisherArg<E, GridEventLookup[E]>) => void;
    type EventListener = (...args: any[]) => void;
    interface EventListenerOptions {
        isFirst?: boolean;
    }
    interface EventListenerCollection {
        /**
         * List of listeners to run before the others
         * They are ran in the opposite order of the registration order
         */
        highPriority: Map<EventListener, true>;
        /**
         * List of events to run after the high priority listeners
         * They are ran in the registration order
         */
        regular: Map<EventListener, true>;
    }
    class EventManager {
        maxListeners: number;
        warnOnce: boolean;
        events: {
            [eventName: string]: EventListenerCollection;
        };
        on(eventName: string, listener: EventListener, options?: EventListenerOptions): void;
        removeListener(eventName: string, listener: EventListener): void;
        removeAllListeners(): void;
        emit(eventName: string, ...args: any[]): void;
        once(eventName: string, listener: EventListener): void;
    }
    /**
     * The core API interface that is available in the grid `apiRef`.
     */
    interface GridCoreApi {
        /**
         * The react ref of the grid root container div element.
         * @ignore - do not document.
         */
        rootElementRef?: React.RefObject<HTMLDivElement>;
        /**
         * The react ref of the grid column container virtualized div element.
         * @ignore - do not document.
         */
        columnHeadersContainerElementRef?: React.RefObject<HTMLDivElement>;
        /**
         * The react ref of the grid column headers container element.
         * @ignore - do not document.
         */
        columnHeadersElementRef?: React.RefObject<HTMLDivElement>;
        /**
         * The react ref of the grid window container element.
         * @ignore - do not document.
         */
        windowRef?: React.RefObject<HTMLDivElement>;
        /**
         * The react ref of the grid data rendering zone.
         * @ignore - do not document.
         */
        renderingZoneRef?: React.RefObject<HTMLDivElement>;
        /**
         * The react ref of the grid header element.
         * @ignore - do not document.
         */
        headerRef?: React.RefObject<HTMLDivElement>;
        /**
         * The react ref of the grid footer element.
         * @ignore - do not document.
         */
        footerRef?: React.RefObject<HTMLDivElement>;
        /**
         * The generic event emitter manager.
         * @ignore - do not document
         */
        unstable_eventManager: EventManager;
        /**
         * Registers a handler for an event.
         * @param {string} event The name of the event.
         * @param {function} handler The handler to be called.
         * @param {object} options Additional options for this listener.
         * @returns {function} A function to unsubscribe from this event.
         */
        subscribeEvent: <E extends GridEventsStr>(event: E, handler: GridEventListener<E>, options?: EventListenerOptions) => () => void;
        /**
         * Emits an event.
         * @param {GridEvents} name The name of the event.
         * @param {any} params Arguments to be passed to the handlers.
         * @param {MuiEvent<MuiBaseEvent>} event The event object to pass forward.
         */
        publishEvent: GridEventPublisher;
        /**
         * Displays the error overlay component.
         * @param {any} props Props to be passed to the `ErrorOverlay` component.
         */
        showError: (props: any) => void;
        /**
         * Unique identifier for each component instance in a page.
         * @ignore - do not document.
         */
        instanceId: number;
    }
    interface GridDensityOption {
        icon: React.ReactElement;
        label: string;
        value: GridDensityTypes;
    }
    /**
     * The density API interface that is available in the grid `apiRef`.
     */
    interface GridDensityApi {
        /**
         * Sets the density of the grid.
         * @param {string} density Can be: `"compact"`, `"standard"`, `"comfortable"`.
         * @param {number} headerHeight The new header height.
         * @param {number} rowHeight The new row height.
         */
        setDensity: (density: GridDensity, headerHeight?: number, rowHeight?: number) => void;
    }
    /**
     * The Row API interface that is available in the grid `apiRef`.
     */
    interface GridRowApi {
        /**
         * Gets the full set of rows as [[Map<GridRowId, GridRowModel>]].
         * @returns {Map<GridRowId, GridRowModel>} The full set of rows.
         */
        getRowModels: () => Map<GridRowId, GridRowModel>;
        /**
         * Gets the total number of rows in the grid.
         * @returns {number} The number of rows.
         */
        getRowsCount: () => number;
        /**
         * Gets the list of row ids.
         * @returns {GridRowId[]} A list of ids.
         */
        getAllRowIds: () => GridRowId[];
        /**
         * Sets a new set of rows.
         * @param {GridRowModel[]} rows The new rows.
         */
        setRows: (rows: GridRowModel[]) => void;
        /**
         * Allows to updates, insert and delete rows in a single call.
         * @param {GridRowModelUpdate[]} updates An array of rows with an `action` specifying what to do.
         */
        updateRows: (updates: GridRowModelUpdate[]) => void;
        /**
         * Gets the row data with a given id.
         * @param {GridRowId} id The id of the row.
         * @returns {GridRowModel} The row data.
         */
        getRow: (id: GridRowId) => GridRowModel | null;
        /**
         * Gets the row node from the internal tree structure.
         * @param {GridRowId} id The id of the row.
         * @returns {GridRowTreeNodeConfig} The row data.
         */
        getRowNode: (id: GridRowId) => GridRowTreeNodeConfig | null;
        /**
         * Expand or collapse a row children.
         * @param {GridRowId} id the ID of the row to expand or collapse.
         * @param {boolean} isExpanded A boolean indicating if the row must be expanded or collapsed.
         */
        setRowChildrenExpansion: (id: GridRowId, isExpanded: boolean) => void;
    }
    /**
     * The Row Meta API interface that is available in the grid `apiRef`.
     */
    interface GridRowsMetaApi {
        /**
         * Gets base row height without considering additional height a row may take.
         * @param {GridRowId} id The id of the row.
         * @returns {number} The target row height.
         * @ignore - do not document.
         */
        unstable_getRowHeight: (id: GridRowId) => number;
    }
    /**
     * The selection API interface that is available in the grid [[apiRef]].
     */
    interface GridSelectionApi {
        /**
         * Change the selection state of a row.
         * @param {GridRowId} id The id of the row.
         * @param {boolean} isSelected Pass `false` to unselect a row. Default is `true`.
         * @param {boolean} resetSelection Whether to reset the already selected rows or not. Default is `false`.
         */
        selectRow: (id: GridRowId, isSelected?: boolean, resetSelection?: boolean) => void;
        /**
         * Change the selection state of multiple rows.
         * @param {GridRowId[]} ids The row ids.
         * @param {boolean} isSelected The new selection state. Default is `true`.
         * @param {boolean} resetSelection Whether to reset the already selected rows or not. Default is `false`.
         */
        selectRows: (ids: GridRowId[], isSelected?: boolean, resetSelection?: boolean) => void;
        /**
         * Change the selection state of all the selectable rows in a range.
         * @param {Object} range The range of rows to select.
         * @param {GridRowId} range.startId The first row id.
         * @param {GridRowId} range.endId The last row id.
         * @param {boolean} isSelected The new selection state. Default is `true`.
         * @param {boolean} resetSelection Whether to reset the selected rows outside of the range or not. Default is `false`.
         */
        selectRowRange: (range: {
            startId: GridRowId;
            endId: GridRowId;
        }, isSelected?: boolean, resetSelection?: boolean) => void;
        /**
         * Determines if a row is selected or not.
         * @param {GridRowId} id The id of the row.
         * @returns {boolean} A boolean indicating if the row is selected.
         */
        isRowSelected: (id: GridRowId) => boolean;
        /**
         * Returns an array of the selected rows.
         * @returns {Map<GridRowId, GridRowModel>} A `Map` with the selected rows.
         */
        getSelectedRows: () => Map<GridRowId, GridRowModel>;
        /**
         * Updates the selected rows to be those passed to the `rowIds` argument.
         * Any row already selected will be unselected.
         * @param {GridRowId[]} rowIds The row ids to select.
         */
        setSelectionModel: (rowIds: GridRowId[]) => void;
    }
    /**
     * The sort API interface that is available in the grid [[apiRef]].
     */
    interface GridSortApi {
        /**
         * Returns the sort model currently applied to the grid.
         * @returns {GridSortModel} The `GridSortModel`.
         */
        getSortModel: () => GridSortModel;
        /**
         * Applies the current sort model to the rows.
         */
        applySorting: () => void;
        /**
         * Updates the sort model and triggers the sorting of rows.
         * @param {GridSortModel} model The `GridSortModel` to be applied.
         */
        setSortModel: (model: GridSortModel) => void;
        /**
         * Sorts a column.
         * @param {GridColDef} column The [[GridColDef]] of the column to be sorted.
         * @param {GridSortDirection} direction The direction to be sorted. By default, the next in the `sortingOrder` prop.
         * @param {boolean} allowMultipleSorting Whether to keep the existing [[GridSortItem]]. Default is `false`.
         */
        sortColumn: (column: GridColDef, direction?: GridSortDirection, allowMultipleSorting?: boolean) => void;
        /**
         * Returns all rows sorted according to the active sort model.
         * @returns {GridRowModel[]} The sorted [[GridRowModel]] objects.
         */
        getSortedRows: () => GridRowModel[];
        /**
         * Returns all row ids sorted according to the active sort model.
         * @returns {GridRowId[]} The sorted [[GridRowId]] values.
         */
        getSortedRowIds: () => GridRowId[];
        /**
         * Gets the `GridRowId` of a row at a specific index.
         * The index is based on the sorted but unfiltered row list.
         * @param {number} index The index of the row
         * @returns {GridRowId} The `GridRowId` of the row.
         */
        getRowIdFromRowIndex: (index: number) => GridRowId;
        /**
         * Gets the row index of a row with a given id.
         * The index is based on the sorted but unfiltered row list.
         * @param {GridRowId} id The `GridRowId` of the row.
         * @returns {number} The index of the row.
         */
        getRowIndex: (id: GridRowId) => number;
    }
    interface GridControlStateItem<E extends keyof GridControlledStateEventLookup> {
        stateId: string;
        propModel?: GridEventLookup[E]['params'];
        stateSelector: OutputSelector<GridControlledStateEventLookup[E]['params']> | ((state: GridState) => GridControlledStateEventLookup[E]['params']);
        propOnChange?: (model: GridControlledStateEventLookup[E]['params'], details: GridCallbackDetails) => void;
        changeEvent: E;
    }
    interface GridStateApi {
        /**
         * Property that contains the whole state of the grid.
         */
        state: GridState;
        /**
         * Forces the grid to rerender. It's often used after a state update.
         */
        forceUpdate: () => void;
        /**
         * Sets the whole state of the grid.
         * @param {GridState | (oldState: GridState) => GridState} state The new state or the callback creating the new state.
         * @returns {boolean} Has the state been updated.
         */
        setState: (state: GridState | ((previousState: GridState) => GridState)) => boolean;
        /**
         * Updates a control state that binds the model, the onChange prop, and the grid state together.
         * @param {GridControlStateItem>} controlState The [[GridControlStateItem]] to be registered.
         * @ignore - do not document.
         */
        unstable_updateControlState: <E extends keyof GridControlledStateEventLookup>(controlState: GridControlStateItem<E>) => void;
    }
    /**
     * Set the types of the texts in the grid.
     */
    interface GridLocaleText {
        noRowsLabel: string;
        noResultsOverlayLabel: string;
        errorOverlayDefaultLabel: string;
        toolbarDensity: React.ReactNode;
        toolbarDensityLabel: string;
        toolbarDensityCompact: string;
        toolbarDensityStandard: string;
        toolbarDensityComfortable: string;
        toolbarColumns: React.ReactNode;
        toolbarColumnsLabel: string;
        toolbarFilters: React.ReactNode;
        toolbarFiltersLabel: string;
        toolbarFiltersTooltipHide: React.ReactNode;
        toolbarFiltersTooltipShow: React.ReactNode;
        toolbarFiltersTooltipActive: (count: number) => React.ReactNode;
        toolbarExport: React.ReactNode;
        toolbarExportLabel: string;
        toolbarExportCSV: React.ReactNode;
        toolbarExportPrint: React.ReactNode;
        columnsPanelTextFieldLabel: string;
        columnsPanelTextFieldPlaceholder: string;
        columnsPanelDragIconLabel: string;
        columnsPanelShowAllButton: React.ReactNode;
        columnsPanelHideAllButton: React.ReactNode;
        filterPanelAddFilter: React.ReactNode;
        filterPanelDeleteIconLabel: string;
        filterPanelOperators: React.ReactNode;
        filterPanelOperatorAnd: React.ReactNode;
        filterPanelOperatorOr: React.ReactNode;
        filterPanelColumns: React.ReactNode;
        filterPanelInputLabel: string;
        filterPanelInputPlaceholder: string;
        filterOperatorContains: string;
        filterOperatorEquals: string;
        filterOperatorStartsWith: string;
        filterOperatorEndsWith: string;
        filterOperatorIs: string;
        filterOperatorNot: string;
        filterOperatorAfter: string;
        filterOperatorOnOrAfter: string;
        filterOperatorBefore: string;
        filterOperatorOnOrBefore: string;
        filterOperatorIsEmpty: string;
        filterOperatorIsNotEmpty: string;
        filterOperatorIsAnyOf: string;
        filterValueAny: string;
        filterValueTrue: string;
        filterValueFalse: string;
        columnMenuLabel: string;
        columnMenuShowColumns: React.ReactNode;
        columnMenuFilter: React.ReactNode;
        columnMenuHideColumn: React.ReactNode;
        columnMenuUnsort: React.ReactNode;
        columnMenuSortAsc: React.ReactNode;
        columnMenuSortDesc: React.ReactNode;
        columnHeaderFiltersTooltipActive: (count: number) => React.ReactNode;
        columnHeaderFiltersLabel: string;
        columnHeaderSortIconLabel: string;
        footerRowSelected: (count: number) => React.ReactNode;
        footerTotalRows: React.ReactNode;
        footerTotalVisibleRows: (visibleCount: number, totalCount: number) => React.ReactNode;
        checkboxSelectionHeaderName: string;
        checkboxSelectionSelectAllRows: string;
        checkboxSelectionUnselectAllRows: string;
        checkboxSelectionSelectRow: string;
        checkboxSelectionUnselectRow: string;
        booleanCellTrueLabel: string;
        booleanCellFalseLabel: string;
        actionsCellMore: string;
        pinToLeft: string;
        pinToRight: string;
        unpin: string;
        treeDataGroupingHeaderName: string;
        treeDataExpand: string;
        treeDataCollapse: string;
        groupingColumnHeaderName: string;
        groupColumn: (name: string) => string;
        unGroupColumn: (name: string) => string;
        expandDetailPanel: string;
        collapseDetailPanel: string;
        MuiTablePagination: Omit<ComponentsPropsList['MuiTablePagination'], 'page' | 'count' | 'onChangePage' | 'rowsPerPage' | 'onPageChange'>;
    }
    type GridTranslationKeys = keyof GridLocaleText;
    /**
     * The grid locale text API [[apiRef]].
     */
    interface GridLocaleTextApi {
        /**
         * Returns the translation for the `key`.
         * @param {T} key One of the keys in [[GridLocaleText]].
         * @returns {GridLocaleText[T]} The translated value.
         */
        getLocaleText: <T extends GridTranslationKeys>(key: T) => GridLocaleText[T];
    }
    /**
     * The options applicable to any export declare format.
     */
    interface GridExportOptions {
        /**
         * The columns exported.
         * This should only be used if you want to restrict the columns exports.
         */
        fields?: string[];
        /**
         * If `true`, the hidden columns will also be exported.
         * @default false
         */
        allColumns?: boolean;
    }
    interface GridCsvGetRowsToExportParams {
        /**
         * The API of the grid.
         */
        apiRef: GridApiRef;
    }
    /**
     * The options to apply on the CSV export.
     */
    interface GridCsvExportOptions extends GridExportOptions {
        /**
         * The character used to separate fields.
         * @default ','
         */
        delimiter?: string;
        /**
         * The string used as the file name.
         * @default `document.title`
         */
        fileName?: string;
        /**
         * If `true`, the UTF-8 Byte Order Mark (BOM) prefixes the exported file.
         * This can allow Excel to automatically detect file encoding as UTF-8.
         * @default false
         */
        utf8WithBom?: boolean;
        /**
         * If `true`, the first row of the CSV will include the headers of the grid.
         * @default true
         */
        includeHeaders?: boolean;
        /**
         * Function that returns the id of the rows to export declare on the order they should be exported.
         * @param {GridCsvGetRowsToExportParams} params With all properties from [[GridCsvGetRowsToExportParams]].
         * @returns {GridRowId[]} The id of the rows to export.
         */
        getRowsToExport?: (params: GridCsvGetRowsToExportParams) => GridRowId[];
    }
    /**
     * The options to apply on the Print export.
     */
    interface GridPrintExportOptions extends GridExportOptions {
        /**
         * The value to be used as the print window title.
         * @default The title of the page.
         */
        fileName?: string;
        /**
         * If `true`, the toolbar is removed for when printing.
         * @default false
         */
        hideToolbar?: boolean;
        /**
         * If `true`, the footer is removed for when printing.
         * @default false
         */
        hideFooter?: boolean;
        /**
         * If `false`, all <style> and <link type="stylesheet" /> tags from the <head> will not be copied
         * to the print window.
         * @default true
         */
        copyStyles?: boolean;
        /**
         * One or more classes passed to the print window.
         */
        bodyClassName?: string;
        /**
         * Provide Print specific styles to the print window.
         */
        pageStyle?: string | Function;
    }
    /**
     * Available export declare formats.
     */
    type GridExportFormat = 'csv' | 'print';
    /**
     * The CSV export declare API interface that is available in the grid [[apiRef]].
     */
    interface GridCsvExportApi {
        /**
         * Returns the grid data as a CSV string.
         * This method is used internally by `exportDataAsCsv`.
         * @param {GridCsvExportOptions} options The options to apply on the export.
         * @returns {string} The data in the CSV format.
         */
        getDataAsCsv: (options?: GridCsvExportOptions) => string;
        /**
         * Downloads and exports a CSV of the grid's data.
         * @param {GridCsvExportOptions} options The options to apply on the export.
         */
        exportDataAsCsv: (options?: GridCsvExportOptions) => void;
    }
    interface GridFocusApi {
        /**
         * Sets the focus to the cell at the given `id` and `field`.
         * @param {GridRowId} id The row id.
         * @param {string} field The column field.
         */
        setCellFocus: (id: GridRowId, field: string) => void;
        /**
         * Sets the focus to the column header at the given `field`.
         * @param {string} field The column field.
         * @param {string} event The event that triggers the action.
         */
        setColumnHeaderFocus: (field: string, event?: MuiBaseEvent) => void;
    }
    /**
     * The filter API interface that is available in the grid [[apiRef]].
     */
    interface GridFilterApi {
        /**
         * Shows the filter panel. If `targetColumnField` is given, a filter for this field is also added.
         * @param {string} targetColumnField The column field to add a filter.
         */
        showFilterPanel: (targetColumnField?: string) => void;
        /**
         * Hides the filter panel.
         */
        hideFilterPanel: () => void;
        /**
         * Updates or inserts a [[GridFilterItem]].
         * @param {GridFilterItem} item The filter to update.
         */
        upsertFilterItem: (item: GridFilterItem) => void;
        /**
         * Applies all filters on all rows.
         * @ignore - do not document.
         */
        unstable_applyFilters: () => void;
        /**
         * Deletes a [[GridFilterItem]].
         * @param {GridFilterItem} item The filter to delete.
         */
        deleteFilterItem: (item: GridFilterItem) => void;
        /**
         * Changes the [[GridLinkOperator]] used to connect the filters.
         * @param {GridLinkOperator} operator The new link operator. It can be: `"and"` or `"or`".
         */
        setFilterLinkOperator: (operator: GridLinkOperator) => void;
        /**
         * Sets the filter model to the one given by `model`.
         * @param {GridFilterModel} model The new filter model.
         */
        setFilterModel: (model: GridFilterModel) => void;
        /**
         * Returns a sorted `Map` containing only the visible rows.
         * @returns {Map<GridRowId, GridRowModel>} The sorted `Map`.
         */
        getVisibleRowModels: () => Map<GridRowId, GridRowModel>;
    }
    /**
     * The column menu API interface that is available in the grid [[apiRef]].
     */
    interface GridColumnMenuApi {
        /**
         * Display the column menu under the `field` column.
         * @param {string} field The column to display the menu.
         */
        showColumnMenu: (field: string) => void;
        /**
         * Hides the column menu that is open.
         */
        hideColumnMenu: () => void;
        /**
         * Toggles the column menu under the `field` column.
         * @param {string} field The field name to toggle the column menu.
         */
        toggleColumnMenu: (field: string) => void;
    }
    /**
     * The preferences panel API interface that is available in the grid [[apiRef]].
     */
    interface GridPreferencesPanelApi {
        /**
         * Displays the preferences panel. The `newValue` argument controls the content of the panel.
         * @param {GridPreferencePanelsValue} newValue The panel to open. Use `"filters"` or `"columns"`.
         */
        showPreferences: (newValue: GridPreferencePanelsValue) => void;
        /**
         * Hides the preferences panel.
         */
        hidePreferences: () => void;
    }
    /**
     * The Print export declare API interface that is available in the grid [[apiRef]].
     */
    interface GridPrintExportApi {
        /**
         * Print the grid's data.
         * @param {GridPrintExportOptions} options The options to apply on the export.
         */
        exportDataAsPrint: (options?: GridPrintExportOptions) => void;
    }
    /**
     * The disable virtualization API interface that is available in the grid [[apiRef]].
     */
    interface GridDisableVirtualizationApi {
        /**
         * Disables grid's virtualization.
         * @ignore - do not document. Remove before releasing v5 stable version.
         */
        unstable_disableVirtualization: () => void;
        /**
         * Enables grid's virtualization.
         * @ignore - do not document. Remove before releasing v5 stable version.
         */
        unstable_enableVirtualization: () => void;
    }
    /**
     * The Clipboard API interface that is available in the grid [[apiRef]].
     */
    interface GridClipboardApi {
        /**
         * Copies the selected rows to the clipboard.
         * The fields will separated by the TAB character.
         * @param {boolean} includeHeaders Whether to include the headers or not. Default is `false`.
         * @ignore - do not document.
         */
        unstable_copySelectedRowsToClipboard: (includeHeaders?: boolean) => void;
    }
    /**
     * The scroll API interface that is available in the grid [[apiRef]].
     */
    interface GridScrollApi {
        /**
         * Triggers the viewport to scroll to the given positions (in pixels).
         * @param {GridScrollParams} params An object containing the `left` or `top` position to scroll.
         */
        scroll: (params: Partial<GridScrollParams>) => void;
        /**
         * Returns the current scroll position.
         * @returns {GridScrollParams} The scroll positions.
         */
        getScrollPosition: () => GridScrollParams;
        /**
         * Triggers the viewport to scroll to the cell at indexes given by `params`.
         * Returns `true` if the grid had to scroll to reach the target.
         * @param {GridCellIndexCoordinates} params The indexes where the cell is.
         * @returns {boolean} Returns `true` if the index was outside of the viewport and the grid had to scroll to reach the target.
         */
        scrollToIndexes: (params: Partial<GridCellIndexCoordinates>) => boolean;
    }
    interface GridVirtualScrollerApi {
        /**
         * Get the current grid rendering context.
         * @returns {GridRenderContext} The `GridRenderContext`.
         * @ignore - do not document.
         */
        unstable_getRenderContext: () => GridRenderContext;
    }
    /**
     * The master/detail API interface that is available in the grid [[apiRef]].
     */
    interface GridDetailPanelApi {
        /**
         * Expands or collapses the detail panel of a row.
         * @param {string} id The row id to toggle the panel.
         */
        toggleDetailPanel: (id: GridRowId) => void;
        /**
         * Returns the rows whose detail panel is open.
         * @returns {GridRowId[]} An array of row ids.
         */
        getExpandedDetailPanels: () => GridRowId[];
        /**
         * Changes which rows to expand the detail panel.
         * @param {GridRowId[]} ids The ids of the rows to open the detail panel.
         */
        setExpandedDetailPanels: (ids: GridRowId[]) => void;
    }
    type GridEditRowApi = GridEditingApi;
    type GridSortDirection = 'asc' | 'desc' | null | undefined;
    interface GridSortCellParams {
        id: GridRowId;
        field: string;
        value: GridCellValue;
        rowNode: GridRowTreeNodeConfig;
        api: GridApi;
    }
    /**
     * The type of the sort comparison function.
     */
    type GridComparatorFn = (v1: GridCellValue, v2: GridCellValue, cellParams1: GridSortCellParams, cellParams2: GridSortCellParams) => number;
    /**
     * Object that represents the column sorted data, part of the [[GridSortModel]].
     */
    interface GridSortItem {
        /**
         * The column field identifier.
         */
        field: string;
        /**
         * The direction of the column that the grid should sort.
         */
        sort: GridSortDirection;
    }
    /**
     * The model used for sorting the grid.
     */
    type GridSortModel = GridSortItem[];
    type GridNativeColTypes = 'string' | 'number' | 'date' | 'dateTime' | 'boolean' | 'singleSelect' | 'actions';
    type GridColType = GridNativeColTypes | string;
    type GridActionsCellItemProps = {
        label: string;
        icon?: React.ReactElement;
    } & (({
        showInMenu?: false;
        icon: React.ReactElement;
    } & IconButtonProps) | ({
        showInMenu: true;
    } & MenuItemProps));
    const GridActionsCellItem: {
        (props: GridActionsCellItemProps): JSX.Element;
        propTypes: any;
    };
    /**
     * Alignment used in position elements in Cells.
     */
    type GridAlignment = 'left' | 'right' | 'center';
    type ValueOptions = string | number | {
        value: any;
        label: string;
    };
    /**
     * Value that can be used as a key for grouping rows
     */
    type GridKeyValue = string | number | boolean;
    /**
     * Column Definition interface.
     */
    interface GridColDef {
        /**
         * The column identifier. It's used to map with [[GridRowModel]] values.
         */
        field: string;
        /**
         * The title of the column rendered in the column header cell.
         */
        headerName?: string;
        /**
         * The description of the column rendered as tooltip if the column header name is not fully displayed.
         */
        description?: string;
        /**
         * Set the width of the column.
         * @default 100
         */
        width?: number;
        /**
         * If set, it indicates that a column has fluid width. Range [0, ∞).
         */
        flex?: number;
        /**
         * Sets the minimum width of a column.
         * @default 50
         */
        minWidth?: number;
        /**
         * Sets the maximum width of a column.
         * @default Infinity
         */
        maxWidth?: number;
        /**
         * If `true`, hide the column.
         * @deprecated Use the `columnVisibility` prop instead.
         * @default false
         */
        hide?: boolean;
        /**
         * If `false`, removes the buttons for hiding this column.
         * @default true
         */
        hideable?: boolean;
        /**
         * If `true`, the column is sortable.
         * @default true
         */
        sortable?: boolean;
        /**
         * The order of the sorting sequence.
         */
        sortingOrder?: GridSortDirection[];
        /**
         * If `true`, the column is resizable.
         * @default true
         */
        resizable?: boolean;
        /**
         * If `true`, the cells of the column are editable.
         * @default false
         */
        editable?: boolean;
        /**
         * If `true`, the rows can be grouped based on this column values (pro-plan only).
         * @default true
         */
        groupable?: boolean;
        /**
         * If `false`, the menu items for column pinning menu will not be rendered.
         * Only available in DataGridPro.
         * @default true
         */
        pinnable?: boolean;
        /**
         * A comparator function used to sort rows.
         */
        sortComparator?: GridComparatorFn;
        /**
         * Type allows to merge this object with a default definition [[GridColDef]].
         * @default 'string'
         */
        type?: GridColType;
        /**
         * To be used in combination with `type: 'singleSelect'`. This is an array (or a function returning an array) of the possible cell values and labels.
         */
        valueOptions?: Array<ValueOptions> | ((params: GridValueOptionsParams) => Array<ValueOptions>);
        /**
         * Allows to align the column values in cells.
         */
        align?: GridAlignment;
        /**
         * Function that allows to get a specific data instead of field to render in the cell.
         * @param {GridValueGetterParams} params Object containing parameters for the getter.
         * @returns {GridCellValue} The cell value.
         */
        valueGetter?: (params: GridValueGetterParams) => GridCellValue;
        /**
         * Function that transforms a complex cell value into a key that be used for grouping the rows.
         * @param {GridGroupingValueGetterParams} params Object containing parameters for the getter.
         * @returns {GridKeyValue | null | undefined} The cell key.
         */
        groupingValueGetter?: (params: GridGroupingValueGetterParams) => GridKeyValue | null | undefined;
        /**
         * Function that allows to customize how the entered value is stored in the row.
         * It only works with cell/row editing.
         * @param {GridValueSetterParams} params Object containing parameters for the setter.
         * @returns {GridRowModel} The row with the updated field.
         */
        valueSetter?: (params: GridValueSetterParams) => GridRowModel;
        /**
         * Function that allows to apply a formatter before rendering its value.
         * @param {GridValueFormatterParams} params Object containing parameters for the formatter.
         * @returns {GridCellValue} The formatted value.
         */
        valueFormatter?: (params: GridValueFormatterParams) => GridCellValue;
        /**
         * Function that takes the user-entered value and converts it to a value used internally.
         * @param {GridCellValue} value The user-entered value.
         * @param {GridCellParams} params The params when called before saving the value.
         * @returns {GridCellValue} The converted value to use internally.
         */
        valueParser?: (value: GridCellValue, params?: GridCellParams) => GridCellValue;
        /**
         * Class name that will be added in cells for that column.
         */
        cellClassName?: GridCellClassNamePropType;
        /**
         * Allows to override the component rendered as cell for this column.
         * @param {GridRenderCellParams} params Object containing parameters for the renderer.
         * @returns {React.ReactNode} The element to be rendered.
         */
        renderCell?: (params: GridRenderCellParams) => React.ReactNode;
        /**
         * Allows to override the component rendered in edit cell mode for this column.
         * @param {GridRenderEditCellParams} params Object containing parameters for the renderer.
         * @returns {React.ReactNode} The element to be rendered.
         */
        renderEditCell?: (params: GridRenderEditCellParams) => React.ReactNode;
        /**
         * Callback fired when the edit props of the cell changes.
         * It allows to process the props that saved into the state.
         * @param {GridPreProcessEditCellProps} params Object contaning parameters of the cell being editted.
         * @returns {GridEditCellProps | Promise<GridEditCellProps>} The new edit cell props.
         */
        preProcessEditCellProps?: (params: GridPreProcessEditCellProps) => GridEditCellProps | Promise<GridEditCellProps>;
        /**
         * Class name that will be added in the column header cell.
         */
        headerClassName?: GridColumnHeaderClassNamePropType;
        /**
         * Allows to render a component in the column header cell.
         * @param {GridColumnHeaderParams} params Object containing parameters for the renderer.
         * @returns {React.ReactNode} The element to be rendered.
         */
        renderHeader?: (params: GridColumnHeaderParams) => React.ReactNode;
        /**
         * Header cell element alignment.
         */
        headerAlign?: GridAlignment;
        /**
         * Toggle the visibility of the sort icons.
         * @default false
         */
        hideSortIcons?: boolean;
        /**
         * If `true`, the column menu is disabled for this column.
         * @default false
         */
        disableColumnMenu?: boolean;
        /**
         * If `true`, the column is filterable.
         * @default true
         */
        filterable?: boolean;
        /**
         * Allows setting the filter operators for this column.
         */
        filterOperators?: GridFilterOperator[];
        /**
         * If `true`, this column cannot be reordered.
         * @default false
         */
        disableReorder?: boolean;
        /**
         * If `true`, this column will not be included in exports.
         * @default false
         */
        disableExport?: boolean;
    }
    interface GridActionsColDef extends GridColDef {
        /**
         * Type allows to merge this object with a default definition [[GridColDef]].
         * @default 'actions'
         */
        type: 'actions';
        /**
         * Function that returns the actions to be shown.
         * @param {GridRowParams} params The params for each row.
         * @returns {React.ReactElement<GridActionsCellItemProps>[]} An array of [[GridActionsCell]] elements.
         */
        getActions: (params: GridRowParams) => React.ReactElement<GridActionsCellItemProps>[];
    }
    type GridEnrichedColDef = GridColDef | GridActionsColDef;
    type GridColumns = GridEnrichedColDef[];
    type GridColTypeDef = Omit<GridColDef, 'field'> & {
        extendType?: GridNativeColTypes;
    };
    type GridStateColDef = GridEnrichedColDef & {
        computedWidth: number;
    };
    /**
     * Meta Info about columns.
     */
    interface GridColumnsMeta {
        totalWidth: number;
        positions: number[];
    }
    interface GridGroupingColDefOverride extends Omit<GridColDef, 'editable' | 'valueSetter' | 'field' | 'type' | 'preProcessEditCellProps' | 'renderEditCell' | 'groupable'> {
        /**
         * The field from which we want to apply the sorting and the filtering for the grouping column.
         * It is only useful when `props.rowGroupingColumnMode === "multiple"` to decide which grouping criteria should be used for sorting and filtering.
         * Do not have any effect when building the tree with the `props.treeData` feature.
         * @default: The sorting and filtering is applied based on the leaf field in any, otherwise based on top level grouping criteria.
         */
        mainGroupingCriteria?: string;
        /**
         * The field from which we want to render the leaves of the tree.
         * Do not have any effect when building the tree with the `props.treeData` feature.
         */
        leafField?: string;
        /**
         * If `true`, the grouping cells will not render the amount of descendants.
         * @default: false
         */
        hideDescendantCount?: boolean;
    }
    interface GridGroupingColDefOverrideParams {
        /**
         * The name of the grouping algorithm currently building the grouping column.
         */
        groupingName: string;
        /**
         * The fields of the columns from which we want to group the values on this new grouping column.
         */
        fields: string[];
    }
    /**
     * The column API interface that is available in the grid [[apiRef]].
     */
    interface GridColumnApi {
        /**
         * Returns the [[GridColDef]] for the given `field`.
         * @param {string} field The column field.
         * @returns {{GridStateColDef}} The [[GridStateColDef]].
         */
        getColumn: (field: string) => GridStateColDef;
        /**
         * Returns an array of [[GridColDef]] containing all the column definitions.
         * @returns {GridStateColDef[]} An array of [[GridStateColDef]].
         */
        getAllColumns: () => GridStateColDef[];
        /**
         * Returns the currently visible columns.
         * @returns {GridStateColDef[]} An array of [[GridStateColDef]].
         */
        getVisibleColumns: () => GridStateColDef[];
        /**
         * Returns the [[GridColumnsMeta]] for each column.
         * @returns {GridColumnsMeta[]} All [[GridColumnsMeta]] objects.
         */
        getColumnsMeta: () => GridColumnsMeta;
        /**
         * Returns the index position of a column. By default, only the visible columns are considered.
         * Pass `false` to `useVisibleColumns` to consider all columns.
         * @param {string} field The column field.
         * @param {boolean} useVisibleColumns Determines if all columns or the visible ones should be considered. Default is `true`.
         * @returns {number} The index position.
         */
        getColumnIndex: (field: string, useVisibleColumns?: boolean) => number;
        /**
         * Returns the left-position of a column relative to the inner border of the grid.
         * @param {string} field The column field.
         * @returns {number} The position in pixels.
         */
        getColumnPosition: (field: string) => number;
        /**
         * Updates the definition of a column.
         * @param {GridColDef} col The new [[GridColDef]] object.
         * @deprecated Use `apiRef.current.updateColumns` instead.
         */
        updateColumn: (col: GridColDef) => void;
        /**
         * Updates the definition of multiple columns at the same time.
         * @param {GridColDef[]} cols The new column [[GridColDef]] objects.
         */
        updateColumns: (cols: GridColDef[]) => void;
        /**
         * Sets the column visibility model to the one given by `model`.
         * @param {GridColumnVisibilityModel} model The new visible columns model.
         */
        setColumnVisibilityModel: (model: GridColumnVisibilityModel) => void;
        /**
         * Changes the visibility of the column referred by `field`.
         * @param {string} field The column to change visibility.
         * @param {boolean} isVisible Pass `true` to show the column, or `false` to hide it. Default is `false`
         */
        setColumnVisibility: (field: string, isVisible: boolean) => void;
        /**
         * Moves a column from its original position to the position given by `targetIndexPosition`.
         * @param {string} field The field name
         * @param {number} targetIndexPosition The new position (0-based).
         */
        setColumnIndex: (field: string, targetIndexPosition: number) => void;
        /**
         * Updates the width of a column.
         * @param {string} field The column field.
         * @param {number} width The new width.
         */
        setColumnWidth: (field: string, width: number) => void;
    }
    /**
     * The logger API interface that is available in the grid `apiRef`.
     */
    interface GridLoggerApi {
        /**
         * @param {string} name The name of the logger
         * @returns {Logger} Instance of the logger
         * @ignore - do not document.
         */
        getLogger: (name: string) => Logger;
    }
    interface GridDimensions {
        /**
         * The viewport size including scrollbars.
         */
        viewportOuterSize: ElementSize;
        /**
         * The viewport size not including scrollbars.
         */
        viewportInnerSize: ElementSize;
        /**
         * Indicates if a scroll is currently needed to go from the beginning of the first column to the end of the last column.
         */
        hasScrollX: boolean;
        /**
         * Indicates if a scroll is currently needed to go from the beginning of the first row to the end of the last row.
         */
        hasScrollY: boolean;
    }
    interface GridDimensionsApi {
        /**
         * Triggers a resize of the component and recalculation of width and height.
         */
        resize: () => void;
        /**
         * Returns the dimensions of the grid
         * @returns {GridDimensions | null} The dimension information of the grid. If `null`, the grid is not ready yet.
         */
        getRootDimensions: () => GridDimensions | null;
        /**
         * Returns the amount of rows that are currently visible in the viewport
         * @returns {number} The amount of rows visible in the viewport
         * @ignore - do not document.
         */
        unstable_getViewportPageSize: () => number;
    }
    /**
     * The full grid API.
     */
    interface GridApi extends GridCoreApi, GridStateApi, GridLoggerApi, GridPreProcessingApi, GridRowGroupsPreProcessingApi, GridDensityApi, GridDimensionsApi, GridRowApi, GridRowsMetaApi, GridEditingApi, GridParamsApi, GridColumnApi, GridSelectionApi, GridSortApi, GridPaginationApi, GridCsvExportApi, GridFocusApi, GridFilterApi, GridColumnMenuApi, GridPreferencesPanelApi, GridPrintExportApi, GridDisableVirtualizationApi, GridLocaleTextApi, GridClipboardApi, GridScrollApi, GridRowGroupingApi, GridVirtualScrollerApi, GridColumnPinningApi, GridStatePersistenceApi, GridDetailPanelApi {
    }
    /**
     * Object passed as parameter in the column [[GridColDef]] cell renderer.
     */
    interface GridCellParams<V = any, R = any, F = V> {
        /**
         * The grid row id.
         */
        id: GridRowId;
        /**
         * The column field of the cell that triggered the event.
         */
        field: string;
        /**
         * The cell value, but if the column has valueGetter, use getValue.
         */
        value: V;
        /**
         * The cell value formatted with the column valueFormatter.
         */
        formattedValue: F;
        /**
         * The row model of the row that the current cell belongs to.
         */
        row: GridRowModel<R>;
        /**
         * The node of the row that the current cell belongs to.
         */
        rowNode: GridRowTreeNodeConfig;
        /**
         * The column of the row that the current cell belongs to.
         */
        colDef: GridStateColDef;
        /**
         * If true, the cell is editable.
         */
        isEditable?: boolean;
        /**
         * The mode of the cell.
         */
        cellMode: GridCellMode;
        /**
         * If true, the cell is the active element.
         */
        hasFocus: boolean;
        /**
         * the tabIndex value.
         */
        tabIndex: 0 | -1;
        /**
         * Get the cell value of a row and field.
         * @param {GridRowId} id The row id.
         * @param {string} field The field.
         * @returns {GridCellValue} The cell value.
         * @deprecated Use `params.row` to directly access the fields you want instead.
         */
        getValue: (id: GridRowId, field: string) => GridCellValue;
    }
    /**
     * GridCellParams containing api.
     */
    interface GridRenderCellParams<V = any, R = any, F = V> extends GridCellParams<V, R, F> {
        /**
         * GridApi that let you manipulate the grid.
         */
        api: GridApi;
    }
    /**
     * GridEditCellProps containing api.
     */
    interface GridRenderEditCellParams extends GridEditCellProps {
        /**
         * GridApi that let you manipulate the grid.
         */
        api: GridApi;
    }
    /**
     * Parameters passed to `colDef.valueGetter`.
     */
    interface GridValueGetterParams<V = any, R = any> extends Omit<GridCellParams<V, R>, 'formattedValue' | 'isEditable'> {
        /**
         * GridApi that let you manipulate the grid.
         */
        api: GridApi;
    }
    /**
     * @deprecated Use `GridValueGetterParams` instead.
     */
    type GridValueGetterFullParams<V = any, R = any> = GridValueGetterParams<V, R>;
    /**
     * Parameters passed to `colDef.groupingValueGetter`.
     */
    interface GridGroupingValueGetterParams<V = any, R = any> {
        /**
         * The grid row id.
         */
        id: GridRowId;
        /**
         * The column field of the cell that triggered the event.
         */
        field: string;
        /**
         * The cell value, does not take `valueGetter` into account.
         */
        value: V;
        /**
         * The row model of the row that the current cell belongs to.
         */
        row: GridRowModel<R>;
        /**
         * The column of the row that the current cell belongs to.
         */
        colDef: GridColDef | GridStateColDef;
        /**
         * The node of the row that the current cell belongs to.
         * It only contains the information available before the actual grouping.
         */
        rowNode: Pick<GridRowTreeNodeConfig, 'id' | 'isAutoGenerated'>;
    }
    /**
     * Object passed as parameter in the column [[GridColDef]] value setter callback.
     */
    interface GridValueSetterParams {
        /**
         * The new cell value.
         */
        value: GridCellValue;
        /**
         * The row that is being edited.
         */
        row: GridRowModel;
    }
    /**
     * Object passed as parameter in the column [[GridColDef]] value formatter callback.
     */
    interface GridValueFormatterParams {
        /**
         * The grid row id.
         * It is not available when the value formatter is called by the filter panel.
         */
        id?: GridRowId;
        /**
         * The column field of the cell that triggered the event.
         */
        field: string;
        /**
         * The cell value, if the column has valueGetter it is the value returned by it.
         */
        value: GridCellValue;
        /**
         * GridApi that let you manipulate the grid.
         */
        api: GridApi;
    }
    /**
     * Object passed as parameter in the column [[GridColDef]] edit cell props change callback.
     */
    interface GridPreProcessEditCellProps {
        /**
         * The grid row id.
         */
        id: GridRowId;
        /**
         * The row that is being editted.
         */
        row: GridRowModel;
        /**
         * The edit cell props.
         */
        props: GridEditCellProps;
    }
    /**
     * Filter operator definition interface.
     */
    interface GridFilterOperator {
        /**
         * The label of the filter operator.
         */
        label?: string;
        /**
         * The name of the filter operator.
         * It will be matched with the `operatorValue` property of the filter items.
         */
        value: string;
        /**
         * The callback that generates a filtering function for a given filter item and column.
         * This function can return `null` to skip filtering for this item and column.
         * @param {GridFilterItem} filterItem The filter item with which we want to filter the column.
         * @param {GridStateColDef} column The column from which we want to filter the rows.
         * @returns {null | ((params: GridCellParams) => boolean)} The function to call to check if a row poss this filter item or not.
         */
        getApplyFilterFn: (filterItem: GridFilterItem, column: GridStateColDef) => null | ((params: GridCellParams) => boolean);
        /**
         * The input component to render in the filter panel for this filter operator.
         */
        InputComponent?: React.JSXElementConstructor<GridFilterInputValueProps> | React.JSXElementConstructor<GridFilterInputMultipleValueProps> | React.JSXElementConstructor<GridFilterInputMultipleSingleSelectProps>;
        /**
         * The props to pass to the input component in the filter panel for this filter operator.
         */
        InputComponentProps?: Record<string, any>;
    }
    const getGridBooleanOperators: () => GridFilterOperator[];
    const getGridDateOperators: (showTime?: boolean | undefined) => GridFilterOperator[];
    const getGridNumericOperators: () => GridFilterOperator[];
    /**
     * @deprecated Use `getGridNumericOperators` instead.
     */
    const getGridNumericColumnOperators: () => GridFilterOperator[];
    const getGridSingleSelectOperators: () => GridFilterOperator[];
    const getGridStringOperators: () => GridFilterOperator[];
    const GRID_ACTIONS_COL_DEF: GridColTypeDef;
    const GRID_BOOLEAN_COL_DEF: GridColTypeDef;
    const GRID_CHECKBOX_SELECTION_COL_DEF: GridColDef;
    function gridDateFormatter({ value }: {
        value: GridCellValue;
    }): string | number | boolean | object | null | undefined;
    function gridDateTimeFormatter({ value }: {
        value: GridCellValue;
    }): string | number | boolean | object | null | undefined;
    const GRID_DATE_COL_DEF: GridColTypeDef;
    const GRID_DATETIME_COL_DEF: GridColTypeDef;
    const GRID_NUMERIC_COL_DEF: GridColTypeDef;
    const GRID_SINGLE_SELECT_COL_DEF: GridColTypeDef;
    const GRID_STRING_COL_DEF: GridColTypeDef;
    type GridColumnTypesRecord = Record<GridColType, GridColTypeDef>;
    const DEFAULT_GRID_COL_TYPE_KEY = "__default__";
    const getGridDefaultColumnTypes: () => GridColumnTypesRecord;
    interface CursorCoordinates {
        x: number;
        y: number;
    }
    /**
     * The ref type of the inner grid root container.
     */
    type GridRootContainerRef = React.RefObject<HTMLDivElement>;
    /**
     * The object containing the column properties of the rendering state.
     */
    interface GridRenderColumnsProps {
        /**
         * The index of the first rendered column.
         */
        firstColIdx: number;
        /**
         * The index of the last rendered column.
         */
        lastColIdx: number;
        /**
         * The left offset required to position the viewport at the beginning of the first rendered column.
         */
        leftEmptyWidth: number;
        /**
         * The right offset required to position the viewport to the end of the last rendered column.
         */
        rightEmptyWidth: number;
    }
    /**
     * The object containing the row properties of the rendering state.
     */
    interface GridRenderRowProps {
        /**
         * The rendering zone page calculated from the scroll position.
         */
        page: number;
        /**
         * The index of the first rendered row.
         */
        firstRowIdx: number;
        /**
         * The index of the last rendered row.
         */
        lastRowIdx: number;
    }
    /**
     * The object containing the pagination properties of the rendering state.
     */
    interface GridRenderPaginationProps {
        /**
         * The current page if pagination is enabled.
         */
        paginationCurrentPage?: number;
        /**
         * The page size if pagination is enabled.
         */
        pageSize?: number;
    }
    /**
     * The full rendering state.
     */
    type GridRenderContextProps = GridRenderColumnsProps & GridRenderRowProps & GridRenderPaginationProps;
    interface GridCellProps {
        align: GridAlignment;
        className?: string;
        colIndex: number;
        field: string;
        rowId: GridRowId;
        formattedValue?: GridCellValue;
        hasFocus?: boolean;
        height: number;
        isEditable?: boolean;
        showRightBorder?: boolean;
        value?: GridCellValue;
        width: number;
        cellMode?: GridCellMode;
        children: React.ReactNode;
        tabIndex: 0 | -1;
        onClick?: React.MouseEventHandler<HTMLDivElement>;
        onDoubleClick?: React.MouseEventHandler<HTMLDivElement>;
        onMouseDown?: React.MouseEventHandler<HTMLDivElement>;
        onMouseUp?: React.MouseEventHandler<HTMLDivElement>;
        onKeyDown?: React.KeyboardEventHandler<HTMLDivElement>;
        onDragEnter?: React.DragEventHandler<HTMLDivElement>;
        onDragOver?: React.DragEventHandler<HTMLDivElement>;
        [x: string]: any;
    }
    function GridCell(props: GridCellProps): JSX.Element;
    namespace GridCell {
        var propTypes: any;
    }
    interface GridEditInputCellProps {
        debounceMs?: number;
    }
    function GridEditInputCell(props: GridEditInputCellProps & GridRenderEditCellParams & Omit<InputBaseProps, 'id'>): JSX.Element;
    namespace GridEditInputCell {
        var propTypes: any;
    }
    const renderEditInputCell: (params: any) => JSX.Element;
    function GridEditSingleSelectCell(props: GridRenderEditCellParams & Omit<SelectProps, 'id'>): JSX.Element;
    namespace GridEditSingleSelectCell {
        var propTypes: any;
    }
    const renderEditSingleSelectCell: (params: any) => JSX.Element;
    type MenuPosition = 'bottom-end' | 'bottom-start' | 'bottom' | 'left-end' | 'left-start' | 'left' | 'right-end' | 'right-start' | 'right' | 'top-end' | 'top-start' | 'top' | undefined;
    interface GridMenuProps extends Omit<PopperProps, 'onKeyDown'> {
        open: boolean;
        target: React.ReactNode;
        onClickAway: ClickAwayListenerProps['onClickAway'];
        position?: MenuPosition;
        onExited?: GrowProps['onExited'];
    }
    const GridMenu: {
        (props: GridMenuProps): JSX.Element;
        propTypes: any;
    };
    type GridActionsCellProps = Pick<GridRenderCellParams, 'colDef' | 'id' | 'api'> & Pick<GridMenuProps, 'position'>;
    const GridActionsCell: {
        (props: GridActionsCellProps): JSX.Element;
        propTypes: any;
    };
    const renderActionsCell: (params: GridRenderCellParams) => JSX.Element;
    interface GridTreeDataGroupingCellProps extends GridRenderCellParams {
        hideDescendantCount?: boolean;
    }
    const GridTreeDataGroupingCell: {
        (props: GridTreeDataGroupingCellProps): JSX.Element;
        propTypes: any;
    };
    const GridDetailPanelToggleCell: {
        (props: GridRenderCellParams): JSX.Element;
        propTypes: any;
    };
    interface GridRootProps extends React.HTMLAttributes<HTMLDivElement> {
        /**
         * The system prop that allows defining system overrides as well as additional CSS styles.
         */
        sx?: SxProps<Theme>;
    }
    const GridRoot: React.ForwardRefExoticComponent<GridRootProps & React.RefAttributes<HTMLDivElement>>;
    type GridFooterContainerProps = React.HTMLAttributes<HTMLDivElement>;
    const GridFooterContainer: React.ForwardRefExoticComponent<GridFooterContainerProps & React.RefAttributes<HTMLDivElement>>;
    type GridOverlayProps = React.HTMLAttributes<HTMLDivElement>;
    const GridOverlay: React.ForwardRefExoticComponent<GridOverlayProps & React.RefAttributes<HTMLDivElement>>;
    type GridToolbarContainerProps = React.HTMLAttributes<HTMLDivElement>;
    const GridToolbarContainer: React.ForwardRefExoticComponent<GridToolbarContainerProps & React.RefAttributes<HTMLDivElement>>;
    enum GridColumnHeaderSeparatorSides {
        Left = "left",
        Right = "right"
    }
    interface GridColumnHeaderSeparatorProps extends React.HTMLAttributes<HTMLDivElement> {
        resizable: boolean;
        resizing: boolean;
        height: number;
        side?: GridColumnHeaderSeparatorSides;
    }
    function GridColumnHeaderSeparatorRaw(props: GridColumnHeaderSeparatorProps): JSX.Element;
    namespace GridColumnHeaderSeparatorRaw {
        var propTypes: any;
    }
    const GridColumnHeaderSeparator: React.MemoExoticComponent<typeof GridColumnHeaderSeparatorRaw>;
    interface GridColumnHeaderItemProps {
        colIndex: number;
        column: GridStateColDef;
        columnMenuOpen: boolean;
        headerHeight: number;
        isDragging: boolean;
        isResizing: boolean;
        isLastColumn: boolean;
        extendRowFullWidth: boolean;
        sortDirection: GridSortDirection;
        sortIndex?: number;
        filterItemsCounter?: number;
        hasFocus?: boolean;
        tabIndex: 0 | -1;
        disableReorder?: boolean;
        separatorSide?: GridColumnHeaderSeparatorProps['side'];
    }
    function GridColumnHeaderItem(props: GridColumnHeaderItemProps): JSX.Element;
    namespace GridColumnHeaderItem {
        var propTypes: any;
    }
    interface GridColumnHeaderSortIconProps {
        direction: GridSortDirection;
        index: number | undefined;
        sortingOrder: GridSortDirection[];
    }
    function GridColumnHeaderSortIconRaw(props: GridColumnHeaderSortIconProps): JSX.Element | null;
    namespace GridColumnHeaderSortIconRaw {
        var propTypes: any;
    }
    const GridColumnHeaderSortIcon: React.MemoExoticComponent<typeof GridColumnHeaderSortIconRaw>;
    interface GridColumnHeaderTitleProps {
        label: string;
        columnWidth: number;
        description?: string;
    }
    function GridColumnHeaderTitle(props: GridColumnHeaderTitleProps): JSX.Element;
    namespace GridColumnHeaderTitle {
        var propTypes: any;
    }
    const GridCellCheckboxForwardRef: React.ForwardRefExoticComponent<GridCellParams<any, any, any> & React.RefAttributes<HTMLInputElement>>;
    const GridCellCheckboxRenderer: React.MemoExoticComponent<React.ForwardRefExoticComponent<GridCellParams<any, any, any> & React.RefAttributes<HTMLInputElement>>>;
    const GridHeaderCheckbox: React.ForwardRefExoticComponent<GridColumnHeaderParams & React.RefAttributes<HTMLInputElement>>;
    const GridArrowUpwardIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridArrowDownwardIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridKeyboardArrowRight: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridExpandMoreIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridFilterListIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridFilterAltIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridSearchIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridMenuIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridCheckCircleIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridColumnIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridSeparatorIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridViewHeadlineIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridTableRowsIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridViewStreamIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridTripleDotsVerticalIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridCloseIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridAddIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridRemoveIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridLoadIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridDragIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridSaveAltIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridCheckIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    const GridMoreVertIcon: _mui_material_OverridableComponent.OverridableComponent<_mui_material.SvgIconTypeMap<{}, "svg">> & {
        muiName: string;
    };
    interface GridFilterItemProps {
        column: GridColDef;
        onClick: (event: React.MouseEvent<any>) => void;
    }
    const GridColumnsMenuItem: {
        (props: GridFilterItemProps): JSX.Element | null;
        propTypes: any;
    };
    const GridFilterMenuItem: {
        (props: GridFilterItemProps): JSX.Element | null;
        propTypes: any;
    };
    interface GridColumnHeaderMenuProps {
        columnMenuId?: string;
        columnMenuButtonId?: string;
        ContentComponent: React.JSXElementConstructor<any>;
        contentComponentProps?: any;
        field: string;
        open: boolean;
        target: Element | null;
        onExited?: GridMenuProps['onExited'];
    }
    function GridColumnHeaderMenu({ columnMenuId, columnMenuButtonId, ContentComponent, contentComponentProps, field, open, target, onExited, }: GridColumnHeaderMenuProps): JSX.Element | null;
    namespace GridColumnHeaderMenu {
        var propTypes: any;
    }
    interface GridColumnMenuProps extends React.HTMLAttributes<HTMLUListElement> {
        hideMenu: (event: React.SyntheticEvent) => void;
        currentColumn: GridColDef;
        open: boolean;
        id?: string;
        labelledby?: string;
    }
    const GridColumnMenu: React.ForwardRefExoticComponent<GridColumnMenuProps & React.RefAttributes<HTMLUListElement>>;
    const HideGridColMenuItem: {
        (props: GridFilterItemProps): JSX.Element | null;
        propTypes: any;
    };
    const SortGridMenuItems: {
        (props: GridFilterItemProps): JSX.Element | null;
        propTypes: any;
    };
    const GridColumnMenuContainer: React.ForwardRefExoticComponent<GridColumnMenuProps & React.RefAttributes<HTMLUListElement>>;
    interface GridColumnPinningMenuItemsProps {
        column?: GridColDef;
        onClick?: (event: React.MouseEvent<any>) => void;
    }
    const GridColumnPinningMenuItems: {
        (props: GridColumnPinningMenuItemsProps): JSX.Element | null;
        propTypes: any;
    };
    function GridColumnsPanel(): JSX.Element;
    interface GridPanelClasses {
        /** Styles applied to the root element. */
        root: string;
        /** Styles applied to the paper element. */
        paper: string;
    }
    interface GridPanelProps extends InternalStandardProps<MUIStyledCommonProps<Theme> & PopperProps, 'children'> {
        children?: React.ReactNode;
        /**
         * Override or extend the styles applied to the component.
         */
        classes?: Partial<GridPanelClasses>;
        open: boolean;
    }
    const gridPanelClasses: Record<"panel" | "paper", string>;
    const GridPanel: React.ForwardRefExoticComponent<Pick<GridPanelProps, "classes" | "children" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "slot" | "spellCheck" | "style" | "tabIndex" | "title" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "anchorEl" | "container" | "disablePortal" | "keepMounted" | "modifiers" | "open" | "placement" | "popperOptions" | "popperRef" | "transition" | "theme" | "as" | "sx"> & React.RefAttributes<HTMLDivElement>>;
    function GridPanelContent(props: React.PropsWithChildren<React.HTMLAttributes<HTMLDivElement>>): JSX.Element;
    function GridPanelFooter(props: React.PropsWithChildren<React.HTMLAttributes<HTMLDivElement>>): JSX.Element;
    function GridPanelHeader(props: React.PropsWithChildren<React.HTMLAttributes<HTMLDivElement>>): JSX.Element;
    interface GridPanelWrapperProps extends React.PropsWithChildren<React.HTMLAttributes<HTMLDivElement>>, MUIStyledCommonProps<Theme> {
    }
    function GridPanelWrapper(props: GridPanelWrapperProps): JSX.Element;
    const GridPreferencesPanel: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>>;
    interface GridFilterFormProps {
        item: GridFilterItem;
        hasMultipleFilters: boolean;
        showMultiFilterOperators?: boolean;
        multiFilterOperator?: GridLinkOperator;
        disableMultiFilterOperator?: boolean;
        focusElementRef?: React.Ref<any>;
        applyFilterChanges: (item: GridFilterItem) => void;
        applyMultiFilterOperatorChanges: (operator: GridLinkOperator) => void;
        deleteFilter: (item: GridFilterItem) => void;
        linkOperators?: GridLinkOperator[];
        columnsSort?: 'asc' | 'desc';
        deleteIconProps?: any;
        linkOperatorInputProps?: any;
        operatorInputProps?: any;
        columnInputProps?: any;
        valueInputProps?: any;
    }
    function GridFilterForm(props: GridFilterFormProps): JSX.Element;
    namespace GridFilterForm {
        var propTypes: any;
    }
    const SUBMIT_FILTER_STROKE_TIME = 500;
    interface GridTypeFilterInputValueProps extends GridFilterInputValueProps {
        type?: 'text' | 'number' | 'date' | 'datetime-local' | 'singleSelect';
    }
    function GridFilterInputValue(props: GridTypeFilterInputValueProps & TextFieldProps): JSX.Element;
    namespace GridFilterInputValue {
        var propTypes: any;
    }
    type GridFilterInputDateProps = GridFilterInputValueProps & TextFieldProps & {
        type?: 'date' | 'datetime-local';
    };
    const SUBMIT_FILTER_DATE_STROKE_TIME = 500;
    function GridFilterInputDate(props: GridFilterInputDateProps): JSX.Element;
    namespace GridFilterInputDate {
        var propTypes: any;
    }
    type GridFilterInputSingleSelectProps = GridFilterInputValueProps & TextFieldProps & {
        type?: 'singleSelect';
    };
    function GridFilterInputSingleSelect(props: GridFilterInputSingleSelectProps): JSX.Element;
    namespace GridFilterInputSingleSelect {
        var propTypes: any;
    }
    interface GridFilterPanelProps extends Pick<GridFilterFormProps, 'linkOperators' | 'columnsSort'> {
        sx?: SxProps$1<Theme>;
        filterFormProps?: Pick<GridFilterFormProps, 'columnsSort' | 'deleteIconProps' | 'linkOperatorInputProps' | 'operatorInputProps' | 'columnInputProps' | 'valueInputProps'>;
    }
    function GridFilterPanel(props: GridFilterPanelProps): JSX.Element;
    namespace GridFilterPanel {
        var propTypes: any;
    }
    interface GridExportDisplayOptions {
        /**
         * If `true`, this export declare option will be removed from the GridToolbarExport menu.
         * @default false
         */
        disableToolbarButton?: boolean;
    }
    interface GridToolbarExportProps extends ButtonProps {
        csvOptions?: GridCsvExportOptions & GridExportDisplayOptions;
        printOptions?: GridPrintExportOptions & GridExportDisplayOptions;
    }
    const GridToolbarExport: React.ForwardRefExoticComponent<Pick<GridToolbarExportProps, "className" | "style" | "classes" | "form" | "slot" | "title" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "action" | "centerRipple" | "disabled" | "disableRipple" | "disableTouchRipple" | "focusRipple" | "focusVisibleClassName" | "LinkComponent" | "onFocusVisible" | "sx" | "TouchRippleProps" | "touchRippleRef" | "disableElevation" | "disableFocusRipple" | "endIcon" | "fullWidth" | "href" | "size" | "startIcon" | "variant" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "name" | "type" | "value" | "csvOptions" | "printOptions"> & React.RefAttributes<HTMLButtonElement>>;
    interface GridToolbarProps extends GridToolbarContainerProps, Pick<GridToolbarExportProps, 'csvOptions' | 'printOptions'> {
    }
    const GridToolbar: React.ForwardRefExoticComponent<GridToolbarProps & React.RefAttributes<HTMLDivElement>>;
    const GridToolbarColumnsButton: React.ForwardRefExoticComponent<Pick<ButtonProps<"button", {}>, keyof _mui_material_OverridableComponent.CommonProps | "form" | "slot" | "title" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "action" | "centerRipple" | "disabled" | "disableRipple" | "disableTouchRipple" | "focusRipple" | "focusVisibleClassName" | "LinkComponent" | "onFocusVisible" | "sx" | "TouchRippleProps" | "touchRippleRef" | "disableElevation" | "disableFocusRipple" | "endIcon" | "fullWidth" | "href" | "size" | "startIcon" | "variant" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "name" | "type" | "value"> & React.RefAttributes<HTMLButtonElement>>;
    const GridToolbarDensitySelector: React.ForwardRefExoticComponent<Pick<ButtonProps<"button", {}>, keyof _mui_material_OverridableComponent.CommonProps | "form" | "slot" | "title" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "action" | "centerRipple" | "disabled" | "disableRipple" | "disableTouchRipple" | "focusRipple" | "focusVisibleClassName" | "LinkComponent" | "onFocusVisible" | "sx" | "TouchRippleProps" | "touchRippleRef" | "disableElevation" | "disableFocusRipple" | "endIcon" | "fullWidth" | "href" | "size" | "startIcon" | "variant" | "key" | "autoFocus" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "name" | "type" | "value"> & React.RefAttributes<HTMLButtonElement>>;
    interface GridToolbarFilterButtonProps extends Omit<TooltipProps, 'title' | 'children' | 'componentsProps'> {
        /**
         * The props used for each slot inside.
         * @default {}
         */
        componentsProps?: {
            button?: ButtonProps;
        };
    }
    const GridToolbarFilterButton: React.ForwardRefExoticComponent<Pick<GridToolbarFilterButtonProps, "classes" | "slot" | "style" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "sx" | "componentsProps" | "arrow" | "components" | "describeChild" | "disableFocusListener" | "disableHoverListener" | "disableInteractive" | "disableTouchListener" | "enterDelay" | "enterNextDelay" | "enterTouchDelay" | "followCursor" | "leaveDelay" | "leaveTouchDelay" | "onClose" | "onOpen" | "open" | "placement" | "PopperComponent" | "PopperProps" | "TransitionComponent" | "TransitionProps"> & React.RefAttributes<HTMLButtonElement>>;
    const GridApiContext: React.Context<GridApiRef | undefined>;
    interface AutoSizerSize {
        height: number;
        width: number;
    }
    interface AutoSizerProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'> {
        /**
         * Function responsible for rendering children.
         * @param {AutoSizerSize} size The grid's size.
         * @returns {React.ReactNode} The children to render.
         */
        children: (size: AutoSizerSize) => React.ReactNode;
        /**
         * Default height to use for initial render; useful for SSR.
         * @default null
         */
        defaultHeight?: number;
        /**
         * Default width to use for initial render; useful for SSR.
         * @default null
         */
        defaultWidth?: number;
        /**
         * If `true`, disable dynamic :height property.
         * @default false
         */
        disableHeight?: boolean;
        /**
         * If `true`, disable dynamic :width property.
         * @default false
         */
        disableWidth?: boolean;
        /**
         * Nonce of the inlined stylesheet for Content Security Policy.
         */
        nonce?: string;
        /**
         * Callback to be invoked on-resize.
         * @param {AutoSizerSize} size The grid's size.
         */
        onResize?: (size: AutoSizerSize) => void;
    }
    const GridAutoSizer: React.ForwardRefExoticComponent<AutoSizerProps & React.RefAttributes<HTMLDivElement>>;
    const GridFooter: React.ForwardRefExoticComponent<GridFooterContainerProps & React.RefAttributes<HTMLDivElement>>;
    const GridHeader: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>>;
    const GridLoadingOverlay: React.ForwardRefExoticComponent<GridOverlayProps & React.RefAttributes<HTMLDivElement>>;
    const GridNoRowsOverlay: React.ForwardRefExoticComponent<GridOverlayProps & React.RefAttributes<HTMLDivElement>>;
    const GridPagination: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement>>;
    interface RowCountProps {
        rowCount: number;
        visibleRowCount: number;
    }
    const GridRowCount: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & RowCountProps & React.RefAttributes<HTMLDivElement>>;
    interface GridRowProps {
        rowId: GridRowId;
        selected: boolean;
        index: number;
        rowHeight: number;
        containerWidth: number;
        row: GridRowModel;
        firstColumnToRender: number;
        lastColumnToRender: number;
        visibleColumns: GridStateColDef[];
        renderedColumns: GridStateColDef[];
        cellFocus: GridCellIdentifier | null;
        cellTabIndex: GridCellIdentifier | null;
        editRowsState: GridEditRowsModel;
        onClick?: React.MouseEventHandler<HTMLDivElement>;
        onDoubleClick?: React.MouseEventHandler<HTMLDivElement>;
        onMouseEnter?: React.MouseEventHandler<HTMLDivElement>;
        onMouseLeave?: React.MouseEventHandler<HTMLDivElement>;
    }
    function GridRow(props: React.HTMLAttributes<HTMLDivElement> & GridRowProps): JSX.Element;
    namespace GridRow {
        var propTypes: any;
    }
    interface SelectedRowCountProps {
        selectedRowCount: number;
    }
    const GridSelectedRowCount: React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & SelectedRowCountProps & React.RefAttributes<HTMLDivElement>>;
    interface ScrollAreaProps {
        scrollDirection: 'left' | 'right';
    }
    function GridScrollAreaRaw(props: ScrollAreaProps): JSX.Element | null;
    namespace GridScrollAreaRaw {
        var propTypes: any;
    }
    const GridScrollArea: React.MemoExoticComponent<typeof GridScrollAreaRaw>;
    const GRID_EXPERIMENTAL_ENABLED: boolean;
    const GRID_DEFAULT_LOCALE_TEXT: GridLocaleText;
    const gridColumnMenuSelector: (state: GridState) => GridColumnMenuState;
    const gridColumnResizeSelector: (state: GridState) => GridColumnResizeState;
    const gridResizingColumnFieldSelector: OutputSelector<string>;
    const gridPinnedColumnsSelector: (state: GridState) => GridPinnedColumns;
    const gridColumnsSelector: (state: GridState) => GridColumnsState;
    const allGridColumnsFieldsSelector: (state: GridState) => string[];
    const gridColumnLookupSelector: (state: GridState) => GridColumnLookup;
    const allGridColumnsSelector: OutputSelector<GridStateColDef[]>;
    const gridColumnVisibilityModelSelector: OutputSelector<GridColumnVisibilityModel>;
    const visibleGridColumnsSelector: OutputSelector<GridStateColDef[]>;
    const gridVisibleColumnFieldsSelector: OutputSelector<string[]>;
    const gridColumnsMetaSelector: OutputSelector<{
        totalWidth: number;
        positions: number[];
    }>;
    const filterableGridColumnsSelector: OutputSelector<GridStateColDef[]>;
    const filterableGridColumnsIdsSelector: OutputSelector<string[]>;
    const visibleGridColumnsLengthSelector: OutputSelector<number>;
    const gridColumnsTotalWidthSelector: OutputSelector<number>;
    /**
     * @deprecated Should have been internal only, you can inline the logic.
     */
    const getGridColDef: (columnTypes: GridColumnTypesRecord, type: GridColType | undefined) => GridColTypeDef;
    const gridDensitySelector: (state: GridState) => GridDensityState;
    const gridDensityValueSelector: OutputSelector<GridDensity>;
    const gridDensityRowHeightSelector: OutputSelector<number>;
    const gridDensityHeaderHeightSelector: OutputSelector<number>;
    const gridDensityFactorSelector: OutputSelector<number>;
    const gridEditRowsStateSelector: (state: GridState) => GridEditRowsModel;
    const gridFocusStateSelector: (state: GridState) => GridFocusState;
    const gridFocusCellSelector: OutputSelector<GridCellIdentifier | null>;
    const gridFocusColumnHeaderSelector: OutputSelector<GridColumnIdentifier | null>;
    const gridTabIndexStateSelector: (state: GridState) => GridTabIndexState;
    const gridTabIndexCellSelector: OutputSelector<GridCellIdentifier | null>;
    const gridTabIndexColumnHeaderSelector: OutputSelector<GridColumnIdentifier | null>;
    const gridPreferencePanelStateSelector: (state: GridState) => GridPreferencePanelState;
    const gridRowsMetaSelector: (state: GridState) => GridRowsMetaState;
    const gridRowsStateSelector: (state: GridState) => GridRowsState;
    const gridRowCountSelector: OutputSelector<number>;
    const gridTopLevelRowCountSelector: OutputSelector<number>;
    const gridRowsLookupSelector: OutputSelector<GridRowsLookup>;
    const gridRowTreeSelector: OutputSelector<GridRowTreeConfig>;
    const gridRowGroupingNameSelector: OutputSelector<string>;
    const gridRowTreeDepthSelector: OutputSelector<number>;
    const gridRowIdsSelector: OutputSelector<GridRowId[]>;
    const gridSelectionStateSelector: (state: GridState) => GridSelectionModel;
    const selectedGridRowsCountSelector: OutputSelector<number>;
    const selectedGridRowsSelector: OutputSelector<Map<GridRowId, {
        [key: string]: any;
    }>>;
    const selectedIdsLookupSelector: OutputSelector<{}>;
    /**
     * @category Sorting
     * @ignore - do not document.
     */
    const gridSortingStateSelector: (state: GridState) => GridSortingState;
    /**
     * Get the id of the rows after the sorting process.
     * @category Sorting
     */
    const gridSortedRowIdsSelector: OutputSelector<GridRowId[]>;
    /**
     * Get the id and the model of the rows after the sorting process.
     * @category Sorting
     */
    const gridSortedRowEntriesSelector: OutputSelector<{
        id: GridRowId;
        model: {
            [key: string]: any;
        };
    }[]>;
    /**
     * Get the current sorting model.
     * @category Sorting
     */
    const gridSortModelSelector: OutputSelector<GridSortModel>;
    type GridSortColumnLookup = Record<string, {
        sortDirection: GridSortDirection;
        sortIndex?: number;
    }>;
    /**
     * @category Sorting
     * @ignore - do not document.
     */
    const gridSortColumnLookupSelector: OutputSelector<GridSortColumnLookup>;
    const gridStringOrNumberComparator: GridComparatorFn;
    const gridNumberComparator: GridComparatorFn;
    const gridDateComparator: (value1: GridCellValue, value2: GridCellValue) => number;
    const GRID_TREE_DATA_GROUPING_FIELD = "__tree_data_group__";
    const GRID_DETAIL_PANEL_TOGGLE_FIELD = "__detail_panel_toggle__";
    const GRID_DETAIL_PANEL_TOGGLE_COL_DEF: GridColDef;
    const gridDetailPanelExpandedRowIdsSelector: (state: GridState) => GridRowId[];
    const gridDetailPanelExpandedRowsContentCacheSelector: (state: GridState) => Record<GridRowId, React.ReactNode>;
    const gridDetailPanelExpandedRowsHeightCacheSelector: (state: GridState) => Record<GridRowId, number>;
    /**
     * @deprecated Use `apiRef.current` instead.
     */
    const useGridApi: (apiRef: GridApiRef) => GridApi;
    function useGridApiContext(): GridApiRef;
    type UnregisterToken = {
        cleanupToken: number;
    };
    type UnsubscribeFn = () => void;
    interface CleanupTracking {
        register(object: any, unsubscribe: UnsubscribeFn, unregisterToken: UnregisterToken): void;
        unregister(unregisterToken: UnregisterToken): void;
    }
    /**
     * Signal to the underlying logic what version of the public component API
     * of the data grid is exposed.
     */
    enum GridSignature {
        DataGrid = "DataGrid",
        DataGridPro = "DataGridPro"
    }
    function createUseGridApiEventHandler(registry: CleanupTracking): <E extends "resize" | "debouncedResize" | "viewportInnerSizeChange" | "componentError" | "unmount" | "cellModeChange" | "cellClick" | "cellDoubleClick" | "cellMouseDown" | "cellMouseUp" | "cellKeyDown" | "cellFocusIn" | "cellFocusOut" | "cellDragEnter" | "cellDragOver" | "editCellPropsChange" | "cellEditCommit" | "cellEditStart" | "cellEditStop" | "rowEditStart" | "rowEditStop" | "rowEditCommit" | "cellNavigationKeyDown" | "rowClick" | "rowDoubleClick" | "rowMouseEnter" | "rowMouseLeave" | "editRowsModelChange" | "columnHeaderBlur" | "columnHeaderFocus" | "columnHeaderNavigationKeyDown" | "columnHeaderKeyDown" | "columnHeaderClick" | "columnHeaderDoubleClick" | "columnHeaderOver" | "columnHeaderOut" | "columnHeaderEnter" | "columnHeaderLeave" | "columnHeaderDragStart" | "columnHeaderDragOver" | "columnHeaderDragEnter" | "columnHeaderDragEnd" | "selectionChange" | "headerSelectionCheckboxChange" | "rowSelectionCheckboxChange" | "pageChange" | "pageSizeChange" | "rowGroupingModelChange" | "rowsScroll" | "rowsScrollEnd" | "columnSeparatorMouseDown" | "columnResize" | "columnWidthChange" | "columnResizeStart" | "columnResizeStop" | "columnOrderChange" | "rowsSet" | "rowExpansionChange" | "visibleRowsSet" | "columnsChange" | "detailPanelsExpandedRowIdsChange" | "pinnedColumnsChange" | "preProcessorRegister" | "preProcessorUnregister" | "rowGroupsPreProcessingChange" | "sortModelChange" | "filterModelChange" | "columnVisibilityModelChange" | "stateChange" | "columnVisibilityChange" | "virtualScrollerContentSizeChange">(apiRef: GridApiRef, eventName: E, handler?: GridEventListener<E> | undefined, options?: EventListenerOptions | undefined) => void;
    const useGridApiEventHandler: <E extends "resize" | "debouncedResize" | "viewportInnerSizeChange" | "componentError" | "unmount" | "cellModeChange" | "cellClick" | "cellDoubleClick" | "cellMouseDown" | "cellMouseUp" | "cellKeyDown" | "cellFocusIn" | "cellFocusOut" | "cellDragEnter" | "cellDragOver" | "editCellPropsChange" | "cellEditCommit" | "cellEditStart" | "cellEditStop" | "rowEditStart" | "rowEditStop" | "rowEditCommit" | "cellNavigationKeyDown" | "rowClick" | "rowDoubleClick" | "rowMouseEnter" | "rowMouseLeave" | "editRowsModelChange" | "columnHeaderBlur" | "columnHeaderFocus" | "columnHeaderNavigationKeyDown" | "columnHeaderKeyDown" | "columnHeaderClick" | "columnHeaderDoubleClick" | "columnHeaderOver" | "columnHeaderOut" | "columnHeaderEnter" | "columnHeaderLeave" | "columnHeaderDragStart" | "columnHeaderDragOver" | "columnHeaderDragEnter" | "columnHeaderDragEnd" | "selectionChange" | "headerSelectionCheckboxChange" | "rowSelectionCheckboxChange" | "pageChange" | "pageSizeChange" | "rowGroupingModelChange" | "rowsScroll" | "rowsScrollEnd" | "columnSeparatorMouseDown" | "columnResize" | "columnWidthChange" | "columnResizeStart" | "columnResizeStop" | "columnOrderChange" | "rowsSet" | "rowExpansionChange" | "visibleRowsSet" | "columnsChange" | "detailPanelsExpandedRowIdsChange" | "pinnedColumnsChange" | "preProcessorRegister" | "preProcessorUnregister" | "rowGroupsPreProcessingChange" | "sortModelChange" | "filterModelChange" | "columnVisibilityModelChange" | "stateChange" | "columnVisibilityChange" | "virtualScrollerContentSizeChange">(apiRef: GridApiRef, eventName: E, handler?: GridEventListener<E> | undefined, options?: EventListenerOptions | undefined) => void;
    function useGridApiOptionHandler<E extends GridEvents>(apiRef: GridApiRef, eventName: E, handler?: GridEventListener<E>): void;
    function useGridApiMethod<T extends Partial<GridApi>>(apiRef: GridApiRef, apiMethods: T, apiName: string): void;
    /**
     * Hook that instantiate a [[GridApiRef]].
     */
    const useGridApiRef: () => GridApiRef;
    function useGridLogger(apiRef: GridApiRef, name: string): Logger;
    const useGridRootProps: <Props extends DataGridProcessedProps | DataGridProProcessedProps>() => Props;
    function useGridScrollFn(apiRef: GridApiRef, renderingZoneElementRef: React.RefObject<HTMLDivElement>, columnHeadersElementRef: React.RefObject<HTMLDivElement>): [GridScrollFn];
    const useGridSelector: <T>(apiRef: GridApiRef, selector: OutputSelector<T> | ((state: GridState) => T)) => T;
    /**
     * @deprecated Use `apiRef.current.state`, `apiRef.current.setState` and `apiRef.current.forceUpdate` instead.
     */
    const useGridState: (apiRef: GridApiRef) => readonly [GridState, (state: GridState | ((previousState: GridState) => GridState)) => boolean, () => void];
    const useGridNativeEventListener: <E extends Event>(apiRef: GridApiRef, ref: React.MutableRefObject<HTMLDivElement | null> | (() => Element | undefined | null), eventName: string, handler?: ((event: E) => any) | undefined, options?: AddEventListenerOptions | undefined) => void;
    interface Localization {
        components: {
            MuiDataGrid: {
                defaultProps: {
                    localeText: Partial<GridLocaleText>;
                };
            };
        };
    }
    const arSD: Localization;
    const bgBG: Localization;
    const csCZ: Localization;
    const daDK: Localization;
    const deDE: Localization;
    const elGR: Localization;
    const enUS: Localization;
    const esES: Localization;
    const faIR: Localization;
    const fiFI: Localization;
    const frFR: Localization;
    const heIL: Localization;
    const itIT: Localization;
    const jaJP: Localization;
    const koKR: Localization;
    const nlNL: Localization;
    const plPL: Localization;
    const ptBR: Localization;
    const ruRU: Localization;
    const skSK: Localization;
    const trTR: Localization;
    const ukUA: Localization;
    const viVN: Localization;
    const zhCN: Localization;
    const DataGrid: React.MemoExoticComponent<React.ForwardRefExoticComponent<Omit<Partial<DataGridPropsWithDefaultValues> & DataGridPropsWithComplexDefaultValueBeforeProcessing & DataGridPropsWithoutDefaultValue, DataGridForcedPropsKey> & {
        pagination?: true | undefined;
    } & React.RefAttributes<HTMLDivElement>>>;
    const useDataGridComponent: (props: DataGridProcessedProps) => GridApiRef;
    const MAX_PAGE_SIZE = 100;
    export { AutoSizerProps, AutoSizerSize, CursorCoordinates, DEFAULT_GRID_COL_TYPE_KEY, DataGrid, DataGridProps, ElementSize, GRID_ACTIONS_COL_DEF, GRID_BOOLEAN_COL_DEF, GRID_CHECKBOX_SELECTION_COL_DEF, GRID_DATETIME_COL_DEF, GRID_DATE_COL_DEF, GRID_DEFAULT_LOCALE_TEXT, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_EXPERIMENTAL_ENABLED, GRID_NUMERIC_COL_DEF, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, GRID_SINGLE_SELECT_COL_DEF, GRID_STRING_COL_DEF, GRID_TREE_DATA_GROUPING_FIELD, GridActionsCell, GridActionsCellItem, GridActionsCellItemProps, GridActionsColDef, GridAddIcon, GridAlignment, GridApi, GridApiContext, GridApiRef, GridArrowDownwardIcon, GridArrowUpwardIcon, GridAutoSizer, GridBody, GridCallbackDetails, GridCell, GridCellCheckboxForwardRef, GridCellCheckboxRenderer, GridCellClassFn, GridCellClassNamePropType, GridCellEditCommitParams, GridCellEventLookup, GridCellIdentifier, GridCellIndexCoordinates, GridCellMode, GridCellModes, GridCellParams, GridCellProps, GridCellValue, GridCheckCircleIcon, GridCheckIcon, GridClassKey, GridClasses, GridClipboardApi, GridCloseIcon, GridColDef, GridColType, GridColTypeDef, GridColumnApi, GridColumnHeaderClassFn, GridColumnHeaderClassNamePropType, GridColumnHeaderEventLookup, GridColumnHeaderIndexCoordinates, GridColumnHeaderItem, GridColumnHeaderMenu, GridColumnHeaderMenuProps, GridColumnHeaderParams, GridColumnHeaderSeparator, GridColumnHeaderSeparatorProps, GridColumnHeaderSeparatorSides, GridColumnHeaderSortIcon, GridColumnHeaderSortIconProps, GridColumnHeaderTitle, GridColumnHeaderTitleProps, GridColumnIcon, GridColumnIdentifier, GridColumnLookup, GridColumnMenu, GridColumnMenuApi, GridColumnMenuContainer, GridColumnMenuProps, GridColumnMenuState, GridColumnOrderChangeParams, GridColumnPinningApi, GridColumnPinningMenuItems, GridColumnPinningState, GridColumnReorderState, GridColumnResizeParams, GridColumnResizeState, GridColumnTypesRecord, GridColumnVisibilityChangeParams, GridColumnVisibilityModel, GridColumns, GridColumnsInitialState, GridColumnsMenuItem, GridColumnsMeta, GridColumnsPanel, GridColumnsState, GridCommitCellChangeParams, GridComparatorFn, GridControlledStateEventLookup, GridCoreApi, GridCsvExportApi, GridCsvExportOptions, GridCsvGetRowsToExportParams, GridDensity, GridDensityApi, GridDensityOption, GridDensityState, GridDensityTypes, GridDetailPanelApi, GridDetailPanelToggleCell, GridDimensions, GridDimensionsApi, GridDisableVirtualizationApi, GridDragIcon, GridEditCellProps, GridEditCellPropsParams, GridEditCellValueParams, GridEditInputCell, GridEditMode, GridEditModes, GridEditRowApi, GridEditRowProps, GridEditRowsModel, GridEditSingleSelectCell, GridEditingApi, GridEnrichedColDef, GridErrorHandler, GridEventListener, GridEventLookup, GridEventPublisher, GridEvents, GridEventsStr, GridExpandMoreIcon, GridExportFormat, GridExportOptions, GridFeatureMode, GridFeatureModeConstant, GridFilterActiveItemsLookup, GridFilterAltIcon, GridFilterApi, GridFilterForm, GridFilterFormProps, GridFilterInitialState, GridFilterInputDate, GridFilterInputDateProps, GridFilterInputMultipleSingleSelect, GridFilterInputMultipleSingleSelectProps, GridFilterInputMultipleValue, GridFilterInputMultipleValueProps, GridFilterInputSingleSelect, GridFilterInputSingleSelectProps, GridFilterInputValue, GridFilterInputValueProps, GridFilterItem, GridFilterItemProps, GridFilterListIcon, GridFilterMenuItem, GridFilterModel, GridFilterOperator, GridFilterPanel, GridFilterPanelProps, GridFilterState, GridFocusApi, GridFocusState, GridFooter, GridFooterContainer, GridFooterContainerProps, GridFooterPlaceholder, GridGroupingColDefOverride, GridGroupingColDefOverrideParams, GridGroupingValueGetterParams, GridHeader, GridHeaderCheckbox, GridHeaderPlaceholder, GridHeaderSelectionCheckboxParams, GridIconSlotsComponent, GridInitialState, GridInputSelectionModel, GridKeyValue, GridKeyboardArrowRight, GridLinkOperator, GridLoadIcon, GridLoadingOverlay, GridLocaleText, GridLocaleTextApi, GridMenu, GridMenuIcon, GridMenuProps, GridMoreVertIcon, GridNativeColTypes, GridNoRowsOverlay, GridOverlay, GridOverlayProps, GridOverlays, GridPagination, GridPaginationApi, GridPaginationInitialState, GridPaginationState, GridPanel, GridPanelClasses, GridPanelContent, GridPanelFooter, GridPanelHeader, GridPanelProps, GridPanelWrapper, GridParamsApi, GridPinnedColumns, GridPinnedPosition, GridPreProcessEditCellProps, GridPreferencePanelInitialState, GridPreferencePanelState, GridPreferencePanelsValue, GridPreferencesPanel, GridPreferencesPanelApi, GridPrintExportApi, GridPrintExportOptions, GridRemoveIcon, GridRenderCellParams, GridRenderColumnsProps, GridRenderContext, GridRenderContextProps, GridRenderEditCellParams, GridRenderPaginationProps, GridRenderRowProps, GridRoot, GridRootContainerRef, GridRootProps, GridRow, GridRowApi, GridRowCount, GridRowData, GridRowEntry, GridRowEventLookup, GridRowGroupingApi, GridRowGroupingInitialState, GridRowGroupingModel, GridRowGroupingState, GridRowHeightParams, GridRowHeightReturnValue, GridRowId, GridRowIdGetter, GridRowMode, GridRowModel, GridRowModelUpdate, GridRowModes, GridRowParams, GridRowProps, GridRowScrollEndParams, GridRowSelectionCheckboxParams, GridRowTreeConfig, GridRowTreeNodeConfig, GridRowsLookup, GridRowsMeta, GridRowsMetaApi, GridRowsProp, GridRowsState, GridSaveAltIcon, GridScrollApi, GridScrollArea, GridScrollFn, GridScrollParams, GridSearchIcon, GridSelectedRowCount, GridSelectionApi, GridSelectionModel, GridSeparatorIcon, GridSignature, GridSlotsComponent, GridSlotsComponentsProps, GridSortApi, GridSortCellParams, GridSortColumnLookup, GridSortDirection, GridSortItem, GridSortModel, GridSortModelParams, GridSortingInitialState, GridSortingState, GridState, GridStateApi, GridStateChangeParams, GridStateColDef, GridTabIndexState, GridTableRowsIcon, GridToolbar, GridToolbarColumnsButton, GridToolbarContainer, GridToolbarContainerProps, GridToolbarDensitySelector, GridToolbarExport, GridToolbarExportProps, GridToolbarFilterButton, GridToolbarFilterButtonProps, GridToolbarProps, GridTranslationKeys, GridTreeDataGroupingCell, GridTripleDotsVerticalIcon, GridTypeFilterInputValueProps, GridUpdateAction, GridValueFormatterParams, GridValueGetterFullParams, GridValueGetterParams, GridValueOptionsParams, GridValueSetterParams, GridViewHeadlineIcon, GridViewStreamIcon, GridVirtualScrollerApi, HideGridColMenuItem, Logger, MAX_PAGE_SIZE, MuiBaseEvent, MuiEvent, SUBMIT_FILTER_DATE_STROKE_TIME, SUBMIT_FILTER_STROKE_TIME, SortGridMenuItems, allGridColumnsFieldsSelector, allGridColumnsSelector, arSD, bgBG, checkGridRowIdIsValid, createUseGridApiEventHandler, csCZ, daDK, deDE, elGR, enUS, esES, faIR, fiFI, filterableGridColumnsIdsSelector, filterableGridColumnsSelector, frFR, getDataGridUtilityClass, getDefaultGridFilterModel, getGridBooleanOperators, getGridColDef, getGridDateOperators, getGridDefaultColumnTypes, getGridNumericColumnOperators, getGridNumericOperators, getGridSingleSelectOperators, getGridStringOperators, getRowGroupingFieldFromGroupingCriteria, gridClasses, gridColumnLookupSelector, gridColumnMenuSelector, gridColumnReorderDragColSelector, gridColumnReorderSelector, gridColumnResizeSelector, gridColumnVisibilityModelSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnsTotalWidthSelector, gridDateComparator, gridDateFormatter, gridDateTimeFormatter, gridDensityFactorSelector, gridDensityHeaderHeightSelector, gridDensityRowHeightSelector, gridDensitySelector, gridDensityValueSelector, gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridEditRowsStateSelector, gridFilterActiveItemsLookupSelector, gridFilterActiveItemsSelector, gridFilterModelSelector, gridFilterStateSelector, gridFilteredDescendantCountLookupSelector, gridFilteredRowsLookupSelector, gridFilteredSortedRowEntriesSelector, gridFilteredSortedRowIdsSelector, gridFocusCellSelector, gridFocusColumnHeaderSelector, gridFocusStateSelector, gridNumberComparator, gridPageCountSelector, gridPageSelector, gridPageSizeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector, gridPaginatedVisibleSortedGridRowIdsSelector, gridPaginationRowRangeSelector, gridPaginationSelector, gridPanelClasses, gridPinnedColumnsSelector, gridPreferencePanelStateSelector, gridResizingColumnFieldSelector, gridRowCountSelector, gridRowGroupingModelSelector, gridRowGroupingNameSelector, gridRowGroupingSanitizedModelSelector, gridRowGroupingStateSelector, gridRowIdsSelector, gridRowTreeDepthSelector, gridRowTreeSelector, gridRowsLookupSelector, gridRowsMetaSelector, gridRowsStateSelector, gridSelectionStateSelector, gridSortColumnLookupSelector, gridSortModelSelector, gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortingStateSelector, gridStringOrNumberComparator, gridTabIndexCellSelector, gridTabIndexColumnHeaderSelector, gridTabIndexStateSelector, gridTopLevelRowCountSelector, gridVisibleColumnFieldsSelector, gridVisibleRowCountSelector, gridVisibleRowsLookupSelector, gridVisibleRowsSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector, gridVisibleTopLevelRowCountSelector, heIL, itIT, jaJP, koKR, nlNL, plPL, ptBR, renderActionsCell, renderEditInputCell, renderEditSingleSelectCell, ruRU, selectedGridRowsCountSelector, selectedGridRowsSelector, selectedIdsLookupSelector, skSK, trTR, ukUA, useDataGridComponent, useGridApi, useGridApiContext, useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridApiRef, useGridLogger, useGridNativeEventListener, useGridRootProps, useGridScrollFn, useGridSelector, useGridState, viVN, visibleGridColumnsLengthSelector, visibleGridColumnsSelector, zhCN };
}
